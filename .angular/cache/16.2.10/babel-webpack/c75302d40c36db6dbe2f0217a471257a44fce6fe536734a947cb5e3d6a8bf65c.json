{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CorePromisedValue } from '@classes/promised-value';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModFeedbackAttemptsSource } from '../../classes/feedback-attempts-source';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../../core/components/group-selector/group-selector\";\nimport * as i4 from \"../../../../../core/components/infinite-loading/infinite-loading\";\nimport * as i5 from \"../../../../../core/components/loading/loading\";\nimport * as i6 from \"../../../../../core/components/split-view/split-view\";\nimport * as i7 from \"../../../../../core/components/user-avatar/user-avatar\";\nimport * as i8 from \"../../../../../core/directives/content\";\nimport * as i9 from \"@ionic/angular\";\nimport * as i10 from \"../../../../../core/pipes/format-date\";\nimport * as i11 from \"@ngx-translate/core\";\nfunction AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"coreFormatDate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const attempt_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, attempt_r3.timemodified * 1000));\n  }\n}\nfunction AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 10);\n    i0.ɵɵlistener(\"click\", function AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const attempt_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.attempts == null ? null : ctx_r6.attempts.select(attempt_r3));\n    });\n    i0.ɵɵelement(1, \"core-user-avatar\", 11);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_p_5_Template, 3, 3, \"p\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const attempt_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵattribute(\"aria-current\", ctx_r2.attempts == null ? null : ctx_r2.attempts.getItemAriaCurrent(attempt_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", attempt_r3)(\"linkProfile\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(attempt_r3.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", attempt_r3.timemodified);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonModFeedbackAttemptsPage_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\")(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(6, AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_Template, 6, 6, \"ion-item\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 2, \"addon.mod_feedback.non_anonymous_entries\", i0.ɵɵpureFunction1(5, _c0, ctx_r0.identifiableAttemptsTotal)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.identifiableAttempts);\n  }\n}\nfunction AddonModFeedbackAttemptsPage_ng_container_18_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 10);\n    i0.ɵɵlistener(\"click\", function AddonModFeedbackAttemptsPage_ng_container_18_ion_item_6_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const attempt_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.attempts == null ? null : ctx_r10.attempts.select(attempt_r9));\n    });\n    i0.ɵɵelement(1, \"core-user-avatar\", 13);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const attempt_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵattribute(\"aria-current\", ctx_r8.attempts == null ? null : ctx_r8.attempts.getItemAriaCurrent(attempt_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"linkProfile\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 6, \"addon.mod_feedback.anonymous_user\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(8, 8, \"addon.mod_feedback.response_nr\"), \": \", attempt_r9.number, \"\");\n  }\n}\nfunction AddonModFeedbackAttemptsPage_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\")(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(6, AddonModFeedbackAttemptsPage_ng_container_18_ion_item_6_Template, 9, 10, \"ion-item\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 2, \"addon.mod_feedback.anonymous_entries\", i0.ɵɵpureFunction1(5, _c0, ctx_r1.anonymousAttemptsTotal)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.anonymousAttempts);\n  }\n}\n/**\n * Page that displays feedback attempts.\n */\nexport class AddonModFeedbackAttemptsPage {\n  constructor(route) {\n    this.route = route;\n    this.fetchFailed = false;\n    this.promisedAttempts = new CorePromisedValue();\n    this.logView = CoreTime.once(() => {\n      var _this$attempts;\n      const source = (_this$attempts = this.attempts) === null || _this$attempts === void 0 ? void 0 : _this$attempts.getSource();\n      if (!source || !source.feedback) {\n        return;\n      }\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'mod_feedback_get_responses_analysis',\n        name: source.feedback.name,\n        data: {\n          feedbackid: source.feedback.id,\n          category: 'feedback'\n        },\n        url: `/mod/feedback/show_entries.php?id=${source.CM_ID}`\n      });\n    });\n  }\n  get attempts() {\n    return this.promisedAttempts.value;\n  }\n  get groupInfo() {\n    var _this$attempts2;\n    return (_this$attempts2 = this.attempts) === null || _this$attempts2 === void 0 ? void 0 : _this$attempts2.getSource().groupInfo;\n  }\n  get selectedGroup() {\n    var _this$attempts3;\n    return (_this$attempts3 = this.attempts) === null || _this$attempts3 === void 0 ? void 0 : _this$attempts3.getSource().selectedGroup;\n  }\n  set selectedGroup(group) {\n    if (!this.attempts) {\n      return;\n    }\n    this.attempts.getSource().selectedGroup = group;\n    this.attempts.getSource().setDirty(true);\n  }\n  get identifiableAttempts() {\n    var _this$attempts$getSou, _this$attempts4;\n    return (_this$attempts$getSou = (_this$attempts4 = this.attempts) === null || _this$attempts4 === void 0 ? void 0 : _this$attempts4.getSource().identifiable) !== null && _this$attempts$getSou !== void 0 ? _this$attempts$getSou : [];\n  }\n  get identifiableAttemptsTotal() {\n    var _this$attempts$getSou2, _this$attempts5;\n    return (_this$attempts$getSou2 = (_this$attempts5 = this.attempts) === null || _this$attempts5 === void 0 ? void 0 : _this$attempts5.getSource().identifiableTotal) !== null && _this$attempts$getSou2 !== void 0 ? _this$attempts$getSou2 : 0;\n  }\n  get anonymousAttempts() {\n    var _this$attempts$getSou3, _this$attempts6;\n    return (_this$attempts$getSou3 = (_this$attempts6 = this.attempts) === null || _this$attempts6 === void 0 ? void 0 : _this$attempts6.getSource().anonymous) !== null && _this$attempts$getSou3 !== void 0 ? _this$attempts$getSou3 : [];\n  }\n  get anonymousAttemptsTotal() {\n    var _this$attempts$getSou4, _this$attempts7;\n    return (_this$attempts$getSou4 = (_this$attempts7 = this.attempts) === null || _this$attempts7 === void 0 ? void 0 : _this$attempts7.getSource().anonymousTotal) !== null && _this$attempts$getSou4 !== void 0 ? _this$attempts$getSou4 : 0;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n        const cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonModFeedbackAttemptsSource, [_this.courseId, cmId]);\n        source.selectedGroup = CoreNavigator.getRouteNumberParam('group') || 0;\n        _this.promisedAttempts.resolve(new AddonModFeedbackAttemptsManager(source, _this.route.component));\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n        CoreNavigator.back();\n        return;\n      }\n      const attempts = yield _this.promisedAttempts;\n      try {\n        _this.fetchFailed = false;\n        yield attempts.getSource().loadFeedback();\n        yield attempts.load();\n        _this.logView();\n      } catch (error) {\n        _this.fetchFailed = true;\n        CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n      }\n      yield attempts.start(_this.splitView);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$attempts8;\n    (_this$attempts8 = this.attempts) === null || _this$attempts8 === void 0 || _this$attempts8.destroy();\n  }\n  /**\n   * Fetch more attempts, if any.\n   *\n   * @param infiniteComplete Complete callback for infinite loader.\n   */\n  fetchMoreAttempts(infiniteComplete) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const attempts = yield _this2.promisedAttempts;\n      try {\n        _this2.fetchFailed = false;\n        yield attempts.load();\n      } catch (error) {\n        _this2.fetchFailed = true;\n        CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n      } finally {\n        infiniteComplete && infiniteComplete();\n      }\n    })();\n  }\n  /**\n   * Refresh the attempts.\n   *\n   * @param refresher Refresher.\n   */\n  refreshFeedback(refresher) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const attempts = yield _this3.promisedAttempts;\n      try {\n        _this3.fetchFailed = false;\n        yield CoreUtils.ignoreErrors(attempts.getSource().invalidateCache());\n        yield attempts.getSource().loadFeedback();\n        yield attempts.reload();\n      } catch (error) {\n        _this3.fetchFailed = true;\n        CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n      } finally {\n        refresher.complete();\n      }\n    })();\n  }\n  /**\n   * Reload attempts list.\n   */\n  reloadAttempts() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const attempts = yield _this4.promisedAttempts;\n      yield attempts.reload();\n    })();\n  }\n}\n/**\n * Attempts manager.\n */\n_class = AddonModFeedbackAttemptsPage;\n_class.ɵfac = function AddonModFeedbackAttemptsPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-feedback-attempts\"]],\n  viewQuery: function AddonModFeedbackAttemptsPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreSplitViewComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.splitView = _t.first);\n    }\n  },\n  decls: 20,\n  vars: 18,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [1, \"ion-no-margin\"], [3, \"groupInfo\", \"selected\", \"courseId\", \"selectedChange\"], [4, \"ngIf\"], [3, \"enabled\", \"error\", \"action\"], [\"class\", \"ion-text-wrap\", \"button\", \"\", 3, \"detail\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", 1, \"ion-text-wrap\", 3, \"detail\", \"click\"], [\"slot\", \"start\", 3, \"user\", \"linkProfile\"], [1, \"item-heading\"], [\"slot\", \"start\", 3, \"linkProfile\"]],\n  template: function AddonModFeedbackAttemptsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"core-split-view\")(11, \"ion-refresher\", 2);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModFeedbackAttemptsPage_Template_ion_refresher_ionRefresh_11_listener($event) {\n        return ctx.refreshFeedback($event.target);\n      });\n      i0.ɵɵelement(12, \"ion-refresher-content\", 3);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"core-loading\", 4)(15, \"ion-list\", 5)(16, \"core-group-selector\", 6);\n      i0.ɵɵlistener(\"selectedChange\", function AddonModFeedbackAttemptsPage_Template_core_group_selector_selectedChange_16_listener($event) {\n        return ctx.selectedGroup = $event;\n      })(\"selectedChange\", function AddonModFeedbackAttemptsPage_Template_core_group_selector_selectedChange_16_listener() {\n        return ctx.reloadAttempts();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AddonModFeedbackAttemptsPage_ng_container_17_Template, 7, 7, \"ng-container\", 7);\n      i0.ɵɵtemplate(18, AddonModFeedbackAttemptsPage_ng_container_18_Template, 7, 7, \"ng-container\", 7);\n      i0.ɵɵelementStart(19, \"core-infinite-loading\", 8);\n      i0.ɵɵlistener(\"action\", function AddonModFeedbackAttemptsPage_Template_core_infinite_loading_action_19_listener($event) {\n        return ctx.fetchMoreAttempts($event);\n      });\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 12, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 14, \"addon.mod_feedback.responses\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.attempts || !ctx.attempts.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(13, 16, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.attempts && ctx.attempts.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"groupInfo\", ctx.groupInfo)(\"selected\", ctx.selectedGroup)(\"courseId\", ctx.courseId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.identifiableAttemptsTotal > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.identifiableAttemptsTotal === ctx.identifiableAttempts.length && ctx.anonymousAttemptsTotal > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"enabled\", ctx.attempts && ctx.attempts.loaded && !ctx.attempts.completed)(\"error\", ctx.fetchFailed);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.CoreGroupSelectorComponent, i4.CoreInfiniteLoadingComponent, i5.CoreLoadingComponent, i6.CoreSplitViewComponent, i7.CoreUserAvatarComponent, i8.CoreContentDirective, i9.IonButtons, i9.IonContent, i9.IonHeader, i9.IonItem, i9.IonItemDivider, i9.IonLabel, i9.IonList, i9.IonRefresher, i9.IonRefresherContent, i9.IonTitle, i9.IonToolbar, i9.IonBackButton, i10.CoreFormatDatePipe, i11.TranslatePipe],\n  encapsulation: 2\n});\nclass AddonModFeedbackAttemptsManager extends CoreListItemsManager {}","map":{"version":3,"names":["CoreRoutedItemsManagerSourcesTracker","CoreListItemsManager","CorePromisedValue","CoreSplitViewComponent","CoreNavigator","CoreDomUtils","CoreUtils","AddonModFeedbackAttemptsSource","CoreTime","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","attempt_r3","timemodified","ɵɵlistener","AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_Template_ion_item_click_0_listener","restoredCtx","ɵɵrestoreView","_r7","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","attempts","select","ɵɵelement","ɵɵtemplate","AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_p_5_Template","ɵɵproperty","ɵɵattribute","ctx_r2","getItemAriaCurrent","fullname","ɵɵelementContainerStart","AddonModFeedbackAttemptsPage_ng_container_17_ion_item_6_Template","ɵɵelementContainerEnd","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r0","identifiableAttemptsTotal","identifiableAttempts","AddonModFeedbackAttemptsPage_ng_container_18_ion_item_6_Template_ion_item_click_0_listener","_r11","attempt_r9","ctx_r10","ctx_r8","ɵɵtextInterpolate2","number","AddonModFeedbackAttemptsPage_ng_container_18_ion_item_6_Template","ctx_r1","anonymousAttemptsTotal","anonymousAttempts","AddonModFeedbackAttemptsPage","constructor","route","fetchFailed","promisedAttempts","logView","once","_this$attempts","source","getSource","feedback","logEvent","type","VIEW_ITEM_LIST","ws","name","data","feedbackid","id","category","url","CM_ID","value","groupInfo","_this$attempts2","selectedGroup","_this$attempts3","group","setDirty","_this$attempts$getSou","_this$attempts4","identifiable","_this$attempts$getSou2","_this$attempts5","identifiableTotal","_this$attempts$getSou3","_this$attempts6","anonymous","_this$attempts$getSou4","_this$attempts7","anonymousTotal","ngAfterViewInit","_this","_asyncToGenerator","courseId","getRequiredRouteNumberParam","cmId","getOrCreateSource","getRouteNumberParam","resolve","AddonModFeedbackAttemptsManager","component","error","showErrorModal","back","loadFeedback","load","showErrorModalDefault","start","splitView","ngOnDestroy","_this$attempts8","destroy","fetchMoreAttempts","infiniteComplete","_this2","refreshFeedback","refresher","_this3","ignoreErrors","invalidateCache","reload","complete","reloadAttempts","_this4","_class","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","viewQuery","AddonModFeedbackAttemptsPage_Query","rf","ctx","AddonModFeedbackAttemptsPage_Template_ion_refresher_ionRefresh_11_listener","$event","target","AddonModFeedbackAttemptsPage_Template_core_group_selector_selectedChange_16_listener","AddonModFeedbackAttemptsPage_ng_container_17_Template","AddonModFeedbackAttemptsPage_ng_container_18_Template","AddonModFeedbackAttemptsPage_Template_core_infinite_loading_action_19_listener","loaded","ɵɵpropertyInterpolate","length","completed"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/feedback/pages/attempts/attempts.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/feedback/pages/attempts/attempts.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CorePromisedValue } from '@classes/promised-value';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreGroupInfo } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModFeedbackAttemptItem, AddonModFeedbackAttemptsSource } from '../../classes/feedback-attempts-source';\nimport { AddonModFeedbackWSAnonAttempt, AddonModFeedbackWSAttempt } from '../../services/feedback';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that displays feedback attempts.\n */\n@Component({\n    selector: 'page-addon-mod-feedback-attempts',\n    templateUrl: 'attempts.html',\n})\nexport class AddonModFeedbackAttemptsPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    promisedAttempts: CorePromisedValue<AddonModFeedbackAttemptsManager>;\n    fetchFailed = false;\n    courseId?: number;\n\n    protected logView: () => void;\n\n    constructor(protected route: ActivatedRoute) {\n        this.promisedAttempts = new CorePromisedValue();\n\n        this.logView = CoreTime.once(() => {\n            const source = this.attempts?.getSource();\n            if (!source || !source.feedback) {\n                return;\n            }\n\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'mod_feedback_get_responses_analysis',\n                name: source.feedback.name,\n                data: { feedbackid: source.feedback.id, category: 'feedback' },\n                url: `/mod/feedback/show_entries.php?id=${source.CM_ID}`,\n            });\n        });\n    }\n\n    get attempts(): AddonModFeedbackAttemptsManager | null {\n        return this.promisedAttempts.value;\n    }\n\n    get groupInfo(): CoreGroupInfo | undefined {\n        return this.attempts?.getSource().groupInfo;\n    }\n\n    get selectedGroup(): number | undefined {\n        return this.attempts?.getSource().selectedGroup;\n    }\n\n    set selectedGroup(group: number | undefined) {\n        if (!this.attempts) {\n            return;\n        }\n\n        this.attempts.getSource().selectedGroup = group;\n        this.attempts.getSource().setDirty(true);\n    }\n\n    get identifiableAttempts(): AddonModFeedbackWSAttempt[] {\n        return this.attempts?.getSource().identifiable ?? [];\n    }\n\n    get identifiableAttemptsTotal(): number {\n        return this.attempts?.getSource().identifiableTotal ?? 0;\n    }\n\n    get anonymousAttempts(): AddonModFeedbackWSAnonAttempt[] {\n        return this.attempts?.getSource().anonymous ?? [];\n    }\n\n    get anonymousAttemptsTotal(): number {\n        return this.attempts?.getSource().anonymousTotal ?? 0;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        try {\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            const cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                AddonModFeedbackAttemptsSource,\n                [this.courseId, cmId],\n            );\n\n            source.selectedGroup = CoreNavigator.getRouteNumberParam('group') || 0;\n\n            this.promisedAttempts.resolve(new AddonModFeedbackAttemptsManager(source, this.route.component));\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        const attempts = await this.promisedAttempts;\n\n        try {\n            this.fetchFailed = false;\n\n            await attempts.getSource().loadFeedback();\n            await attempts.load();\n\n            this.logView();\n        } catch (error) {\n            this.fetchFailed = true;\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        }\n\n        await attempts.start(this.splitView);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.attempts?.destroy();\n    }\n\n    /**\n     * Fetch more attempts, if any.\n     *\n     * @param infiniteComplete Complete callback for infinite loader.\n     */\n    async fetchMoreAttempts(infiniteComplete?: () => void): Promise<void> {\n        const attempts = await this.promisedAttempts;\n\n        try {\n            this.fetchFailed = false;\n\n            await attempts.load();\n        } catch (error) {\n            this.fetchFailed = true;\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        } finally {\n            infiniteComplete && infiniteComplete();\n        }\n    }\n\n    /**\n     * Refresh the attempts.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshFeedback(refresher: HTMLIonRefresherElement): Promise<void> {\n        const attempts = await this.promisedAttempts;\n\n        try {\n            this.fetchFailed = false;\n\n            await CoreUtils.ignoreErrors(attempts.getSource().invalidateCache());\n            await attempts.getSource().loadFeedback();\n            await attempts.reload();\n        } catch (error) {\n            this.fetchFailed = true;\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        } finally {\n            refresher.complete();\n        }\n    }\n\n    /**\n     * Reload attempts list.\n     */\n    async reloadAttempts(): Promise<void> {\n        const attempts = await this.promisedAttempts;\n\n        await attempts.reload();\n    }\n\n}\n\n/**\n * Attempts manager.\n */\nclass AddonModFeedbackAttemptsManager extends CoreListItemsManager<AddonModFeedbackAttemptItem, AddonModFeedbackAttemptsSource> {\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.mod_feedback.responses' |translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-split-view>\n        <ion-refresher slot=\"fixed\" [disabled]=\"!attempts || !attempts.loaded\" (ionRefresh)=\"refreshFeedback($event.target)\">\n            <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n        </ion-refresher>\n        <core-loading [hideUntil]=\"attempts && attempts.loaded\">\n            <ion-list class=\"ion-no-margin\">\n                <core-group-selector [groupInfo]=\"groupInfo\" [(selected)]=\"selectedGroup\" (selectedChange)=\"reloadAttempts()\"\n                    [courseId]=\"courseId\" />\n\n                <ng-container *ngIf=\"identifiableAttemptsTotal > 0\">\n                    <ion-item-divider>\n                        <ion-label>\n                            <h2>{{ 'addon.mod_feedback.non_anonymous_entries' | translate : {$a: identifiableAttemptsTotal } }}</h2>\n                        </ion-label>\n                    </ion-item-divider>\n                    <ion-item *ngFor=\"let attempt of identifiableAttempts\" class=\"ion-text-wrap\" button [detail]=\"true\"\n                        (click)=\"attempts?.select(attempt)\" [attr.aria-current]=\"attempts?.getItemAriaCurrent(attempt)\">\n                        <core-user-avatar [user]=\"attempt\" [linkProfile]=\"false\" slot=\"start\" />\n                        <ion-label>\n                            <p class=\"item-heading\">{{ attempt.fullname }}</p>\n                            <p *ngIf=\"attempt.timemodified\">{{ attempt.timemodified * 1000 | coreFormatDate }}</p>\n                        </ion-label>\n                    </ion-item>\n                </ng-container>\n\n                <ng-container *ngIf=\"identifiableAttemptsTotal === identifiableAttempts.length && anonymousAttemptsTotal > 0\">\n                    <ion-item-divider>\n                        <ion-label>\n                            <h2>{{ 'addon.mod_feedback.anonymous_entries' | translate : {$a: anonymousAttemptsTotal } }}</h2>\n                        </ion-label>\n                    </ion-item-divider>\n                    <ion-item *ngFor=\"let attempt of anonymousAttempts\" class=\"ion-text-wrap\" button [detail]=\"true\"\n                        (click)=\"attempts?.select(attempt)\" [attr.aria-current]=\"attempts?.getItemAriaCurrent(attempt)\">\n                        <core-user-avatar [linkProfile]=\"false\" slot=\"start\" />\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_feedback.anonymous_user' | translate }}</p>\n                            <p>{{ 'addon.mod_feedback.response_nr' | translate }}: {{attempt.number}}</p>\n                        </ion-label>\n                    </ion-item>\n                </ng-container>\n\n                <core-infinite-loading [enabled]=\"attempts && attempts.loaded && !attempts.completed\" [error]=\"fetchFailed\"\n                    (action)=\"fetchMoreAttempts($event)\" />\n            </ion-list>\n        </core-loading>\n    </core-split-view>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}