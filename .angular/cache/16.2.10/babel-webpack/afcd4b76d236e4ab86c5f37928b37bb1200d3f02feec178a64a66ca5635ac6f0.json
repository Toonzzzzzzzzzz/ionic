{"ast":null,"code":"import _objectSpread from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonBlog, AddonBlogProvider } from '@addons/blog/services/blog';\nimport { CoreComments } from '@features/comments/services/comments';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\nimport { CoreTag } from '@features/tag/services/tag';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreTime } from '@singletons/time';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../core/components/empty-box/empty-box\";\nimport * as i3 from \"../../../../core/components/file/file\";\nimport * as i4 from \"../../../../core/components/infinite-loading/infinite-loading\";\nimport * as i5 from \"../../../../core/components/loading/loading\";\nimport * as i6 from \"../../../../core/components/user-avatar/user-avatar\";\nimport * as i7 from \"../../../../core/directives/fa-icon\";\nimport * as i8 from \"../../../../core/directives/format-text\";\nimport * as i9 from \"../../../../core/directives/link\";\nimport * as i10 from \"../../../../core/directives/content\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@ionic/angular\";\nimport * as i13 from \"../../../../core/features/comments/components/comments/comments\";\nimport * as i14 from \"../../../../core/features/tag/components/list/list\";\nimport * as i15 from \"../../../../core/features/mainmenu/components/user-menu-button/user-menu-button\";\nimport * as i16 from \"../../../../core/pipes/date-day-or-time\";\nimport * as i17 from \"../../../../core/pipes/time-ago\";\nimport * as i18 from \"@ngx-translate/core\";\nfunction AddonBlogEntriesPage_ion_item_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-toggle\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonBlogEntriesPage_ion_item_16_Template_ion_toggle_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onlyMyEntries = $event);\n    })(\"ionChange\", function AddonBlogEntriesPage_ion_item_16_Template_ion_toggle_ionChange_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onlyMyEntriesToggleChanged(ctx_r5.onlyMyEntries));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, \"addon.blog.showonlyyourentries\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.onlyMyEntries);\n  }\n}\nfunction AddonBlogEntriesPage_core_empty_box_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 12);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"addon.blog.noentriesyet\"));\n  }\n}\nfunction AddonBlogEntriesPage_ng_container_18_ion_card_1_ion_item_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 13)(1, \"ion-label\")(2, \"div\", 0);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"core-tag-list\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(4, 2, \"core.tag.tags\"), \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"tags\", entry_r6.tags);\n  }\n}\nfunction AddonBlogEntriesPage_ng_container_18_ion_card_1_core_comments_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-comments\", 25);\n  }\n  if (rf & 2) {\n    const entry_r6 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"component\", ctx_r9.component)(\"itemId\", entry_r6.id)(\"instanceId\", entry_r6.userid)(\"showItem\", true);\n  }\n}\nfunction AddonBlogEntriesPage_ng_container_18_ion_card_1_core_file_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-file\", 26);\n  }\n  if (rf & 2) {\n    const file_r15 = ctx.$implicit;\n    const entry_r6 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"file\", file_r15)(\"component\", ctx_r10.component)(\"componentId\", entry_r6.id);\n  }\n}\nfunction AddonBlogEntriesPage_ng_container_18_ion_card_1_ion_item_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 27)(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"href\", entry_r6.uniquehash)(\"detail\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, \"addon.blog.linktooriginalentry\"));\n  }\n}\nfunction AddonBlogEntriesPage_ng_container_18_ion_card_1_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"ion-note\");\n    i0.ɵɵelement(2, \"ion-icon\", 29);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"coreTimeAgo\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(3, 2, \"core.lastmodified\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 4, entry_r6.lastmodified), \" \");\n  }\n}\nfunction AddonBlogEntriesPage_ng_container_18_ion_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-item\", 13);\n    i0.ɵɵelement(2, \"core-user-avatar\", 14);\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"div\", 15)(5, \"h2\");\n    i0.ɵɵelement(6, \"core-format-text\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-note\", 17);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 15);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementStart(12, \"ion-note\", 17);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"coreDateDayOrTime\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(15, \"ion-card-content\")(16, \"ion-item\", 13)(17, \"ion-label\");\n    i0.ɵɵelement(18, \"core-format-text\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(19, AddonBlogEntriesPage_ng_container_18_ion_card_1_ion_item_19_Template, 6, 4, \"ion-item\", 19);\n    i0.ɵɵtemplate(20, AddonBlogEntriesPage_ng_container_18_ion_card_1_core_comments_20_Template, 1, 4, \"core-comments\", 20);\n    i0.ɵɵtemplate(21, AddonBlogEntriesPage_ng_container_18_ion_card_1_core_file_21_Template, 1, 3, \"core-file\", 21);\n    i0.ɵɵtemplate(22, AddonBlogEntriesPage_ng_container_18_ion_card_1_ion_item_22_Template, 4, 5, \"ion-item\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, AddonBlogEntriesPage_ng_container_18_ion_card_1_div_23_Template, 6, 6, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"user\", entry_r6.user)(\"courseId\", entry_r6.courseid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"text\", entry_r6.subject)(\"contextLevel\", ctx_r7.contextLevel)(\"contextInstanceId\", ctx_r7.contextInstanceId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 18, \"addon.blog.\" + entry_r6.publishTranslated), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", entry_r6.user && entry_r6.user.fullname, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(14, 20, entry_r6.created), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"text\", entry_r6.summary)(\"component\", ctx_r7.component)(\"componentId\", entry_r6.id)(\"contextLevel\", ctx_r7.contextLevel)(\"contextInstanceId\", ctx_r7.contextInstanceId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.tagsEnabled && entry_r6.tags && entry_r6.tags.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.commentsEnabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", entry_r6.attachmentfiles);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", entry_r6.uniquehash);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", entry_r6.lastmodified > entry_r6.created);\n  }\n}\nfunction AddonBlogEntriesPage_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonBlogEntriesPage_ng_container_18_ion_card_1_Template, 24, 22, \"ion-card\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entry_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.onlyMyEntries || entry_r6.userid === ctx_r2.currentUserId);\n  }\n}\n/**\n * Page that displays the list of blog entries.\n */\nexport class AddonBlogEntriesPage {\n  constructor() {\n    var _this = this;\n    this.title = '';\n    this.filter = {};\n    this.pageLoaded = 0;\n    this.userPageLoaded = 0;\n    this.canLoadMoreEntries = false;\n    this.canLoadMoreUserEntries = true;\n    this.loaded = false;\n    this.canLoadMore = false;\n    this.loadMoreError = false;\n    this.entries = [];\n    this.showMyEntriesToggle = false;\n    this.onlyMyEntries = false;\n    this.component = AddonBlogProvider.COMPONENT;\n    this.commentsEnabled = false;\n    this.tagsEnabled = false;\n    this.contextLevel = \"system\" /* ContextLevel.SYSTEM */;\n    this.contextInstanceId = 0;\n    this.currentUserId = CoreSites.getCurrentSiteUserId();\n    this.siteHomeId = CoreSites.getCurrentSiteHomeId();\n    this.logView = CoreTime.once( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(AddonBlog.logView(_this.filter));\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'core_blog_view_entries',\n        name: _this.title,\n        data: _objectSpread(_objectSpread({}, _this.filter), {}, {\n          category: 'blog'\n        }),\n        url: CoreUrlUtils.addParamsToUrl('/blog/index.php', _objectSpread(_objectSpread({}, _this.filter), {}, {\n          modid: _this.filter.cmid,\n          cmid: undefined\n        }))\n      });\n    }));\n  }\n  /**\n   * View loaded.\n   */\n  ngOnInit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const userId = CoreNavigator.getRouteNumberParam('userId');\n      const courseId = CoreNavigator.getRouteNumberParam('courseId');\n      const cmId = CoreNavigator.getRouteNumberParam('cmId');\n      const entryId = CoreNavigator.getRouteNumberParam('entryId');\n      const groupId = CoreNavigator.getRouteNumberParam('groupId');\n      const tagId = CoreNavigator.getRouteNumberParam('tagId');\n      if (!userId && !courseId && !cmId && !entryId && !groupId && !tagId) {\n        _this2.title = 'addon.blog.siteblogheading';\n      } else {\n        _this2.title = 'addon.blog.blogentries';\n      }\n      if (userId) {\n        _this2.filter.userid = userId;\n      }\n      if (courseId) {\n        _this2.filter.courseid = courseId;\n      }\n      if (cmId) {\n        _this2.filter.cmid = cmId;\n      }\n      if (entryId) {\n        _this2.filter.entryid = entryId;\n      }\n      if (groupId) {\n        _this2.filter.groupid = groupId;\n      }\n      if (tagId) {\n        _this2.filter.tagid = tagId;\n      }\n      _this2.showMyEntriesToggle = !userId && !_this2.filter.entryid;\n      // Calculate the context level.\n      if (userId && !courseId && !cmId) {\n        _this2.contextLevel = \"user\" /* ContextLevel.USER */;\n        _this2.contextInstanceId = userId;\n      } else if (courseId && courseId != _this2.siteHomeId) {\n        _this2.contextLevel = \"course\" /* ContextLevel.COURSE */;\n        _this2.contextInstanceId = courseId;\n      } else {\n        _this2.contextLevel = \"system\" /* ContextLevel.SYSTEM */;\n        _this2.contextInstanceId = 0;\n      }\n      _this2.commentsEnabled = !CoreComments.areCommentsDisabledInSite();\n      _this2.tagsEnabled = CoreTag.areTagsAvailableInSite();\n      const deepLinkManager = new CoreMainMenuDeepLinkManager();\n      deepLinkManager.treatLink();\n      yield _this2.fetchEntries();\n    })();\n  }\n  /**\n   * Fetch blog entries.\n   *\n   * @param refresh Empty events array first.\n   * @returns Promise with the entries.\n   */\n  fetchEntries(refresh = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.loadMoreError = false;\n      if (refresh) {\n        _this3.pageLoaded = 0;\n        _this3.userPageLoaded = 0;\n      }\n      const loadPage = _this3.onlyMyEntries ? _this3.userPageLoaded : _this3.pageLoaded;\n      try {\n        const result = yield AddonBlog.getEntries(_this3.filter, loadPage);\n        const promises = result.entries.map( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (entry) {\n            switch (entry.publishstate) {\n              case 'draft':\n                entry.publishTranslated = 'publishtonoone';\n                break;\n              case 'site':\n                entry.publishTranslated = 'publishtosite';\n                break;\n              case 'public':\n                entry.publishTranslated = 'publishtoworld';\n                break;\n              default:\n                entry.publishTranslated = 'privacy:unknown';\n                break;\n            }\n            // Calculate the context. This code was inspired by calendar events, Moodle doesn't do this for blogs.\n            if (entry.moduleid || entry.coursemoduleid) {\n              entry.contextLevel = \"module\" /* ContextLevel.MODULE */;\n              entry.contextInstanceId = entry.moduleid || entry.coursemoduleid;\n            } else if (entry.courseid) {\n              entry.contextLevel = \"course\" /* ContextLevel.COURSE */;\n              entry.contextInstanceId = entry.courseid;\n            } else {\n              entry.contextLevel = \"user\" /* ContextLevel.USER */;\n              entry.contextInstanceId = entry.userid;\n            }\n            entry.summary = CoreTextUtils.replacePluginfileUrls(entry.summary, entry.summaryfiles || []);\n            entry.user = yield CoreUtils.ignoreErrors(CoreUser.getProfile(entry.userid, entry.courseid, true));\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n        if (refresh) {\n          _this3.entries = result.entries;\n        } else {\n          _this3.entries = CoreUtils.uniqueArray(_this3.entries.concat(result.entries), 'id').sort((a, b) => b.created - a.created);\n        }\n        if (_this3.onlyMyEntries) {\n          const count = _this3.entries.filter(entry => entry.userid == _this3.currentUserId).length;\n          _this3.canLoadMoreUserEntries = result.totalentries > count;\n          _this3.canLoadMore = _this3.canLoadMoreUserEntries;\n          _this3.userPageLoaded++;\n        } else {\n          _this3.canLoadMoreEntries = result.totalentries > _this3.entries.length;\n          _this3.canLoadMore = _this3.canLoadMoreEntries;\n          _this3.pageLoaded++;\n        }\n        yield Promise.all(promises);\n        _this3.logView();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.blog.errorloadentries', true);\n        _this3.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n      } finally {\n        _this3.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Toggle between showing only my entries or not.\n   *\n   * @param enabled If true, filter my entries. False otherwise.\n   */\n  onlyMyEntriesToggleChanged(enabled) {\n    this.canLoadMore = enabled ? this.canLoadMoreUserEntries : this.canLoadMoreEntries;\n    if (!enabled) {\n      delete this.filter.userid;\n      return;\n    }\n    const count = this.entries.filter(entry => entry.userid == this.currentUserId).length;\n    this.userPageLoaded = Math.floor(count / AddonBlogProvider.ENTRIES_PER_PAGE);\n    this.filter.userid = this.currentUserId;\n    if (count == 0 && this.canLoadMoreUserEntries) {\n      // First time but no entry loaded. Try to load some.\n      this.loadMore();\n    }\n  }\n  /**\n   * Function to load more entries.\n   *\n   * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n   * @returns Resolved when done.\n   */\n  loadMore(infiniteComplete) {\n    return this.fetchEntries().finally(() => {\n      infiniteComplete && infiniteComplete();\n    });\n  }\n  /**\n   * Refresh blog entries on PTR.\n   *\n   * @param refresher Refresher instance.\n   */\n  refresh(refresher) {\n    const promises = this.entries.map(entry => CoreComments.invalidateCommentsData('user', entry.userid, this.component, entry.id, 'format_blog'));\n    promises.push(AddonBlog.invalidateEntries(this.filter));\n    if (this.showMyEntriesToggle) {\n      this.filter['userid'] = this.currentUserId;\n      promises.push(AddonBlog.invalidateEntries(this.filter));\n      if (!this.onlyMyEntries) {\n        delete this.filter['userid'];\n      }\n    }\n    CoreUtils.allPromises(promises).finally(() => {\n      this.fetchEntries(true).finally(() => {\n        if (refresher) {\n          refresher === null || refresher === void 0 || refresher.complete();\n        }\n      });\n    });\n  }\n}\n_class = AddonBlogEntriesPage;\n_class.ɵfac = function AddonBlogEntriesPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-blog-entries\"]],\n  decls: 20,\n  vars: 16,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [1, \"limited-width\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [4, \"ngIf\"], [\"icon\", \"far-newspaper\", 3, \"message\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"enabled\", \"error\", \"action\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"icon\", \"far-newspaper\", 3, \"message\"], [1, \"ion-text-wrap\"], [\"slot\", \"start\", 3, \"user\", \"courseId\"], [1, \"flex-row\", \"ion-justify-content-between\", \"ion-align-items-center\"], [3, \"text\", \"contextLevel\", \"contextInstanceId\"], [1, \"ion-text-end\"], [3, \"text\", \"component\", \"componentId\", \"contextLevel\", \"contextInstanceId\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [\"area\", \"format_blog\", \"contextLevel\", \"user\", 3, \"component\", \"itemId\", \"instanceId\", \"showItem\", 4, \"ngIf\"], [3, \"file\", \"component\", \"componentId\", 4, \"ngFor\", \"ngForOf\"], [\"core-link\", \"\", 3, \"href\", \"detail\", 4, \"ngIf\"], [\"class\", \"ion-text-center ion-margin-bottom\", 4, \"ngIf\"], [3, \"tags\"], [\"area\", \"format_blog\", \"contextLevel\", \"user\", 3, \"component\", \"itemId\", \"instanceId\", \"showItem\"], [3, \"file\", \"component\", \"componentId\"], [\"core-link\", \"\", 3, \"href\", \"detail\"], [1, \"ion-text-center\", \"ion-margin-bottom\"], [\"name\", \"fas-clock\"]],\n  template: function AddonBlogEntriesPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-buttons\", 2);\n      i0.ɵɵelement(10, \"core-user-menu-button\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"ion-content\", 3)(12, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonBlogEntriesPage_Template_ion_refresher_ionRefresh_12_listener($event) {\n        return ctx.refresh($event.target);\n      });\n      i0.ɵɵelement(13, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(14, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"core-loading\", 6);\n      i0.ɵɵtemplate(16, AddonBlogEntriesPage_ion_item_16_Template, 5, 4, \"ion-item\", 7);\n      i0.ɵɵtemplate(17, AddonBlogEntriesPage_core_empty_box_17_Template, 2, 3, \"core-empty-box\", 8);\n      i0.ɵɵtemplate(18, AddonBlogEntriesPage_ng_container_18_Template, 2, 1, \"ng-container\", 9);\n      i0.ɵɵelementStart(19, \"core-infinite-loading\", 10);\n      i0.ɵɵlistener(\"action\", function AddonBlogEntriesPage_Template_core_infinite_loading_action_19_listener($event) {\n        return ctx.loadMore($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 10, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 12, ctx.title));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(14, 14, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMyEntriesToggle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.entries && ctx.entries.length === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.entries);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"enabled\", ctx.canLoadMore)(\"error\", ctx.loadMoreError);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreEmptyBoxComponent, i3.CoreFileComponent, i4.CoreInfiniteLoadingComponent, i5.CoreLoadingComponent, i6.CoreUserAvatarComponent, i7.CoreFaIconDirective, i8.CoreFormatTextDirective, i9.CoreLinkDirective, i10.CoreContentDirective, i11.NgControlStatus, i11.NgModel, i12.IonButtons, i12.IonCard, i12.IonCardContent, i12.IonContent, i12.IonHeader, i12.IonIcon, i12.IonItem, i12.IonLabel, i12.IonNote, i12.IonRefresher, i12.IonRefresherContent, i12.IonTitle, i12.IonToggle, i12.IonToolbar, i12.BooleanValueAccessor, i12.IonBackButton, i13.CoreCommentsCommentsComponent, i14.CoreTagListComponent, i15.CoreMainMenuUserButtonComponent, i16.CoreDateDayOrTimePipe, i17.CoreTimeAgoPipe, i18.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonBlog","AddonBlogProvider","CoreComments","CoreMainMenuDeepLinkManager","CoreTag","CoreUser","CoreAnalytics","CoreAnalyticsEventType","CoreNavigator","CoreSites","CoreDomUtils","CoreTextUtils","CoreUrlUtils","CoreUtils","CoreTime","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddonBlogEntriesPage_ion_item_16_Template_ion_toggle_ngModelChange_4_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onlyMyEntries","AddonBlogEntriesPage_ion_item_16_Template_ion_toggle_ionChange_4_listener","ctx_r5","onlyMyEntriesToggleChanged","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","ctx_r0","ɵɵelement","ɵɵtextInterpolate1","entry_r6","tags","ctx_r9","component","id","userid","file_r15","ctx_r10","uniquehash","ɵɵattribute","lastmodified","ɵɵtemplate","AddonBlogEntriesPage_ng_container_18_ion_card_1_ion_item_19_Template","AddonBlogEntriesPage_ng_container_18_ion_card_1_core_comments_20_Template","AddonBlogEntriesPage_ng_container_18_ion_card_1_core_file_21_Template","AddonBlogEntriesPage_ng_container_18_ion_card_1_ion_item_22_Template","AddonBlogEntriesPage_ng_container_18_ion_card_1_div_23_Template","user","courseid","subject","ctx_r7","contextLevel","contextInstanceId","publishTranslated","fullname","created","summary","tagsEnabled","length","commentsEnabled","attachmentfiles","ɵɵelementContainerStart","AddonBlogEntriesPage_ng_container_18_ion_card_1_Template","ɵɵelementContainerEnd","ctx_r2","currentUserId","AddonBlogEntriesPage","constructor","_this","title","filter","pageLoaded","userPageLoaded","canLoadMoreEntries","canLoadMoreUserEntries","loaded","canLoadMore","loadMoreError","entries","showMyEntriesToggle","COMPONENT","getCurrentSiteUserId","siteHomeId","getCurrentSiteHomeId","logView","once","_asyncToGenerator","ignoreErrors","logEvent","type","VIEW_ITEM_LIST","ws","name","data","_objectSpread","category","url","addParamsToUrl","modid","cmid","undefined","ngOnInit","_this2","userId","getRouteNumberParam","courseId","cmId","entryId","groupId","tagId","entryid","groupid","tagid","areCommentsDisabledInSite","areTagsAvailableInSite","deepLinkManager","treatLink","fetchEntries","refresh","_this3","loadPage","result","getEntries","promises","map","_ref2","entry","publishstate","moduleid","coursemoduleid","replacePluginfileUrls","summaryfiles","getProfile","_x","apply","arguments","uniqueArray","concat","sort","a","b","count","totalentries","Promise","all","error","showErrorModalDefault","enabled","Math","floor","ENTRIES_PER_PAGE","loadMore","infiniteComplete","finally","refresher","invalidateCommentsData","push","invalidateEntries","allPromises","complete","selectors","decls","vars","consts","template","AddonBlogEntriesPage_Template","rf","ctx","AddonBlogEntriesPage_Template_ion_refresher_ionRefresh_12_listener","target","AddonBlogEntriesPage_ion_item_16_Template","AddonBlogEntriesPage_core_empty_box_17_Template","AddonBlogEntriesPage_ng_container_18_Template","AddonBlogEntriesPage_Template_core_infinite_loading_action_19_listener","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/blog/pages/entries/entries.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/blog/pages/entries/entries.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ContextLevel } from '@/core/constants';\nimport { AddonBlog, AddonBlogFilter, AddonBlogPost, AddonBlogProvider } from '@addons/blog/services/blog';\nimport { Component, OnInit } from '@angular/core';\nimport { CoreComments } from '@features/comments/services/comments';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\nimport { CoreTag } from '@features/tag/services/tag';\nimport { CoreUser, CoreUserProfile } from '@features/user/services/user';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreTime } from '@singletons/time';\n\n/**\n * Page that displays the list of blog entries.\n */\n@Component({\n    selector: 'page-addon-blog-entries',\n    templateUrl: 'entries.html',\n})\nexport class AddonBlogEntriesPage implements OnInit {\n\n    title = '';\n\n    protected filter: AddonBlogFilter = {};\n    protected pageLoaded = 0;\n    protected userPageLoaded = 0;\n    protected canLoadMoreEntries = false;\n    protected canLoadMoreUserEntries = true;\n    protected siteHomeId: number;\n    protected logView: () => void;\n\n    loaded = false;\n    canLoadMore = false;\n    loadMoreError = false;\n    entries: AddonBlogPostFormatted[] = [];\n    currentUserId: number;\n    showMyEntriesToggle = false;\n    onlyMyEntries = false;\n    component = AddonBlogProvider.COMPONENT;\n    commentsEnabled = false;\n    tagsEnabled = false;\n    contextLevel: ContextLevel = ContextLevel.SYSTEM;\n    contextInstanceId = 0;\n\n    constructor() {\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n        this.siteHomeId = CoreSites.getCurrentSiteHomeId();\n\n        this.logView = CoreTime.once(async () => {\n            await CoreUtils.ignoreErrors(AddonBlog.logView(this.filter));\n\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'core_blog_view_entries',\n                name: this.title,\n                data: {\n                    ...this.filter,\n                    category: 'blog',\n                },\n                url: CoreUrlUtils.addParamsToUrl('/blog/index.php', {\n                    ...this.filter,\n                    modid: this.filter.cmid,\n                    cmid: undefined,\n                }),\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    async ngOnInit(): Promise<void> {\n        const userId = CoreNavigator.getRouteNumberParam('userId');\n        const courseId = CoreNavigator.getRouteNumberParam('courseId');\n        const cmId = CoreNavigator.getRouteNumberParam('cmId');\n        const entryId = CoreNavigator.getRouteNumberParam('entryId');\n        const groupId = CoreNavigator.getRouteNumberParam('groupId');\n        const tagId = CoreNavigator.getRouteNumberParam('tagId');\n\n        if (!userId && !courseId && !cmId && !entryId && !groupId && !tagId) {\n            this.title = 'addon.blog.siteblogheading';\n        } else {\n            this.title = 'addon.blog.blogentries';\n        }\n\n        if (userId) {\n            this.filter.userid = userId;\n        }\n\n        if (courseId) {\n            this.filter.courseid = courseId;\n        }\n\n        if (cmId) {\n            this.filter.cmid = cmId;\n        }\n\n        if (entryId) {\n            this.filter.entryid = entryId;\n        }\n\n        if (groupId) {\n            this.filter.groupid = groupId;\n        }\n\n        if (tagId) {\n            this.filter.tagid = tagId;\n        }\n\n        this.showMyEntriesToggle = !userId && !this.filter.entryid;\n\n        // Calculate the context level.\n        if (userId && !courseId && !cmId) {\n            this.contextLevel = ContextLevel.USER;\n            this.contextInstanceId = userId;\n        } else if (courseId && courseId != this.siteHomeId) {\n            this.contextLevel = ContextLevel.COURSE;\n            this.contextInstanceId = courseId;\n        } else {\n            this.contextLevel = ContextLevel.SYSTEM;\n            this.contextInstanceId = 0;\n        }\n\n        this.commentsEnabled = !CoreComments.areCommentsDisabledInSite();\n        this.tagsEnabled = CoreTag.areTagsAvailableInSite();\n\n        const deepLinkManager = new CoreMainMenuDeepLinkManager();\n        deepLinkManager.treatLink();\n\n        await this.fetchEntries();\n    }\n\n    /**\n     * Fetch blog entries.\n     *\n     * @param refresh Empty events array first.\n     * @returns Promise with the entries.\n     */\n    protected async fetchEntries(refresh: boolean = false): Promise<void> {\n        this.loadMoreError = false;\n\n        if (refresh) {\n            this.pageLoaded = 0;\n            this.userPageLoaded = 0;\n        }\n\n        const loadPage = this.onlyMyEntries ? this.userPageLoaded : this.pageLoaded;\n\n        try {\n            const result = await AddonBlog.getEntries(this.filter, loadPage);\n\n            const promises = result.entries.map(async (entry: AddonBlogPostFormatted) => {\n                switch (entry.publishstate) {\n                    case 'draft':\n                        entry.publishTranslated = 'publishtonoone';\n                        break;\n                    case 'site':\n                        entry.publishTranslated = 'publishtosite';\n                        break;\n                    case 'public':\n                        entry.publishTranslated = 'publishtoworld';\n                        break;\n                    default:\n                        entry.publishTranslated = 'privacy:unknown';\n                        break;\n                }\n\n                // Calculate the context. This code was inspired by calendar events, Moodle doesn't do this for blogs.\n                if (entry.moduleid || entry.coursemoduleid) {\n                    entry.contextLevel = ContextLevel.MODULE;\n                    entry.contextInstanceId = entry.moduleid || entry.coursemoduleid;\n                } else if (entry.courseid) {\n                    entry.contextLevel = ContextLevel.COURSE;\n                    entry.contextInstanceId = entry.courseid;\n                } else {\n                    entry.contextLevel = ContextLevel.USER;\n                    entry.contextInstanceId = entry.userid;\n                }\n\n                entry.summary = CoreTextUtils.replacePluginfileUrls(entry.summary, entry.summaryfiles || []);\n\n                entry.user = await CoreUtils.ignoreErrors(CoreUser.getProfile(entry.userid, entry.courseid, true));\n            });\n\n            if (refresh) {\n                this.entries = result.entries;\n            } else {\n                this.entries = CoreUtils.uniqueArray(this.entries\n                    .concat(result.entries), 'id')\n                    .sort((a, b) => b.created - a.created);\n            }\n\n            if (this.onlyMyEntries) {\n                const count = this.entries.filter((entry) => entry.userid == this.currentUserId).length;\n                this.canLoadMoreUserEntries = result.totalentries > count;\n                this.canLoadMore = this.canLoadMoreUserEntries;\n                this.userPageLoaded++;\n            } else {\n                this.canLoadMoreEntries = result.totalentries > this.entries.length;\n                this.canLoadMore = this.canLoadMoreEntries;\n                this.pageLoaded++;\n            }\n\n            await Promise.all(promises);\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.blog.errorloadentries', true);\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Toggle between showing only my entries or not.\n     *\n     * @param enabled If true, filter my entries. False otherwise.\n     */\n    onlyMyEntriesToggleChanged(enabled: boolean): void {\n        this.canLoadMore = enabled ? this.canLoadMoreUserEntries : this.canLoadMoreEntries;\n\n        if (!enabled) {\n            delete this.filter.userid;\n\n            return;\n        }\n\n        const count = this.entries.filter((entry) => entry.userid == this.currentUserId).length;\n        this.userPageLoaded = Math.floor(count / AddonBlogProvider.ENTRIES_PER_PAGE);\n        this.filter.userid = this.currentUserId;\n\n        if (count == 0 && this.canLoadMoreUserEntries) {\n            // First time but no entry loaded. Try to load some.\n            this.loadMore();\n        }\n    }\n\n    /**\n     * Function to load more entries.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @returns Resolved when done.\n     */\n    loadMore(infiniteComplete?: () => void): Promise<void> {\n        return this.fetchEntries().finally(() => {\n            infiniteComplete && infiniteComplete();\n        });\n    }\n\n    /**\n     * Refresh blog entries on PTR.\n     *\n     * @param refresher Refresher instance.\n     */\n    refresh(refresher?: HTMLIonRefresherElement): void {\n        const promises = this.entries.map((entry) =>\n            CoreComments.invalidateCommentsData('user', entry.userid, this.component, entry.id, 'format_blog'));\n\n        promises.push(AddonBlog.invalidateEntries(this.filter));\n\n        if (this.showMyEntriesToggle) {\n            this.filter['userid'] = this.currentUserId;\n            promises.push(AddonBlog.invalidateEntries(this.filter));\n\n            if (!this.onlyMyEntries) {\n                delete this.filter['userid'];\n            }\n\n        }\n\n        CoreUtils.allPromises(promises).finally(() => {\n            this.fetchEntries(true).finally(() => {\n                if (refresher) {\n                    refresher?.complete();\n                }\n            });\n        });\n    }\n\n}\n\n/**\n * Blog post with some calculated data.\n */\ntype AddonBlogPostFormatted = AddonBlogPost & {\n    publishTranslated?: string; // Calculated in the app. Key of the string to translate the publish state of the post.\n    user?: CoreUserProfile; // Calculated in the app. Data of the user that wrote the post.\n    contextLevel?: string; // Calculated in the app. The context level of the entry.\n    contextInstanceId?: number; // Calculated in the app. The context instance id.\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ title | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <core-user-menu-button />\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refresh($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"loaded\">\n        <ion-item *ngIf=\"showMyEntriesToggle\">\n            <ion-label>{{ 'addon.blog.showonlyyourentries' | translate }}</ion-label>\n            <ion-toggle [(ngModel)]=\"onlyMyEntries\" (ionChange)=\"onlyMyEntriesToggleChanged(onlyMyEntries)\" slot=\"end\" />\n        </ion-item>\n        <core-empty-box *ngIf=\"entries && entries.length === 0\" icon=\"far-newspaper\" [message]=\"'addon.blog.noentriesyet' | translate\" />\n        <ng-container *ngFor=\"let entry of entries\">\n            <ion-card *ngIf=\"!onlyMyEntries || entry.userid === currentUserId\">\n                <ion-item class=\"ion-text-wrap\">\n                    <core-user-avatar [user]=\"entry.user\" slot=\"start\" [courseId]=\"entry.courseid\" />\n                    <ion-label>\n                        <div class=\"flex-row ion-justify-content-between ion-align-items-center\">\n                            <h2>\n                                <core-format-text [text]=\"entry.subject\" [contextLevel]=\"contextLevel\"\n                                    [contextInstanceId]=\"contextInstanceId\" />\n                            </h2>\n                            <ion-note class=\"ion-text-end\">\n                                {{ 'addon.blog.' + entry.publishTranslated! | translate}}\n                            </ion-note>\n                        </div>\n                        <div class=\"flex-row ion-justify-content-between ion-align-items-center\">\n                            {{entry.user && entry.user.fullname}}\n                            <ion-note class=\"ion-text-end\">\n                                {{entry.created | coreDateDayOrTime}}\n                            </ion-note>\n                        </div>\n                    </ion-label>\n                </ion-item>\n                <ion-card-content>\n                    <ion-item class=\"ion-text-wrap\">\n                        <ion-label>\n                            <core-format-text [text]=\"entry.summary\" [component]=\"this.component\" [componentId]=\"entry.id\"\n                                [contextLevel]=\"contextLevel\" [contextInstanceId]=\"contextInstanceId\" />\n                        </ion-label>\n                    </ion-item>\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"tagsEnabled && entry.tags && entry.tags!.length > 0\">\n                        <ion-label>\n                            <div slot=\"start\">{{ 'core.tag.tags' | translate }}:</div>\n                            <core-tag-list [tags]=\"entry.tags\" />\n                        </ion-label>\n                    </ion-item>\n                    <core-comments *ngIf=\"commentsEnabled\" [component]=\"this.component\" [itemId]=\"entry.id\" area=\"format_blog\"\n                        [instanceId]=\"entry.userid\" contextLevel=\"user\" [showItem]=\"true\" />\n                    <core-file *ngFor=\"let file of entry.attachmentfiles\" [file]=\"file\" [component]=\"this.component\"\n                        [componentId]=\"entry.id\" />\n                    <ion-item *ngIf=\"entry.uniquehash\" [href]=\"entry.uniquehash\" core-link [detail]=\"true\">\n                        <ion-label>{{ 'addon.blog.linktooriginalentry' | translate }}</ion-label>\n                    </ion-item>\n                </ion-card-content>\n                <div class=\"ion-text-center ion-margin-bottom\" *ngIf=\"entry.lastmodified > entry.created\">\n                    <ion-note>\n                        <ion-icon name=\"fas-clock\" [attr.aria-label]=\"'core.lastmodified' | translate\" /> {{entry.lastmodified\n                        |\n                        coreTimeAgo}}\n                    </ion-note>\n                </div>\n            </ion-card>\n        </ng-container>\n        <core-infinite-loading [enabled]=\"canLoadMore\" (action)=\"loadMore($event)\" [error]=\"loadMoreError\" />\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}