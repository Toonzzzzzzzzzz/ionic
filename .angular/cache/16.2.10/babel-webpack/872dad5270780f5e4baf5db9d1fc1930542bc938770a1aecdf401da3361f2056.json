{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { IonContent } from '@ionic/angular';\nimport { CoreQuestionComponent } from '@features/question/components/question/question';\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModQuizAutoSave } from '../../classes/auto-save';\nimport { AddonModQuizNavigationModalComponent } from '../../components/navigation-modal/navigation-modal';\nimport { AddonModQuiz, AddonModQuizProvider } from '../../services/quiz';\nimport { AddonModQuizHelper } from '../../services/quiz-helper';\nimport { AddonModQuizSync } from '../../services/quiz-sync';\nimport { CoreForms } from '@singletons/form';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreTime } from '@singletons/time';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\nimport { CoreWSError } from '@classes/errors/wserror';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/loading/loading\";\nimport * as i3 from \"../../../../../core/components/timer/timer\";\nimport * as i4 from \"../../../../../core/directives/fa-icon\";\nimport * as i5 from \"../../../../../core/directives/format-text\";\nimport * as i6 from \"../../../../../core/directives/link\";\nimport * as i7 from \"../../../../../core/directives/collapsible-footer\";\nimport * as i8 from \"../../../../../core/directives/content\";\nimport * as i9 from \"../../../../../core/directives/update-non-reactive-attributes\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@ionic/angular\";\nimport * as i12 from \"../../../../../core/features/question/components/question/question\";\nimport * as i13 from \"@ngx-translate/core\";\nconst _c0 = [\"quizForm\"];\nfunction AddonModQuizPlayerPage_core_format_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-format-text\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r0.quiz.name)(\"contextInstanceId\", ctx_r0.quiz.coursemodule)(\"courseId\", ctx_r0.courseId);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 17);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_ion_button_12_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.openNavigation());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"addon.mod_quiz.opentoc\"));\n  }\n}\nfunction AddonModQuizPlayerPage_core_timer_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-timer\", 19);\n    i0.ɵɵlistener(\"finished\", function AddonModQuizPlayerPage_core_timer_13_Template_core_timer_finished_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.timeUp());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"endTime\", ctx_r2.endTime)(\"timerText\", i0.ɵɵpipeBind1(1, 3, \"addon.mod_quiz.timeleft\"))(\"hiddable\", true);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 20);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_ion_button_16_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.start());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_quiz.startattempt\"), \" \");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonModQuizPlayerPage_form_17_div_2_h2_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"core.question.questionno\", i0.ɵɵpureFunction1(4, _c1, question_r17.questionnumber)), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_form_17_div_2_h2_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.question.information\"), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_form_17_div_2_div_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r17 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r17.status);\n  }\n}\nfunction AddonModQuizPlayerPage_form_17_div_2_div_6_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 34);\n  }\n  if (rf & 2) {\n    const question_r17 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"innerHTML\", question_r17.readableMark, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AddonModQuizPlayerPage_form_17_div_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, AddonModQuizPlayerPage_form_17_div_2_div_6_p_1_Template, 2, 1, \"p\", 31);\n    i0.ɵɵtemplate(2, AddonModQuizPlayerPage_form_17_div_2_div_6_p_2_Template, 1, 1, \"p\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r17.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r17.readableMark);\n  }\n}\nfunction AddonModQuizPlayerPage_form_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-card\", 24)(2, \"ion-item-divider\")(3, \"ion-label\", 25);\n    i0.ɵɵtemplate(4, AddonModQuizPlayerPage_form_17_div_2_h2_4_Template, 3, 6, \"h2\", 26);\n    i0.ɵɵtemplate(5, AddonModQuizPlayerPage_form_17_div_2_h2_5_Template, 3, 3, \"h2\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddonModQuizPlayerPage_form_17_div_2_div_6_Template, 3, 2, \"div\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"core-question\", 28);\n    i0.ɵɵlistener(\"onAbort\", function AddonModQuizPlayerPage_form_17_div_2_Template_core_question_onAbort_7_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.abortQuiz());\n    })(\"buttonClicked\", function AddonModQuizPlayerPage_form_17_div_2_Template_core_question_buttonClicked_7_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.behaviourButtonClicked($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"addon-mod_quiz-question-\", question_r17.slot, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", question_r17.type !== \"description\" && question_r17.questionnumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r17.type === \"description\" || !question_r17.questionnumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r17.status || question_r17.readableMark);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"question\", question_r17)(\"component\", ctx_r16.component)(\"componentId\", ctx_r16.cmId)(\"attemptId\", ctx_r16.attempt.id)(\"usageId\", ctx_r16.attempt.uniqueid)(\"offlineEnabled\", ctx_r16.offline)(\"contextInstanceId\", ctx_r16.cmId)(\"courseId\", ctx_r16.courseId)(\"preferredBehaviour\", ctx_r16.quiz.preferredbehaviour)(\"review\", false);\n  }\n}\nfunction AddonModQuizPlayerPage_form_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 21, 22);\n    i0.ɵɵtemplate(2, AddonModQuizPlayerPage_form_17_div_2_Template, 8, 14, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.questions);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_row_18_ion_col_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-col\")(1, \"ion-button\", 36);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_ion_row_18_ion_col_1_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.changePage(ctx_r32.previousPage));\n    });\n    i0.ɵɵelement(2, \"ion-icon\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"core.previous\"), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 39);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_1_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r36.changePage(ctx_r36.nextPage));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.next\"), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 39);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_2_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r38.changePage(ctx_r38.nextPage));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.submit\"), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_ion_row_18_ion_col_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\");\n    i0.ɵɵtemplate(1, AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_1_Template, 4, 3, \"ion-button\", 38);\n    i0.ɵɵtemplate(2, AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_2_Template, 3, 3, \"ion-button\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r31.nextPage > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r31.nextPage === -1);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_row_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-row\", 35);\n    i0.ɵɵtemplate(1, AddonModQuizPlayerPage_ion_row_18_ion_col_1_Template, 5, 3, \"ion-col\", 14);\n    i0.ɵɵtemplate(2, AddonModQuizPlayerPage_ion_row_18_ion_col_2_Template, 3, 2, \"ion-col\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.previousPage >= 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.nextPage >= -1);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_19_ng_container_19_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 49);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_ion_card_19_ng_container_19_ion_item_1_Template_ion_item_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const question_r44 = i0.ɵɵnextContext().$implicit;\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r46.changePage(question_r44.page, false, question_r44.slot));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"ion-row\", 42)(4, \"ion-col\", 50);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-col\", 51);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const question_r44 = i0.ɵɵnextContext().$implicit;\n    const ctx_r45 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"detail\", !ctx_r45.isSequential && ctx_r45.canReturn)(\"button\", !ctx_r45.isSequential && ctx_r45.canReturn);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind2(1, 5, \"core.question.questionno\", i0.ɵɵpureFunction1(8, _c1, question_r44.questionnumber)));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(question_r44.questionnumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r44.status);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_19_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModQuizPlayerPage_ion_card_19_ng_container_19_ion_item_1_Template, 8, 10, \"ion-item\", 48);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const question_r44 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r44.type !== \"description\" && question_r44.questionnumber);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_19_ion_item_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 25)(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r41.dueDateWarning);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_19_core_timer_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-timer\", 52);\n    i0.ɵɵlistener(\"finished\", function AddonModQuizPlayerPage_ion_card_19_core_timer_21_Template_core_timer_finished_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r50.timeUp());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"endTime\", ctx_r42.endTime)(\"timerText\", i0.ɵɵpipeBind1(1, 2, \"addon.mod_quiz.timeleft\"));\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_19_ion_item_22_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r53 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r53);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_19_ion_item_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 25)(1, \"ion-label\")(2, \"p\", 53);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModQuizPlayerPage_ion_card_19_ion_item_22_p_5_Template, 2, 1, \"p\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_quiz.cannotsubmitquizdueto\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r43.preventSubmitMessages);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 41)(1, \"ion-card-header\", 25)(2, \"ion-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-item\", 25)(6, \"ion-label\")(7, \"ion-row\", 42)(8, \"ion-col\", 43)(9, \"strong\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"ion-col\", 44)(13, \"strong\");\n    i0.ɵɵtext(14, \"#\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"ion-col\", 45)(16, \"strong\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵtemplate(19, AddonModQuizPlayerPage_ion_card_19_ng_container_19_Template, 2, 1, \"ng-container\", 23);\n    i0.ɵɵtemplate(20, AddonModQuizPlayerPage_ion_card_19_ion_item_20_Template, 3, 1, \"ion-item\", 46);\n    i0.ɵɵtemplate(21, AddonModQuizPlayerPage_ion_card_19_core_timer_21_Template, 2, 4, \"core-timer\", 47);\n    i0.ɵɵtemplate(22, AddonModQuizPlayerPage_ion_card_19_ion_item_22_Template, 6, 4, \"ion-item\", 46);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 7, \"addon.mod_quiz.summaryofattempt\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 9, \"addon.mod_quiz.question\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(18, 11, \"addon.mod_quiz.status\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.summaryQuestions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dueDateWarning);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.endTime);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.preventSubmitMessages.length);\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_20_ion_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 55);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_ion_card_20_ion_button_5_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r56);\n      const ctx_r55 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r55.changePage(ctx_r55.attempt.currentpage));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_quiz.returnattempt\"), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_ion_card_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-item\", 25)(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, AddonModQuizPlayerPage_ion_card_20_ion_button_5_Template, 3, 3, \"ion-button\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_quiz.errorparsequestions\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.canReturn);\n  }\n}\nfunction AddonModQuizPlayerPage_div_21_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-button\", 60);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 61);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r57 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"href\", ctx_r57.moduleUrl)(\"showBrowserWarning\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 3, \"core.openinbrowser\"), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_div_21_ion_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 62);\n    i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_div_21_ion_button_3_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r60);\n      const ctx_r59 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r59.finishAttempt(true));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_quiz.submitallandfinish\"), \" \");\n  }\n}\nfunction AddonModQuizPlayerPage_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56)(1, \"div\", 57);\n    i0.ɵɵtemplate(2, AddonModQuizPlayerPage_div_21_ion_button_2_Template, 4, 5, \"ion-button\", 58);\n    i0.ɵɵtemplate(3, AddonModQuizPlayerPage_div_21_ion_button_3_Template, 3, 3, \"ion-button\", 59);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.preventSubmitMessages.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.attempt.finishedOffline && !ctx_r8.preventSubmitMessages.length);\n  }\n}\n/**\n * Page that allows attempting a quiz.\n */\nexport class AddonModQuizPlayerPage {\n  constructor(changeDetector, elementRef) {\n    this.changeDetector = changeDetector;\n    this.elementRef = elementRef;\n    this.component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    this.loaded = false; // Whether data has been loaded.\n    this.quizAborted = false; // Whether the quiz was aborted due to an error.\n    this.offline = false; // Whether the quiz is being attempted in offline mode.\n    this.navigation = []; // List of questions to navigate them.\n    this.questions = []; // Questions of the current page.\n    this.nextPage = -2; // Next page.\n    this.previousPage = -1; // Previous page.\n    this.showSummary = false; // Whether the attempt summary should be displayed.\n    this.summaryQuestions = []; // The questions to display in the summary.\n    this.canReturn = false; // Whether the user can return to a page after seeing the summary.\n    this.preventSubmitMessages = []; // List of messages explaining why the quiz cannot be submitted.\n    this.autoSaveError = false; // Whether there's been an error in auto-save.\n    this.isSequential = false; // Whether quiz navigation is sequential.\n    this.preflightData = {}; // Preflight data to attempt the quiz.\n    this.newAttempt = false; // Whether the user is starting a new attempt.\n    this.quizDataLoaded = false; // Whether the quiz data has been loaded.\n    this.timeUpCalled = false; // Whether the time up function has been called.\n    this.forceLeave = false; // If true, don't perform any check when leaving the view.\n    this.reloadNavigation = false; // Whether navigation needs to be reloaded because some data was sent to server.\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    try {\n      this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n      this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n      this.moduleUrl = CoreNavigator.getRouteParam('moduleUrl');\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n      return;\n    }\n    // Create the auto save instance.\n    this.autoSave = new AddonModQuizAutoSave('addon-mod_quiz-player-form', '#addon-mod_quiz-connection-error-button');\n    // Start the player when the page is loaded.\n    this.start();\n    // Listen for errors on auto-save.\n    this.autoSaveErrorSubscription = this.autoSave.onError().subscribe(error => {\n      this.autoSaveError = error;\n      this.changeDetector.detectChanges();\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.stopAutoSave();\n    if (this.quiz) {\n      // Unblock the quiz so it can be synced.\n      CoreSync.unblockOperation(AddonModQuizProvider.COMPONENT, this.quiz.id);\n    }\n  }\n  /**\n   * Check if we can leave the page or not.\n   *\n   * @returns Resolved if we can leave it, rejected if not.\n   */\n  canLeave() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.forceLeave || _this.quizAborted || !_this.questions.length || _this.showSummary) {\n        return true;\n      }\n      // Save answers.\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        yield _this.processAttempt(false, false);\n      } catch (error) {\n        // Save attempt failed. Show confirmation.\n        modal.dismiss();\n        yield CoreDomUtils.showConfirm(Translate.instant('addon.mod_quiz.confirmleavequizonerror'));\n        CoreForms.triggerFormCancelledEvent(_this.formElement, CoreSites.getCurrentSiteId());\n      } finally {\n        modal.dismiss();\n      }\n      return true;\n    })();\n  }\n  /**\n   * Runs when the page is about to leave and no longer be the active page.\n   */\n  ionViewWillLeave() {\n    return _asyncToGenerator(function* () {\n      // Close any modal if present.\n      const modal = yield ModalController.getTop();\n      modal === null || modal === void 0 || modal.dismiss();\n    })();\n  }\n  /**\n   * Abort the quiz.\n   */\n  abortQuiz() {\n    this.quizAborted = true;\n  }\n  /**\n   * A behaviour button in a question was clicked (Check, Redo, ...).\n   *\n   * @param button Clicked button.\n   */\n  behaviourButtonClicked(button) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.quiz || !_this2.attempt) {\n        return;\n      }\n      let modal;\n      try {\n        var _this2$content, _this2$content2;\n        // Confirm that the user really wants to do it.\n        yield CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n        modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n        // Get the answers.\n        const answers = yield _this2.prepareAnswers(_this2.quiz.coursemodule);\n        // Add the clicked button data.\n        answers[button.name] = button.value;\n        // Behaviour checks are always in online.\n        yield AddonModQuiz.processAttempt(_this2.quiz, _this2.attempt, answers, _this2.preflightData);\n        _this2.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n        // Reload the current page.\n        const scrollElement = yield (_this2$content = _this2.content) === null || _this2$content === void 0 ? void 0 : _this2$content.getScrollElement();\n        const scrollTop = (scrollElement === null || scrollElement === void 0 ? void 0 : scrollElement.scrollTop) || -1;\n        _this2.loaded = false;\n        (_this2$content2 = _this2.content) === null || _this2$content2 === void 0 || _this2$content2.scrollToTop(); // Scroll top so the spinner is seen.\n        try {\n          var _this2$attempt$curren;\n          yield _this2.loadPage((_this2$attempt$curren = _this2.attempt.currentpage) !== null && _this2$attempt$curren !== void 0 ? _this2$attempt$curren : 0);\n        } finally {\n          _this2.loaded = true;\n          if (scrollTop != -1) {\n            // Wait for content to be rendered.\n            setTimeout(() => {\n              var _this2$content3;\n              (_this2$content3 = _this2.content) === null || _this2$content3 === void 0 || _this2$content3.scrollToPoint(0, scrollTop);\n            }, 50);\n          }\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error performing action.');\n      } finally {\n        var _modal;\n        (_modal = modal) === null || _modal === void 0 || _modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Change the current page. If slot is supplied, try to scroll to that question.\n   *\n   * @param page Page to load. -1 means summary.\n   * @param fromModal Whether the page was selected using the navigation modal.\n   * @param slot Slot of the question to scroll to.\n   * @returns Promise resolved when done.\n   */\n  changePage(page, fromModal, slot) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      var _this3$content;\n      if (!_this3.attempt) {\n        return;\n      }\n      if (page != -1 && (_this3.attempt.state == AddonModQuizProvider.ATTEMPT_OVERDUE || _this3.attempt.finishedOffline)) {\n        // We can't load a page if overdue or the local attempt is finished.\n        return;\n      } else if (page == _this3.attempt.currentpage && !_this3.showSummary && slot !== undefined) {\n        // Navigating to a question in the current page.\n        yield _this3.scrollToQuestion(slot);\n        return;\n      } else if (page == _this3.attempt.currentpage && !_this3.showSummary || fromModal && _this3.isSequential && page != -1) {\n        // If the user is navigating to the current page we do nothing.\n        // Also, in sequential quizzes we don't allow navigating using the modal except for finishing the quiz (summary).\n        return;\n      } else if (page === -1 && _this3.showSummary) {\n        // Summary already shown.\n        return;\n      }\n      (_this3$content = _this3.content) === null || _this3$content === void 0 || _this3$content.scrollToTop();\n      // First try to save the attempt data. We only save it if we're not seeing the summary.\n      if (!_this3.showSummary) {\n        const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n        try {\n          yield _this3.processAttempt(false, false);\n          modal.dismiss();\n        } catch (error) {\n          CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true);\n          modal.dismiss();\n          return;\n        }\n        _this3.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n      }\n\n      _this3.loaded = false;\n      try {\n        // Attempt data successfully saved, load the page or summary.\n        // Stop checking for changes during page change.\n        _this3.autoSave.stopCheckChangesProcess();\n        if (page === -1) {\n          yield _this3.loadSummary();\n        } else {\n          yield _this3.loadPage(page);\n        }\n      } catch (error) {\n        // If the user isn't seeing the summary, start the check again.\n        if (!_this3.showSummary && _this3.quiz) {\n          _this3.autoSave.startCheckChangesProcess(_this3.quiz, _this3.attempt, _this3.preflightData, _this3.offline);\n        }\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n      } finally {\n        _this3.loaded = true;\n        if (slot !== undefined) {\n          // Scroll to the question.\n          yield _this3.scrollToQuestion(slot);\n        }\n      }\n    })();\n  }\n  /**\n   * Convenience function to get the quiz data.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchData() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.quiz = yield AddonModQuiz.getQuiz(_this4.courseId, _this4.cmId);\n      // Block the quiz so it cannot be synced.\n      CoreSync.blockOperation(AddonModQuizProvider.COMPONENT, _this4.quiz.id);\n      // Wait for any ongoing sync to finish. We won't sync a quiz while it's being played.\n      yield AddonModQuizSync.waitForSync(_this4.quiz.id);\n      _this4.isSequential = AddonModQuiz.isNavigationSequential(_this4.quiz);\n      if (AddonModQuiz.isQuizOffline(_this4.quiz)) {\n        // Quiz supports offline.\n        _this4.offline = true;\n      } else {\n        // Quiz doesn't support offline right now, but maybe it did and then the setting was changed.\n        // If we have an unfinished offline attempt then we'll use offline mode.\n        _this4.offline = yield AddonModQuiz.isLastAttemptOfflineUnfinished(_this4.quiz);\n      }\n      if (_this4.quiz.timelimit && _this4.quiz.timelimit > 0) {\n        _this4.readableTimeLimit = CoreTime.formatTime(_this4.quiz.timelimit);\n      }\n      // Get access information for the quiz.\n      _this4.quizAccessInfo = yield AddonModQuiz.getQuizAccessInformation(_this4.quiz.id, {\n        cmId: _this4.quiz.coursemodule,\n        readingStrategy: _this4.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n      // Get user attempts to determine last attempt.\n      const attempts = yield AddonModQuiz.getUserAttempts(_this4.quiz.id, {\n        cmId: _this4.quiz.coursemodule,\n        readingStrategy: _this4.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n\n      if (!attempts.length) {\n        // There are no attempts, start a new one.\n        _this4.newAttempt = true;\n        return;\n      }\n      // Get the last attempt. If it's finished, start a new one.\n      _this4.lastAttempt = yield AddonModQuizHelper.setAttemptCalculatedData(_this4.quiz, attempts[attempts.length - 1], false, undefined, true);\n      _this4.newAttempt = AddonModQuiz.isAttemptFinished(_this4.lastAttempt.state);\n    })();\n  }\n  /**\n   * Finish an attempt, either by timeup or because the user clicked to finish it.\n   *\n   * @param userFinish Whether the user clicked to finish the attempt.\n   * @param timeUp Whether the quiz time is up.\n   * @returns Promise resolved when done.\n   */\n  finishAttempt(userFinish, timeUp) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.quiz || !_this5.attempt) {\n        return;\n      }\n      let modal;\n      try {\n        // Show confirm if the user clicked the finish button and the quiz is in progress.\n        if (!timeUp && _this5.attempt.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS) {\n          yield CoreDomUtils.showConfirm(Translate.instant('addon.mod_quiz.confirmclose'));\n        }\n        modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n        yield _this5.processAttempt(userFinish, timeUp);\n        // Trigger an event to notify the attempt was finished.\n        CoreEvents.trigger(AddonModQuizProvider.ATTEMPT_FINISHED_EVENT, {\n          quizId: _this5.quiz.id,\n          attemptId: _this5.attempt.id,\n          synced: !_this5.offline\n        }, CoreSites.getCurrentSiteId());\n        CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, {\n          module: 'quiz'\n        });\n        if (!timeUp || !_this5.quiz.graceperiod) {\n          // Leave the player.\n          _this5.forceLeave = true;\n          CoreNavigator.back();\n        } else {\n          // Stay in player to show summary.\n          _this5.stopAutoSave();\n          _this5.clearTimer();\n          yield _this5.refreshAttempt();\n          yield _this5.loadSummary();\n        }\n      } catch (error) {\n        // eslint-disable-next-line promise/catch-or-return\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (alert) {\n            yield alert === null || alert === void 0 ? void 0 : alert.onWillDismiss();\n            if (error instanceof CoreWSError && error.errorcode === 'attemptalreadyclosed') {\n              CoreNavigator.back();\n            }\n            return;\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      } finally {\n        var _modal2;\n        (_modal2 = modal) === null || _modal2 === void 0 || _modal2.dismiss();\n      }\n    })();\n  }\n  /**\n   * Fix sequence checks of current page.\n   *\n   * @returns Promise resolved when done.\n   */\n  fixSequenceChecks() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      var _this6$attempt$curren, _this6$quiz, _this6$questionCompon;\n      if (!_this6.attempt) {\n        return;\n      }\n      // Get current page data again to get the latest sequencechecks.\n      const data = yield AddonModQuiz.getAttemptData(_this6.attempt.id, (_this6$attempt$curren = _this6.attempt.currentpage) !== null && _this6$attempt$curren !== void 0 ? _this6$attempt$curren : 0, _this6.preflightData, {\n        cmId: (_this6$quiz = _this6.quiz) === null || _this6$quiz === void 0 ? void 0 : _this6$quiz.coursemodule,\n        readingStrategy: _this6.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n\n      const newSequenceChecks = {};\n      data.questions.forEach(question => {\n        const sequenceCheck = CoreQuestionHelper.getQuestionSequenceCheckFromHtml(question.html);\n        if (sequenceCheck) {\n          newSequenceChecks[question.slot] = sequenceCheck;\n        }\n      });\n      // Notify the new sequence checks to the components.\n      (_this6$questionCompon = _this6.questionComponents) === null || _this6$questionCompon === void 0 || _this6$questionCompon.forEach(component => {\n        component.updateSequenceCheck(newSequenceChecks);\n      });\n    })();\n  }\n  /**\n   * Get the input answers.\n   *\n   * @returns Object with the answers.\n   */\n  getAnswers() {\n    return CoreQuestionHelper.getAnswersFromForm(document.forms['addon-mod_quiz-player-form']);\n  }\n  /**\n   * Initializes the timer if enabled.\n   */\n  initTimer() {\n    var _this$attemptAccessIn;\n    if (!this.quizAccessInfo || !this.attempt || !((_this$attemptAccessIn = this.attemptAccessInfo) !== null && _this$attemptAccessIn !== void 0 && _this$attemptAccessIn.endtime) || this.attemptAccessInfo.endtime < 0) {\n      return;\n    }\n    // Quiz has an end time. Check if time left should be shown.\n    const shouldShowTime = AddonModQuiz.shouldShowTimeLeft(this.quizAccessInfo.activerulenames, this.attempt, this.attemptAccessInfo.endtime);\n    if (shouldShowTime) {\n      this.endTime = this.attemptAccessInfo.endtime;\n    } else {\n      delete this.endTime;\n    }\n  }\n  /**\n   * Remove timer info.\n   */\n  clearTimer() {\n    delete this.endTime;\n  }\n  /**\n   * Load a page questions.\n   *\n   * @param page The page to load.\n   * @returns Promise resolved when done.\n   */\n  loadPage(page) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this7.quiz || !_this7.attempt) {\n        return;\n      }\n      // @todo MOBILE-4350: This is called before getting the attempt data in sequential quizzes as a workaround for a bug\n      // in the LMS. Once the bug has been fixed, this should be reverted.\n      if (_this7.isSequential) {\n        yield _this7.logViewPage(page);\n      }\n      const data = yield AddonModQuiz.getAttemptData(_this7.attempt.id, page, _this7.preflightData, {\n        cmId: _this7.quiz.coursemodule,\n        readingStrategy: _this7.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n      // Update attempt, status could change during the execution.\n      _this7.attempt = data.attempt;\n      _this7.attempt.currentpage = page;\n      _this7.questions = data.questions;\n      _this7.nextPage = data.nextpage;\n      _this7.previousPage = _this7.isSequential ? -1 : page - 1;\n      _this7.showSummary = false;\n      _this7.questions.forEach(question => {\n        // Get the readable mark for each question.\n        question.readableMark = AddonModQuizHelper.getQuestionMarkFromHtml(question.html);\n        // Extract the question info box.\n        CoreQuestionHelper.extractQuestionInfoBox(question, '.info');\n        // Check if the question is blocked. If it is, treat it as a description question.\n        if (AddonModQuiz.isQuestionBlocked(question)) {\n          question.type = 'description';\n        }\n      });\n      // Mark the page as viewed.\n      if (!_this7.isSequential) {\n        // @todo MOBILE-4350: Undo workaround.\n        yield _this7.logViewPage(page);\n      }\n      // Start looking for changes.\n      _this7.autoSave.startCheckChangesProcess(_this7.quiz, _this7.attempt, _this7.preflightData, _this7.offline);\n    })();\n  }\n  /**\n   * Log view a page.\n   *\n   * @param page Page viewed.\n   */\n  logViewPage(page) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this8.quiz || !_this8.attempt) {\n        return;\n      }\n      yield CoreUtils.ignoreErrors(AddonModQuiz.logViewAttempt(_this8.attempt.id, page, _this8.preflightData, _this8.offline));\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'mod_quiz_view_attempt',\n        name: _this8.quiz.name,\n        data: {\n          id: _this8.attempt.id,\n          quizid: _this8.quiz.id,\n          page,\n          category: 'quiz'\n        },\n        url: `/mod/quiz/attempt.php?attempt=${_this8.attempt.id}&cmid=${_this8.cmId}` + (page > 0 ? `&page=${page}` : '')\n      });\n    })();\n  }\n  /**\n   * Log view summary.\n   */\n  logViewSummary() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this9.quiz || !_this9.attempt) {\n        return;\n      }\n      yield CoreUtils.ignoreErrors(AddonModQuiz.logViewAttemptSummary(_this9.attempt.id, _this9.preflightData, _this9.quiz.id));\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'mod_quiz_view_attempt_summary',\n        name: _this9.quiz.name,\n        data: {\n          id: _this9.attempt.id,\n          quizid: _this9.quiz.id,\n          category: 'quiz'\n        },\n        url: `/mod/quiz/summary.php?attempt=${_this9.attempt.id}&cmid=${_this9.cmId}`\n      });\n    })();\n  }\n  /**\n   * Refresh attempt data.\n   */\n  refreshAttempt() {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this10.quiz) {\n        return;\n      }\n      const attempts = yield AddonModQuiz.getUserAttempts(_this10.quiz.id, {\n        cmId: _this10.quiz.coursemodule,\n        readingStrategy: _this10.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n\n      _this10.attempt = attempts.find(attempt => {\n        var _this10$attempt;\n        return attempt.id === ((_this10$attempt = _this10.attempt) === null || _this10$attempt === void 0 ? void 0 : _this10$attempt.id);\n      });\n    })();\n  }\n  /**\n   * Load attempt summary.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadSummary() {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this11.quiz || !_this11.attempt) {\n        return;\n      }\n      _this11.summaryQuestions = [];\n      _this11.summaryQuestions = yield AddonModQuiz.getAttemptSummary(_this11.attempt.id, _this11.preflightData, {\n        cmId: _this11.quiz.coursemodule,\n        loadLocal: _this11.offline,\n        readingStrategy: _this11.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n\n      _this11.showSummary = true;\n      _this11.canReturn = _this11.attempt.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS && !_this11.attempt.finishedOffline;\n      _this11.preventSubmitMessages = AddonModQuiz.getPreventSubmitMessages(_this11.summaryQuestions);\n      _this11.dueDateWarning = AddonModQuiz.getAttemptDueDateWarning(_this11.quiz, _this11.attempt);\n      _this11.logViewSummary();\n    })();\n  }\n  /**\n   * Load data to navigate the questions using the navigation modal.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadNavigation() {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      var _this12$quiz;\n      if (!_this12.attempt) {\n        return;\n      }\n      // We use the attempt summary to build the navigation because it contains all the questions.\n      _this12.navigation = yield AddonModQuiz.getAttemptSummary(_this12.attempt.id, _this12.preflightData, {\n        cmId: (_this12$quiz = _this12.quiz) === null || _this12$quiz === void 0 ? void 0 : _this12$quiz.coursemodule,\n        loadLocal: _this12.offline,\n        readingStrategy: _this12.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n\n      _this12.navigation.forEach(question => {\n        question.stateClass = CoreQuestionHelper.getQuestionStateClass(question.state || '');\n      });\n    })();\n  }\n  /**\n   * Open the navigation modal.\n   *\n   * @returns Promise resolved when done.\n   */\n  openNavigation() {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      var _this13$attempt;\n      if (_this13.reloadNavigation) {\n        // Some data has changed, reload the navigation.\n        const modal = yield CoreDomUtils.showModalLoading();\n        yield CoreUtils.ignoreErrors(_this13.loadNavigation());\n        modal.dismiss();\n        _this13.reloadNavigation = false;\n      }\n      // Create the navigation modal.\n      const modalData = yield CoreDomUtils.openSideModal({\n        component: AddonModQuizNavigationModalComponent,\n        componentProps: {\n          navigation: _this13.navigation,\n          summaryShown: _this13.showSummary,\n          currentPage: (_this13$attempt = _this13.attempt) === null || _this13$attempt === void 0 ? void 0 : _this13$attempt.currentpage,\n          isReview: false\n        }\n      });\n      if (!modalData) {\n        return;\n      }\n      _this13.changePage(modalData.page, true, modalData.slot);\n    })();\n  }\n  /**\n   * Prepare the answers to be sent for the attempt.\n   *\n   * @param componentId Component ID.\n   * @returns Promise resolved with the answers.\n   */\n  prepareAnswers(componentId) {\n    return CoreQuestionHelper.prepareAnswers(this.questions, this.getAnswers(), this.offline, this.component, componentId);\n  }\n  /**\n   * Process attempt.\n   *\n   * @param userFinish Whether the user clicked to finish the attempt.\n   * @param timeUp Whether the quiz time is up.\n   * @param retrying Whether we're retrying the change.\n   * @returns Promise resolved when done.\n   */\n  processAttempt(userFinish, timeUp, retrying) {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this14.quiz || !_this14.attempt) {\n        return;\n      }\n      // Get the answers to send.\n      let answers = {};\n      if (!_this14.showSummary) {\n        answers = yield _this14.prepareAnswers(_this14.quiz.coursemodule);\n      }\n      try {\n        // Send the answers.\n        yield AddonModQuiz.processAttempt(_this14.quiz, _this14.attempt, answers, _this14.preflightData, userFinish, timeUp, _this14.offline);\n      } catch (error) {\n        if (!error || error.errorcode != 'submissionoutofsequencefriendlymessage') {\n          throw error;\n        }\n        try {\n          // There was an error with the sequence check. Try to ammend it.\n          yield _this14.fixSequenceChecks();\n        } catch (_unused) {\n          throw error;\n        }\n        if (retrying) {\n          // We're already retrying, don't send the data again because it could cause an infinite loop.\n          throw error;\n        }\n        // Sequence checks updated, try to send the data again.\n        return _this14.processAttempt(userFinish, timeUp, true);\n      }\n      // Answers saved, cancel auto save.\n      _this14.autoSave.cancelAutoSave();\n      _this14.autoSave.hideAutoSaveError();\n      if (_this14.formElement) {\n        CoreForms.triggerFormSubmittedEvent(_this14.formElement, !_this14.offline, CoreSites.getCurrentSiteId());\n      }\n      return CoreQuestionHelper.clearTmpData(_this14.questions, _this14.component, _this14.quiz.coursemodule);\n    })();\n  }\n  /**\n   * Scroll to a certain question.\n   *\n   * @param slot Slot of the question to scroll to.\n   */\n  scrollToQuestion(slot) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.nextTick();\n      yield CoreDirectivesRegistry.waitDirectivesReady(_this15.elementRef.nativeElement, 'core-question');\n      yield CoreDom.scrollToElement(_this15.elementRef.nativeElement, '#addon-mod_quiz-question-' + slot);\n    })();\n  }\n  /**\n   * Show connection error.\n   *\n   * @param ev Click event.\n   */\n  showConnectionError(ev) {\n    this.autoSave.showAutoSaveError(ev);\n  }\n  /**\n   * Convenience function to start the player.\n   */\n  start() {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this16.loaded = false;\n        if (!_this16.quizDataLoaded) {\n          // Fetch data.\n          yield _this16.fetchData();\n          _this16.quizDataLoaded = true;\n        }\n        // Quiz data has been loaded, try to start or continue.\n        yield _this16.startOrContinueAttempt();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquiz', true);\n      } finally {\n        _this16.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Start or continue an attempt.\n   *\n   * @returns Promise resolved when done.\n   */\n  startOrContinueAttempt() {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this17.quiz || !_this17.quizAccessInfo) {\n        return;\n      }\n      let attempt = _this17.newAttempt ? undefined : _this17.lastAttempt;\n      // Get the preflight data and start attempt if needed.\n      attempt = yield AddonModQuizHelper.getAndCheckPreflightData(_this17.quiz, _this17.quizAccessInfo, _this17.preflightData, attempt, _this17.offline, false, 'addon.mod_quiz.startattempt');\n      // Re-fetch attempt access information with the right attempt (might have changed because a new attempt was created).\n      _this17.attemptAccessInfo = yield AddonModQuiz.getAttemptAccessInformation(_this17.quiz.id, attempt.id, {\n        cmId: _this17.quiz.coursemodule,\n        readingStrategy: _this17.offline ? 1 /* CoreSitesReadingStrategy.PREFER_CACHE */ : 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */\n      });\n\n      _this17.attempt = attempt;\n      yield _this17.loadNavigation();\n      if (_this17.attempt.state != AddonModQuizProvider.ATTEMPT_OVERDUE && !_this17.attempt.finishedOffline) {\n        var _this17$attempt$curre;\n        // Attempt not overdue and not finished in offline, load page.\n        yield _this17.loadPage((_this17$attempt$curre = _this17.attempt.currentpage) !== null && _this17$attempt$curre !== void 0 ? _this17$attempt$curre : 0);\n        _this17.initTimer();\n      } else {\n        // Attempt is overdue or finished in offline, we can only load the summary.\n        yield _this17.loadSummary();\n      }\n    })();\n  }\n  /**\n   * Quiz time has finished.\n   */\n  timeUp() {\n    if (this.timeUpCalled) {\n      return;\n    }\n    this.timeUpCalled = true;\n    this.finishAttempt(false, true);\n  }\n  /**\n   * Stop auto-saving answers.\n   */\n  stopAutoSave() {\n    var _this$autoSaveErrorSu;\n    this.autoSave.cancelAutoSave();\n    this.autoSave.stopCheckChangesProcess();\n    (_this$autoSaveErrorSu = this.autoSaveErrorSubscription) === null || _this$autoSaveErrorSu === void 0 || _this$autoSaveErrorSu.unsubscribe();\n  }\n}\n_class = AddonModQuizPlayerPage;\n_class.ɵfac = function AddonModQuizPlayerPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-quiz-player\"]],\n  viewQuery: function AddonModQuizPlayerPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(IonContent, 5);\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(CoreQuestionComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.questionComponents = _t);\n    }\n  },\n  decls: 22,\n  vars: 17,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\", 4, \"ngIf\"], [\"slot\", \"end\"], [\"fill\", \"clear\", \"id\", \"addon-mod_quiz-connection-error-button\", \"aria-haspopup\", \"dialog\", 3, \"hidden\", \"click\"], [\"name\", \"fas-circle-exclamation\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"click\", 4, \"ngIf\"], [3, \"endTime\", \"timerText\", \"hiddable\", \"finished\", 4, \"ngIf\"], [1, \"limited-width\"], [1, \"has-spacer\", 3, \"hideUntil\"], [\"expand\", \"block\", \"class\", \"ion-margin\", 3, \"click\", 4, \"ngIf\"], [\"name\", \"addon-mod_quiz-player-form\", 4, \"ngIf\"], [\"class\", \"spacer-top\", 4, \"ngIf\"], [\"class\", \"addon-mod_quiz-table\", 4, \"ngIf\"], [4, \"ngIf\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\", 4, \"ngIf\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [3, \"click\"], [\"name\", \"fas-bookmark\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"endTime\", \"timerText\", \"hiddable\", \"finished\"], [\"expand\", \"block\", 1, \"ion-margin\", 3, \"click\"], [\"name\", \"addon-mod_quiz-player-form\"], [\"quizForm\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"id\"], [1, \"ion-text-wrap\"], [\"class\", \"inline\", 4, \"ngIf\"], [\"slot\", \"end\", \"class\", \"ion-text-wrap ion-margin-horizontal addon-mod_quiz-question-note\", 4, \"ngIf\"], [\"contextLevel\", \"module\", 1, \"ion-text-wrap\", 3, \"question\", \"component\", \"componentId\", \"attemptId\", \"usageId\", \"offlineEnabled\", \"contextInstanceId\", \"courseId\", \"preferredBehaviour\", \"review\", \"onAbort\", \"buttonClicked\"], [1, \"inline\"], [\"slot\", \"end\", 1, \"ion-text-wrap\", \"ion-margin-horizontal\", \"addon-mod_quiz-question-note\"], [\"class\", \"block\", 4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [1, \"block\"], [3, \"innerHTML\"], [1, \"spacer-top\"], [\"expand\", \"block\", \"fill\", \"outline\", 1, \"ion-text-wrap\", 3, \"click\"], [\"name\", \"fas-chevron-left\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"expand\", \"block\", \"class\", \"ion-text-wrap\", 3, \"click\", 4, \"ngIf\"], [\"expand\", \"block\", 1, \"ion-text-wrap\", 3, \"click\"], [\"name\", \"fas-chevron-right\", \"slot\", \"end\", \"aria-hidden\", \"true\"], [1, \"addon-mod_quiz-table\"], [1, \"ion-align-items-center\"], [\"size\", \"3\", 1, \"ion-text-center\", \"ion-hide-md-down\"], [\"size\", \"3\", 1, \"ion-text-center\", \"ion-hide-md-up\"], [\"size\", \"9\", 1, \"ion-text-center\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [3, \"endTime\", \"timerText\", \"finished\", 4, \"ngIf\"], [3, \"detail\", \"button\", \"click\", 4, \"ngIf\"], [3, \"detail\", \"button\", \"click\"], [\"size\", \"3\", 1, \"ion-text-center\", \"ion-text-wrap\"], [\"size\", \"9\", 1, \"ion-text-center\", \"ion-text-wrap\"], [3, \"endTime\", \"timerText\", \"finished\"], [1, \"item-heading\"], [\"expand\", \"block\", \"class\", \"ion-margin ion-text-wrap\", \"fill\", \"outline\", 3, \"click\", 4, \"ngIf\"], [\"expand\", \"block\", \"fill\", \"outline\", 1, \"ion-margin\", \"ion-text-wrap\", 3, \"click\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\"], [1, \"list-item-limited-width\"], [\"expand\", \"block\", \"class\", \"ion-margin ion-text-wrap\", \"core-link\", \"\", 3, \"href\", \"showBrowserWarning\", 4, \"ngIf\"], [\"expand\", \"block\", \"class\", \"ion-margin ion-text-wrap\", 3, \"click\", 4, \"ngIf\"], [\"expand\", \"block\", \"core-link\", \"\", 1, \"ion-margin\", \"ion-text-wrap\", 3, \"href\", \"showBrowserWarning\"], [\"name\", \"fas-up-right-from-square\", \"slot\", \"end\", \"aria-hidden\", \"true\"], [\"expand\", \"block\", 1, \"ion-margin\", \"ion-text-wrap\", 3, \"click\"]],\n  template: function AddonModQuizPlayerPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtemplate(7, AddonModQuizPlayerPage_core_format_text_7_Template, 1, 3, \"core-format-text\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"ion-buttons\", 3)(9, \"ion-button\", 4);\n      i0.ɵɵlistener(\"click\", function AddonModQuizPlayerPage_Template_ion_button_click_9_listener($event) {\n        return ctx.showConnectionError($event);\n      });\n      i0.ɵɵpipe(10, \"translate\");\n      i0.ɵɵelement(11, \"ion-icon\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AddonModQuizPlayerPage_ion_button_12_Template, 3, 3, \"ion-button\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, AddonModQuizPlayerPage_core_timer_13_Template, 2, 5, \"core-timer\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-content\", 8)(15, \"core-loading\", 9);\n      i0.ɵɵtemplate(16, AddonModQuizPlayerPage_ion_button_16_Template, 3, 3, \"ion-button\", 10);\n      i0.ɵɵtemplate(17, AddonModQuizPlayerPage_form_17_Template, 3, 1, \"form\", 11);\n      i0.ɵɵtemplate(18, AddonModQuizPlayerPage_ion_row_18_Template, 3, 2, \"ion-row\", 12);\n      i0.ɵɵtemplate(19, AddonModQuizPlayerPage_ion_card_19_Template, 23, 13, \"ion-card\", 13);\n      i0.ɵɵtemplate(20, AddonModQuizPlayerPage_ion_card_20_Template, 6, 4, \"ion-card\", 14);\n      i0.ɵɵtemplate(21, AddonModQuizPlayerPage_div_21_Template, 4, 2, \"div\", 15);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 13, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.autoSaveError);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(10, 15, \"addon.mod_quiz.connectionerror\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.navigation.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded && ctx.endTime && ctx.questions.length && !ctx.quizAborted && !ctx.showSummary);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.attempt);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.questions.length && !ctx.quizAborted && !ctx.showSummary);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.questions.length && !ctx.quizAborted && !ctx.showSummary);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.quizAborted && ctx.showSummary && ctx.summaryQuestions.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.attempt && (!ctx.questions.length && !ctx.showSummary || ctx.quizAborted));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.quizAborted && ctx.showSummary && ctx.summaryQuestions.length && ctx.loaded);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreLoadingComponent, i3.CoreTimerComponent, i4.CoreFaIconDirective, i5.CoreFormatTextDirective, i6.CoreLinkDirective, i7.CoreCollapsibleFooterDirective, i8.CoreContentDirective, i9.CoreUpdateNonReactiveAttributesDirective, i10.ɵNgNoValidate, i10.NgControlStatusGroup, i10.NgForm, i11.IonButton, i11.IonButtons, i11.IonCard, i11.IonCardHeader, i11.IonCardTitle, i11.IonCol, i11.IonContent, i11.IonHeader, i11.IonIcon, i11.IonItem, i11.IonItemDivider, i11.IonLabel, i11.IonRow, i11.IonTitle, i11.IonToolbar, i11.IonBackButton, i12.CoreQuestionComponent, i13.TranslatePipe],\n  styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n[_nghost-%COMP%]   .addon-mod_quiz-question-note[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin-top: 2px;\\n  margin-bottom: 2px;\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-0[_ngcontent-%COMP%] {\\n  --timer-background: #ca3120;\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-1[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.9333333333);\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-2[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.8666666667);\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-3[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.8);\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-4[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.7333333333);\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-5[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.6666666667);\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-6[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.6);\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-7[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.5333333333);\\n  --timer-text-color: var(--white);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-8[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.4666666667);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-9[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.4);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-10[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.3333333333);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-11[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.2666666667);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-12[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.2);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-13[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.1333333333);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-14[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0.0666666667);\\n}\\n[_nghost-%COMP%]   core-timer.core-timer-timeleft-15[_ngcontent-%COMP%] {\\n  --timer-background: rgba(202, 49, 32, 0);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"names":["IonContent","CoreQuestionComponent","CoreQuestionHelper","CoreNavigator","CoreSites","CoreSync","CoreDomUtils","CoreUtils","ModalController","Translate","CoreEvents","AddonModQuizAutoSave","AddonModQuizNavigationModalComponent","AddonModQuiz","AddonModQuizProvider","AddonModQuizHelper","AddonModQuizSync","CoreForms","CoreDom","CoreTime","CoreDirectivesRegistry","CoreWSError","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelement","ɵɵproperty","ctx_r0","quiz","name","coursemodule","courseId","ɵɵelementStart","ɵɵlistener","AddonModQuizPlayerPage_ion_button_12_Template_ion_button_click_0_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","openNavigation","ɵɵelementEnd","ɵɵattribute","ɵɵpipeBind1","AddonModQuizPlayerPage_core_timer_13_Template_core_timer_finished_0_listener","_r12","ctx_r11","timeUp","ctx_r2","endTime","AddonModQuizPlayerPage_ion_button_16_Template_ion_button_click_0_listener","_r14","ctx_r13","start","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵpureFunction1","_c1","question_r17","questionnumber","ɵɵtextInterpolate","status","readableMark","ɵɵsanitizeHtml","ɵɵtemplate","AddonModQuizPlayerPage_form_17_div_2_div_6_p_1_Template","AddonModQuizPlayerPage_form_17_div_2_div_6_p_2_Template","AddonModQuizPlayerPage_form_17_div_2_h2_4_Template","AddonModQuizPlayerPage_form_17_div_2_h2_5_Template","AddonModQuizPlayerPage_form_17_div_2_div_6_Template","AddonModQuizPlayerPage_form_17_div_2_Template_core_question_onAbort_7_listener","_r28","ctx_r27","abortQuiz","AddonModQuizPlayerPage_form_17_div_2_Template_core_question_buttonClicked_7_listener","$event","ctx_r29","behaviourButtonClicked","ɵɵpropertyInterpolate1","slot","type","ctx_r16","component","cmId","attempt","id","uniqueid","offline","preferredbehaviour","AddonModQuizPlayerPage_form_17_div_2_Template","ctx_r4","questions","AddonModQuizPlayerPage_ion_row_18_ion_col_1_Template_ion_button_click_1_listener","_r33","ctx_r32","changePage","previousPage","AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_1_Template_ion_button_click_0_listener","_r37","ctx_r36","nextPage","AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_2_Template_ion_button_click_0_listener","_r39","ctx_r38","AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_1_Template","AddonModQuizPlayerPage_ion_row_18_ion_col_2_ion_button_2_Template","ctx_r31","AddonModQuizPlayerPage_ion_row_18_ion_col_1_Template","AddonModQuizPlayerPage_ion_row_18_ion_col_2_Template","ctx_r5","AddonModQuizPlayerPage_ion_card_19_ng_container_19_ion_item_1_Template_ion_item_click_0_listener","_r48","question_r44","$implicit","ctx_r46","page","ctx_r45","isSequential","canReturn","ɵɵelementContainerStart","AddonModQuizPlayerPage_ion_card_19_ng_container_19_ion_item_1_Template","ɵɵelementContainerEnd","ctx_r41","dueDateWarning","AddonModQuizPlayerPage_ion_card_19_core_timer_21_Template_core_timer_finished_0_listener","_r51","ctx_r50","ctx_r42","message_r53","AddonModQuizPlayerPage_ion_card_19_ion_item_22_p_5_Template","ctx_r43","preventSubmitMessages","AddonModQuizPlayerPage_ion_card_19_ng_container_19_Template","AddonModQuizPlayerPage_ion_card_19_ion_item_20_Template","AddonModQuizPlayerPage_ion_card_19_core_timer_21_Template","AddonModQuizPlayerPage_ion_card_19_ion_item_22_Template","ctx_r6","summaryQuestions","length","AddonModQuizPlayerPage_ion_card_20_ion_button_5_Template_ion_button_click_0_listener","_r56","ctx_r55","currentpage","AddonModQuizPlayerPage_ion_card_20_ion_button_5_Template","ctx_r7","ctx_r57","moduleUrl","AddonModQuizPlayerPage_div_21_ion_button_3_Template_ion_button_click_0_listener","_r60","ctx_r59","finishAttempt","AddonModQuizPlayerPage_div_21_ion_button_2_Template","AddonModQuizPlayerPage_div_21_ion_button_3_Template","ctx_r8","finishedOffline","AddonModQuizPlayerPage","constructor","changeDetector","elementRef","COMPONENT","loaded","quizAborted","navigation","showSummary","autoSaveError","preflightData","newAttempt","quizDataLoaded","timeUpCalled","forceLeave","reloadNavigation","ngOnInit","getRequiredRouteNumberParam","getRouteParam","error","showErrorModal","back","autoSave","autoSaveErrorSubscription","onError","subscribe","detectChanges","ngOnDestroy","stopAutoSave","unblockOperation","canLeave","_this","_asyncToGenerator","modal","showModalLoading","processAttempt","dismiss","showConfirm","instant","triggerFormCancelledEvent","formElement","getCurrentSiteId","ionViewWillLeave","getTop","button","_this2","_this2$content","_this2$content2","answers","prepareAnswers","value","scrollElement","content","getScrollElement","scrollTop","scrollToTop","_this2$attempt$curren","loadPage","setTimeout","_this2$content3","scrollToPoint","showErrorModalDefault","_modal","fromModal","_this3","_this3$content","state","ATTEMPT_OVERDUE","undefined","scrollToQuestion","stopCheckChangesProcess","loadSummary","startCheckChangesProcess","fetchData","_this4","getQuiz","blockOperation","waitForSync","isNavigationSequential","isQuizOffline","isLastAttemptOfflineUnfinished","timelimit","readableTimeLimit","formatTime","quizAccessInfo","getQuizAccessInformation","readingStrategy","attempts","getUserAttempts","lastAttempt","setAttemptCalculatedData","isAttemptFinished","userFinish","_this5","ATTEMPT_IN_PROGRESS","trigger","ATTEMPT_FINISHED_EVENT","quizId","attemptId","synced","ACTIVITY_DATA_SENT","module","graceperiod","clearTimer","refreshAttempt","then","_ref","alert","onWillDismiss","errorcode","_x","apply","arguments","_modal2","fixSequenceChecks","_this6","_this6$attempt$curren","_this6$quiz","_this6$questionCompon","data","getAttemptData","newSequenceChecks","forEach","question","sequenceCheck","getQuestionSequenceCheckFromHtml","html","questionComponents","updateSequenceCheck","getAnswers","getAnswersFromForm","document","forms","initTimer","_this$attemptAccessIn","attemptAccessInfo","endtime","shouldShowTime","shouldShowTimeLeft","activerulenames","_this7","logViewPage","nextpage","getQuestionMarkFromHtml","extractQuestionInfoBox","isQuestionBlocked","_this8","ignoreErrors","logViewAttempt","logEvent","VIEW_ITEM","ws","quizid","category","url","logViewSummary","_this9","logViewAttemptSummary","_this10","find","_this10$attempt","_this11","getAttemptSummary","loadLocal","getPreventSubmitMessages","getAttemptDueDateWarning","loadNavigation","_this12","_this12$quiz","stateClass","getQuestionStateClass","_this13","_this13$attempt","modalData","openSideModal","componentProps","summaryShown","currentPage","isReview","componentId","retrying","_this14","_unused","cancelAutoSave","hideAutoSaveError","triggerFormSubmittedEvent","clearTmpData","_this15","nextTick","waitDirectivesReady","nativeElement","scrollToElement","showConnectionError","ev","showAutoSaveError","_this16","startOrContinueAttempt","_this17","getAndCheckPreflightData","getAttemptAccessInformation","_this17$attempt$curre","_this$autoSaveErrorSu","unsubscribe","ɵɵdirectiveInject","ChangeDetectorRef","ElementRef","selectors","viewQuery","AddonModQuizPlayerPage_Query","rf","ctx","AddonModQuizPlayerPage_core_format_text_7_Template","AddonModQuizPlayerPage_Template_ion_button_click_9_listener","AddonModQuizPlayerPage_ion_button_12_Template","AddonModQuizPlayerPage_core_timer_13_Template","AddonModQuizPlayerPage_ion_button_16_Template","AddonModQuizPlayerPage_form_17_Template","AddonModQuizPlayerPage_ion_row_18_Template","AddonModQuizPlayerPage_ion_card_19_Template","AddonModQuizPlayerPage_ion_card_20_Template","AddonModQuizPlayerPage_div_21_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/pages/player/player.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/pages/player/player.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ChangeDetectorRef, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { CoreIonLoadingElement } from '@classes/ion-loading';\nimport { CoreQuestionComponent } from '@features/question/components/question/question';\nimport { CoreQuestionQuestionParsed, CoreQuestionsAnswers } from '@features/question/services/question';\nimport { CoreQuestionBehaviourButton, CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModQuizAutoSave } from '../../classes/auto-save';\nimport {\n    AddonModQuizNavigationModalComponent,\n    AddonModQuizNavigationModalReturn,\n    AddonModQuizNavigationQuestion,\n} from '../../components/navigation-modal/navigation-modal';\nimport {\n    AddonModQuiz,\n    AddonModQuizAttemptWSData,\n    AddonModQuizGetAttemptAccessInformationWSResponse,\n    AddonModQuizGetQuizAccessInformationWSResponse,\n    AddonModQuizProvider,\n    AddonModQuizQuizWSData,\n} from '../../services/quiz';\nimport { AddonModQuizAttempt, AddonModQuizHelper } from '../../services/quiz-helper';\nimport { AddonModQuizSync } from '../../services/quiz-sync';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreForms } from '@singletons/form';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreTime } from '@singletons/time';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\nimport { CoreWSError } from '@classes/errors/wserror';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that allows attempting a quiz.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-player',\n    templateUrl: 'player.html',\n    styleUrls: ['player.scss'],\n})\nexport class AddonModQuizPlayerPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content?: IonContent;\n    @ViewChildren(CoreQuestionComponent) questionComponents?: QueryList<CoreQuestionComponent>;\n    @ViewChild('quizForm') formElement?: ElementRef;\n\n    quiz?: AddonModQuizQuizWSData; // The quiz the attempt belongs to.\n    attempt?: AddonModQuizAttempt; // The attempt being attempted.\n    moduleUrl?: string; // URL to the module in the site.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    loaded = false; // Whether data has been loaded.\n    quizAborted = false; // Whether the quiz was aborted due to an error.\n    offline = false; // Whether the quiz is being attempted in offline mode.\n    navigation: AddonModQuizNavigationQuestion[] = []; // List of questions to navigate them.\n    questions: QuizQuestion[] = []; // Questions of the current page.\n    nextPage = -2; // Next page.\n    previousPage = -1; // Previous page.\n    showSummary = false; // Whether the attempt summary should be displayed.\n    summaryQuestions: CoreQuestionQuestionParsed[] = []; // The questions to display in the summary.\n    canReturn = false; // Whether the user can return to a page after seeing the summary.\n    preventSubmitMessages: string[] = []; // List of messages explaining why the quiz cannot be submitted.\n    endTime?: number; // The time when the attempt must be finished.\n    autoSaveError = false; // Whether there's been an error in auto-save.\n    isSequential = false; // Whether quiz navigation is sequential.\n    readableTimeLimit?: string; // Time limit in a readable format.\n    dueDateWarning?: string; // Warning about due date.\n    courseId!: number; // The course ID the quiz belongs to.\n    cmId!: number; // Course module ID.\n\n    protected preflightData: Record<string, string> = {}; // Preflight data to attempt the quiz.\n    protected quizAccessInfo?: AddonModQuizGetQuizAccessInformationWSResponse; // Quiz access information.\n    protected attemptAccessInfo?: AddonModQuizGetAttemptAccessInformationWSResponse; // Attempt access info.\n    protected lastAttempt?: AddonModQuizAttemptWSData; // Last user attempt before a new one is created (if needed).\n    protected newAttempt = false; // Whether the user is starting a new attempt.\n    protected quizDataLoaded = false; // Whether the quiz data has been loaded.\n    protected timeUpCalled = false; // Whether the time up function has been called.\n    protected autoSave!: AddonModQuizAutoSave; // Class to auto-save answers every certain time.\n    protected autoSaveErrorSubscription?: Subscription; // To be notified when an error happens in auto-save.\n    protected forceLeave = false; // If true, don't perform any check when leaving the view.\n    protected reloadNavigation = false; // Whether navigation needs to be reloaded because some data was sent to server.\n\n    constructor(\n        protected changeDetector: ChangeDetectorRef,\n        protected elementRef: ElementRef,\n    ) {\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.moduleUrl = CoreNavigator.getRouteParam('moduleUrl');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        // Create the auto save instance.\n        this.autoSave = new AddonModQuizAutoSave(\n            'addon-mod_quiz-player-form',\n            '#addon-mod_quiz-connection-error-button',\n        );\n\n        // Start the player when the page is loaded.\n        this.start();\n\n        // Listen for errors on auto-save.\n        this.autoSaveErrorSubscription = this.autoSave.onError().subscribe((error) => {\n            this.autoSaveError = error;\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.stopAutoSave();\n\n        if (this.quiz) {\n            // Unblock the quiz so it can be synced.\n            CoreSync.unblockOperation(AddonModQuizProvider.COMPONENT, this.quiz.id);\n        }\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (this.forceLeave || this.quizAborted || !this.questions.length || this.showSummary) {\n            return true;\n        }\n\n        // Save answers.\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await this.processAttempt(false, false);\n        } catch (error) {\n            // Save attempt failed. Show confirmation.\n            modal.dismiss();\n\n            await CoreDomUtils.showConfirm(Translate.instant('addon.mod_quiz.confirmleavequizonerror'));\n\n            CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n        } finally {\n            modal.dismiss();\n        }\n\n        return true;\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    async ionViewWillLeave(): Promise<void> {\n        // Close any modal if present.\n        const modal = await ModalController.getTop();\n\n        modal?.dismiss();\n    }\n\n    /**\n     * Abort the quiz.\n     */\n    abortQuiz(): void {\n        this.quizAborted = true;\n    }\n\n    /**\n     * A behaviour button in a question was clicked (Check, Redo, ...).\n     *\n     * @param button Clicked button.\n     */\n    async behaviourButtonClicked(button: CoreQuestionBehaviourButton): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            // Confirm that the user really wants to do it.\n            await CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            // Get the answers.\n            const answers = await this.prepareAnswers(this.quiz.coursemodule);\n\n            // Add the clicked button data.\n            answers[button.name] = button.value;\n\n            // Behaviour checks are always in online.\n            await AddonModQuiz.processAttempt(this.quiz, this.attempt, answers, this.preflightData);\n\n            this.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n\n            // Reload the current page.\n            const scrollElement = await this.content?.getScrollElement();\n            const scrollTop = scrollElement?.scrollTop || -1;\n\n            this.loaded = false;\n            this.content?.scrollToTop(); // Scroll top so the spinner is seen.\n\n            try {\n                await this.loadPage(this.attempt.currentpage ?? 0);\n            } finally {\n                this.loaded = true;\n                if (scrollTop != -1) {\n                    // Wait for content to be rendered.\n                    setTimeout(() => {\n                        this.content?.scrollToPoint(0, scrollTop);\n                    }, 50);\n                }\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error performing action.');\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Change the current page. If slot is supplied, try to scroll to that question.\n     *\n     * @param page Page to load. -1 means summary.\n     * @param fromModal Whether the page was selected using the navigation modal.\n     * @param slot Slot of the question to scroll to.\n     * @returns Promise resolved when done.\n     */\n    async changePage(page: number, fromModal?: boolean, slot?: number): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        if (page != -1 && (this.attempt.state == AddonModQuizProvider.ATTEMPT_OVERDUE || this.attempt.finishedOffline)) {\n            // We can't load a page if overdue or the local attempt is finished.\n            return;\n        } else if (page == this.attempt.currentpage && !this.showSummary && slot !== undefined) {\n            // Navigating to a question in the current page.\n            await this.scrollToQuestion(slot);\n\n            return;\n        } else if ((page == this.attempt.currentpage && !this.showSummary) || (fromModal && this.isSequential && page != -1)) {\n            // If the user is navigating to the current page we do nothing.\n            // Also, in sequential quizzes we don't allow navigating using the modal except for finishing the quiz (summary).\n            return;\n        } else if (page === -1 && this.showSummary) {\n            // Summary already shown.\n            return;\n        }\n\n        this.content?.scrollToTop();\n\n        // First try to save the attempt data. We only save it if we're not seeing the summary.\n        if (!this.showSummary) {\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            try {\n                await this.processAttempt(false, false);\n\n                modal.dismiss();\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true);\n                modal.dismiss();\n\n                return;\n            }\n\n            this.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n        }\n\n        this.loaded = false;\n\n        try {\n            // Attempt data successfully saved, load the page or summary.\n            // Stop checking for changes during page change.\n            this.autoSave.stopCheckChangesProcess();\n\n            if (page === -1) {\n                await this.loadSummary();\n            } else {\n                await this.loadPage(page);\n            }\n        } catch (error) {\n            // If the user isn't seeing the summary, start the check again.\n            if (!this.showSummary && this.quiz) {\n                this.autoSave.startCheckChangesProcess(this.quiz, this.attempt, this.preflightData, this.offline);\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n        } finally {\n            this.loaded = true;\n\n            if (slot !== undefined) {\n                // Scroll to the question.\n                await this.scrollToQuestion(slot);\n            }\n        }\n    }\n\n    /**\n     * Convenience function to get the quiz data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        this.quiz = await AddonModQuiz.getQuiz(this.courseId, this.cmId);\n\n        // Block the quiz so it cannot be synced.\n        CoreSync.blockOperation(AddonModQuizProvider.COMPONENT, this.quiz.id);\n\n        // Wait for any ongoing sync to finish. We won't sync a quiz while it's being played.\n        await AddonModQuizSync.waitForSync(this.quiz.id);\n\n        this.isSequential = AddonModQuiz.isNavigationSequential(this.quiz);\n\n        if (AddonModQuiz.isQuizOffline(this.quiz)) {\n            // Quiz supports offline.\n            this.offline = true;\n        } else {\n            // Quiz doesn't support offline right now, but maybe it did and then the setting was changed.\n            // If we have an unfinished offline attempt then we'll use offline mode.\n            this.offline = await AddonModQuiz.isLastAttemptOfflineUnfinished(this.quiz);\n        }\n\n        if (this.quiz.timelimit && this.quiz.timelimit > 0) {\n            this.readableTimeLimit = CoreTime.formatTime(this.quiz.timelimit);\n        }\n\n        // Get access information for the quiz.\n        this.quizAccessInfo = await AddonModQuiz.getQuizAccessInformation(this.quiz.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        // Get user attempts to determine last attempt.\n        const attempts = await AddonModQuiz.getUserAttempts(this.quiz.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        if (!attempts.length) {\n            // There are no attempts, start a new one.\n            this.newAttempt = true;\n\n            return;\n        }\n\n        // Get the last attempt. If it's finished, start a new one.\n        this.lastAttempt = await AddonModQuizHelper.setAttemptCalculatedData(\n            this.quiz,\n            attempts[attempts.length - 1],\n            false,\n            undefined,\n            true,\n        );\n\n        this.newAttempt = AddonModQuiz.isAttemptFinished(this.lastAttempt.state);\n    }\n\n    /**\n     * Finish an attempt, either by timeup or because the user clicked to finish it.\n     *\n     * @param userFinish Whether the user clicked to finish the attempt.\n     * @param timeUp Whether the quiz time is up.\n     * @returns Promise resolved when done.\n     */\n    async finishAttempt(userFinish?: boolean, timeUp?: boolean): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            // Show confirm if the user clicked the finish button and the quiz is in progress.\n            if (!timeUp && this.attempt.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS) {\n                await CoreDomUtils.showConfirm(Translate.instant('addon.mod_quiz.confirmclose'));\n            }\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            await this.processAttempt(userFinish, timeUp);\n\n            // Trigger an event to notify the attempt was finished.\n            CoreEvents.trigger(AddonModQuizProvider.ATTEMPT_FINISHED_EVENT, {\n                quizId: this.quiz.id,\n                attemptId: this.attempt.id,\n                synced: !this.offline,\n            }, CoreSites.getCurrentSiteId());\n\n            CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'quiz' });\n\n            if (!timeUp || !this.quiz.graceperiod) {\n                // Leave the player.\n                this.forceLeave = true;\n                CoreNavigator.back();\n            } else {\n                // Stay in player to show summary.\n                this.stopAutoSave();\n                this.clearTimer();\n\n                await this.refreshAttempt();\n                await this.loadSummary();\n            }\n        } catch (error) {\n            // eslint-disable-next-line promise/catch-or-return\n            CoreDomUtils\n                .showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true)\n                .then(async alert => {\n                    await alert?.onWillDismiss();\n\n                    if (error instanceof CoreWSError && error.errorcode === 'attemptalreadyclosed') {\n                        CoreNavigator.back();\n                    }\n\n                    return;\n                });\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Fix sequence checks of current page.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fixSequenceChecks(): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        // Get current page data again to get the latest sequencechecks.\n        const data = await AddonModQuiz.getAttemptData(this.attempt.id, this.attempt.currentpage ?? 0, this.preflightData, {\n            cmId: this.quiz?.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        const newSequenceChecks: Record<number, { name: string; value: string }> = {};\n\n        data.questions.forEach((question) => {\n            const sequenceCheck = CoreQuestionHelper.getQuestionSequenceCheckFromHtml(question.html);\n            if (sequenceCheck) {\n                newSequenceChecks[question.slot] = sequenceCheck;\n            }\n        });\n\n        // Notify the new sequence checks to the components.\n        this.questionComponents?.forEach((component) => {\n            component.updateSequenceCheck(newSequenceChecks);\n        });\n    }\n\n    /**\n     * Get the input answers.\n     *\n     * @returns Object with the answers.\n     */\n    protected getAnswers(): CoreQuestionsAnswers {\n        return CoreQuestionHelper.getAnswersFromForm(document.forms['addon-mod_quiz-player-form']);\n    }\n\n    /**\n     * Initializes the timer if enabled.\n     */\n    protected initTimer(): void {\n        if (!this.quizAccessInfo || !this.attempt || !this.attemptAccessInfo?.endtime || this.attemptAccessInfo.endtime < 0) {\n            return;\n        }\n\n        // Quiz has an end time. Check if time left should be shown.\n        const shouldShowTime = AddonModQuiz.shouldShowTimeLeft(\n            this.quizAccessInfo.activerulenames,\n            this.attempt,\n            this.attemptAccessInfo.endtime,\n        );\n\n        if (shouldShowTime) {\n            this.endTime = this.attemptAccessInfo.endtime;\n        } else {\n            delete this.endTime;\n        }\n    }\n\n    /**\n     * Remove timer info.\n     */\n    protected clearTimer(): void {\n        delete this.endTime;\n    }\n\n    /**\n     * Load a page questions.\n     *\n     * @param page The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async loadPage(page: number): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        // @todo MOBILE-4350: This is called before getting the attempt data in sequential quizzes as a workaround for a bug\n        // in the LMS. Once the bug has been fixed, this should be reverted.\n        if (this.isSequential) {\n            await this.logViewPage(page);\n        }\n\n        const data = await AddonModQuiz.getAttemptData(this.attempt.id, page, this.preflightData, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        // Update attempt, status could change during the execution.\n        this.attempt = data.attempt;\n        this.attempt.currentpage = page;\n\n        this.questions = data.questions;\n        this.nextPage = data.nextpage;\n        this.previousPage = this.isSequential ? -1 : page - 1;\n        this.showSummary = false;\n\n        this.questions.forEach((question) => {\n            // Get the readable mark for each question.\n            question.readableMark = AddonModQuizHelper.getQuestionMarkFromHtml(question.html);\n\n            // Extract the question info box.\n            CoreQuestionHelper.extractQuestionInfoBox(question, '.info');\n\n            // Check if the question is blocked. If it is, treat it as a description question.\n            if (AddonModQuiz.isQuestionBlocked(question)) {\n                question.type = 'description';\n            }\n        });\n\n        // Mark the page as viewed.\n        if (!this.isSequential) {\n            // @todo MOBILE-4350: Undo workaround.\n            await this.logViewPage(page);\n        }\n\n        // Start looking for changes.\n        this.autoSave.startCheckChangesProcess(this.quiz, this.attempt, this.preflightData, this.offline);\n    }\n\n    /**\n     * Log view a page.\n     *\n     * @param page Page viewed.\n     */\n    protected async logViewPage(page: number): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        await CoreUtils.ignoreErrors(AddonModQuiz.logViewAttempt(this.attempt.id, page, this.preflightData, this.offline));\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_quiz_view_attempt',\n            name: this.quiz.name,\n            data: { id: this.attempt.id, quizid: this.quiz.id, page, category: 'quiz' },\n            url: `/mod/quiz/attempt.php?attempt=${this.attempt.id}&cmid=${this.cmId}` + (page > 0 ? `&page=${page}` : ''),\n        });\n    }\n\n    /**\n     * Log view summary.\n     */\n    protected async logViewSummary(): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        await CoreUtils.ignoreErrors(\n            AddonModQuiz.logViewAttemptSummary(this.attempt.id, this.preflightData, this.quiz.id),\n        );\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_quiz_view_attempt_summary',\n            name: this.quiz.name,\n            data: { id: this.attempt.id, quizid: this.quiz.id, category: 'quiz' },\n            url: `/mod/quiz/summary.php?attempt=${this.attempt.id}&cmid=${this.cmId}`,\n        });\n    }\n\n    /**\n     * Refresh attempt data.\n     */\n    protected async refreshAttempt(): Promise<void> {\n        if (!this.quiz) {\n            return;\n        }\n\n        const attempts = await AddonModQuiz.getUserAttempts(this.quiz.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.attempt = attempts.find(attempt => attempt.id === this.attempt?.id);\n    }\n\n    /**\n     * Load attempt summary.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadSummary(): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        this.summaryQuestions = [];\n\n        this.summaryQuestions = await AddonModQuiz.getAttemptSummary(this.attempt.id, this.preflightData, {\n            cmId: this.quiz.coursemodule,\n            loadLocal: this.offline,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.showSummary = true;\n        this.canReturn = this.attempt.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS && !this.attempt.finishedOffline;\n        this.preventSubmitMessages = AddonModQuiz.getPreventSubmitMessages(this.summaryQuestions);\n\n        this.dueDateWarning = AddonModQuiz.getAttemptDueDateWarning(this.quiz, this.attempt);\n\n        this.logViewSummary();\n    }\n\n    /**\n     * Load data to navigate the questions using the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadNavigation(): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        // We use the attempt summary to build the navigation because it contains all the questions.\n        this.navigation = await AddonModQuiz.getAttemptSummary(this.attempt.id, this.preflightData, {\n            cmId: this.quiz?.coursemodule,\n            loadLocal: this.offline,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.navigation.forEach((question) => {\n            question.stateClass = CoreQuestionHelper.getQuestionStateClass(question.state || '');\n        });\n    }\n\n    /**\n     * Open the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    async openNavigation(): Promise<void> {\n\n        if (this.reloadNavigation) {\n            // Some data has changed, reload the navigation.\n            const modal = await CoreDomUtils.showModalLoading();\n\n            await CoreUtils.ignoreErrors(this.loadNavigation());\n\n            modal.dismiss();\n            this.reloadNavigation = false;\n        }\n\n        // Create the navigation modal.\n        const modalData = await CoreDomUtils.openSideModal<AddonModQuizNavigationModalReturn>({\n            component: AddonModQuizNavigationModalComponent,\n            componentProps: {\n                navigation: this.navigation,\n                summaryShown: this.showSummary,\n                currentPage: this.attempt?.currentpage,\n                isReview: false,\n            },\n        });\n\n        if (!modalData) {\n            return;\n        }\n\n        this.changePage(modalData.page, true, modalData.slot);\n    }\n\n    /**\n     * Prepare the answers to be sent for the attempt.\n     *\n     * @param componentId Component ID.\n     * @returns Promise resolved with the answers.\n     */\n    protected prepareAnswers(componentId: number): Promise<CoreQuestionsAnswers> {\n        return CoreQuestionHelper.prepareAnswers(\n            this.questions,\n            this.getAnswers(),\n            this.offline,\n            this.component,\n            componentId,\n        );\n    }\n\n    /**\n     * Process attempt.\n     *\n     * @param userFinish Whether the user clicked to finish the attempt.\n     * @param timeUp Whether the quiz time is up.\n     * @param retrying Whether we're retrying the change.\n     * @returns Promise resolved when done.\n     */\n    protected async processAttempt(userFinish?: boolean, timeUp?: boolean, retrying?: boolean): Promise<void> {\n        if (!this.quiz || !this.attempt) {\n            return;\n        }\n\n        // Get the answers to send.\n        let answers: CoreQuestionsAnswers = {};\n\n        if (!this.showSummary) {\n            answers = await this.prepareAnswers(this.quiz.coursemodule);\n        }\n\n        try {\n            // Send the answers.\n            await AddonModQuiz.processAttempt(\n                this.quiz,\n                this.attempt,\n                answers,\n                this.preflightData,\n                userFinish,\n                timeUp,\n                this.offline,\n            );\n        } catch (error) {\n            if (!error || error.errorcode != 'submissionoutofsequencefriendlymessage') {\n                throw error;\n            }\n\n            try {\n                // There was an error with the sequence check. Try to ammend it.\n                await this.fixSequenceChecks();\n            } catch {\n                throw error;\n            }\n\n            if (retrying) {\n                // We're already retrying, don't send the data again because it could cause an infinite loop.\n                throw error;\n            }\n\n            // Sequence checks updated, try to send the data again.\n            return this.processAttempt(userFinish, timeUp, true);\n        }\n\n        // Answers saved, cancel auto save.\n        this.autoSave.cancelAutoSave();\n        this.autoSave.hideAutoSaveError();\n\n        if (this.formElement) {\n            CoreForms.triggerFormSubmittedEvent(this.formElement, !this.offline, CoreSites.getCurrentSiteId());\n        }\n\n        return CoreQuestionHelper.clearTmpData(this.questions, this.component, this.quiz.coursemodule);\n    }\n\n    /**\n     * Scroll to a certain question.\n     *\n     * @param slot Slot of the question to scroll to.\n     */\n    protected async scrollToQuestion(slot: number): Promise<void> {\n        await CoreUtils.nextTick();\n        await CoreDirectivesRegistry.waitDirectivesReady(this.elementRef.nativeElement, 'core-question');\n        await CoreDom.scrollToElement(\n            this.elementRef.nativeElement,\n            '#addon-mod_quiz-question-' + slot,\n        );\n    }\n\n    /**\n     * Show connection error.\n     *\n     * @param ev Click event.\n     */\n    showConnectionError(ev: Event): void {\n        this.autoSave.showAutoSaveError(ev);\n    }\n\n    /**\n     * Convenience function to start the player.\n     */\n    async start(): Promise<void> {\n        try {\n            this.loaded = false;\n\n            if (!this.quizDataLoaded) {\n                // Fetch data.\n                await this.fetchData();\n\n                this.quizDataLoaded = true;\n            }\n\n            // Quiz data has been loaded, try to start or continue.\n            await this.startOrContinueAttempt();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquiz', true);\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Start or continue an attempt.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async startOrContinueAttempt(): Promise<void> {\n        if (!this.quiz || !this.quizAccessInfo) {\n            return;\n        }\n\n        let attempt = this.newAttempt ? undefined : this.lastAttempt;\n\n        // Get the preflight data and start attempt if needed.\n        attempt = await AddonModQuizHelper.getAndCheckPreflightData(\n            this.quiz,\n            this.quizAccessInfo,\n            this.preflightData,\n            attempt,\n            this.offline,\n            false,\n            'addon.mod_quiz.startattempt',\n        );\n\n        // Re-fetch attempt access information with the right attempt (might have changed because a new attempt was created).\n        this.attemptAccessInfo = await AddonModQuiz.getAttemptAccessInformation(this.quiz.id, attempt.id, {\n            cmId: this.quiz.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.attempt = attempt;\n\n        await this.loadNavigation();\n\n        if (this.attempt.state != AddonModQuizProvider.ATTEMPT_OVERDUE && !this.attempt.finishedOffline) {\n            // Attempt not overdue and not finished in offline, load page.\n            await this.loadPage(this.attempt.currentpage ?? 0);\n\n            this.initTimer();\n        } else {\n            // Attempt is overdue or finished in offline, we can only load the summary.\n            await this.loadSummary();\n        }\n    }\n\n    /**\n     * Quiz time has finished.\n     */\n    timeUp(): void {\n        if (this.timeUpCalled) {\n            return;\n        }\n\n        this.timeUpCalled = true;\n        this.finishAttempt(false, true);\n    }\n\n    /**\n     * Stop auto-saving answers.\n     */\n    protected stopAutoSave(): void {\n        this.autoSave.cancelAutoSave();\n        this.autoSave.stopCheckChangesProcess();\n        this.autoSaveErrorSubscription?.unsubscribe();\n    }\n\n}\n\n/**\n * Question with some calculated data for the view.\n */\ntype QuizQuestion = CoreQuestionQuestionParsed & {\n    readableMark?: string;\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                <core-format-text *ngIf=\"quiz\" [text]=\"quiz.name\" contextLevel=\"module\" [contextInstanceId]=\"quiz.coursemodule\"\n                    [courseId]=\"courseId\" />\n            </h1>\n        </ion-title>\n\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" id=\"addon-mod_quiz-connection-error-button\" [hidden]=\"!autoSaveError\"\n                (click)=\"showConnectionError($event)\" [attr.aria-label]=\"'addon.mod_quiz.connectionerror' | translate\"\n                aria-haspopup=\"dialog\">\n                <ion-icon name=\"fas-circle-exclamation\" slot=\"icon-only\" aria-hidden=\"true\" />\n            </ion-button>\n            <ion-button *ngIf=\"navigation.length\" [attr.aria-label]=\"'addon.mod_quiz.opentoc' | translate\" (click)=\"openNavigation()\">\n                <ion-icon name=\"fas-bookmark\" slot=\"icon-only\" aria-hidden=\"true\" />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n    <core-timer *ngIf=\"loaded && endTime && questions.length && !quizAborted && !showSummary\" [endTime]=\"endTime\" (finished)=\"timeUp()\"\n        [timerText]=\"'addon.mod_quiz.timeleft' | translate\" [hiddable]=\"true\" />\n</ion-header>\n<ion-content class=\"limited-width\">\n    <core-loading [hideUntil]=\"loaded\" class=\"has-spacer\">\n        <!-- Button to start attempting. -->\n        <ion-button *ngIf=\"!attempt\" expand=\"block\" class=\"ion-margin\" (click)=\"start()\">\n            {{ 'addon.mod_quiz.startattempt' | translate }}\n        </ion-button>\n\n        <!-- Questions -->\n        <form name=\"addon-mod_quiz-player-form\" *ngIf=\"questions.length && !quizAborted && !showSummary\" #quizForm>\n            <div *ngFor=\"let question of questions\">\n                <ion-card id=\"addon-mod_quiz-question-{{question.slot}}\">\n                    <!-- \"Header\" of the question. -->\n                    <ion-item-divider>\n                        <ion-label class=\"ion-text-wrap\">\n                            <h2 *ngIf=\"question.type !== 'description' && question.questionnumber\" class=\"inline\">\n                                {{ 'core.question.questionno' | translate:{$a: question.questionnumber} }}\n                            </h2>\n                            <h2 *ngIf=\"question.type === 'description' || !question.questionnumber\" class=\"inline\">\n                                {{ 'core.question.information' | translate }}\n                            </h2>\n                        </ion-label>\n                        <div *ngIf=\"question.status || question.readableMark\" slot=\"end\"\n                            class=\"ion-text-wrap ion-margin-horizontal addon-mod_quiz-question-note\">\n                            <p *ngIf=\"question.status\" class=\"block\">{{question.status}}</p>\n                            <p *ngIf=\"question.readableMark\" [innerHTML]=\"question.readableMark\"></p>\n                        </div>\n                    </ion-item-divider>\n\n                    <!-- Body of the question. -->\n                    <core-question class=\"ion-text-wrap\" [question]=\"question\" [component]=\"component\" [componentId]=\"cmId\"\n                        [attemptId]=\"attempt!.id\" [usageId]=\"attempt!.uniqueid\" [offlineEnabled]=\"offline\" contextLevel=\"module\"\n                        [contextInstanceId]=\"cmId\" [courseId]=\"courseId\" [preferredBehaviour]=\"quiz!.preferredbehaviour\" [review]=\"false\"\n                        (onAbort)=\"abortQuiz()\" (buttonClicked)=\"behaviourButtonClicked($event)\" />\n                </ion-card>\n            </div>\n        </form>\n\n        <!-- Go to next or previous page. -->\n        <ion-row *ngIf=\"questions.length && !quizAborted && !showSummary\" class=\"spacer-top\">\n            <ion-col *ngIf=\"previousPage >= 0\">\n                <ion-button expand=\"block\" fill=\"outline\" (click)=\"changePage(previousPage)\" class=\"ion-text-wrap\">\n                    <ion-icon name=\"fas-chevron-left\" slot=\"start\" aria-hidden=\"true\" />\n                    {{ 'core.previous' | translate }}\n                </ion-button>\n            </ion-col>\n            <ion-col *ngIf=\"nextPage >= -1\">\n                <ion-button expand=\"block\" (click)=\"changePage(nextPage)\" class=\"ion-text-wrap\" *ngIf=\"nextPage > 0\">\n                    {{ 'core.next' | translate }}\n                    <ion-icon name=\"fas-chevron-right\" slot=\"end\" aria-hidden=\"true\" />\n                </ion-button>\n                <ion-button expand=\"block\" (click)=\"changePage(nextPage)\" class=\"ion-text-wrap\" *ngIf=\"nextPage === -1\">\n                    {{ 'core.submit' | translate }}\n                </ion-button>\n            </ion-col>\n        </ion-row>\n\n        <!-- Summary -->\n        <ion-card *ngIf=\"!quizAborted && showSummary && summaryQuestions.length\" class=\"addon-mod_quiz-table\">\n            <ion-card-header class=\"ion-text-wrap\">\n                <ion-card-title>{{ 'addon.mod_quiz.summaryofattempt' | translate }}</ion-card-title>\n            </ion-card-header>\n\n            <!-- \"Header\" of the summary table. -->\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <ion-row class=\"ion-align-items-center\">\n                        <ion-col size=\"3\" class=\"ion-text-center ion-hide-md-down\">\n                            <strong>{{ 'addon.mod_quiz.question' | translate }}</strong>\n                        </ion-col>\n                        <ion-col size=\"3\" class=\"ion-text-center ion-hide-md-up\"><strong>#</strong></ion-col>\n                        <ion-col size=\"9\" class=\"ion-text-center\">\n                            <strong>{{ 'addon.mod_quiz.status' | translate }}</strong>\n                        </ion-col>\n                    </ion-row>\n                </ion-label>\n            </ion-item>\n\n            <!-- List of questions of the summary table. -->\n            <ng-container *ngFor=\"let question of summaryQuestions\">\n                <ion-item *ngIf=\"question.type !== 'description' && question.questionnumber\"\n                    (click)=\"changePage(question.page, false, question.slot)\"\n                    [attr.aria-label]=\"'core.question.questionno' | translate:{$a: question.questionnumber}\"\n                    [detail]=\"!isSequential && canReturn\" [button]=\"!isSequential && canReturn\">\n                    <ion-label>\n                        <ion-row class=\"ion-align-items-center\">\n                            <ion-col size=\"3\" class=\"ion-text-center ion-text-wrap\">{{ question.questionnumber }}</ion-col>\n                            <ion-col size=\"9\" class=\"ion-text-center ion-text-wrap\">{{ question.status }}</ion-col>\n                        </ion-row>\n                    </ion-label>\n                </ion-item>\n            </ng-container>\n\n            <!-- Due date warning. -->\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"dueDateWarning\">\n                <ion-label>{{ dueDateWarning }}</ion-label>\n            </ion-item>\n\n            <!-- Time left (if quiz is timed). -->\n            <core-timer *ngIf=\"endTime\" [endTime]=\"endTime\" (finished)=\"timeUp()\" [timerText]=\"'addon.mod_quiz.timeleft' | translate\" />\n\n            <!-- List of messages explaining why the quiz cannot be submitted. -->\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"preventSubmitMessages.length\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.mod_quiz.cannotsubmitquizdueto' | translate }}</p>\n                    <p *ngFor=\"let message of preventSubmitMessages\">{{message}}</p>\n                </ion-label>\n            </ion-item>\n        </ion-card>\n\n        <!-- Quiz aborted -->\n        <ion-card *ngIf=\"attempt && ((!questions.length && !showSummary) || quizAborted)\">\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>{{ 'addon.mod_quiz.errorparsequestions' | translate }}</ion-label>\n            </ion-item>\n            <ion-button *ngIf=\"canReturn\" expand=\"block\" class=\"ion-margin ion-text-wrap\" fill=\"outline\"\n                (click)=\"changePage(attempt!.currentpage!)\">\n                {{ 'addon.mod_quiz.returnattempt' | translate }}\n            </ion-button>\n        </ion-card>\n\n        <div collapsible-footer appearOnBottom *ngIf=\"!quizAborted && showSummary && summaryQuestions.length && loaded\" slot=\"fixed\">\n            <div class=\"list-item-limited-width\">\n                <ion-button *ngIf=\"preventSubmitMessages.length\" expand=\"block\" class=\"ion-margin ion-text-wrap\" [href]=\"moduleUrl\"\n                    core-link [showBrowserWarning]=\"false\">\n                    {{ 'core.openinbrowser' | translate }}\n                    <ion-icon name=\"fas-up-right-from-square\" slot=\"end\" aria-hidden=\"true\" />\n                </ion-button>\n\n                <!-- Button to submit the quiz. -->\n                <ion-button *ngIf=\"!attempt!.finishedOffline && !preventSubmitMessages.length\" expand=\"block\"\n                    class=\"ion-margin ion-text-wrap\" (click)=\"finishAttempt(true)\">\n                    {{ 'addon.mod_quiz.submitallandfinish' | translate }}\n                </ion-button>\n            </div>\n        </div>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}