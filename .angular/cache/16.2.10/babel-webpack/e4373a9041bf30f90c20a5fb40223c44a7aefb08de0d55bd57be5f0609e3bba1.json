{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { isSafeNumber } from '@/core/utils/types';\nimport { CoreGrades } from '@features/grades/services/grades';\nimport { CoreGradesHelper } from '@features/grades/services/grades-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for lesson push notifications clicks.\n */\nexport class AddonModLessonPushClickHandlerService {\n  constructor() {\n    this.name = 'AddonModLessonPushClickHandler';\n    this.priority = 200;\n    this.featureName = 'CoreCourseModuleDelegate_AddonModLesson';\n  }\n  /**\n   * Check if a notification click is handled by this handler.\n   *\n   * @param notification The notification to check.\n   * @returns Whether the notification click is handled by this handler.\n   */\n  handles(notification) {\n    return _asyncToGenerator(function* () {\n      var _notification$customd;\n      if (CoreUtils.isTrueOrOne(notification.notif) && notification.moodlecomponent == 'mod_lesson' && notification.name == 'graded_essay' && (_notification$customd = notification.customdata) !== null && _notification$customd !== void 0 && _notification$customd.cmid) {\n        return CoreGrades.isPluginEnabledForCourse(Number(notification.courseid), notification.site);\n      }\n      return false;\n    })();\n  }\n  /**\n   * Handle the notification click.\n   *\n   * @param notification The notification to check.\n   * @returns Promise resolved when done.\n   */\n  handleClick(notification) {\n    return _asyncToGenerator(function* () {\n      const data = notification.customdata || {};\n      const courseId = Number(notification.courseid);\n      const moduleId = Number(data.cmid);\n      if (!isSafeNumber(moduleId)) {\n        return;\n      }\n      return CoreGradesHelper.goToGrades(courseId, undefined, moduleId, notification.site);\n    })();\n  }\n}\n_class = AddonModLessonPushClickHandlerService;\n_class.ɵfac = function AddonModLessonPushClickHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModLessonPushClickHandler = makeSingleton(AddonModLessonPushClickHandlerService);","map":{"version":3,"names":["isSafeNumber","CoreGrades","CoreGradesHelper","CoreUtils","makeSingleton","AddonModLessonPushClickHandlerService","constructor","name","priority","featureName","handles","notification","_asyncToGenerator","_notification$customd","isTrueOrOne","notif","moodlecomponent","customdata","cmid","isPluginEnabledForCourse","Number","courseid","site","handleClick","data","courseId","moduleId","goToGrades","undefined","factory","ɵfac","providedIn","AddonModLessonPushClickHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/lesson/services/handlers/push-click.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { isSafeNumber } from '@/core/utils/types';\nimport { Injectable } from '@angular/core';\n\nimport { CoreGrades } from '@features/grades/services/grades';\nimport { CoreGradesHelper } from '@features/grades/services/grades-helper';\nimport { CorePushNotificationsClickHandler } from '@features/pushnotifications/services/push-delegate';\nimport { CorePushNotificationsNotificationBasicData } from '@features/pushnotifications/services/pushnotifications';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler for lesson push notifications clicks.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModLessonPushClickHandlerService implements CorePushNotificationsClickHandler {\n\n    name = 'AddonModLessonPushClickHandler';\n    priority = 200;\n    featureName = 'CoreCourseModuleDelegate_AddonModLesson';\n\n    /**\n     * Check if a notification click is handled by this handler.\n     *\n     * @param notification The notification to check.\n     * @returns Whether the notification click is handled by this handler.\n     */\n    async handles(notification: NotificationData): Promise<boolean> {\n        if (\n            CoreUtils.isTrueOrOne(notification.notif) &&\n            notification.moodlecomponent == 'mod_lesson' &&\n            notification.name == 'graded_essay' &&\n            notification.customdata?.cmid\n        ) {\n\n            return CoreGrades.isPluginEnabledForCourse(Number(notification.courseid), notification.site);\n        }\n\n        return false;\n    }\n\n    /**\n     * Handle the notification click.\n     *\n     * @param notification The notification to check.\n     * @returns Promise resolved when done.\n     */\n    async handleClick(notification: NotificationData): Promise<void> {\n        const data = notification.customdata || {};\n        const courseId = Number(notification.courseid);\n        const moduleId = Number(data.cmid);\n\n        if (!isSafeNumber(moduleId)) {\n            return;\n        }\n\n        return CoreGradesHelper.goToGrades(courseId, undefined, moduleId, notification.site);\n    }\n\n}\n\nexport const AddonModLessonPushClickHandler = makeSingleton(AddonModLessonPushClickHandlerService);\n\ntype NotificationData = CorePushNotificationsNotificationBasicData & {\n    courseid: number;\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,YAAY,QAAQ,oBAAoB;AAGjD,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,gBAAgB,QAAQ,yCAAyC;AAG1E,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,qCAAqC;EADlDC,YAAA;IAGI,KAAAC,IAAI,GAAG,gCAAgC;IACvC,KAAAC,QAAQ,GAAG,GAAG;IACd,KAAAC,WAAW,GAAG,yCAAyC;;EAEvD;;;;;;EAMMC,OAAOA,CAACC,YAA8B;IAAA,OAAAC,iBAAA;MAAA,IAAAC,qBAAA;MACxC,IACIV,SAAS,CAACW,WAAW,CAACH,YAAY,CAACI,KAAK,CAAC,IACzCJ,YAAY,CAACK,eAAe,IAAI,YAAY,IAC5CL,YAAY,CAACJ,IAAI,IAAI,cAAc,KAAAM,qBAAA,GACnCF,YAAY,CAACM,UAAU,cAAAJ,qBAAA,eAAvBA,qBAAA,CAAyBK,IAAI,EAC/B;QAEE,OAAOjB,UAAU,CAACkB,wBAAwB,CAACC,MAAM,CAACT,YAAY,CAACU,QAAQ,CAAC,EAAEV,YAAY,CAACW,IAAI,CAAC;;MAGhG,OAAO,KAAK;IAAC;EACjB;EAEA;;;;;;EAMMC,WAAWA,CAACZ,YAA8B;IAAA,OAAAC,iBAAA;MAC5C,MAAMY,IAAI,GAAGb,YAAY,CAACM,UAAU,IAAI,EAAE;MAC1C,MAAMQ,QAAQ,GAAGL,MAAM,CAACT,YAAY,CAACU,QAAQ,CAAC;MAC9C,MAAMK,QAAQ,GAAGN,MAAM,CAACI,IAAI,CAACN,IAAI,CAAC;MAElC,IAAI,CAAClB,YAAY,CAAC0B,QAAQ,CAAC,EAAE;QACzB;;MAGJ,OAAOxB,gBAAgB,CAACyB,UAAU,CAACF,QAAQ,EAAEG,SAAS,EAAEF,QAAQ,EAAEf,YAAY,CAACW,IAAI,CAAC;IAAC;EACzF;;SA1CSjB,qCAAqC;;mBAArCA,MAAqC;AAAA;;SAArCA,MAAqC;EAAAwB,OAAA,EAArCxB,MAAqC,CAAAyB,IAAA;EAAAC,UAAA,EADxB;AAAM;AA+ChC,OAAO,MAAMC,8BAA8B,GAAG5B,aAAa,CAACC,qCAAqC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}