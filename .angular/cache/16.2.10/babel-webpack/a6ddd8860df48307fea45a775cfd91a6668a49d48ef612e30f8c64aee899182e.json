{"ast":null,"code":"var _class;\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { AddonBlockBadgesComponent } from '../components/badges/badges';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Block handler.\n */\nexport class AddonBlockBadgesHandlerService extends CoreBlockBaseHandler {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonBlockBadges';\n    this.blockName = 'badges';\n  }\n  /**\n   * Returns the data needed to render the block.\n   *\n   * @returns Data or promise resolved with the data.\n   */\n  getDisplayData() {\n    return {\n      title: 'addon.block_badges.pluginname',\n      class: 'addon-block-badges',\n      component: AddonBlockBadgesComponent\n    };\n  }\n}\n_class = AddonBlockBadgesHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonBlockBadgesHandlerService_BaseFactory;\n  return function AddonBlockBadgesHandlerService_Factory(t) {\n    return (ɵAddonBlockBadgesHandlerService_BaseFactory || (ɵAddonBlockBadgesHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonBlockBadgesHandler = makeSingleton(AddonBlockBadgesHandlerService);","map":{"version":3,"names":["CoreBlockBaseHandler","AddonBlockBadgesComponent","makeSingleton","AddonBlockBadgesHandlerService","constructor","name","blockName","getDisplayData","title","class","component","t","factory","ɵfac","providedIn","AddonBlockBadgesHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/badges/services/block-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreBlockHandlerData } from '@features/block/services/block-delegate';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { AddonBlockBadgesComponent } from '../components/badges/badges';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Block handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonBlockBadgesHandlerService extends CoreBlockBaseHandler {\n\n    name = 'AddonBlockBadges';\n    blockName = 'badges';\n\n    /**\n     * Returns the data needed to render the block.\n     *\n     * @returns Data or promise resolved with the data.\n     */\n    getDisplayData(): CoreBlockHandlerData {\n\n        return {\n            title: 'addon.block_badges.pluginname',\n            class: 'addon-block-badges',\n            component: AddonBlockBadgesComponent,\n        };\n    }\n\n}\n\nexport const AddonBlockBadgesHandler = makeSingleton(AddonBlockBadgesHandlerService);\n"],"mappings":";AAiBA,SAASA,oBAAoB,QAAQ,4CAA4C;AACjF,SAASC,yBAAyB,QAAQ,6BAA6B;AACvE,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,8BAA+B,SAAQH,oBAAoB;EADxEI,YAAA;;IAGI,KAAAC,IAAI,GAAG,kBAAkB;IACzB,KAAAC,SAAS,GAAG,QAAQ;;EAEpB;;;;;EAKAC,cAAcA,CAAA;IAEV,OAAO;MACHC,KAAK,EAAE,+BAA+B;MACtCC,KAAK,EAAE,oBAAoB;MAC3BC,SAAS,EAAET;KACd;EACL;;SAjBSE,8BAA+B;;;;mIAA/BA,MAA8B,IAAAQ,CAAA,IAA9BR,MAA8B;EAAA;AAAA;;SAA9BA,MAA8B;EAAAS,OAAA,EAA9BT,MAA8B,CAAAU,IAAA;EAAAC,UAAA,EADjB;AAAM;AAsBhC,OAAO,MAAMC,uBAAuB,GAAGb,aAAa,CAACC,8BAA8B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}