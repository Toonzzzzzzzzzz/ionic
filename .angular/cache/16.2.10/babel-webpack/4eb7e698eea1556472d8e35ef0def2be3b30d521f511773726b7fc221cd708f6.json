{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonCompetency } from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n/**\n * Provides a collection of plan competencies.\n */\nexport class AddonCompetencyPlanCompetenciesSource extends CoreRoutedItemsManagerSource {\n  constructor(planId) {\n    super();\n    this.PLAN_ID = planId;\n  }\n  /**\n   * @inheritdoc\n   */\n  getItemPath(competency) {\n    return String(competency.competency.id);\n  }\n  /**\n   * @inheritdoc\n   */\n  load() {\n    var _superprop_getLoad = () => super.load,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.dirty || !_this.plan) {\n        yield _this.loadLearningPlan();\n      }\n      yield _superprop_getLoad().call(_this);\n    })();\n  }\n  /**\n   * Invalidate plan cache.\n   */\n  invalidateCache() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(AddonCompetency.invalidateLearningPlan(_this2.PLAN_ID));\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  loadPageItems() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this3.plan) {\n        throw new Error('Can\\'t load competencies without plan!');\n      }\n      return {\n        items: _this3.plan.competencies\n      };\n    })();\n  }\n  /**\n   * Load learning plan.\n   */\n  loadLearningPlan() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.plan = yield AddonCompetency.getLearningPlan(_this4.PLAN_ID);\n      _this4.plan.plan.statusname = AddonCompetencyHelper.getPlanStatusName(_this4.plan.plan.status);\n      // Get the user profile image.\n      _this4.user = yield AddonCompetencyHelper.getProfile(_this4.plan.plan.userid);\n    })();\n  }\n}","map":{"version":3,"names":["CoreRoutedItemsManagerSource","CoreUtils","AddonCompetency","AddonCompetencyHelper","AddonCompetencyPlanCompetenciesSource","constructor","planId","PLAN_ID","getItemPath","competency","String","id","load","_superprop_getLoad","_this","_asyncToGenerator","dirty","plan","loadLearningPlan","call","invalidateCache","_this2","ignoreErrors","invalidateLearningPlan","loadPageItems","_this3","Error","items","competencies","_this4","getLearningPlan","statusname","getPlanStatusName","status","user","getProfile","userid"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/classes/competency-plan-competencies-source.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreUserProfile } from '@features/user/services/user';\nimport { CoreUtils } from '@services/utils/utils';\nimport {\n    AddonCompetency,\n    AddonCompetencyDataForPlanPageCompetency,\n    AddonCompetencyDataForPlanPageWSResponse,\n} from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n\n/**\n * Provides a collection of plan competencies.\n */\nexport class AddonCompetencyPlanCompetenciesSource extends CoreRoutedItemsManagerSource<AddonCompetencyDataForPlanPageCompetency> {\n\n    readonly PLAN_ID: number;\n\n    plan?: AddonCompetencyDataForPlanPageWSResponse;\n    user?: CoreUserProfile;\n\n    constructor(planId: number) {\n        super();\n\n        this.PLAN_ID = planId;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(competency: AddonCompetencyDataForPlanPageCompetency): string {\n        return String(competency.competency.id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async load(): Promise<void> {\n        if (this.dirty || !this.plan) {\n            await this.loadLearningPlan();\n        }\n\n        await super.load();\n    }\n\n    /**\n     * Invalidate plan cache.\n     */\n    async invalidateCache(): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonCompetency.invalidateLearningPlan(this.PLAN_ID));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: AddonCompetencyDataForPlanPageCompetency[] }> {\n        if (!this.plan) {\n            throw new Error('Can\\'t load competencies without plan!');\n        }\n\n        return { items: this.plan.competencies };\n    }\n\n    /**\n     * Load learning plan.\n     */\n    private async loadLearningPlan(): Promise<void> {\n        this.plan = await AddonCompetency.getLearningPlan(this.PLAN_ID);\n        this.plan.plan.statusname = AddonCompetencyHelper.getPlanStatusName(this.plan.plan.status);\n\n        // Get the user profile image.\n        this.user = await AddonCompetencyHelper.getProfile(this.plan.plan.userid);\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,4BAA4B,QAAQ,uDAAuD;AAEpG,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SACIC,eAAe,QAGZ,wBAAwB;AAC/B,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE;;;AAGA,OAAM,MAAOC,qCAAsC,SAAQJ,4BAAsE;EAO7HK,YAAYC,MAAc;IACtB,KAAK,EAAE;IAEP,IAAI,CAACC,OAAO,GAAGD,MAAM;EACzB;EAEA;;;EAGAE,WAAWA,CAACC,UAAoD;IAC5D,OAAOC,MAAM,CAACD,UAAU,CAACA,UAAU,CAACE,EAAE,CAAC;EAC3C;EAEA;;;EAGMC,IAAIA,CAAA;IAAA,IAAAC,kBAAA,GAAAA,CAAA,WAAAD,IAAA;MAAAE,KAAA;IAAA,OAAAC,iBAAA;MACN,IAAID,KAAI,CAACE,KAAK,IAAI,CAACF,KAAI,CAACG,IAAI,EAAE;QAC1B,MAAMH,KAAI,CAACI,gBAAgB,EAAE;;MAGjC,MAAML,kBAAA,GAAAM,IAAA,CAAAL,KAAU,CAAE;IAAC;EACvB;EAEA;;;EAGMM,eAAeA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAN,iBAAA;MACjB,MAAMd,SAAS,CAACqB,YAAY,CAACpB,eAAe,CAACqB,sBAAsB,CAACF,MAAI,CAACd,OAAO,CAAC,CAAC;IAAC;EACvF;EAEA;;;EAGgBiB,aAAaA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAV,iBAAA;MACzB,IAAI,CAACU,MAAI,CAACR,IAAI,EAAE;QACZ,MAAM,IAAIS,KAAK,CAAC,wCAAwC,CAAC;;MAG7D,OAAO;QAAEC,KAAK,EAAEF,MAAI,CAACR,IAAI,CAACW;MAAY,CAAE;IAAC;EAC7C;EAEA;;;EAGcV,gBAAgBA,CAAA;IAAA,IAAAW,MAAA;IAAA,OAAAd,iBAAA;MAC1Bc,MAAI,CAACZ,IAAI,SAASf,eAAe,CAAC4B,eAAe,CAACD,MAAI,CAACtB,OAAO,CAAC;MAC/DsB,MAAI,CAACZ,IAAI,CAACA,IAAI,CAACc,UAAU,GAAG5B,qBAAqB,CAAC6B,iBAAiB,CAACH,MAAI,CAACZ,IAAI,CAACA,IAAI,CAACgB,MAAM,CAAC;MAE1F;MACAJ,MAAI,CAACK,IAAI,SAAS/B,qBAAqB,CAACgC,UAAU,CAACN,MAAI,CAACZ,IAAI,CAACA,IAAI,CAACmB,MAAM,CAAC;IAAC;EAC9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}