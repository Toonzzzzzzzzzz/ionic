{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreContentLinksHandlerBase } from './base-handler';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\n/**\n * Handler to handle URLs pointing to a list of a certain type of modules.\n */\nexport class CoreContentLinksModuleListHandler extends CoreContentLinksHandlerBase {\n  /**\n   * Construct the handler.\n   *\n   * @param addon Name of the addon as it's registered in course delegate. It'll be used to check if it's disabled.\n   * @param modName Name of the module (assign, book, ...).\n   */\n  constructor(addon, modName) {\n    super();\n    this.addon = addon;\n    this.modName = modName;\n    /**\n     * The title to use in the new page. If not defined, the app will try to calculate it.\n     */\n    this.title = '';\n    // Match the index.php URL with an id param.\n    this.pattern = new RegExp('/mod/' + modName + '/index.php.*([&?]id=\\\\d+)');\n    this.featureName = 'CoreCourseModuleDelegate_' + addon;\n  }\n  /**\n   * Get the list of actions for a link (url).\n   *\n   * @param siteIds List of sites the URL belongs to.\n   * @param url The URL to treat.\n   * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n   * @returns List of (or promise resolved with list of) actions.\n   */\n  getActions(siteIds, url, params) {\n    return [{\n      action: siteId => {\n        CoreNavigator.navigateToSitePath('course/' + params.id + '/list-mod-type', {\n          params: {\n            modName: this.modName,\n            title: this.title || Translate.instant('addon.mod_' + this.modName + '.modulenameplural')\n          },\n          siteId\n        });\n      }\n    }];\n  }\n}","map":{"version":3,"names":["CoreContentLinksHandlerBase","Translate","CoreNavigator","CoreContentLinksModuleListHandler","constructor","addon","modName","title","pattern","RegExp","featureName","getActions","siteIds","url","params","action","siteId","navigateToSitePath","id","instant"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/contentlinks/classes/module-list-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreContentLinksHandlerBase } from './base-handler';\nimport { Translate } from '@singletons';\n\nimport { CoreContentLinksAction } from '../services/contentlinks-delegate';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Handler to handle URLs pointing to a list of a certain type of modules.\n */\nexport class CoreContentLinksModuleListHandler extends CoreContentLinksHandlerBase {\n\n    /**\n     * The title to use in the new page. If not defined, the app will try to calculate it.\n     */\n    protected title = '';\n\n    /**\n     * Construct the handler.\n     *\n     * @param addon Name of the addon as it's registered in course delegate. It'll be used to check if it's disabled.\n     * @param modName Name of the module (assign, book, ...).\n     */\n    constructor(\n        public addon: string,\n        public modName: string,\n    ) {\n        super();\n\n        // Match the index.php URL with an id param.\n        this.pattern = new RegExp('/mod/' + modName + '/index.php.*([&?]id=\\\\d+)');\n        this.featureName = 'CoreCourseModuleDelegate_' + addon;\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param siteIds List of sites the URL belongs to.\n     * @param url The URL to treat.\n     * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @returns List of (or promise resolved with list of) actions.\n     */\n    getActions(\n        siteIds: string[],\n        url: string,\n        params: Record<string, string>,\n    ): CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n\n        return [{\n            action: (siteId): void => {\n                CoreNavigator.navigateToSitePath('course/' + params.id + '/list-mod-type', {\n                    params: {\n                        modName: this.modName,\n                        title: this.title || Translate.instant('addon.mod_' + this.modName + '.modulenameplural'),\n                    },\n                    siteId,\n                });\n            },\n        }];\n    }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,2BAA2B,QAAQ,gBAAgB;AAC5D,SAASC,SAAS,QAAQ,aAAa;AAGvC,SAASC,aAAa,QAAQ,qBAAqB;AAEnD;;;AAGA,OAAM,MAAOC,iCAAkC,SAAQH,2BAA2B;EAO9E;;;;;;EAMAI,YACWC,KAAa,EACbC,OAAe;IAEtB,KAAK,EAAE;IAHA,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,OAAO,GAAPA,OAAO;IAblB;;;IAGU,KAAAC,KAAK,GAAG,EAAE;IAchB;IACA,IAAI,CAACC,OAAO,GAAG,IAAIC,MAAM,CAAC,OAAO,GAAGH,OAAO,GAAG,2BAA2B,CAAC;IAC1E,IAAI,CAACI,WAAW,GAAG,2BAA2B,GAAGL,KAAK;EAC1D;EAEA;;;;;;;;EAQAM,UAAUA,CACNC,OAAiB,EACjBC,GAAW,EACXC,MAA8B;IAG9B,OAAO,CAAC;MACJC,MAAM,EAAGC,MAAM,IAAU;QACrBd,aAAa,CAACe,kBAAkB,CAAC,SAAS,GAAGH,MAAM,CAACI,EAAE,GAAG,gBAAgB,EAAE;UACvEJ,MAAM,EAAE;YACJR,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBC,KAAK,EAAE,IAAI,CAACA,KAAK,IAAIN,SAAS,CAACkB,OAAO,CAAC,YAAY,GAAG,IAAI,CAACb,OAAO,GAAG,mBAAmB;WAC3F;UACDU;SACH,CAAC;MACN;KACH,CAAC;EACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}