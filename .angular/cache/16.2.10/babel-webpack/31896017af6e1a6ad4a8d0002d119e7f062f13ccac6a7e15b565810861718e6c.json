{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Injector } from '@angular/core';\nimport { RouterModule, ROUTES } from '@angular/router';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSitePreferencesPage } from '@features/settings/pages/site/site';\nimport { resolveSiteRoutes } from '@features/settings/settings-site-routing.module';\nimport * as i0 from \"@angular/core\";\n/**\n * Build module routes.\n *\n * @param injector Injector.\n * @returns Routes.\n */\nfunction buildRoutes(injector) {\n  const routes = resolveSiteRoutes(injector);\n  const mobileRoutes = [{\n    path: '',\n    component: CoreSitePreferencesPage\n  }, ...routes.siblings];\n  const tabletRoutes = [{\n    path: '',\n    component: CoreSitePreferencesPage,\n    children: routes.siblings\n  }];\n  return [...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile), ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet)];\n}\nexport class CoreettingsSiteLazyModule {}\n_class = CoreettingsSiteLazyModule;\n_class.ɵfac = function CoreettingsSiteLazyModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: ROUTES,\n    multi: true,\n    useFactory: buildRoutes,\n    deps: [Injector]\n  }],\n  imports: [CoreSharedModule, RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CoreettingsSiteLazyModule, {\n    declarations: [CoreSitePreferencesPage],\n    imports: [CoreSharedModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["Injector","RouterModule","ROUTES","CoreSharedModule","conditionalRoutes","CoreScreen","CoreSitePreferencesPage","resolveSiteRoutes","buildRoutes","injector","routes","mobileRoutes","path","component","siblings","tabletRoutes","children","isMobile","isTablet","CoreettingsSiteLazyModule","provide","multi","useFactory","deps","imports","declarations","exports"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/settings-site-lazy.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSitePreferencesPage } from '@features/settings/pages/site/site';\nimport { resolveSiteRoutes } from '@features/settings/settings-site-routing.module';\n\n/**\n * Build module routes.\n *\n * @param injector Injector.\n * @returns Routes.\n */\nfunction buildRoutes(injector: Injector): Routes {\n    const routes = resolveSiteRoutes(injector);\n    const mobileRoutes: Routes = [\n        {\n            path: '',\n            component: CoreSitePreferencesPage,\n        },\n        ...routes.siblings,\n    ];\n    const tabletRoutes: Routes = [\n        {\n            path: '',\n            component: CoreSitePreferencesPage,\n            children: routes.siblings,\n        },\n    ];\n\n    return [\n        ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n        ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n    ];\n}\n\n@NgModule({\n    providers: [\n        { provide: ROUTES, multi: true, useFactory: buildRoutes, deps: [Injector] },\n    ],\n    declarations: [\n        CoreSitePreferencesPage,\n    ],\n    imports: [\n        CoreSharedModule,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreettingsSiteLazyModule {}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAQ,QAAkB,eAAe;AAClD,SAASC,YAAY,EAAEC,MAAM,QAAgB,iBAAiB;AAE9D,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,uBAAuB,QAAQ,oCAAoC;AAC5E,SAASC,iBAAiB,QAAQ,iDAAiD;;AAEnF;;;;;;AAMA,SAASC,WAAWA,CAACC,QAAkB;EACnC,MAAMC,MAAM,GAAGH,iBAAiB,CAACE,QAAQ,CAAC;EAC1C,MAAME,YAAY,GAAW,CACzB;IACIC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAEP;GACd,EACD,GAAGI,MAAM,CAACI,QAAQ,CACrB;EACD,MAAMC,YAAY,GAAW,CACzB;IACIH,IAAI,EAAE,EAAE;IACRC,SAAS,EAAEP,uBAAuB;IAClCU,QAAQ,EAAEN,MAAM,CAACI;GACpB,CACJ;EAED,OAAO,CACH,GAAGV,iBAAiB,CAACO,YAAY,EAAE,MAAMN,UAAU,CAACY,QAAQ,CAAC,EAC7D,GAAGb,iBAAiB,CAACW,YAAY,EAAE,MAAMV,UAAU,CAACa,QAAQ,CAAC,CAChE;AACL;AAcA,OAAM,MAAOC,yBAAyB;SAAzBA,yBAAyB;;mBAAzBA,MAAyB;AAAA;;QAAzBA;AAAyB;;aAXvB,CACP;IAAEC,OAAO,EAAElB,MAAM;IAAEmB,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAEd,WAAW;IAAEe,IAAI,EAAE,CAACvB,QAAQ;EAAC,CAAE,CAC9E;EAAAwB,OAAA,GAKGrB,gBAAgB,EAEVF,YAAY;AAAA;;2EAEbkB,yBAAyB;IAAAM,YAAA,GAP9BnB,uBAAuB;IAAAkB,OAAA,GAGvBrB,gBAAgB;IAAAuB,OAAA,GAEVzB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}