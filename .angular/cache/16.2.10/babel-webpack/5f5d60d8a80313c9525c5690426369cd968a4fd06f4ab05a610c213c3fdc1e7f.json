{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { FormControl } from '@angular/forms';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreGroups, CoreGroupsProvider } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { AddonModForum, AddonModForumProvider } from '@addons/mod/forum/services/forum';\nimport { CoreEditorRichTextEditorComponent } from '@features/editor/components/rich-text-editor/rich-text-editor';\nimport { AddonModForumSync, AddonModForumSyncProvider } from '@addons/mod/forum/services/forum-sync';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport { CoreSync } from '@services/sync';\nimport { AddonModForumOffline } from '@addons/mod/forum/services/forum-offline';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModForumHelper } from '@addons/mod/forum/services/forum-helper';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreForms } from '@singletons/form';\nimport { AddonModForumDiscussionsSwipeManager } from '../../classes/forum-discussions-swipe-manager';\nimport { AddonModForumDiscussionsSource } from '../../classes/forum-discussions-source';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@components/split-view/split-view\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../../../../core/components/attachments/attachments\";\nimport * as i5 from \"../../../../../core/components/loading/loading\";\nimport * as i6 from \"../../../../../core/directives/fa-icon\";\nimport * as i7 from \"../../../../../core/directives/format-text\";\nimport * as i8 from \"../../../../../core/directives/swipe-navigation\";\nimport * as i9 from \"../../../../../core/directives/content\";\nimport * as i10 from \"../../../../../core/directives/update-non-reactive-attributes\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@ionic/angular\";\nimport * as i13 from \"../../../../../core/features/editor/components/rich-text-editor/rich-text-editor\";\nimport * as i14 from \"@ngx-translate/core\";\nconst _c0 = [\"newDiscFormEl\"];\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-toggle\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template_ion_toggle_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r9.newDiscussion.postToAllGroups = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, \"addon.mod_forum.posttomygroups\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.newDiscussion.postToAllGroups);\n  }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_ion_select_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 26);\n    i0.ɵɵelement(1, \"core-format-text\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"value\", group_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", group_r12.name)(\"contextInstanceId\", ctx_r11.courseId)(\"wsNotFiltered\", true);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    header: a0\n  };\n};\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 23)(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-select\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template_ion_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r13.newDiscussion.groupId = $event);\n    })(\"ionChange\", function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template_ion_select_ionChange_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r15.calculateGroupName());\n    });\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵtemplate(7, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_ion_select_option_7_Template, 2, 4, \"ion-select-option\", 25);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 6, \"addon.mod_forum.group\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.newDiscussion.groupId)(\"disabled\", ctx_r6.newDiscussion.postToAllGroups)(\"interfaceOptions\", i0.ɵɵpureFunction1(12, _c1, i0.ɵɵpipeBind1(5, 8, \"addon.mod_forum.group\")))(\"cancelText\", i0.ɵɵpipeBind1(6, 10, \"core.cancel\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.groups);\n  }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-toggle\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template_ion_toggle_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r16.newDiscussion.pin = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, \"addon.mod_forum.discussionpinned\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.newDiscussion.pin);\n  }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_core_attachments_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-attachments\", 29);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"files\", ctx_r8.newDiscussion.files)(\"maxSize\", ctx_r8.forum.maxbytes)(\"maxSubmissions\", ctx_r8.forum.maxattachments)(\"component\", ctx_r8.component)(\"componentId\", ctx_r8.forum.cmid)(\"allowOffline\", true)(\"courseId\", ctx_r8.courseId);\n  }\n}\nfunction AddonModForumNewDiscussionPage_form_15_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template, 5, 4, \"ion-item\", 7);\n    i0.ɵɵtemplate(2, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template, 8, 14, \"ion-item\", 19);\n    i0.ɵɵelementStart(3, \"ion-item\")(4, \"ion-label\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-toggle\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_div_21_Template_ion_toggle_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.newDiscussion.subscribe = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template, 5, 4, \"ion-item\", 7);\n    i0.ɵɵtemplate(9, AddonModForumNewDiscussionPage_form_15_div_21_core_attachments_9_Template, 1, 7, \"core-attachments\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGroups && ctx_r2.groupIds.length > 1 && ctx_r2.accessInfo.cancanposttomygroups);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGroups);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 6, \"addon.mod_forum.discussionsubscription\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.newDiscussion.subscribe);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.canPin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.canCreateAttachments && ctx_r2.forum && ctx_r2.forum.maxattachments > 0);\n  }\n}\nfunction AddonModForumNewDiscussionPage_form_15_ion_item_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 30);\n    i0.ɵɵelement(1, \"ion-icon\", 31);\n    i0.ɵɵelementStart(2, \"ion-label\");\n    i0.ɵɵelement(3, \"core-format-text\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", ctx_r3.postInGroupMessage)(\"contextInstanceId\", ctx_r3.courseId)(\"wsNotFiltered\", true);\n  }\n}\nfunction AddonModForumNewDiscussionPage_form_15_ion_col_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-col\")(1, \"ion-button\", 32);\n    i0.ɵɵlistener(\"click\", function AddonModForumNewDiscussionPage_form_15_ion_col_26_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.discard());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, \"core.discard\"));\n  }\n}\nfunction AddonModForumNewDiscussionPage_form_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", null, 8)(2, \"ion-item\")(3, \"ion-label\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModForumNewDiscussionPage_form_15_Template_ion_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.newDiscussion.subject = $event);\n    });\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-item\")(9, \"ion-label\", 9);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"core-rich-text-editor\", 11);\n    i0.ɵɵlistener(\"contentChanged\", function AddonModForumNewDiscussionPage_form_15_Template_core_rich_text_editor_contentChanged_12_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.onMessageChange($event));\n    });\n    i0.ɵɵpipe(13, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ion-item\", 12);\n    i0.ɵɵlistener(\"click\", function AddonModForumNewDiscussionPage_form_15_Template_ion_item_click_14_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.toggleAdvanced());\n    });\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelement(16, \"ion-icon\", 13);\n    i0.ɵɵelementStart(17, \"ion-label\")(18, \"h2\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(21, AddonModForumNewDiscussionPage_form_15_div_21_Template, 10, 8, \"div\", 14);\n    i0.ɵɵtemplate(22, AddonModForumNewDiscussionPage_form_15_ion_item_22_Template, 4, 3, \"ion-item\", 15);\n    i0.ɵɵelementStart(23, \"ion-item\", 16)(24, \"ion-label\")(25, \"ion-row\");\n    i0.ɵɵtemplate(26, AddonModForumNewDiscussionPage_form_15_ion_col_26_Template, 4, 3, \"ion-col\", 7);\n    i0.ɵɵelementStart(27, \"ion-col\")(28, \"ion-button\", 17);\n    i0.ɵɵlistener(\"click\", function AddonModForumNewDiscussionPage_form_15_Template_ion_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.add());\n    });\n    i0.ɵɵtext(29);\n    i0.ɵɵpipe(30, \"translate\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 21, \"addon.mod_forum.subject\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newDiscussion.subject)(\"placeholder\", i0.ɵɵpipeBind1(7, 23, \"addon.mod_forum.subject\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 25, \"addon.mod_forum.message\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"control\", ctx_r0.messageControl)(\"placeholder\", i0.ɵɵpipeBind1(13, 27, \"addon.mod_forum.message\"))(\"component\", ctx_r0.component)(\"componentId\", ctx_r0.forum.cmid)(\"autoSave\", true)(\"contextInstanceId\", ctx_r0.forum.cmid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"detail\", false);\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r0.advanced)(\"aria-label\", i0.ɵɵpipeBind1(15, 29, ctx_r0.advanced ? \"core.hideadvanced\" : \"core.showadvanced\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"expandable-status-icon-expanded\", ctx_r0.advanced);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 31, \"addon.mod_forum.advanced\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.advanced);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showGroups && ctx_r0.postInGroupMessage && !ctx_r0.newDiscussion.postToAllGroups);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.hasOffline);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.newDiscussion.subject === \"\" || ctx_r0.newDiscussion.message === null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(30, 33, \"addon.mod_forum.posttoforum\"), \" \");\n  }\n}\n/**\n * Page that displays the new discussion form.\n */\nexport class AddonModForumNewDiscussionPage {\n  constructor(route, splitView) {\n    this.route = route;\n    this.splitView = splitView;\n    this.component = AddonModForumProvider.COMPONENT;\n    this.messageControl = new FormControl();\n    this.groupsLoaded = false;\n    this.showGroups = false;\n    this.hasOffline = false;\n    this.canCreateAttachments = true; // Assume we can by default.\n    this.canPin = false;\n    this.showForm = false;\n    this.groups = [];\n    this.groupIds = [];\n    this.newDiscussion = {\n      subject: '',\n      message: null,\n      postToAllGroups: false,\n      groupId: 0,\n      subscribe: true,\n      pin: false,\n      files: []\n    };\n    this.advanced = false; // Display all form fields.\n    this.accessInfo = {};\n    this.isDestroyed = false;\n    this.forceLeave = false;\n    this.logView = CoreTime.once(() => {\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'mod_forum_add_discussion',\n        name: Translate.instant('addon.mod_forum.addanewdiscussion'),\n        data: {\n          id: this.forumId,\n          category: 'forum'\n        },\n        url: '/mod/forum/post.php'\n      });\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var _routeData$swipeEnabl;\n        const routeData = _this.route.snapshot.data;\n        _this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n        _this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n        _this.forumId = CoreNavigator.getRequiredRouteNumberParam('forumId');\n        _this.timeCreated = CoreNavigator.getRequiredRouteNumberParam('timeCreated');\n        _this.initialGroupId = CoreNavigator.getRouteNumberParam('groupId');\n        // Discussion list uses 0 for all participants, but this page WebServices use a different value. Convert it.\n        _this.initialGroupId = _this.initialGroupId === 0 ? AddonModForumProvider.ALL_PARTICIPANTS : _this.initialGroupId;\n        if (_this.timeCreated !== 0 && ((_routeData$swipeEnabl = routeData.swipeEnabled) !== null && _routeData$swipeEnabl !== void 0 ? _routeData$swipeEnabl : true)) {\n          var _routeData$discussion;\n          const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonModForumDiscussionsSource, [_this.courseId, _this.cmId, (_routeData$discussion = routeData.discussionsPathPrefix) !== null && _routeData$discussion !== void 0 ? _routeData$discussion : '']);\n          _this.discussions = new AddonModForumNewDiscussionDiscussionsSwipeManager(source);\n          yield _this.discussions.start();\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n        _this.goBack();\n        return;\n      }\n      _this.fetchDiscussionData().finally(() => {\n        _this.groupsLoaded = true;\n      });\n    })();\n  }\n  /**\n   * User entered the page that contains the component.\n   */\n  ionViewDidEnter() {\n    if (this.syncObserver) {\n      // Already setup.\n      return;\n    }\n    // Refresh data if this discussion is synchronized automatically.\n    this.syncObserver = CoreEvents.on(AddonModForumSyncProvider.AUTO_SYNCED, data => {\n      if (data.forumId == this.forumId && data.userId == CoreSites.getCurrentSiteUserId()) {\n        CoreDomUtils.showAlertTranslated('core.notice', 'core.contenteditingsynced');\n        this.returnToDiscussions();\n      }\n    }, CoreSites.getCurrentSiteId());\n  }\n  /**\n   * Fetch if forum uses groups and the groups it uses.\n   *\n   * @param refresh Whether we're refreshing data.\n   * @returns Promise resolved when done.\n   */\n  fetchDiscussionData(refresh) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const mode = yield CoreGroups.getActivityGroupMode(_this2.cmId);\n        const promises = [];\n        if (mode === CoreGroupsProvider.SEPARATEGROUPS || mode === CoreGroupsProvider.VISIBLEGROUPS) {\n          promises.push(CoreGroups.instance.getActivityAllowedGroups(_this2.cmId).then(result => {\n            let promise;\n            if (mode === CoreGroupsProvider.VISIBLEGROUPS) {\n              // We need to check which of the returned groups the user can post to.\n              promise = _this2.validateVisibleGroups(result.groups);\n            } else {\n              // WS already filters groups, no need to do it ourselves. Add \"All participants\" if needed.\n              promise = _this2.addAllParticipantsOption(result.groups, true);\n            }\n            // eslint-disable-next-line promise/no-nesting\n            return promise.then( /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator(function* (forumGroups) {\n                if (forumGroups.length > 0) {\n                  _this2.groups = forumGroups;\n                  _this2.groupIds = forumGroups.map(group => group.id).filter(id => id > 0);\n                  // Do not override group id.\n                  _this2.newDiscussion.groupId = _this2.newDiscussion.groupId || _this2.getInitialGroupId();\n                  _this2.showGroups = true;\n                  yield _this2.calculateGroupName();\n                  if (_this2.groupIds.length <= 1) {\n                    _this2.newDiscussion.postToAllGroups = false;\n                  }\n                  return;\n                } else {\n                  const message = mode === CoreGroupsProvider.SEPARATEGROUPS ? 'addon.mod_forum.cannotadddiscussionall' : 'addon.mod_forum.cannotadddiscussion';\n                  throw new Error(Translate.instant(message));\n                }\n              });\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n          }));\n        } else {\n          _this2.showGroups = false;\n          _this2.newDiscussion.postToAllGroups = false;\n          // Use the canAddDiscussion WS to check if the user can add attachments and pin discussions.\n          promises.push(CoreUtils.ignoreErrors(AddonModForum.instance.canAddDiscussionToAll(_this2.forumId, {\n            cmId: _this2.cmId\n          }).then(response => {\n            _this2.canPin = !!response.canpindiscussions;\n            _this2.canCreateAttachments = !!response.cancreateattachment;\n            return;\n          })));\n        }\n        // Get forum.\n        promises.push(AddonModForum.getForum(_this2.courseId, _this2.cmId).then(forum => _this2.forum = forum));\n        // Get access information.\n        promises.push(AddonModForum.instance.getAccessInformation(_this2.forumId, {\n          cmId: _this2.cmId\n        }).then(accessInfo => _this2.accessInfo = accessInfo));\n        yield Promise.all(promises);\n        // If editing a discussion, get offline data.\n        if (_this2.timeCreated && !refresh) {\n          _this2.syncId = AddonModForumSync.getForumSyncId(_this2.forumId);\n          yield AddonModForumSync.waitForSync(_this2.syncId).then(() => {\n            // Do not block if the scope is already destroyed.\n            if (!_this2.isDestroyed) {\n              CoreSync.blockOperation(AddonModForumProvider.COMPONENT, _this2.syncId);\n            }\n            return AddonModForumOffline.instance.getNewDiscussion(_this2.forumId, _this2.timeCreated).then( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator(function* (discussion) {\n                _this2.hasOffline = true;\n                discussion.options = discussion.options || {};\n                if (discussion.groupid == AddonModForumProvider.ALL_GROUPS) {\n                  _this2.newDiscussion.groupId = _this2.groups[0].id;\n                  _this2.newDiscussion.postToAllGroups = true;\n                } else {\n                  _this2.newDiscussion.groupId = discussion.groupid;\n                  _this2.newDiscussion.postToAllGroups = false;\n                }\n                _this2.newDiscussion.subject = discussion.subject;\n                _this2.newDiscussion.message = discussion.message;\n                _this2.newDiscussion.subscribe = !!discussion.options.discussionsubscribe;\n                _this2.newDiscussion.pin = !!discussion.options.discussionpinned;\n                _this2.messageControl.setValue(discussion.message);\n                yield _this2.calculateGroupName();\n                // Treat offline attachments if any.\n                if (typeof discussion.options.attachmentsid === 'object' && discussion.options.attachmentsid.offline) {\n                  const files = yield AddonModForumHelper.getNewDiscussionStoredFiles(_this2.forumId, _this2.timeCreated);\n                  _this2.newDiscussion.files = files;\n                }\n                // Show advanced fields by default if any of them has not the default value.\n                if (!_this2.newDiscussion.subscribe || _this2.newDiscussion.pin || _this2.newDiscussion.files.length || _this2.groups.length > 0 && _this2.newDiscussion.groupId != _this2.groups[0].id || _this2.newDiscussion.postToAllGroups) {\n                  _this2.advanced = true;\n                }\n                return;\n              });\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n          });\n        }\n        if (!_this2.originalData) {\n          // Initialize original data.\n          _this2.originalData = {\n            subject: _this2.newDiscussion.subject,\n            message: _this2.newDiscussion.message,\n            files: _this2.newDiscussion.files.slice()\n          };\n        }\n        _this2.showForm = true;\n        _this2.logView();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_forum.errorgetgroups', true);\n        _this2.showForm = false;\n      }\n    })();\n  }\n  /**\n   * Validate which of the groups returned by getActivityAllowedGroups in visible groups should be shown to post to.\n   *\n   * @param forumGroups Forum groups.\n   * @returns Promise resolved with the list of groups.\n   */\n  validateVisibleGroups(forumGroups) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      let response;\n      // We first check if the user can post to all the groups.\n      try {\n        response = yield AddonModForum.canAddDiscussionToAll(_this3.forumId, {\n          cmId: _this3.cmId\n        });\n      } catch (error) {\n        // The call failed, let's assume he can't.\n        response = {\n          status: false,\n          canpindiscussions: false,\n          cancreateattachment: true\n        };\n      }\n      _this3.canPin = !!response.canpindiscussions;\n      _this3.canCreateAttachments = !!response.cancreateattachment;\n      // The user can post to all groups, add the \"All participants\" option and return them all.\n      if (response.status) {\n        return _this3.addAllParticipantsOption(forumGroups, false);\n      }\n      // The user can't post to all groups, let's check which groups he can post to.\n      const promises = [];\n      const filtered = [];\n      forumGroups.forEach(group => {\n        promises.push(AddonModForum.instance.canAddDiscussion(_this3.forumId, group.id, {\n          cmId: _this3.cmId\n        })\n        // The call failed, let's return true so the group is shown.\n        // If the user can't post to it an error will be shown when he tries to add the discussion.\n        .catch(() => ({\n          status: true\n        })).then(response => {\n          if (response.status) {\n            filtered.push(group);\n          }\n          return;\n        }));\n      });\n      yield Promise.all(promises);\n      return filtered;\n    })();\n  }\n  /**\n   * Filter forum groups, returning only those that are inside user groups.\n   *\n   * @param forumGroups Forum groups.\n   * @param userGroups User groups.\n   * @returns Filtered groups.\n   */\n  filterGroups(forumGroups, userGroups) {\n    const userGroupsIds = userGroups.map(group => group.id);\n    return forumGroups.filter(forumGroup => userGroupsIds.indexOf(forumGroup.id) > -1);\n  }\n  /**\n   * Get the initial group ID.\n   *\n   * @returns Initial group ID.\n   */\n  getInitialGroupId() {\n    return this.initialGroupId && this.groups.find(group => group.id === this.initialGroupId) ? this.initialGroupId : this.groups[0].id;\n  }\n  /**\n   * Add the \"All participants\" option to a list of groups if the user can add a discussion to all participants.\n   *\n   * @param groups Groups.\n   * @param check True to check if the user can add a discussion to all participants.\n   * @returns Promise resolved with the list of groups.\n   */\n  addAllParticipantsOption(groups, check) {\n    let promise;\n    if (check) {\n      // We need to check if the user can add a discussion to all participants.\n      promise = AddonModForum.canAddDiscussionToAll(this.forumId, {\n        cmId: this.cmId\n      }).then(response => {\n        this.canPin = !!response.canpindiscussions;\n        this.canCreateAttachments = !!response.cancreateattachment;\n        return response.status;\n      }).catch(() =>\n      // The call failed, let's assume he can't.\n      false);\n    } else {\n      // No need to check, assume the user can.\n      promise = Promise.resolve(true);\n    }\n    return promise.then(canAdd => {\n      if (canAdd) {\n        groups.unshift({\n          courseid: this.courseId,\n          id: AddonModForumProvider.ALL_PARTICIPANTS,\n          name: Translate.instant('core.allparticipants')\n        });\n      }\n      return groups;\n    });\n  }\n  /**\n   * Pull to refresh.\n   *\n   * @param refresher Refresher.\n   */\n  refreshGroups(refresher) {\n    const promises = [CoreGroups.invalidateActivityGroupMode(this.cmId), CoreGroups.invalidateActivityAllowedGroups(this.cmId), AddonModForum.invalidateCanAddDiscussion(this.forumId)];\n    Promise.all(promises).finally(() => {\n      this.fetchDiscussionData(true).finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n      });\n    });\n  }\n  /**\n   * Convenience function to update or return to discussions depending on device.\n   *\n   * @param discussionIds Ids of the new discussions.\n   * @param discTimecreated The time created of the discussion (if offline).\n   */\n  returnToDiscussions(discussionIds, discTimecreated) {\n    var _this$splitView;\n    this.forceLeave = true;\n    // Delete the local files from the tmp folder.\n    CoreFileUploader.clearTmpFiles(this.newDiscussion.files);\n    CoreEvents.trigger(AddonModForumProvider.NEW_DISCUSSION_EVENT, {\n      forumId: this.forumId,\n      cmId: this.cmId,\n      discussionIds: discussionIds,\n      discTimecreated: discTimecreated,\n      groupId: this.showGroups && !this.newDiscussion.postToAllGroups ? this.newDiscussion.groupId : undefined\n    }, CoreSites.getCurrentSiteId());\n    if ((_this$splitView = this.splitView) !== null && _this$splitView !== void 0 && _this$splitView.outletActivated) {\n      // Empty form.\n      this.hasOffline = false;\n      this.newDiscussion.subject = '';\n      this.newDiscussion.message = null;\n      this.newDiscussion.files = [];\n      this.newDiscussion.postToAllGroups = false;\n      this.messageEditor.clearText();\n      this.originalData = CoreUtils.clone(this.newDiscussion);\n    } else {\n      CoreNavigator.back();\n    }\n  }\n  /**\n   * Message changed.\n   *\n   * @param text The new text.\n   */\n  onMessageChange(text) {\n    this.newDiscussion.message = text !== null && text !== void 0 ? text : null;\n  }\n  /**\n   * Add a new discussion.\n   */\n  add() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const forumName = _this4.forum.name;\n      const subject = _this4.newDiscussion.subject;\n      let message = _this4.newDiscussion.message || '';\n      const pin = _this4.newDiscussion.pin;\n      const attachments = _this4.newDiscussion.files;\n      const discTimecreated = _this4.timeCreated || Date.now();\n      const options = {\n        discussionsubscribe: !!_this4.newDiscussion.subscribe\n      };\n      if (!subject) {\n        CoreDomUtils.showErrorModal('addon.mod_forum.erroremptysubject', true);\n        return;\n      }\n      if (!message) {\n        CoreDomUtils.showErrorModal('addon.mod_forum.erroremptymessage', true);\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      // Add some HTML to the message if needed.\n      message = CoreTextUtils.formatHtmlLines(message);\n      if (pin) {\n        options.discussionpinned = true;\n      }\n      const groupIds = _this4.newDiscussion.postToAllGroups ? _this4.groupIds : [_this4.newDiscussion.groupId];\n      try {\n        const discussionIds = yield AddonModForumHelper.addNewDiscussion(_this4.forumId, forumName, _this4.courseId, subject, message, attachments, options, groupIds, discTimecreated);\n        if (discussionIds) {\n          // Data sent to server, delete stored files (if any).\n          AddonModForumHelper.deleteNewDiscussionStoredFiles(_this4.forumId, discTimecreated);\n          CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, {\n            module: 'forum'\n          });\n        }\n        if (discussionIds && discussionIds.length < groupIds.length) {\n          // Some discussions could not be created.\n          CoreDomUtils.showErrorModalDefault(null, 'addon.mod_forum.errorposttoallgroups', true);\n        }\n        CoreForms.triggerFormSubmittedEvent(_this4.formElement, !!discussionIds, CoreSites.getCurrentSiteId());\n        _this4.returnToDiscussions(discussionIds, discTimecreated);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_forum.cannotcreatediscussion', true);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Discard an offline saved discussion.\n   */\n  discard() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n        const promises = [];\n        promises.push(AddonModForumOffline.deleteNewDiscussion(_this5.forumId, _this5.timeCreated));\n        promises.push(CoreUtils.ignoreErrors(AddonModForumHelper.deleteNewDiscussionStoredFiles(_this5.forumId, _this5.timeCreated)));\n        yield Promise.all(promises);\n        CoreForms.triggerFormCancelledEvent(_this5.formElement, CoreSites.getCurrentSiteId());\n        _this5.returnToDiscussions();\n      } catch (error) {\n        // Cancelled.\n      }\n    })();\n  }\n  /**\n   * Show or hide advanced form fields.\n   */\n  toggleAdvanced() {\n    this.advanced = !this.advanced;\n  }\n  /**\n   * Calculate current group's name.\n   */\n  calculateGroupName() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (_this6.newDiscussion.groupId <= 0) {\n        _this6.postInGroupMessage = undefined;\n      } else {\n        var _this6$groups$find;\n        const groupName = (_this6$groups$find = _this6.groups.find(group => group.id === _this6.newDiscussion.groupId)) === null || _this6$groups$find === void 0 ? void 0 : _this6$groups$find.name;\n        _this6.postInGroupMessage = groupName && Translate.instant('addon.mod_forum.postingroup', {\n          groupname: groupName\n        });\n      }\n    })();\n  }\n  /**\n   * Check if we can leave the page or not.\n   *\n   * @returns Resolved if we can leave it, rejected if not.\n   */\n  canLeave() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (_this7.forceLeave) {\n        return true;\n      }\n      if (AddonModForumHelper.hasPostDataChanged(_this7.newDiscussion, _this7.originalData)) {\n        // Show confirmation if some data has been modified.\n        yield CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n      }\n      // Delete the local files from the tmp folder.\n      CoreFileUploader.clearTmpFiles(_this7.newDiscussion.files);\n      if (_this7.formElement) {\n        CoreForms.triggerFormCancelledEvent(_this7.formElement, CoreSites.getCurrentSiteId());\n      }\n      return true;\n    })();\n  }\n  /**\n   * Runs when the page is about to leave and no longer be the active page.\n   */\n  ionViewWillLeave() {\n    this.syncObserver && this.syncObserver.off();\n    delete this.syncObserver;\n  }\n  /**\n   * Helper function to go back.\n   */\n  goBack() {\n    var _this$splitView2;\n    if ((_this$splitView2 = this.splitView) !== null && _this$splitView2 !== void 0 && _this$splitView2.outletActivated) {\n      CoreNavigator.navigate('../../');\n    } else {\n      CoreNavigator.back();\n    }\n  }\n  /**\n   * Page destroyed.\n   */\n  ngOnDestroy() {\n    var _this$discussions;\n    if (this.syncId) {\n      CoreSync.unblockOperation(AddonModForumProvider.COMPONENT, this.syncId);\n    }\n    this.isDestroyed = true;\n    (_this$discussions = this.discussions) === null || _this$discussions === void 0 || _this$discussions.destroy();\n  }\n}\n/**\n * Helper to manage swiping within a collection of discussions.\n */\n_class = AddonModForumNewDiscussionPage;\n_class.ɵfac = function AddonModForumNewDiscussionPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CoreSplitViewComponent, 8));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-forum-new-discussion\"]],\n  viewQuery: function AddonModForumNewDiscussionPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(CoreEditorRichTextEditorComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageEditor = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 13,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [3, \"core-swipe-navigation\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [4, \"ngIf\"], [\"newDiscFormEl\", \"\"], [\"position\", \"stacked\"], [\"type\", \"text\", \"name\", \"subject\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"name\", \"addon_mod_forum_new_discussion\", \"contextLevel\", \"module\", \"elementId\", \"message\", 3, \"control\", \"placeholder\", \"component\", \"componentId\", \"autoSave\", \"contextInstanceId\", \"contentChanged\"], [\"button\", \"\", \"role\", \"heading\", \"aria-controls\", \"addon-mod-forum-new-discussion-advanced\", 1, \"divider\", \"ion-text-wrap\", 3, \"detail\", \"click\"], [\"name\", \"fas-chevron-right\", \"flip-rtl\", \"\", \"slot\", \"start\", \"aria-hidden\", \"true\", 1, \"expandable-status-icon\"], [\"id\", \"addon-mod-forum-new-discussion-advanced\", 4, \"ngIf\"], [\"class\", \"addon-forum-group-info\", 4, \"ngIf\"], [1, \"addon-forum-new-discussion-buttons\"], [\"expand\", \"block\", 3, \"disabled\", \"click\"], [\"id\", \"addon-mod-forum-new-discussion-advanced\"], [\"class\", \"core-edit-set-group\", 4, \"ngIf\"], [\"name\", \"subscribe\", \"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\"], [3, \"files\", \"maxSize\", \"maxSubmissions\", \"component\", \"componentId\", \"allowOffline\", \"courseId\", 4, \"ngIf\"], [\"name\", \"postallgroups\", \"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\"], [1, \"core-edit-set-group\"], [\"interface\", \"action-sheet\", \"name\", \"groupid\", 3, \"ngModel\", \"disabled\", \"interfaceOptions\", \"cancelText\", \"ngModelChange\", \"ionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"contextLevel\", \"course\", 3, \"text\", \"contextInstanceId\", \"wsNotFiltered\"], [\"name\", \"pin\", \"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\"], [3, \"files\", \"maxSize\", \"maxSubmissions\", \"component\", \"componentId\", \"allowOffline\", \"courseId\"], [1, \"addon-forum-group-info\"], [\"name\", \"fas-circle-info\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"expand\", \"block\", \"fill\", \"outline\", 3, \"click\"]],\n  template: function AddonModForumNewDiscussionPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"ion-buttons\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-content\", 3)(11, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModForumNewDiscussionPage_Template_ion_refresher_ionRefresh_11_listener($event) {\n        return ctx.refreshGroups($event.target);\n      });\n      i0.ɵɵelement(12, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"core-loading\", 6);\n      i0.ɵɵtemplate(15, AddonModForumNewDiscussionPage_form_15_Template, 31, 35, \"form\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 7, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 9, \"addon.mod_forum.addanewdiscussion\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"core-swipe-navigation\", ctx.discussions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.groupsLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(13, 11, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.groupsLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.CoreAttachmentsComponent, i5.CoreLoadingComponent, i6.CoreFaIconDirective, i7.CoreFormatTextDirective, i8.CoreSwipeNavigationDirective, i9.CoreContentDirective, i10.CoreUpdateNonReactiveAttributesDirective, i11.ɵNgNoValidate, i11.NgControlStatus, i11.NgControlStatusGroup, i11.NgModel, i11.NgForm, i12.IonButton, i12.IonButtons, i12.IonCol, i12.IonContent, i12.IonHeader, i12.IonIcon, i12.IonInput, i12.IonItem, i12.IonLabel, i12.IonRefresher, i12.IonRefresherContent, i12.IonRow, i12.IonSelect, i12.IonSelectOption, i12.IonTitle, i12.IonToggle, i12.IonToolbar, i12.BooleanValueAccessor, i12.SelectValueAccessor, i12.TextValueAccessor, i12.IonBackButton, i13.CoreEditorRichTextEditorComponent, i14.TranslatePipe],\n  styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n[_nghost-%COMP%]   .addon-forum-group-info[_ngcontent-%COMP%]    > ion-icon[slot][_ngcontent-%COMP%] {\\n  color: var(--ion-color-info);\\n  -webkit-margin-end: 16px;\\n  margin-inline-end: 16px;\\n}\\n[_nghost-%COMP%]   .addon-forum-new-discussion-buttons[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n}\\n[_nghost-%COMP%]   .addon-forum-new-discussion-buttons[_ngcontent-%COMP%]   ion-col[_ngcontent-%COMP%] {\\n  padding-top: 0;\\n  padding-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});\nclass AddonModForumNewDiscussionDiscussionsSwipeManager extends AddonModForumDiscussionsSwipeManager {\n  /**\n   * @inheritdoc\n   */\n  getSelectedItemPathFromRoute(route) {\n    return `${this.getSource().DISCUSSIONS_PATH_PREFIX}new/${route.params.timeCreated}`;\n  }\n}","map":{"version":3,"names":["FormControl","CoreEvents","CoreGroups","CoreGroupsProvider","CoreNavigator","AddonModForum","AddonModForumProvider","CoreEditorRichTextEditorComponent","AddonModForumSync","AddonModForumSyncProvider","CoreSites","CoreDomUtils","Translate","CoreSync","AddonModForumOffline","CoreUtils","AddonModForumHelper","CoreFileUploader","CoreTextUtils","CoreForms","AddonModForumDiscussionsSwipeManager","AddonModForumDiscussionsSource","CoreRoutedItemsManagerSourcesTracker","CoreTime","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template_ion_toggle_ngModelChange_4_listener","$event","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","newDiscussion","postToAllGroups","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","ctx_r5","ɵɵelement","group_r12","id","name","ctx_r11","courseId","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template_ion_select_ngModelChange_4_listener","_r14","ctx_r13","groupId","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template_ion_select_ionChange_4_listener","ctx_r15","calculateGroupName","ɵɵtemplate","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_ion_select_option_7_Template","ctx_r6","ɵɵpureFunction1","_c1","groups","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template_ion_toggle_ngModelChange_4_listener","_r17","ctx_r16","pin","ctx_r7","ctx_r8","files","forum","maxbytes","maxattachments","component","cmid","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_1_Template","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_2_Template","AddonModForumNewDiscussionPage_form_15_div_21_Template_ion_toggle_ngModelChange_7_listener","_r19","ctx_r18","subscribe","AddonModForumNewDiscussionPage_form_15_div_21_ion_item_8_Template","AddonModForumNewDiscussionPage_form_15_div_21_core_attachments_9_Template","ctx_r2","showGroups","groupIds","length","accessInfo","cancanposttomygroups","canPin","canCreateAttachments","ctx_r3","postInGroupMessage","AddonModForumNewDiscussionPage_form_15_ion_col_26_Template_ion_button_click_1_listener","_r21","ctx_r20","discard","AddonModForumNewDiscussionPage_form_15_Template_ion_input_ngModelChange_6_listener","_r23","ctx_r22","subject","AddonModForumNewDiscussionPage_form_15_Template_core_rich_text_editor_contentChanged_12_listener","ctx_r24","onMessageChange","AddonModForumNewDiscussionPage_form_15_Template_ion_item_click_14_listener","ctx_r25","toggleAdvanced","AddonModForumNewDiscussionPage_form_15_div_21_Template","AddonModForumNewDiscussionPage_form_15_ion_item_22_Template","AddonModForumNewDiscussionPage_form_15_ion_col_26_Template","AddonModForumNewDiscussionPage_form_15_Template_ion_button_click_28_listener","ctx_r26","add","ctx_r0","messageControl","ɵɵattribute","advanced","ɵɵclassProp","hasOffline","message","ɵɵtextInterpolate1","AddonModForumNewDiscussionPage","constructor","route","splitView","COMPONENT","groupsLoaded","showForm","isDestroyed","forceLeave","logView","once","logEvent","type","VIEW_ITEM","ws","instant","data","forumId","category","url","ngOnInit","_this","_asyncToGenerator","_routeData$swipeEnabl","routeData","snapshot","getRequiredRouteNumberParam","cmId","timeCreated","initialGroupId","getRouteNumberParam","ALL_PARTICIPANTS","swipeEnabled","_routeData$discussion","source","getOrCreateSource","discussionsPathPrefix","discussions","AddonModForumNewDiscussionDiscussionsSwipeManager","start","error","showErrorModal","goBack","fetchDiscussionData","finally","ionViewDidEnter","syncObserver","on","AUTO_SYNCED","userId","getCurrentSiteUserId","showAlertTranslated","returnToDiscussions","getCurrentSiteId","refresh","_this2","mode","getActivityGroupMode","promises","SEPARATEGROUPS","VISIBLEGROUPS","push","instance","getActivityAllowedGroups","then","result","promise","validateVisibleGroups","addAllParticipantsOption","_ref","forumGroups","map","group","filter","getInitialGroupId","Error","_x","apply","arguments","ignoreErrors","canAddDiscussionToAll","response","canpindiscussions","cancreateattachment","getForum","getAccessInformation","Promise","all","syncId","getForumSyncId","waitForSync","blockOperation","getNewDiscussion","_ref2","discussion","options","groupid","ALL_GROUPS","discussionsubscribe","discussionpinned","setValue","attachmentsid","offline","getNewDiscussionStoredFiles","_x2","originalData","slice","showErrorModalDefault","_this3","status","filtered","forEach","canAddDiscussion","catch","filterGroups","userGroups","userGroupsIds","forumGroup","indexOf","find","check","resolve","canAdd","unshift","courseid","refreshGroups","refresher","invalidateActivityGroupMode","invalidateActivityAllowedGroups","invalidateCanAddDiscussion","complete","discussionIds","discTimecreated","_this$splitView","clearTmpFiles","trigger","NEW_DISCUSSION_EVENT","undefined","outletActivated","messageEditor","clearText","clone","back","text","_this4","forumName","attachments","Date","now","modal","showModalLoading","formatHtmlLines","addNewDiscussion","deleteNewDiscussionStoredFiles","ACTIVITY_DATA_SENT","module","triggerFormSubmittedEvent","formElement","dismiss","_this5","showConfirm","deleteNewDiscussion","triggerFormCancelledEvent","_this6","_this6$groups$find","groupName","groupname","canLeave","_this7","hasPostDataChanged","ionViewWillLeave","off","_this$splitView2","navigate","ngOnDestroy","_this$discussions","unblockOperation","destroy","_class","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CoreSplitViewComponent","selectors","viewQuery","AddonModForumNewDiscussionPage_Query","rf","ctx","AddonModForumNewDiscussionPage_Template_ion_refresher_ionRefresh_11_listener","target","AddonModForumNewDiscussionPage_form_15_Template","ɵɵpropertyInterpolate","getSelectedItemPathFromRoute","getSource","DISCUSSIONS_PATH_PREFIX","params"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/forum/pages/new-discussion/new-discussion.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/forum/pages/new-discussion/new-discussion.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, ViewChild, ElementRef, OnInit, Optional } from '@angular/core';\nimport { FileEntry } from '@awesome-cordova-plugins/file/ngx';\nimport { FormControl } from '@angular/forms';\nimport { CoreEvents, CoreEventObserver } from '@singletons/events';\nimport { CoreGroup, CoreGroups, CoreGroupsProvider } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport {\n    AddonModForum,\n    AddonModForumAccessInformation,\n    AddonModForumCanAddDiscussion,\n    AddonModForumData,\n    AddonModForumProvider,\n} from '@addons/mod/forum/services/forum';\nimport { CoreEditorRichTextEditorComponent } from '@features/editor/components/rich-text-editor/rich-text-editor';\nimport { AddonModForumSync, AddonModForumSyncProvider } from '@addons/mod/forum/services/forum-sync';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport { CoreSync } from '@services/sync';\nimport { AddonModForumDiscussionOptions, AddonModForumOffline } from '@addons/mod/forum/services/forum-offline';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModForumHelper } from '@addons/mod/forum/services/forum-helper';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreForms } from '@singletons/form';\nimport { AddonModForumDiscussionsSwipeManager } from '../../classes/forum-discussions-swipe-manager';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { AddonModForumDiscussionsSource } from '../../classes/forum-discussions-source';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\ntype NewDiscussionData = {\n    subject: string;\n    message: string | null; // Null means empty or just white space.\n    postToAllGroups: boolean;\n    groupId: number;\n    subscribe: boolean;\n    pin: boolean;\n    files: FileEntry[];\n};\n\n/**\n * Page that displays the new discussion form.\n */\n@Component({\n    selector: 'page-addon-mod-forum-new-discussion',\n    templateUrl: 'new-discussion.html',\n    styleUrls: ['new-discussion.scss'],\n})\nexport class AddonModForumNewDiscussionPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild('newDiscFormEl') formElement!: ElementRef;\n    @ViewChild(CoreEditorRichTextEditorComponent) messageEditor!: CoreEditorRichTextEditorComponent;\n\n    component = AddonModForumProvider.COMPONENT;\n    messageControl = new FormControl();\n    groupsLoaded = false;\n    showGroups = false;\n    hasOffline = false;\n    canCreateAttachments = true; // Assume we can by default.\n    canPin = false;\n    forum!: AddonModForumData;\n    showForm = false;\n    groups: CoreGroup[] = [];\n    groupIds: number[] = [];\n    newDiscussion: NewDiscussionData = {\n        subject: '',\n        message: null,\n        postToAllGroups: false,\n        groupId: 0,\n        subscribe: true,\n        pin: false,\n        files: [],\n    };\n\n    advanced = false; // Display all form fields.\n    accessInfo: AddonModForumAccessInformation = {};\n    courseId!: number;\n    postInGroupMessage?: string;\n\n    discussions?: AddonModForumNewDiscussionDiscussionsSwipeManager;\n\n    protected cmId!: number;\n    protected forumId!: number;\n    protected timeCreated!: number;\n    protected syncId!: string;\n    protected syncObserver?: CoreEventObserver;\n    protected isDestroyed = false;\n    protected originalData?: Partial<NewDiscussionData>;\n    protected forceLeave = false;\n    protected initialGroupId?: number;\n    protected logView: () => void;\n\n    constructor(protected route: ActivatedRoute, @Optional() protected splitView: CoreSplitViewComponent) {\n        this.logView = CoreTime.once(() => {\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM,\n                ws: 'mod_forum_add_discussion',\n                name: Translate.instant('addon.mod_forum.addanewdiscussion'),\n                data: { id: this.forumId, category: 'forum' },\n                url: '/mod/forum/post.php',\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            const routeData = this.route.snapshot.data;\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.forumId = CoreNavigator.getRequiredRouteNumberParam('forumId');\n            this.timeCreated = CoreNavigator.getRequiredRouteNumberParam('timeCreated');\n            this.initialGroupId = CoreNavigator.getRouteNumberParam('groupId');\n\n            // Discussion list uses 0 for all participants, but this page WebServices use a different value. Convert it.\n            this.initialGroupId = this.initialGroupId === 0 ? AddonModForumProvider.ALL_PARTICIPANTS : this.initialGroupId;\n\n            if (this.timeCreated !== 0 && (routeData.swipeEnabled ?? true)) {\n                const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                    AddonModForumDiscussionsSource,\n                    [this.courseId, this.cmId, routeData.discussionsPathPrefix ?? ''],\n                );\n\n                this.discussions = new AddonModForumNewDiscussionDiscussionsSwipeManager(source);\n\n                await this.discussions.start();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            this.goBack();\n\n            return;\n        }\n\n        this.fetchDiscussionData().finally(() => {\n            this.groupsLoaded = true;\n        });\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    ionViewDidEnter(): void {\n        if (this.syncObserver) {\n            // Already setup.\n            return;\n        }\n\n        // Refresh data if this discussion is synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonModForumSyncProvider.AUTO_SYNCED, data => {\n            if (data.forumId == this.forumId && data.userId == CoreSites.getCurrentSiteUserId()) {\n                CoreDomUtils.showAlertTranslated('core.notice', 'core.contenteditingsynced');\n                this.returnToDiscussions();\n            }\n        }, CoreSites.getCurrentSiteId());\n    }\n\n    /**\n     * Fetch if forum uses groups and the groups it uses.\n     *\n     * @param refresh Whether we're refreshing data.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchDiscussionData(refresh?: boolean): Promise<void> {\n        try {\n            const mode = await CoreGroups.getActivityGroupMode(this.cmId);\n            const promises: Promise<unknown>[] = [];\n\n            if (mode === CoreGroupsProvider.SEPARATEGROUPS || mode === CoreGroupsProvider.VISIBLEGROUPS) {\n                promises.push(\n                    CoreGroups.instance\n                        .getActivityAllowedGroups(this.cmId)\n                        .then((result) => {\n                            let promise;\n                            if (mode === CoreGroupsProvider.VISIBLEGROUPS) {\n                                // We need to check which of the returned groups the user can post to.\n                                promise = this.validateVisibleGroups(result.groups);\n                            } else {\n                                // WS already filters groups, no need to do it ourselves. Add \"All participants\" if needed.\n                                promise = this.addAllParticipantsOption(result.groups, true);\n                            }\n\n                            // eslint-disable-next-line promise/no-nesting\n                            return promise.then(async (forumGroups) => {\n                                if (forumGroups.length > 0) {\n                                    this.groups = forumGroups;\n                                    this.groupIds = forumGroups.map((group) => group.id).filter((id) => id > 0);\n                                    // Do not override group id.\n                                    this.newDiscussion.groupId = this.newDiscussion.groupId || this.getInitialGroupId();\n                                    this.showGroups = true;\n                                    await this.calculateGroupName();\n                                    if (this.groupIds.length <= 1) {\n                                        this.newDiscussion.postToAllGroups = false;\n                                    }\n\n                                    return;\n                                } else {\n                                    const message = mode === CoreGroupsProvider.SEPARATEGROUPS ?\n                                        'addon.mod_forum.cannotadddiscussionall' : 'addon.mod_forum.cannotadddiscussion';\n\n                                    throw new Error(Translate.instant(message));\n                                }\n                            });\n                        }),\n                );\n            } else {\n                this.showGroups = false;\n                this.newDiscussion.postToAllGroups = false;\n\n                // Use the canAddDiscussion WS to check if the user can add attachments and pin discussions.\n                promises.push(\n                    CoreUtils.ignoreErrors(\n                        AddonModForum.instance\n                            .canAddDiscussionToAll(this.forumId, { cmId: this.cmId })\n                            .then((response) => {\n                                this.canPin = !!response.canpindiscussions;\n                                this.canCreateAttachments = !!response.cancreateattachment;\n\n                                return;\n                            }),\n                    ),\n                );\n            }\n\n            // Get forum.\n            promises.push(AddonModForum.getForum(this.courseId, this.cmId).then((forum) => this.forum = forum));\n\n            // Get access information.\n            promises.push(\n                AddonModForum.instance\n                    .getAccessInformation(this.forumId, { cmId: this.cmId })\n                    .then((accessInfo) => this.accessInfo = accessInfo),\n            );\n\n            await Promise.all(promises);\n\n            // If editing a discussion, get offline data.\n            if (this.timeCreated && !refresh) {\n                this.syncId = AddonModForumSync.getForumSyncId(this.forumId);\n\n                await AddonModForumSync.waitForSync(this.syncId).then(() => {\n                    // Do not block if the scope is already destroyed.\n                    if (!this.isDestroyed) {\n                        CoreSync.blockOperation(AddonModForumProvider.COMPONENT, this.syncId);\n                    }\n\n                    return AddonModForumOffline.instance\n                        .getNewDiscussion(this.forumId, this.timeCreated)\n                        .then(async (discussion) => {\n                            this.hasOffline = true;\n                            discussion.options = discussion.options || {};\n                            if (discussion.groupid == AddonModForumProvider.ALL_GROUPS) {\n                                this.newDiscussion.groupId = this.groups[0].id;\n                                this.newDiscussion.postToAllGroups = true;\n                            } else {\n                                this.newDiscussion.groupId = discussion.groupid;\n                                this.newDiscussion.postToAllGroups = false;\n                            }\n                            this.newDiscussion.subject = discussion.subject;\n                            this.newDiscussion.message = discussion.message;\n                            this.newDiscussion.subscribe = !!discussion.options.discussionsubscribe;\n                            this.newDiscussion.pin = !!discussion.options.discussionpinned;\n                            this.messageControl.setValue(discussion.message);\n                            await this.calculateGroupName();\n\n                            // Treat offline attachments if any.\n                            if (typeof discussion.options.attachmentsid === 'object' && discussion.options.attachmentsid.offline) {\n                                const files = await AddonModForumHelper.getNewDiscussionStoredFiles(\n                                    this.forumId,\n                                    this.timeCreated,\n                                );\n\n                                this.newDiscussion.files = files;\n                            }\n\n                            // Show advanced fields by default if any of them has not the default value.\n                            if (\n                                !this.newDiscussion.subscribe ||\n                                this.newDiscussion.pin ||\n                                this.newDiscussion.files.length ||\n                                this.groups.length > 0 && this.newDiscussion.groupId != this.groups[0].id ||\n                                this.newDiscussion.postToAllGroups\n                            ) {\n                                this.advanced = true;\n                            }\n\n                            return;\n                        });\n                });\n            }\n\n            if (!this.originalData) {\n                // Initialize original data.\n                this.originalData = {\n                    subject: this.newDiscussion.subject,\n                    message: this.newDiscussion.message,\n                    files: this.newDiscussion.files.slice(),\n                };\n            }\n\n            this.showForm = true;\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_forum.errorgetgroups', true);\n\n            this.showForm = false;\n        }\n    }\n\n    /**\n     * Validate which of the groups returned by getActivityAllowedGroups in visible groups should be shown to post to.\n     *\n     * @param forumGroups Forum groups.\n     * @returns Promise resolved with the list of groups.\n     */\n    protected async validateVisibleGroups(forumGroups: CoreGroup[]): Promise<CoreGroup[]> {\n        let response: AddonModForumCanAddDiscussion;\n\n        // We first check if the user can post to all the groups.\n        try {\n            response = await AddonModForum.canAddDiscussionToAll(this.forumId, { cmId: this.cmId });\n        } catch (error) {\n            // The call failed, let's assume he can't.\n            response = {\n                status: false,\n                canpindiscussions: false,\n                cancreateattachment: true,\n            };\n        }\n\n        this.canPin = !!response.canpindiscussions;\n        this.canCreateAttachments = !!response.cancreateattachment;\n\n        // The user can post to all groups, add the \"All participants\" option and return them all.\n        if (response.status) {\n            return this.addAllParticipantsOption(forumGroups, false);\n        }\n\n        // The user can't post to all groups, let's check which groups he can post to.\n        const promises: Promise<unknown>[] = [];\n        const filtered: CoreGroup[] = [];\n\n        forumGroups.forEach((group) => {\n            promises.push(\n                AddonModForum.instance\n                    .canAddDiscussion(this.forumId, group.id, { cmId: this.cmId })\n\n                    // The call failed, let's return true so the group is shown.\n                    // If the user can't post to it an error will be shown when he tries to add the discussion.\n                    .catch(() =>({ status: true }))\n\n                    .then((response) => {\n                        if (response.status) {\n                            filtered.push(group);\n                        }\n\n                        return;\n                    }),\n            );\n        });\n\n        await Promise.all(promises);\n\n        return filtered;\n    }\n\n    /**\n     * Filter forum groups, returning only those that are inside user groups.\n     *\n     * @param forumGroups Forum groups.\n     * @param userGroups User groups.\n     * @returns Filtered groups.\n     */\n    protected filterGroups(forumGroups: CoreGroup[], userGroups: CoreGroup[]): CoreGroup[] {\n        const userGroupsIds = userGroups.map(group => group.id);\n\n        return forumGroups.filter(forumGroup => userGroupsIds.indexOf(forumGroup.id) > -1);\n    }\n\n    /**\n     * Get the initial group ID.\n     *\n     * @returns Initial group ID.\n     */\n    protected getInitialGroupId(): number {\n        return (this.initialGroupId && this.groups.find(group => group.id === this.initialGroupId)) ?\n            this.initialGroupId : this.groups[0].id;\n    }\n\n    /**\n     * Add the \"All participants\" option to a list of groups if the user can add a discussion to all participants.\n     *\n     * @param groups Groups.\n     * @param check True to check if the user can add a discussion to all participants.\n     * @returns Promise resolved with the list of groups.\n     */\n    protected addAllParticipantsOption(groups: CoreGroup[], check: boolean): Promise<CoreGroup[]> {\n        let promise: Promise<boolean>;\n\n        if (check) {\n            // We need to check if the user can add a discussion to all participants.\n            promise = AddonModForum.canAddDiscussionToAll(this.forumId, { cmId: this.cmId }).then((response) => {\n                this.canPin = !!response.canpindiscussions;\n                this.canCreateAttachments = !!response.cancreateattachment;\n\n                return response.status;\n            }).catch(() =>\n                // The call failed, let's assume he can't.\n                false);\n        } else {\n            // No need to check, assume the user can.\n            promise = Promise.resolve(true);\n        }\n\n        return promise.then((canAdd) => {\n            if (canAdd) {\n                groups.unshift({\n                    courseid: this.courseId,\n                    id: AddonModForumProvider.ALL_PARTICIPANTS,\n                    name: Translate.instant('core.allparticipants'),\n                });\n            }\n\n            return groups;\n        });\n    }\n\n    /**\n     * Pull to refresh.\n     *\n     * @param refresher Refresher.\n     */\n    refreshGroups(refresher?: HTMLIonRefresherElement): void {\n        const promises = [\n            CoreGroups.invalidateActivityGroupMode(this.cmId),\n            CoreGroups.invalidateActivityAllowedGroups(this.cmId),\n            AddonModForum.invalidateCanAddDiscussion(this.forumId),\n        ];\n\n        Promise.all(promises).finally(() => {\n            this.fetchDiscussionData(true).finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Convenience function to update or return to discussions depending on device.\n     *\n     * @param discussionIds Ids of the new discussions.\n     * @param discTimecreated The time created of the discussion (if offline).\n     */\n    protected returnToDiscussions(discussionIds?: number[] | null, discTimecreated?: number): void {\n        this.forceLeave = true;\n\n        // Delete the local files from the tmp folder.\n        CoreFileUploader.clearTmpFiles(this.newDiscussion.files);\n\n        CoreEvents.trigger(\n            AddonModForumProvider.NEW_DISCUSSION_EVENT,\n            {\n                forumId: this.forumId,\n                cmId: this.cmId,\n                discussionIds: discussionIds,\n                discTimecreated: discTimecreated,\n                groupId: this.showGroups && !this.newDiscussion.postToAllGroups ? this.newDiscussion.groupId : undefined,\n            },\n            CoreSites.getCurrentSiteId(),\n        );\n\n        if (this.splitView?.outletActivated) {\n            // Empty form.\n            this.hasOffline = false;\n            this.newDiscussion.subject = '';\n            this.newDiscussion.message = null;\n            this.newDiscussion.files = [];\n            this.newDiscussion.postToAllGroups = false;\n            this.messageEditor.clearText();\n            this.originalData = CoreUtils.clone(this.newDiscussion);\n        } else {\n            CoreNavigator.back();\n        }\n    }\n\n    /**\n     * Message changed.\n     *\n     * @param text The new text.\n     */\n    onMessageChange(text?: string | null): void {\n        this.newDiscussion.message = text ?? null;\n    }\n\n    /**\n     * Add a new discussion.\n     */\n    async add(): Promise<void> {\n        const forumName = this.forum.name;\n        const subject = this.newDiscussion.subject;\n        let message = this.newDiscussion.message || '';\n        const pin = this.newDiscussion.pin;\n        const attachments = this.newDiscussion.files;\n        const discTimecreated = this.timeCreated || Date.now();\n        const options: AddonModForumDiscussionOptions = {\n            discussionsubscribe: !!this.newDiscussion.subscribe,\n        };\n\n        if (!subject) {\n            CoreDomUtils.showErrorModal('addon.mod_forum.erroremptysubject', true);\n\n            return;\n        }\n        if (!message) {\n            CoreDomUtils.showErrorModal('addon.mod_forum.erroremptymessage', true);\n\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        // Add some HTML to the message if needed.\n        message = CoreTextUtils.formatHtmlLines(message);\n\n        if (pin) {\n            options.discussionpinned = true;\n        }\n\n        const groupIds = this.newDiscussion.postToAllGroups ? this.groupIds : [this.newDiscussion.groupId];\n\n        try {\n            const discussionIds = await AddonModForumHelper.addNewDiscussion(\n                this.forumId,\n                forumName,\n                this.courseId,\n                subject,\n                message,\n                attachments,\n                options,\n                groupIds,\n                discTimecreated,\n            );\n\n            if (discussionIds) {\n                // Data sent to server, delete stored files (if any).\n                AddonModForumHelper.deleteNewDiscussionStoredFiles(this.forumId, discTimecreated);\n\n                CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'forum' });\n            }\n\n            if (discussionIds && discussionIds.length < groupIds.length) {\n                // Some discussions could not be created.\n                CoreDomUtils.showErrorModalDefault(null, 'addon.mod_forum.errorposttoallgroups', true);\n            }\n\n            CoreForms.triggerFormSubmittedEvent(\n                this.formElement,\n                !!discussionIds,\n                CoreSites.getCurrentSiteId(),\n            );\n\n            this.returnToDiscussions(discussionIds, discTimecreated);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_forum.cannotcreatediscussion', true);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Discard an offline saved discussion.\n     */\n    async discard(): Promise<void> {\n        try {\n            await CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n\n            const promises: Promise<unknown>[] = [];\n\n            promises.push(AddonModForumOffline.deleteNewDiscussion(this.forumId, this.timeCreated));\n            promises.push(\n                CoreUtils.ignoreErrors(\n                    AddonModForumHelper.deleteNewDiscussionStoredFiles(this.forumId, this.timeCreated),\n                ),\n            );\n\n            await Promise.all(promises);\n\n            CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n\n            this.returnToDiscussions();\n        } catch (error) {\n            // Cancelled.\n        }\n    }\n\n    /**\n     * Show or hide advanced form fields.\n     */\n    toggleAdvanced(): void {\n        this.advanced = !this.advanced;\n    }\n\n    /**\n     * Calculate current group's name.\n     */\n    async calculateGroupName(): Promise<void> {\n        if (this.newDiscussion.groupId <= 0) {\n            this.postInGroupMessage = undefined;\n        } else {\n            const groupName = this.groups.find(group => group.id === this.newDiscussion.groupId)?.name;\n\n            this.postInGroupMessage = groupName && Translate.instant('addon.mod_forum.postingroup', { groupname: groupName });\n        }\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (this.forceLeave) {\n            return true;\n        }\n\n        if (AddonModForumHelper.hasPostDataChanged(this.newDiscussion, this.originalData)) {\n            // Show confirmation if some data has been modified.\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        // Delete the local files from the tmp folder.\n        CoreFileUploader.clearTmpFiles(this.newDiscussion.files);\n\n        if (this.formElement) {\n            CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n        }\n\n        return true;\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.syncObserver && this.syncObserver.off();\n        delete this.syncObserver;\n    }\n\n    /**\n     * Helper function to go back.\n     */\n    protected goBack(): void {\n        if (this.splitView?.outletActivated) {\n            CoreNavigator.navigate('../../');\n        } else {\n            CoreNavigator.back();\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        if (this.syncId) {\n            CoreSync.unblockOperation(AddonModForumProvider.COMPONENT, this.syncId);\n        }\n        this.isDestroyed = true;\n        this.discussions?.destroy();\n    }\n\n}\n\n/**\n * Helper to manage swiping within a collection of discussions.\n */\nclass AddonModForumNewDiscussionDiscussionsSwipeManager extends AddonModForumDiscussionsSwipeManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return `${this.getSource().DISCUSSIONS_PATH_PREFIX}new/${route.params.timeCreated}`;\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.mod_forum.addanewdiscussion' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\" />\n    </ion-toolbar>\n</ion-header>\n<ion-content [core-swipe-navigation]=\"discussions\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!groupsLoaded\" (ionRefresh)=\"refreshGroups($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"groupsLoaded\">\n        <form *ngIf=\"showForm\" #newDiscFormEl>\n            <ion-item>\n                <ion-label position=\"stacked\">{{ 'addon.mod_forum.subject' | translate }}</ion-label>\n                <ion-input [(ngModel)]=\"newDiscussion.subject\" type=\"text\" [placeholder]=\"'addon.mod_forum.subject' | translate\"\n                    name=\"subject\" />\n            </ion-item>\n            <ion-item>\n                <ion-label position=\"stacked\">{{ 'addon.mod_forum.message' | translate }}</ion-label>\n                <core-rich-text-editor name=\"addon_mod_forum_new_discussion\" contextLevel=\"module\" elementId=\"message\"\n                    [control]=\"messageControl\" [placeholder]=\"'addon.mod_forum.message' | translate\" [component]=\"component\"\n                    [componentId]=\"forum.cmid\" [autoSave]=\"true\" [contextInstanceId]=\"forum.cmid\"\n                    (contentChanged)=\"onMessageChange($event)\" />\n            </ion-item>\n            <ion-item button class=\"divider ion-text-wrap\" (click)=\"toggleAdvanced()\" [detail]=\"false\" [attr.aria-expanded]=\"advanced\"\n                [attr.aria-label]=\"(advanced ? 'core.hideadvanced' : 'core.showadvanced') | translate\" role=\"heading\"\n                aria-controls=\"addon-mod-forum-new-discussion-advanced\">\n                <ion-icon name=\"fas-chevron-right\" flip-rtl slot=\"start\" aria-hidden=\"true\" class=\"expandable-status-icon\"\n                    [class.expandable-status-icon-expanded]=\"advanced\" />\n                <ion-label>\n                    <h2>{{ 'addon.mod_forum.advanced' | translate }}</h2>\n                </ion-label>\n            </ion-item>\n            <div *ngIf=\"advanced\" id=\"addon-mod-forum-new-discussion-advanced\">\n                <ion-item *ngIf=\"showGroups && groupIds.length > 1 && accessInfo.cancanposttomygroups\">\n                    <ion-label>{{ 'addon.mod_forum.posttomygroups' | translate }}</ion-label>\n                    <ion-toggle [(ngModel)]=\"newDiscussion.postToAllGroups\" name=\"postallgroups\" slot=\"end\" />\n                </ion-item>\n                <ion-item *ngIf=\"showGroups\" class=\"core-edit-set-group\">\n                    <ion-label>{{ 'addon.mod_forum.group' | translate }}</ion-label>\n                    <ion-select [(ngModel)]=\"newDiscussion.groupId\" [disabled]=\"newDiscussion.postToAllGroups\" interface=\"action-sheet\"\n                        name=\"groupid\" [interfaceOptions]=\"{header: 'addon.mod_forum.group' | translate}\"\n                        [cancelText]=\"'core.cancel' | translate\" (ionChange)=\"calculateGroupName()\">\n                        <ion-select-option *ngFor=\"let group of groups\" [value]=\"group.id\">\n                            <core-format-text [text]=\"group.name\" contextLevel=\"course\" [contextInstanceId]=\"courseId\"\n                                [wsNotFiltered]=\"true\" />\n                        </ion-select-option>\n                    </ion-select>\n                </ion-item>\n                <ion-item>\n                    <ion-label>{{ 'addon.mod_forum.discussionsubscription' | translate }}</ion-label>\n                    <ion-toggle [(ngModel)]=\"newDiscussion.subscribe\" name=\"subscribe\" slot=\"end\" />\n                </ion-item>\n                <ion-item *ngIf=\"canPin\">\n                    <ion-label>{{ 'addon.mod_forum.discussionpinned' | translate }}</ion-label>\n                    <ion-toggle [(ngModel)]=\"newDiscussion.pin\" name=\"pin\" slot=\"end\" />\n                </ion-item>\n                <core-attachments *ngIf=\"canCreateAttachments && forum && forum.maxattachments > 0\" [files]=\"newDiscussion.files\"\n                    [maxSize]=\"forum.maxbytes\" [maxSubmissions]=\"forum.maxattachments\" [component]=\"component\" [componentId]=\"forum.cmid\"\n                    [allowOffline]=\"true\" [courseId]=\"courseId\" />\n            </div>\n            <ion-item *ngIf=\"showGroups && postInGroupMessage && !newDiscussion.postToAllGroups\" class=\"addon-forum-group-info\">\n                <ion-icon name=\"fas-circle-info\" slot=\"start\" aria-hidden=\"true\" />\n                <ion-label>\n                    <core-format-text [text]=\"postInGroupMessage\" contextLevel=\"course\" [contextInstanceId]=\"courseId\"\n                        [wsNotFiltered]=\"true\" />\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"addon-forum-new-discussion-buttons\">\n                <ion-label>\n                    <ion-row>\n                        <ion-col *ngIf=\"hasOffline\">\n                            <ion-button expand=\"block\" fill=\"outline\" (click)=\"discard()\">{{ 'core.discard' | translate }}</ion-button>\n                        </ion-col>\n                        <ion-col>\n                            <ion-button expand=\"block\" [disabled]=\"newDiscussion.subject === '' || newDiscussion.message === null\"\n                                (click)=\"add()\">\n                                {{ 'addon.mod_forum.posttoforum' | translate }}\n                            </ion-button>\n                        </ion-col>\n                    </ion-row>\n                </ion-label>\n            </ion-item>\n        </form>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}