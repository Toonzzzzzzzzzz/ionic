{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreAnimations } from '@components/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../directives/fa-icon\";\nimport * as i4 from \"../../directives/update-non-reactive-attributes\";\nimport * as i5 from \"@ngx-translate/core\";\nfunction CoreDownloadRefreshComponent_ng_container_0_ion_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function CoreDownloadRefreshComponent_ng_container_0_ion_button_1_Template_ion_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.download($event, false));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@coreShowHideAnimation\", undefined);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, ctx_r2.statusTranslatable || \"core.download\"));\n  }\n}\nfunction CoreDownloadRefreshComponent_ng_container_0_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function CoreDownloadRefreshComponent_ng_container_0_ion_button_2_Template_ion_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.download($event, true));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@coreShowHideAnimation\", undefined);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, ctx_r3.statusTranslatable || \"core.refresh\"));\n  }\n}\nfunction CoreDownloadRefreshComponent_ng_container_0_ion_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 6);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, ctx_r4.statusTranslatable || \"core.downloaded\"));\n  }\n}\nfunction CoreDownloadRefreshComponent_ng_container_0_ion_spinner_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\");\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@coreShowHideAnimation\", undefined);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, ctx_r5.statusTranslatable || \"core.downloading\"));\n  }\n}\nfunction CoreDownloadRefreshComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreDownloadRefreshComponent_ng_container_0_ion_button_1_Template, 3, 4, \"ion-button\", 1);\n    i0.ɵɵtemplate(2, CoreDownloadRefreshComponent_ng_container_0_ion_button_2_Template, 3, 4, \"ion-button\", 1);\n    i0.ɵɵtemplate(3, CoreDownloadRefreshComponent_ng_container_0_ion_icon_3_Template, 2, 3, \"ion-icon\", 2);\n    i0.ɵɵtemplate(4, CoreDownloadRefreshComponent_ng_container_0_ion_spinner_4_Template, 2, 4, \"ion-spinner\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.status === ctx_r0.statusNotDownloaded);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.status === ctx_r0.statusOutdated || ctx_r0.status === ctx_r0.statusDownloaded && !ctx_r0.canTrustDownload);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.status === ctx_r0.statusDownloaded && ctx_r0.canTrustDownload);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.status === ctx_r0.statusDownloading);\n  }\n}\nfunction CoreDownloadRefreshComponent_ion_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\");\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"@coreShowHideAnimation\", undefined);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 2, \"core.loading\"));\n  }\n}\n/**\n * Component to show a download button with refresh option, the spinner and the status of it.\n *\n * Usage:\n * <core-download-refresh [status]=\"status\" [enabled]=\"true\" [canTrustDownload]=\"true\" (action)=\"download()\">\n * </core-download-refresh>\n */\nexport class CoreDownloadRefreshComponent {\n  constructor() {\n    this.enabled = false; // Whether the download is enabled.\n    this.loading = true; // Force loading status when is not downloading.\n    this.canTrustDownload = false; // If false, refresh will be shown if downloaded.\n    this.statusDownloaded = CoreConstants.DOWNLOADED;\n    this.statusNotDownloaded = CoreConstants.NOT_DOWNLOADED;\n    this.statusOutdated = CoreConstants.OUTDATED;\n    this.statusDownloading = CoreConstants.DOWNLOADING;\n    this.action = new EventEmitter();\n  }\n  /**\n   * Download clicked.\n   *\n   * @param e Click event.\n   * @param refresh Whether it's refreshing.\n   */\n  download(e, refresh) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.action.emit(refresh);\n  }\n}\n_class = CoreDownloadRefreshComponent;\n_class.ɵfac = function CoreDownloadRefreshComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-download-refresh\"]],\n  inputs: {\n    status: \"status\",\n    statusTranslatable: \"statusTranslatable\",\n    enabled: \"enabled\",\n    loading: \"loading\",\n    canTrustDownload: \"canTrustDownload\"\n  },\n  outputs: {\n    action: \"action\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"fill\", \"clear\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"core-icon-downloaded ion-padding-horizontal\", \"color\", \"success\", \"name\", \"fam-cloud-done\", \"role\", \"status\", 4, \"ngIf\"], [\"fill\", \"clear\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"fas-cloud-arrow-down\", \"aria-hidden\", \"true\"], [\"slot\", \"icon-only\", \"name\", \"fam-cloud-refresh\", \"aria-hidden\", \"true\"], [\"color\", \"success\", \"name\", \"fam-cloud-done\", \"role\", \"status\", 1, \"core-icon-downloaded\", \"ion-padding-horizontal\"]],\n  template: function CoreDownloadRefreshComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoreDownloadRefreshComponent_ng_container_0_Template, 5, 4, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, CoreDownloadRefreshComponent_ion_spinner_1_Template, 2, 4, \"ion-spinner\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.enabled && !ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  dependencies: [i1.NgIf, i2.IonButton, i2.IonIcon, i2.IonSpinner, i3.CoreFaIconDirective, i4.CoreUpdateNonReactiveAttributesDirective, i5.TranslatePipe],\n  styles: [\"[_nghost-%COMP%] {\\n  font-size: 1.4rem;\\n  display: flex;\\n  flex-flow: row;\\n  align-items: center;\\n  justify-content: space-around;\\n  align-content: center;\\n  min-height: var(--a11y-min-target-size);\\n  min-width: var(--a11y-min-target-size);\\n  position: relative;\\n}\\n[_nghost-%COMP%]    > *[_ngcontent-%COMP%] {\\n  position: absolute;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2NvbXBvbmVudHMvZG93bmxvYWQtcmVmcmVzaC9kb3dubG9hZC1yZWZyZXNoLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFDQSw2QkFBQTtFQUNBLHFCQUFBO0VBQ0EsdUNBQUE7RUFDQSxzQ0FBQTtFQUNBLGtCQUFBO0FBQ0o7QUFDSTtFQUNJLGtCQUFBO0FBQ1IiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZm9udC1zaXplOiAxLjRyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdztcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiB2YXIoLS1hMTF5LW1pbi10YXJnZXQtc2l6ZSk7XG4gICAgbWluLXdpZHRoOiB2YXIoLS1hMTF5LW1pbi10YXJnZXQtc2l6ZSk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgPiAqIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  data: {\n    animation: [CoreAnimations.SHOW_HIDE]\n  }\n});","map":{"version":3,"names":["EventEmitter","CoreConstants","CoreAnimations","i0","ɵɵelementStart","ɵɵlistener","CoreDownloadRefreshComponent_ng_container_0_ion_button_1_Template_ion_button_click_0_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","download","ɵɵelement","ɵɵelementEnd","ɵɵproperty","undefined","ɵɵattribute","ɵɵpipeBind1","ctx_r2","statusTranslatable","CoreDownloadRefreshComponent_ng_container_0_ion_button_2_Template_ion_button_click_0_listener","_r9","ctx_r8","ctx_r3","ctx_r4","ctx_r5","ɵɵelementContainerStart","ɵɵtemplate","CoreDownloadRefreshComponent_ng_container_0_ion_button_1_Template","CoreDownloadRefreshComponent_ng_container_0_ion_button_2_Template","CoreDownloadRefreshComponent_ng_container_0_ion_icon_3_Template","CoreDownloadRefreshComponent_ng_container_0_ion_spinner_4_Template","ɵɵelementContainerEnd","ɵɵadvance","ctx_r0","status","statusNotDownloaded","statusOutdated","statusDownloaded","canTrustDownload","statusDownloading","CoreDownloadRefreshComponent","constructor","enabled","loading","DOWNLOADED","NOT_DOWNLOADED","OUTDATED","DOWNLOADING","action","e","refresh","preventDefault","stopPropagation","emit","selectors","inputs","outputs","decls","vars","consts","template","CoreDownloadRefreshComponent_Template","rf","ctx","CoreDownloadRefreshComponent_ng_container_0_Template","CoreDownloadRefreshComponent_ion_spinner_1_Template","SHOW_HIDE"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/download-refresh/download-refresh.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/download-refresh/core-download-refresh.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreAnimations } from '@components/animations';\n\n/**\n * Component to show a download button with refresh option, the spinner and the status of it.\n *\n * Usage:\n * <core-download-refresh [status]=\"status\" [enabled]=\"true\" [canTrustDownload]=\"true\" (action)=\"download()\">\n * </core-download-refresh>\n */\n@Component({\n    selector: 'core-download-refresh',\n    templateUrl: 'core-download-refresh.html',\n    styleUrls: ['download-refresh.scss'],\n    animations: [CoreAnimations.SHOW_HIDE],\n})\nexport class CoreDownloadRefreshComponent {\n\n    @Input() status?: string; // Download status.\n    @Input() statusTranslatable?: string; // Download status translatable string.\n    @Input() enabled = false; // Whether the download is enabled.\n    @Input() loading = true; // Force loading status when is not downloading.\n    @Input() canTrustDownload = false; // If false, refresh will be shown if downloaded.\n    @Output() action: EventEmitter<boolean>; // Will emit an event when the item clicked.\n\n    statusDownloaded = CoreConstants.DOWNLOADED;\n    statusNotDownloaded = CoreConstants.NOT_DOWNLOADED;\n    statusOutdated = CoreConstants.OUTDATED;\n    statusDownloading = CoreConstants.DOWNLOADING;\n\n    constructor() {\n        this.action = new EventEmitter();\n    }\n\n    /**\n     * Download clicked.\n     *\n     * @param e Click event.\n     * @param refresh Whether it's refreshing.\n     */\n    download(e: Event, refresh: boolean): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.action.emit(refresh);\n    }\n\n}\n","<ng-container *ngIf=\"enabled && !loading\">\n    <!-- Download button. -->\n    <ion-button *ngIf=\"status === statusNotDownloaded\" fill=\"clear\" (click)=\"download($event, false)\" @coreShowHideAnimation\n        [attr.aria-label]=\"(statusTranslatable || 'core.download') | translate\">\n        <ion-icon slot=\"icon-only\" name=\"fas-cloud-arrow-down\" aria-hidden=\"true\" />\n    </ion-button>\n\n    <!-- Refresh button. -->\n    <ion-button *ngIf=\"status === statusOutdated || (status === statusDownloaded && !canTrustDownload)\" fill=\"clear\"\n        (click)=\"download($event, true)\" @coreShowHideAnimation [attr.aria-label]=\"(statusTranslatable || 'core.refresh') | translate\">\n        <ion-icon slot=\"icon-only\" name=\"fam-cloud-refresh\" aria-hidden=\"true\" />\n    </ion-button>\n\n    <!-- Downloaded status icon. -->\n    <ion-icon *ngIf=\"status === statusDownloaded && canTrustDownload\" class=\"core-icon-downloaded ion-padding-horizontal\" color=\"success\"\n        name=\"fam-cloud-done\" [attr.aria-label]=\"(statusTranslatable || 'core.downloaded') | translate\" role=\"status\" />\n\n    <ion-spinner *ngIf=\"status === statusDownloading\" @coreShowHideAnimation\n        [attr.aria-label]=\"(statusTranslatable || 'core.downloading') | translate\" />\n</ng-container>\n\n<!-- Spinner. -->\n<ion-spinner *ngIf=\"loading\" @coreShowHideAnimation [attr.aria-label]=\"'core.loading' | translate\" />\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}