{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { AddonModAssignProvider, AddonModAssign, AddonModAssignGradingStates, AddonModAssignSubmissionStatusValues, AddonModAssignAttemptReopenMethodValues } from '../../services/assign';\nimport { AddonModAssignSync, AddonModAssignSyncProvider } from '../../services/assign-sync';\nimport { CoreTabsComponent } from '@components/tabs/tabs';\nimport { CoreGradesHelper } from '@features/grades/services/grades-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModAssignHelper } from '../../services/assign-helper';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreCourse } from '@features/course/services/course';\nimport { AddonModAssignOffline } from '../../services/assign-offline';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreNetwork } from '@services/network';\nimport { CoreFileUploaderHelper } from '@features/fileuploader/services/fileuploader-helper';\nimport { CoreLang } from '@services/lang';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreGroups } from '@services/groups';\nimport { CoreSync } from '@services/sync';\nimport { AddonModAssignSubmissionPluginComponent } from '../submission-plugin/submission-plugin';\nimport { AddonModAssignModuleHandlerService } from '../../services/handlers/module';\nimport { CoreTime } from '@singletons/time';\nimport { isSafeNumber } from '@/core/utils/types';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@components/split-view/split-view\";\nfunction AddonModAssignSubmissionComponent_ion_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 9)(1, \"ion-item\", 10);\n    i0.ɵɵelement(2, \"ion-icon\", 11);\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 1, \"addon.mod_assign.caneditsubmission\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ion_item_3_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 12);\n    i0.ɵɵelement(1, \"core-user-avatar\", 13);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ion_item_3_ng_container_5_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r6 = i0.ɵɵreference(12);\n    i0.ɵɵproperty(\"userId\", ctx_r1.submitId)(\"courseId\", ctx_r1.courseId);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.user.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", ctx_r1.user)(\"linkProfile\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.user.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ion_item_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ion_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ion_item_4_ng_container_5_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const _r6 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 3, \"addon.mod_assign.hiddenuser\"), \" \", ctx_r2.blindId, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ion_item_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ion_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ion_item_5_ng_container_5_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r6 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.submissionstatus\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"current\": a0,\n    \"total\": a1\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    \"$a\": a0\n  };\n};\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"addon.mod_assign.outof\", i0.ɵɵpureFunction1(7, _c1, i0.ɵɵpureFunction2(4, _c0, ctx_r26.currentAttempt, ctx_r26.maxAttemptsText))), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"addon.mod_assign.outof\", i0.ɵɵpureFunction1(7, _c1, i0.ɵɵpureFunction2(4, _c0, ctx_r27.currentAttempt, ctx_r27.assign.maxattempts))), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_p_5_Template, 3, 9, \"p\", 18);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_p_6_Template, 3, 9, \"p\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"addon.mod_assign.attemptnumber\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.assign.maxattempts === ctx_r11.unlimitedAttempts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.assign.maxattempts !== ctx_r11.unlimitedAttempts);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, \"addon.mod_assign.submissionslocked\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 21);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(1, 1, \"addon.mod_assign.allowsubmissionsfromdatesummary\", i0.ɵɵpureFunction1(4, _c1, ctx_r28.fromDate)), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 21);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(1, 1, \"addon.mod_assign.allowsubmissionsanddescriptionfromdatesummary\", i0.ɵɵpureFunction1(4, _c1, ctx_r29.fromDate)), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\");\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_p_2_Template, 2, 6, \"p\", 20);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_p_3_Template, 2, 6, \"p\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.assign.intro);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.assign.intro);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"coreFormatDate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r30.assign.duedate * 1000));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.duedateno\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_p_5_Template, 3, 3, \"p\", 18);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_p_6_Template, 3, 3, \"p\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"addon.mod_assign.duedate\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.assign.duedate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.assign.duedate);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"coreFormatDate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.cutoffdate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r15.assign.cutoffdate * 1000));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"coreFormatDate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.extensionduedate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r16.lastAttempt.extensionduedate * 1000));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r32.timeRemaining, i0.ɵɵsanitizeHtml);\n  }\n}\nconst _c2 = function () {\n  return [300, 900];\n};\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_core_timer_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-timer\", 24);\n    i0.ɵɵlistener(\"finished\", function AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_core_timer_6_Template_core_timer_finished_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r34.timeUp());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"endTime\", ctx_r33.timeLimitEndTime)(\"timeLeftClassThreshold\", -1)(\"underTimeClassThresholds\", i0.ɵɵpureFunction0(3, _c2));\n  }\n}\nconst _c3 = function (a0) {\n  return [a0];\n};\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 22)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_p_5_Template, 1, 1, \"p\", 20);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_core_timer_6_Template, 1, 4, \"core-timer\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c3, ctx_r17.timeRemainingClass));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"addon.mod_assign.timeremaining\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r17.timeLimitEndTime);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.timeLimitEndTime > 0);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"coreDuration\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.timelimit\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r18.assign.timelimit));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.submissioneditable\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.submissionnoteditable\"));\n  }\n}\nconst _c4 = function (a0, a1) {\n  return {\n    submissioneditable: a0,\n    submissionnoteditable: a1\n  };\n};\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 22)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_p_5_Template, 3, 3, \"p\", 18);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_p_6_Template, 3, 3, \"p\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c4, ctx_r19.lastAttempt.caneditowner, !ctx_r19.lastAttempt.caneditowner));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"addon.mod_assign.editingstatus\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.lastAttempt.caneditowner);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r19.lastAttempt.caneditowner);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"coreFormatDate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.timemodified\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r20.userSubmission.timemodified * 1000));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_addon_mod_assign_submission_plugin_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"addon-mod-assign-submission-plugin\", 25);\n  }\n  if (rf & 2) {\n    const plugin_r38 = ctx.$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"assign\", ctx_r21.assign)(\"submission\", ctx_r21.userSubmission)(\"plugin\", plugin_r38);\n  }\n}\nconst _c5 = function () {\n  return {\n    $a: \"\"\n  };\n};\nfunction AddonModAssignSubmissionComponent_ng_template_9_ion_item_divider_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item-divider\", 10)(1, \"ion-label\")(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 1, \"addon.mod_assign.userswhoneedtosubmit\", i0.ɵɵpureFunction0(4, _c5)));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ng_container_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 12);\n    i0.ɵɵelement(2, \"core-user-avatar\", 13);\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\", 14);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r40 = ctx.$implicit;\n    const ctx_r39 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"userId\", user_r40.id)(\"courseId\", ctx_r39.courseId);\n    i0.ɵɵattribute(\"aria-label\", user_r40.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", user_r40)(\"linkProfile\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r40.fullname);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_ng_container_12_ng_container_1_Template, 6, 6, \"ng-container\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r23.membersToSubmit);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ng_container_13_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 10)(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const blindId_r42 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.hiddenuser\"), \" \", blindId_r42, \"\");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_ng_container_13_ng_container_1_Template, 5, 4, \"ng-container\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r24.membersToSubmitBlind);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r53 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 32);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_1_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r53);\n      const ctx_r52 = i0.ɵɵnextContext(6);\n      return i0.ɵɵresetView(ctx_r52.goToEdit());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.editsubmission\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.addsubmission\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.beginassignment\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 32);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const ctx_r56 = i0.ɵɵnextContext(6);\n      return i0.ɵɵresetView(ctx_r56.goToEdit());\n    });\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_ng_container_1_Template, 3, 3, \"ng-container\", 18);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_ng_container_2_Template, 3, 3, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r49 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r49.assign == null ? null : ctx_r49.assign.timelimit) || (ctx_r49.userSubmission == null ? null : ctx_r49.userSubmission.timestarted));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r49.assign == null ? null : ctx_r49.assign.timelimit) && (!ctx_r49.userSubmission || !ctx_r49.userSubmission.timestarted));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_ion_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 32);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_ion_button_1_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r60);\n      const ctx_r59 = i0.ɵɵnextContext(7);\n      return i0.ɵɵresetView(ctx_r59.copyPrevious());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.addnewattemptfromprevious\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r62 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_ion_button_1_Template, 3, 3, \"ion-button\", 31);\n    i0.ɵɵelementStart(2, \"ion-button\", 32);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_Template_ion_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r61 = i0.ɵɵnextContext(6);\n      return i0.ɵɵresetView(ctx_r61.goToEdit());\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r50 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r50.isPreviousAttemptEmpty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.addnewattempt\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 32);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_4_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r63 = i0.ɵɵnextContext(6);\n      return i0.ɵɵresetView(ctx_r63.goToEdit());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.editsubmission\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_1_Template, 3, 3, \"ion-button\", 31);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_Template, 3, 2, \"ion-button\", 31);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_Template, 5, 4, \"ng-container\", 18);\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_4_Template, 3, 3, \"ion-button\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r46.hasOffline);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r46.hasOffline && (!ctx_r46.userSubmission || !ctx_r46.userSubmission.status || ctx_r46.userSubmission.status === ctx_r46.statusNew));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r46.hasOffline && (ctx_r46.userSubmission == null ? null : ctx_r46.userSubmission.status) === ctx_r46.statusReopened);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r46.hasOffline && ctx_r46.userSubmission && ctx_r46.userSubmission.status && ctx_r46.userSubmission.status !== ctx_r46.statusNew && ctx_r46.userSubmission.status !== ctx_r46.statusReopened);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r69 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(name_r69);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_ion_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-button\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r68 = i0.ɵɵnextContext(7);\n    i0.ɵɵproperty(\"href\", ctx_r68.submissionUrl)(\"showBrowserWarning\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 3, \"core.openinbrowser\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_li_5_Template, 2, 1, \"li\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_ion_button_6_Template, 4, 5, \"ion-button\", 35);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r65 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"addon.mod_assign.erroreditpluginsnotsupported\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r65.unsupportedEditPlugins);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r65.submissionUrl);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, \"addon.mod_assign.cannoteditduetostatementsubmission\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 33)(1, \"ion-label\");\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_Template, 7, 5, \"ng-container\", 18);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_3_Template, 4, 3, \"ng-container\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.unsupportedEditPlugins && ctx_r47.unsupportedEditPlugins.length && !ctx_r47.showErrorStatementEdit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.showErrorStatementEdit);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_Template, 5, 4, \"ng-container\", 18);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_Template, 4, 2, \"ion-item\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r44.unsupportedEditPlugins.length && !ctx_r44.showErrorStatementEdit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r44.unsupportedEditPlugins.length && !ctx_r44.showErrorStatementEdit || ctx_r44.showErrorStatementEdit);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r74 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\");\n    i0.ɵɵelement(2, \"core-format-text\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-checkbox\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_1_Template_ion_checkbox_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r74);\n      const ctx_r73 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r73.acceptStatement = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r70 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", ctx_r70.submissionStatement)(\"filter\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r70.acceptStatement);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"ion-button\", 32);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_2_Template_ion_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r75 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r75.submitForGrading(ctx_r75.acceptStatement));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.submitassignment\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, \"addon.mod_assign.submitassignment_help\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 40);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"addon.mod_assign.cannotsubmitduetostatementsubmission\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_1_Template, 4, 3, \"ion-item\", 4);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_2_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_3_Template, 5, 3, \"ion-item\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.submissionStatement);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r45.showErrorStatementSubmit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.showErrorStatementSubmit);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_Template, 3, 2, \"ng-container\", 18);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_Template, 4, 3, \"ng-container\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r43.canEdit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r43.canSubmit);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_Template, 3, 2, \"div\", 28);\n    i0.ɵɵelement(2, \"core-course-module-navigation\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r25.selectedTab !== \"submission\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.canEdit || ctx_r25.canSubmit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"courseId\", ctx_r25.courseId)(\"currentModuleId\", ctx_r25.moduleId);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_Template, 7, 5, \"ion-item\", 4);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_9_ion_item_1_Template, 5, 3, \"ion-item\", 4);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_Template, 4, 2, \"ion-item\", 4);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_Template, 7, 5, \"ion-item\", 4);\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionComponent_ng_template_9_ion_item_4_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ng_template_9_ion_item_5_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_Template, 7, 8, \"ion-item\", 16);\n    i0.ɵɵtemplate(7, AddonModAssignSubmissionComponent_ng_template_9_ion_item_7_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵtemplate(8, AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_Template, 7, 9, \"ion-item\", 16);\n    i0.ɵɵtemplate(9, AddonModAssignSubmissionComponent_ng_template_9_ion_item_9_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵtemplate(10, AddonModAssignSubmissionComponent_ng_template_9_addon_mod_assign_submission_plugin_10_Template, 1, 3, \"addon-mod-assign-submission-plugin\", 17);\n    i0.ɵɵtemplate(11, AddonModAssignSubmissionComponent_ng_template_9_ion_item_divider_11_Template, 5, 5, \"ion-item-divider\", 4);\n    i0.ɵɵtemplate(12, AddonModAssignSubmissionComponent_ng_template_9_ng_container_12_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵtemplate(13, AddonModAssignSubmissionComponent_ng_template_9_ng_container_13_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵtemplate(14, AddonModAssignSubmissionComponent_ng_template_9_div_14_Template, 3, 4, \"div\", 19);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.currentAttempt && !ctx_r4.isGrading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.lastAttempt == null ? null : ctx_r4.lastAttempt.locked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showDates && ctx_r4.fromDate && !ctx_r4.isSubmittedForGrading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showDates && ctx_r4.assign.duedate && !ctx_r4.isSubmittedForGrading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.assign.duedate && ctx_r4.assign.cutoffdate && ctx_r4.isSubmittedForGrading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.assign.duedate && (ctx_r4.lastAttempt == null ? null : ctx_r4.lastAttempt.extensionduedate) && !ctx_r4.isSubmittedForGrading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.timeRemaining || ctx_r4.timeLimitEndTime > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.assign && ctx_r4.assign.timelimit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.lastAttempt && ctx_r4.isSubmittedForGrading && ctx_r4.lastAttempt.caneditowner !== undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.userSubmission && ctx_r4.userSubmission.status !== ctx_r4.statusNew && ctx_r4.userSubmission.timemodified);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.submissionPlugins);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.membersToSubmit && ctx_r4.membersToSubmit.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.membersToSubmit && ctx_r4.membersToSubmit.length > 0 && !ctx_r4.blindMarking);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.membersToSubmit && ctx_r4.membersToSubmit.length > 0 && ctx_r4.blindMarking);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.loaded && !ctx_r4.isSubmittedForGrading);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_ion_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r89 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 47);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_ion_button_7_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r89);\n      const ctx_r88 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r88.showAdvancedGrade());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"core.showadvanced\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 45)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵelement(6, \"core-format-text\", 38);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_ion_button_7_Template, 3, 3, \"ion-button\", 46);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r78 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"addon.mod_assign.currentgrade\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", ctx_r78.feedback.gradefordisplay)(\"filter\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r78.feedback.advancedgrade);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_ion_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r98 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-input\", 52);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_ion_input_5_Template_ion_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      const ctx_r97 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r97.grade.grade = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r95 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r95.grade.grade)(\"max\", ctx_r95.gradeInfo.grade)(\"lang\", ctx_r95.grade.lang);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.gradelocked\"));\n  }\n}\nconst _c6 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\", 50)(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_ion_input_5_Template, 1, 3, \"ion-input\", 51);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_p_6_Template, 3, 3, \"p\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r90 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 3, \"addon.mod_assign.gradeoutof\", i0.ɵɵpureFunction1(6, _c6, ctx_r90.gradeInfo.grade)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r90.grade.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r90.grade.disabled);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_ion_select_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const grade_r100 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", grade_r100.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", grade_r100.label, \" \");\n  }\n}\nconst _c7 = function (a0) {\n  return {\n    header: a0\n  };\n};\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r102 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-select\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_Template_ion_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r102);\n      const ctx_r101 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r101.grade.grade = $event);\n    });\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵtemplate(8, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_ion_select_option_8_Template, 2, 2, \"ion-select-option\", 54);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r91 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 6, \"addon.mod_assign.grade\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r91.grade.grade)(\"disabled\", ctx_r91.grade.disabled)(\"cancelText\", i0.ɵɵpipeBind1(6, 8, \"core.cancel\"))(\"interfaceOptions\", i0.ɵɵpureFunction1(12, _c7, i0.ɵɵpipeBind1(7, 10, \"addon.mod_assign.grade\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r91.grade.scale);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_ion_select_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const grade_r107 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", grade_r107.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", grade_r107.label, \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r110 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-select\", 53);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_Template_ion_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r110);\n      const outcome_r103 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(outcome_r103.selectedId = $event);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_ion_select_option_2_Template, 2, 2, \"ion-select-option\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const outcome_r103 = i0.ɵɵnextContext().$implicit;\n    const ctx_r104 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngModel\", outcome_r103.selectedId)(\"disabled\", ctx_r104.gradeInfo.disabled)(\"cancelText\", i0.ɵɵpipeBind1(1, 5, \"core.cancel\"))(\"interfaceOptions\", i0.ɵɵpureFunction1(7, _c7, outcome_r103.name));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", outcome_r103.options);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const outcome_r103 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(outcome_r103.selected);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_Template, 3, 9, \"ion-select\", 56);\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_p_5_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const outcome_r103 = ctx.$implicit;\n    const ctx_r92 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(outcome_r103.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r92.canSaveGrades && outcome_r103.itemNumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r92.canSaveGrades || !outcome_r103.itemNumber);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r113 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r113.grade.unreleasedGrade, \" / \", ctx_r113.gradeInfo.grade, \"\");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r114 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r114.grade.unreleasedGrade);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_p_5_Template, 2, 2, \"p\", 18);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_p_6_Template, 2, 1, \"p\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"addon.mod_assign.currentassigngrade\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r93.grade.method !== \"simple\" || !ctx_r93.grade.scale);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r93.grade.method === \"simple\" && ctx_r93.grade.scale);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r115 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r115.grade.gradebookGrade, \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r116 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r116.grade.scale[ctx_r116.grade.gradebookGrade].label, \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"-\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_5_Template, 2, 1, \"p\", 18);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_6_Template, 2, 1, \"p\", 18);\n    i0.ɵɵtemplate(7, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_7_Template, 2, 0, \"p\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r94 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"addon.mod_assign.currentgrade\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r94.grade.gradebookGrade && !ctx_r94.grade.scale);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r94.grade.gradebookGrade && ctx_r94.grade.scale);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r94.grade.gradebookGrade);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_Template, 7, 8, \"ion-item\", 4);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_Template, 9, 14, \"ion-item\", 4);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_Template, 6, 3, \"ion-item\", 49);\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_Template, 7, 5, \"ion-item\", 4);\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r79 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r79.grade.method === \"simple\" && !ctx_r79.grade.scale);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r79.grade.method === \"simple\" && ctx_r79.grade.scale);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r79.gradeInfo.outcomes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r79.gradeInfo && ctx_r79.grade.unreleasedGrade !== undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r79.grade.method === \"simple\");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_2_addon_mod_assign_feedback_plugin_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"addon-mod-assign-feedback-plugin\", 58);\n  }\n  if (rf & 2) {\n    const plugin_r119 = ctx.$implicit;\n    const ctx_r118 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"assign\", ctx_r118.assign)(\"submission\", ctx_r118.userSubmission)(\"userId\", ctx_r118.submitId)(\"plugin\", plugin_r119)(\"canEdit\", ctx_r118.canSaveGrades);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_2_addon_mod_assign_feedback_plugin_1_Template, 1, 5, \"addon-mod-assign-feedback-plugin\", 57);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r80 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r80.feedback.plugins);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r81 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.markingworkflowstate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r81.workflowStatusTranslationId));\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r121 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-toggle\", 59);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_4_Template_ion_toggle_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r121);\n      const ctx_r120 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r120.grade.applyToAll = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r82 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"addon.mod_assign.groupsubmissionsettings\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 5, \"addon.mod_assign.applytoteam\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r82.grade.applyToAll);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r122 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"addon.mod_assign.outof\", i0.ɵɵpureFunction1(7, _c1, i0.ɵɵpureFunction2(4, _c0, ctx_r122.currentAttempt, ctx_r122.maxAttemptsText))), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r123 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"addon.mod_assign.outof\", i0.ɵɵpureFunction1(7, _c1, i0.ɵɵpureFunction2(4, _c0, ctx_r123.currentAttempt, ctx_r123.assign.maxattempts))), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_ion_item_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r126 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-toggle\", 59);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_ion_item_12_Template_ion_toggle_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r126);\n      const ctx_r125 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r125.grade.addAttempt = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r124 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, \"addon.mod_assign.addattempt\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r124.grade.addAttempt);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 10)(2, \"ion-label\")(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_p_6_Template, 3, 9, \"p\", 18);\n    i0.ɵɵtemplate(7, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_p_7_Template, 3, 9, \"p\", 18);\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_ion_item_12_Template, 5, 4, \"ion-item\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r83 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 6, \"addon.mod_assign.attemptsettings\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r83.assign.maxattempts === ctx_r83.unlimitedAttempts);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r83.assign.maxattempts !== ctx_r83.unlimitedAttempts);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(10, 8, \"addon.mod_assign.attemptreopenmethod\"), \": \", i0.ɵɵpipeBind1(11, 10, \"addon.mod_assign.attemptreopenmethod_\" + ctx_r83.assign.attemptreopenmethod), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r83.canSaveGrades && ctx_r83.allowAddAttempt);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_6_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"coreFormatDate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r127 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r127.feedback.gradeddate * 1000));\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 60);\n    i0.ɵɵelement(1, \"core-user-avatar\", 13);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 14);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_6_p_8_Template, 3, 3, \"p\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r84 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"userId\", ctx_r84.grader.id)(\"courseId\", ctx_r84.courseId)(\"detail\", true);\n    i0.ɵɵattribute(\"aria-label\", ctx_r84.grader.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", ctx_r84.grader)(\"linkProfile\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 9, \"addon.mod_assign.gradedby\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r84.grader.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r84.feedback.gradeddate);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"coreFormatDate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r85 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.gradedon\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r85.feedback.gradeddate * 1000));\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_card_8_ion_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-button\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 37);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r128 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"href\", ctx_r128.gradeUrl)(\"showBrowserWarning\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 3, \"core.openinbrowser\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_card_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 61)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 11);\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_card_8_ion_button_7_Template, 4, 5, \"ion-button\", 35);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r86 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 2, \"addon.mod_assign.cannotgradefromapp\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r86.gradeUrl);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_Template, 8, 6, \"ion-item\", 42);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_Template, 6, 5, \"ng-container\", 18);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_2_Template, 2, 1, \"ng-container\", 18);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_3_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_4_Template, 9, 7, \"ion-item\", 4);\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_Template, 13, 12, \"ng-container\", 18);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_6_Template, 9, 11, \"ion-item\", 43);\n    i0.ɵɵtemplate(7, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_7_Template, 8, 6, \"ion-item\", 4);\n    i0.ɵɵtemplate(8, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_card_8_Template, 8, 4, \"ion-card\", 44);\n  }\n  if (rf & 2) {\n    const ctx_r77 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r77.feedback == null ? null : ctx_r77.feedback.gradefordisplay) && (!ctx_r77.isGrading || ctx_r77.grade.method !== \"simple\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.isGrading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.feedback);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.workflowStatusTranslationId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.assign.teamsubmission && ctx_r77.canSaveGrades);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.isGrading && ctx_r77.assign.attemptreopenmethod !== ctx_r77.attemptReopenMethodNone);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.grader);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r77.grader && (ctx_r77.feedback == null ? null : ctx_r77.feedback.gradeddate));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.isGrading && !ctx_r77.canSaveGrades);\n  }\n}\nfunction AddonModAssignSubmissionComponent_core_tab_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"core-tab\", 41);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_Template, 9, 9, \"ng-template\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 1, \"addon.mod_assign.grade\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 64);\n    i0.ɵɵelement(1, \"core-format-text\", 65);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r132 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", ctx_r132.lastAttempt.submissiongroupname)(\"contextInstanceId\", ctx_r132.courseId)(\"wsNotFiltered\", true);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\", 66)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\", 66);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.noteam\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, \"addon.mod_assign.noteam_desc\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\", 66)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\", 66);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_assign.multipleteams\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, \"addon.mod_assign.multipleteams_desc\"));\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.defaultteam\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_p_1_Template, 2, 3, \"p\", 63);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_ng_container_2_Template, 8, 6, \"ng-container\", 18);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_ng_container_3_Template, 8, 6, \"ng-container\", 18);\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_p_4_Template, 3, 3, \"p\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r129 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r129.lastAttempt.submissiongroup && ctx_r129.lastAttempt.submissiongroupname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r129.assign.preventsubmissionnotingroup && !ctx_r129.lastAttempt.submissiongroup && (!ctx_r129.lastAttempt.usergroups || ctx_r129.lastAttempt.usergroups.length <= 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r129.assign.preventsubmissionnotingroup && !ctx_r129.lastAttempt.submissiongroup && ctx_r129.lastAttempt.usergroups && ctx_r129.lastAttempt.usergroups.length > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r129.assign.preventsubmissionnotingroup && !ctx_r129.lastAttempt.submissiongroup);\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_ion_badge_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 67);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r130 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r130.statusColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r130.statusTranslated, \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_ion_badge_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 67);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r131 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"color\", ctx_r131.gradingColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, ctx_r131.gradingStatusTranslationId), \" \");\n  }\n}\nfunction AddonModAssignSubmissionComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_Template, 5, 4, \"ng-container\", 18);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ng_template_11_ion_badge_2_Template, 2, 2, \"ion-badge\", 62);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ng_template_11_ion_badge_3_Template, 3, 4, \"ion-badge\", 62);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.assign && ctx_r7.assign.teamsubmission && ctx_r7.lastAttempt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.statusTranslated);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.gradingStatusTranslationId);\n  }\n}\n/**\n * Component that displays an assignment submission.\n */\nexport class AddonModAssignSubmissionComponent {\n  constructor(splitviewCtrl) {\n    var _this = this;\n    this.splitviewCtrl = splitviewCtrl;\n    this.loaded = false; // Whether data has been loaded.\n    this.selectedTab = 'submission'; // Tab selected on start.\n    this.isSubmittedForGrading = false; // Whether the submission has been submitted for grading.\n    this.acceptStatement = false; // Statement accepted (for grading).\n    this.hasOffline = false; // Whether there is offline data.\n    this.submittedOffline = false; // Whether it was submitted in offline.\n    this.currentAttempt = 0; // The current attempt number.\n    this.blindMarking = false; // Whether blind marking is enabled.\n    this.membersToSubmit = []; // Team members that need to submit the assignment.\n    this.membersToSubmitBlind = []; // Team members that need to submit the assignment (blindmarking).\n    this.canSubmit = false; // Whether the user can submit for grading.\n    this.canEdit = false; // Whether the user can edit the submission.\n    this.showErrorStatementEdit = false; // Whether to show an error in edit due to submission statement.\n    this.showErrorStatementSubmit = false; // Whether to show an error in submit due to submission statement.\n    this.gradingColor = ''; // Color to apply to the grading status.\n    this.submissionPlugins = []; // List of submission plugins.\n    this.timeRemaining = ''; // Message about time remaining.\n    this.timeRemainingClass = ''; // Class to apply to time remaining message.\n    this.timeLimitEndTime = 0; // If time limit is enabled and submission is ongoing, the end time for the timer.\n    this.statusColor = ''; // Color to apply to the status.\n    this.unsupportedEditPlugins = []; // List of submission plugins that don't support edit.\n    this.grade = {\n      method: '',\n      modified: 0,\n      addAttempt: false,\n      applyToAll: false,\n      lang: 'en',\n      disabled: false\n    }; // Data about the grade.\n    this.isGrading = false; // Whether the user is grading.\n    this.canSaveGrades = false; // Whether the user can save the grades.\n    this.allowAddAttempt = false; // Allow adding a new attempt when grading.\n    this.isPreviousAttemptEmpty = true; // Whether the previous attempt contains an empty submission.\n    this.showDates = false; // Whether to show some dates.\n    this.timeLimitFinished = false; // Whether there is a time limit and it finished, so the user will submit late.\n    // Some constants.\n    this.statusNew = AddonModAssignSubmissionStatusValues.NEW;\n    this.statusReopened = AddonModAssignSubmissionStatusValues.REOPENED;\n    this.attemptReopenMethodNone = AddonModAssignAttemptReopenMethodValues.NONE;\n    this.unlimitedAttempts = AddonModAssignProvider.UNLIMITED_ATTEMPTS;\n    this.submissionStatusAvailable = false; // Whether we were able to retrieve the submission status.\n    this.originalGrades = {\n      addAttempt: false,\n      applyToAll: false,\n      outcomes: {}\n    }; // Object with the original grade data, to check for changes.\n    this.isDestroyed = false; // Whether the component has been destroyed.\n    this.hasOfflineGrade = false;\n    this.siteId = CoreSites.getCurrentSiteId();\n    this.currentUserId = CoreSites.getCurrentSiteUserId();\n    this.maxAttemptsText = Translate.instant('addon.mod_assign.unlimitedattempts');\n    // Refresh data if this assign is synchronized and it's grading.\n    const events = [AddonModAssignSyncProvider.AUTO_SYNCED, AddonModAssignSyncProvider.MANUAL_SYNCED];\n    this.syncObserver = CoreEvents.onMultiple(events, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        // Check that user is grading and this grade wasn't blocked when sync was performed.\n        if (!_this.loaded || !_this.isGrading || data.gradesBlocked.indexOf(_this.submitId) != -1) {\n          return;\n        }\n        if ('context' in data && data.context == 'submission' && data.submitId == _this.submitId) {\n          // Manual sync triggered by this same submission, ignore it.\n          return;\n        }\n        // Don't refresh if the user has modified some data.\n        const hasDataToSave = yield _this.hasDataToSave();\n        if (!hasDataToSave) {\n          _this.invalidateAndRefresh(false);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), this.siteId);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _CoreSites$getCurrent;\n    this.isSubmittedForGrading = !!this.submitId;\n    this.showDates = !((_CoreSites$getCurrent = CoreSites.getCurrentSite()) !== null && _CoreSites$getCurrent !== void 0 && _CoreSites$getCurrent.isVersionGreaterEqualThan('3.11'));\n    this.loadData(true);\n  }\n  /**\n   * Calculate the time remaining message and class.\n   *\n   * @param response Response of get submission status.\n   */\n  calculateTimeRemaining(response) {\n    var _this$userSubmission, _response$lastattempt;\n    if (!this.assign) {\n      return;\n    }\n    const submissionStarted = !!((_this$userSubmission = this.userSubmission) !== null && _this$userSubmission !== void 0 && _this$userSubmission.timestarted);\n    this.timeLimitEndTime = 0;\n    this.timeLimitFinished = false;\n    if (this.assign.duedate <= 0 && !submissionStarted) {\n      // No due date and no countdown.\n      this.timeRemaining = '';\n      this.timeRemainingClass = '';\n      return;\n    }\n    const time = CoreTimeUtils.timestamp();\n    const timeLimitEnabled = this.assign.timelimit && submissionStarted;\n    // Define duedate as latest between due date and extension - which is a possibility...\n    const extensionDuedate = (_response$lastattempt = response.lastattempt) === null || _response$lastattempt === void 0 ? void 0 : _response$lastattempt.extensionduedate;\n    const duedate = extensionDuedate ? Math.max(this.assign.duedate, extensionDuedate) : this.assign.duedate;\n    const dueDateReached = duedate > 0 && duedate - time <= 0;\n    const timeLimitEnabledBeforeDueDate = timeLimitEnabled && !dueDateReached;\n    if (this.userSubmission && this.userSubmission.status === AddonModAssignSubmissionStatusValues.SUBMITTED) {\n      // Submitted, display the relevant early/late message.\n      const lateCalculation = this.userSubmission.timemodified - (timeLimitEnabledBeforeDueDate ? this.userSubmission.timecreated : 0);\n      const lateThreshold = timeLimitEnabledBeforeDueDate ? this.assign.timelimit || 0 : duedate;\n      const earlyString = timeLimitEnabledBeforeDueDate ? 'submittedundertime' : 'submittedearly';\n      const lateString = timeLimitEnabledBeforeDueDate ? 'submittedovertime' : 'submittedlate';\n      const onTime = lateCalculation <= lateThreshold;\n      this.timeRemaining = Translate.instant('addon.mod_assign.' + (onTime ? earlyString : lateString), {\n        $a: CoreTime.formatTime(Math.abs(lateCalculation - lateThreshold))\n      });\n      this.timeRemainingClass = onTime ? 'earlysubmission' : 'latesubmission';\n      return;\n    }\n    if (dueDateReached) {\n      var _response$lastattempt2, _response$gradingsumm;\n      // There is no submission, due date has passed, show assignment is overdue.\n      const submissionsEnabled = ((_response$lastattempt2 = response.lastattempt) === null || _response$lastattempt2 === void 0 ? void 0 : _response$lastattempt2.submissionsenabled) || ((_response$gradingsumm = response.gradingsummary) === null || _response$gradingsumm === void 0 ? void 0 : _response$gradingsumm.submissionsenabled);\n      this.timeRemaining = Translate.instant('addon.mod_assign.' + (submissionsEnabled ? 'overdue' : 'duedatereached'), {\n        $a: CoreTime.formatTime(time - duedate)\n      });\n      this.timeRemainingClass = 'overdue';\n      this.timeLimitFinished = true;\n      return;\n    }\n    if (timeLimitEnabled && submissionStarted) {\n      // An attempt has started and there is a time limit, display the time limit.\n      this.timeRemaining = '';\n      this.timeRemainingClass = 'timeremaining';\n      this.timeLimitEndTime = AddonModAssignHelper.calculateEndTime(this.assign, this.userSubmission);\n      return;\n    }\n    // Assignment is not overdue, and no submission has been made. Just display the due date.\n    this.timeRemaining = CoreTime.formatTime(duedate - time);\n    this.timeRemainingClass = 'timeremaining';\n  }\n  /**\n   * Check if the user can leave the view. If there are changes to be saved, it will ask for confirm.\n   *\n   * @returns Promise resolved with true if can leave the view, rejected otherwise.\n   */\n  canLeave() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Check if there is data to save.\n      const modified = yield _this2.hasDataToSave();\n      if (modified) {\n        // Modified, confirm user wants to go back.\n        yield CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        yield _this2.discardDrafts();\n      }\n      return true;\n    })();\n  }\n  /**\n   * Copy a previous attempt and then go to edit.\n   *\n   * @returns Promise resolved when done.\n   */\n  copyPrevious() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      var _this3$previousAttemp;\n      if (!_this3.assign) {\n        return;\n      }\n      if (!CoreNetwork.isOnline()) {\n        CoreDomUtils.showErrorModal('core.networkerrormsg', true);\n        return;\n      }\n      if (!((_this3$previousAttemp = _this3.previousAttempt) !== null && _this3$previousAttemp !== void 0 && _this3$previousAttemp.submission)) {\n        // Cannot access previous attempts, just go to edit.\n        return _this3.goToEdit(true);\n      }\n      const previousSubmission = _this3.previousAttempt.submission;\n      let modal = yield CoreDomUtils.showModalLoading();\n      const size = yield CoreUtils.ignoreErrors(AddonModAssignHelper.getSubmissionSizeForCopy(_this3.assign, previousSubmission), -1); // Error calculating size, return -1.\n      modal.dismiss();\n      try {\n        // Confirm action.\n        yield CoreFileUploaderHelper.confirmUploadFile(size, true);\n      } catch (_unused) {\n        // Cancelled.\n        return;\n      }\n      // User confirmed, copy the attempt.\n      modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        yield AddonModAssignHelper.copyPreviousAttempt(_this3.assign, previousSubmission);\n        // Now go to edit.\n        _this3.goToEdit(true);\n        if (!_this3.assign.submissiondrafts && _this3.userSubmission) {\n          // No drafts allowed, so it was submitted. Trigger event.\n          CoreEvents.trigger(AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT, {\n            assignmentId: _this3.assign.id,\n            submissionId: _this3.userSubmission.id,\n            userId: _this3.currentUserId\n          }, _this3.siteId);\n        } else {\n          // Invalidate and refresh data to update this view.\n          yield _this3.invalidateAndRefresh(true);\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Discard feedback drafts.\n   *\n   * @returns Promise resolved when done.\n   */\n  discardDrafts() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (_this4.assign && _this4.feedback && _this4.feedback.plugins) {\n        yield AddonModAssignHelper.discardFeedbackPluginData(_this4.assign.id, _this4.submitId, _this4.feedback);\n      }\n    })();\n  }\n  /**\n   * Go to the page to add or edit submission.\n   *\n   * @param afterCopyPrevious Whether the user has just copied the previous submission.\n   */\n  goToEdit(afterCopyPrevious = false) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      var _this5$assign;\n      if (!afterCopyPrevious && (_this5$assign = _this5.assign) !== null && _this5$assign !== void 0 && _this5$assign.timelimit && (!_this5.userSubmission || !_this5.userSubmission.timestarted)) {\n        try {\n          yield CoreDomUtils.showConfirm(Translate.instant('addon.mod_assign.confirmstart', {\n            $a: CoreTime.formatTime(_this5.assign.timelimit)\n          }), undefined, Translate.instant('addon.mod_assign.beginassignment'));\n        } catch (_unused2) {\n          return; // User canceled.\n        }\n      }\n\n      CoreNavigator.navigateToSitePath(AddonModAssignModuleHandlerService.PAGE_NAME + '/' + _this5.courseId + '/' + _this5.moduleId + '/edit', {\n        params: {\n          blindId: _this5.blindId\n        }\n      });\n    })();\n  }\n  /**\n   * Check if there's data to save (grade).\n   *\n   * @param isSubmit Whether the user is about to submit the grade.\n   * @returns Promise resolved with boolean: whether there's data to save.\n   */\n  hasDataToSave(isSubmit = false) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      var _this6$gradeInfo, _this6$feedback;\n      if (!_this6.canSaveGrades || !_this6.loaded || !_this6.assign) {\n        return false;\n      }\n      if (isSubmit && _this6.hasOfflineGrade) {\n        // Always allow sending if the grade is saved in offline.\n        return true;\n      }\n      // Check if numeric grade and toggles changed.\n      if (_this6.originalGrades.grade != _this6.grade.grade || _this6.originalGrades.addAttempt != _this6.grade.addAttempt || _this6.originalGrades.applyToAll != _this6.grade.applyToAll) {\n        return true;\n      }\n      // Check if outcomes changed.\n      if ((_this6$gradeInfo = _this6.gradeInfo) !== null && _this6$gradeInfo !== void 0 && _this6$gradeInfo.outcomes) {\n        for (const x in _this6.gradeInfo.outcomes) {\n          const outcome = _this6.gradeInfo.outcomes[x];\n          if (_this6.originalGrades.outcomes[outcome.id] === undefined || _this6.originalGrades.outcomes[outcome.id] != outcome.selectedId) {\n            return true;\n          }\n        }\n      }\n      if (!((_this6$feedback = _this6.feedback) !== null && _this6$feedback !== void 0 && _this6$feedback.plugins)) {\n        return false;\n      }\n      try {\n        return AddonModAssignHelper.hasFeedbackDataChanged(_this6.assign, _this6.userSubmission, _this6.feedback, _this6.submitId);\n      } catch (error) {\n        // Error ocurred, consider there are no changes.\n        return false;\n      }\n    })();\n  }\n  /**\n   * User entered the page that contains the component.\n   */\n  ionViewDidEnter() {\n    var _this$tabs;\n    (_this$tabs = this.tabs) === null || _this$tabs === void 0 || _this$tabs.ionViewDidEnter();\n  }\n  /**\n   * User left the page that contains the component.\n   */\n  ionViewDidLeave() {\n    var _this$tabs2;\n    (_this$tabs2 = this.tabs) === null || _this$tabs2 === void 0 || _this$tabs2.ionViewDidLeave();\n  }\n  /**\n   * Invalidate and refresh data.\n   *\n   * @param sync Whether to try to synchronize data.\n   * @returns Promise resolved when done.\n   */\n  invalidateAndRefresh(sync = false) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      _this7.loaded = false;\n      const promises = [];\n      promises.push(AddonModAssign.invalidateAssignmentData(_this7.courseId));\n      if (_this7.assign) {\n        promises.push(AddonModAssign.invalidateSubmissionStatusData(_this7.assign.id, _this7.submitId, undefined, !!_this7.blindId));\n        promises.push(AddonModAssign.invalidateAssignmentUserMappingsData(_this7.assign.id));\n        promises.push(AddonModAssign.invalidateListParticipantsData(_this7.assign.id));\n        promises.push(AddonModAssign.invalidateAssignmentGradesData(_this7.assign.id));\n      }\n      promises.push(CoreGradesHelper.invalidateGradeModuleItems(_this7.courseId, _this7.submitId));\n      promises.push(CoreCourse.invalidateModule(_this7.moduleId));\n      // Invalidate plugins.\n      if (_this7.submissionComponents && _this7.submissionComponents.length) {\n        _this7.submissionComponents.forEach(component => {\n          promises.push(component.invalidate());\n        });\n      }\n      yield CoreUtils.ignoreErrors(Promise.all(promises));\n      yield _this7.loadData(sync);\n    })();\n  }\n  /**\n   * Load the data to render the submission.\n   *\n   * @param sync Whether to try to synchronize data.\n   * @returns Promise resolved when done.\n   */\n  loadData(sync = false) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      let isBlind = !!_this8.blindId;\n      _this8.previousAttempt = undefined;\n      _this8.isPreviousAttemptEmpty = true;\n      if (!_this8.submitId) {\n        _this8.submitId = _this8.currentUserId;\n        isBlind = false;\n      }\n      try {\n        // Get the assignment.\n        _this8.assign = yield AddonModAssign.getAssignment(_this8.courseId, _this8.moduleId);\n        if (_this8.submitId != _this8.currentUserId && sync) {\n          // Teacher viewing a student submission. Try to sync the assign, there could be offline grades stored.\n          try {\n            const result = yield AddonModAssignSync.syncAssign(_this8.assign.id);\n            if (result && result.updated) {\n              CoreEvents.trigger(AddonModAssignSyncProvider.MANUAL_SYNCED, {\n                assignId: _this8.assign.id,\n                warnings: result.warnings,\n                gradesBlocked: result.gradesBlocked,\n                context: 'submission',\n                submitId: _this8.submitId\n              }, _this8.siteId);\n            }\n          } catch (_unused3) {\n            // Ignore errors, probably user is offline or sync is blocked.\n          }\n        }\n        const time = CoreTimeUtils.timestamp();\n        let promises = [];\n        if (_this8.assign.allowsubmissionsfromdate && _this8.assign.allowsubmissionsfromdate >= time) {\n          _this8.fromDate = CoreTimeUtils.userDate(_this8.assign.allowsubmissionsfromdate * 1000);\n        }\n        _this8.blindMarking = _this8.isSubmittedForGrading && !!_this8.assign.blindmarking && !_this8.assign.revealidentities;\n        if (!_this8.blindMarking && _this8.submitId != _this8.currentUserId) {\n          promises.push(_this8.loadSubmissionUserProfile());\n        }\n        // Check if there's any offline data for this submission.\n        promises.push(_this8.loadSubmissionOfflineData());\n        yield Promise.all(promises);\n        // Get submission status.\n        const submissionStatus = yield AddonModAssign.getSubmissionStatusWithRetry(_this8.assign, {\n          userId: _this8.submitId,\n          isBlind\n        });\n        _this8.submissionStatusAvailable = true;\n        _this8.lastAttempt = submissionStatus.lastattempt;\n        _this8.membersToSubmit = [];\n        _this8.membersToSubmitBlind = [];\n        // Search the previous attempt.\n        if (submissionStatus.previousattempts && submissionStatus.previousattempts.length > 0) {\n          const previousAttempts = submissionStatus.previousattempts.sort((a, b) => a.attemptnumber - b.attemptnumber);\n          _this8.previousAttempt = previousAttempts[previousAttempts.length - 1];\n          _this8.isPreviousAttemptEmpty = AddonModAssignHelper.isSubmissionEmpty(_this8.assign, _this8.previousAttempt.submission);\n        }\n        // Treat last attempt.\n        promises = _this8.treatLastAttempt(submissionStatus, _this8.lastAttempt);\n        // Calculate the time remaining.\n        _this8.calculateTimeRemaining(submissionStatus);\n        // Load the feedback.\n        promises.push(_this8.loadFeedback(_this8.assign, submissionStatus.feedback));\n        // Check if there's any unsupported plugin for editing.\n        if (!_this8.userSubmission || !_this8.userSubmission.plugins) {\n          // Submission not created yet, we have to use assign configs to detect the plugins used.\n          _this8.userSubmission = AddonModAssignHelper.createEmptySubmission();\n          _this8.userSubmission.plugins = AddonModAssignHelper.getPluginsEnabled(_this8.assign, 'assignsubmission');\n        }\n        // Get the submission plugins that don't support editing.\n        promises.push(_this8.loadUnsupportedPlugins());\n        yield Promise.all(promises);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n      } finally {\n        _this8.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Load profile of submission's user.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadSubmissionUserProfile() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      _this9.user = yield CoreUser.getProfile(_this9.submitId, _this9.courseId);\n    })();\n  }\n  /**\n   * Load offline data for the submission (not the submission grade).\n   *\n   * @returns Promise resolved when done.\n   */\n  loadSubmissionOfflineData() {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this10.assign) {\n        return;\n      }\n      try {\n        const submission = yield AddonModAssignOffline.getSubmission(_this10.assign.id, _this10.submitId);\n        _this10.hasOffline = submission && submission.plugindata && Object.keys(submission.plugindata).length > 0;\n        _this10.submittedOffline = !!(submission !== null && submission !== void 0 && submission.submitted);\n      } catch (error) {\n        // No offline data found.\n        _this10.hasOffline = false;\n        _this10.submittedOffline = false;\n      }\n    })();\n  }\n  /**\n   * Load the data to render the feedback and grade.\n   *\n   * @param assign Assign data.\n   * @param feedback The feedback data from the submission status.\n   * @returns Promise resolved when done.\n   */\n  loadFeedback(assign, feedback) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      var _this11$lastAttempt, _this11$lastAttempt2;\n      _this11.grade = {\n        method: '',\n        modified: 0,\n        addAttempt: false,\n        applyToAll: false,\n        lang: '',\n        disabled: false\n      };\n      _this11.originalGrades = {\n        addAttempt: false,\n        applyToAll: false,\n        outcomes: {}\n      };\n      if (feedback) {\n        _this11.feedback = feedback;\n        // If we have data about the grader, get its profile.\n        if (feedback.grade && feedback.grade.grader > 0) {\n          _this11.grader = yield CoreUtils.ignoreErrors(CoreUser.getProfile(feedback.grade.grader, _this11.courseId));\n        } else {\n          delete _this11.grader;\n        }\n        // Check if the grade uses advanced grading.\n        if (feedback.gradefordisplay) {\n          const position = feedback.gradefordisplay.indexOf('class=\"advancedgrade\"');\n          if (position > -1) {\n            _this11.feedback.advancedgrade = true;\n          }\n        }\n        // Do not override already loaded grade.\n        if (feedback.grade && feedback.grade.grade && !_this11.grade.grade) {\n          const parsedGrade = parseFloat(feedback.grade.grade);\n          _this11.grade.grade = parsedGrade >= 0 ? parsedGrade : undefined;\n          _this11.grade.gradebookGrade = CoreUtils.formatFloat(_this11.grade.grade);\n          _this11.originalGrades.grade = _this11.grade.grade;\n        }\n      } else {\n        // If no feedback, always show Submission.\n        _this11.selectedTab = 'submission';\n        _this11.tabs.selectTab(_this11.selectedTab);\n      }\n      _this11.grade.gradingStatus = (_this11$lastAttempt = _this11.lastAttempt) === null || _this11$lastAttempt === void 0 ? void 0 : _this11$lastAttempt.gradingstatus;\n      // Get the grade for the assign.\n      _this11.gradeInfo = yield CoreCourse.getModuleBasicGradeInfo(_this11.moduleId);\n      if (!_this11.gradeInfo) {\n        return;\n      }\n      // Treat the grade info.\n      yield _this11.treatGradeInfo(assign);\n      const isManual = assign.attemptreopenmethod == AddonModAssignAttemptReopenMethodValues.MANUAL;\n      const isUnlimited = assign.maxattempts == AddonModAssignProvider.UNLIMITED_ATTEMPTS;\n      const isLessThanMaxAttempts = !!_this11.userSubmission && _this11.userSubmission.attemptnumber < assign.maxattempts - 1;\n      _this11.allowAddAttempt = isManual && (!_this11.userSubmission || isUnlimited || isLessThanMaxAttempts);\n      if (assign.teamsubmission) {\n        _this11.grade.applyToAll = true;\n        _this11.originalGrades.applyToAll = true;\n      }\n      if (assign.markingworkflow && _this11.grade.gradingStatus) {\n        _this11.workflowStatusTranslationId = AddonModAssign.getSubmissionGradingStatusTranslationId(_this11.grade.gradingStatus);\n      }\n      if (((_this11$lastAttempt2 = _this11.lastAttempt) === null || _this11$lastAttempt2 === void 0 ? void 0 : _this11$lastAttempt2.gradingstatus) === AddonModAssignGradingStates.GRADED && !assign.markingworkflow && _this11.userSubmission && feedback) {\n        if (feedback.gradeddate < _this11.userSubmission.timemodified) {\n          _this11.lastAttempt.gradingstatus = AddonModAssignGradingStates.GRADED_FOLLOWUP_SUBMIT;\n          // Get grading text and color.\n          _this11.gradingStatusTranslationId = AddonModAssign.getSubmissionGradingStatusTranslationId(_this11.lastAttempt.gradingstatus);\n          _this11.gradingColor = AddonModAssign.getSubmissionGradingStatusColor(_this11.lastAttempt.gradingstatus);\n        }\n      }\n      if (!_this11.feedback || !_this11.feedback.plugins) {\n        // Feedback plugins not present, we have to use assign configs to detect the plugins used.\n        _this11.feedback = AddonModAssignHelper.createEmptyFeedback();\n        _this11.feedback.plugins = AddonModAssignHelper.getPluginsEnabled(assign, 'assignfeedback');\n      }\n      // Check if there's any offline data for this submission.\n      if (!_this11.canSaveGrades) {\n        // User cannot save grades in the app. Load the URL to grade it in browser.\n        const mod = yield CoreCourse.getModule(_this11.moduleId, _this11.courseId, undefined, true);\n        _this11.gradeUrl = mod.url + '&action=grader&userid=' + _this11.submitId;\n        return;\n      }\n      // Submission grades aren't identified by attempt number so it can retrieve the feedback for a previous attempt.\n      // The app will not treat that as an special case.\n      const submissionGrade = yield CoreUtils.ignoreErrors(AddonModAssignOffline.getSubmissionGrade(assign.id, _this11.submitId));\n      _this11.hasOfflineGrade = false;\n      // Load offline grades.\n      if (submissionGrade && (!feedback || !feedback.gradeddate || feedback.gradeddate < submissionGrade.timemodified)) {\n        var _this11$gradeInfo;\n        // If grade has been modified from gradebook, do not use offline.\n        if ((_this11.grade.modified || 0) < submissionGrade.timemodified) {\n          _this11.hasOfflineGrade = true;\n          _this11.grade.grade = !_this11.grade.scale ? CoreUtils.formatFloat(submissionGrade.grade) : submissionGrade.grade;\n          _this11.gradingStatusTranslationId = 'addon.mod_assign.gradenotsynced';\n          _this11.gradingColor = '';\n          _this11.originalGrades.grade = _this11.grade.grade;\n        }\n        _this11.grade.applyToAll = !!submissionGrade.applytoall;\n        _this11.grade.addAttempt = !!submissionGrade.addattempt;\n        _this11.originalGrades.applyToAll = !!_this11.grade.applyToAll;\n        _this11.originalGrades.addAttempt = !!_this11.grade.addAttempt;\n        if (submissionGrade.outcomes && Object.keys(submissionGrade.outcomes).length && (_this11$gradeInfo = _this11.gradeInfo) !== null && _this11$gradeInfo !== void 0 && _this11$gradeInfo.outcomes) {\n          _this11.gradeInfo.outcomes.forEach(outcome => {\n            if (outcome.itemNumber !== undefined && submissionGrade.outcomes[outcome.itemNumber] !== undefined) {\n              // If outcome has been modified from gradebook, do not use offline.\n              if ((outcome.modified || 0) < submissionGrade.timemodified) {\n                outcome.selectedId = submissionGrade.outcomes[outcome.itemNumber];\n                _this11.originalGrades.outcomes[outcome.id] = outcome.selectedId;\n              }\n            }\n          });\n        }\n      }\n    })();\n  }\n  /**\n   * Get the submission plugins that don't support editing.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadUnsupportedPlugins() {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      var _this12$userSubmissio;\n      _this12.unsupportedEditPlugins = yield AddonModAssign.getUnsupportedEditPlugins(((_this12$userSubmissio = _this12.userSubmission) === null || _this12$userSubmissio === void 0 ? void 0 : _this12$userSubmissio.plugins) || []);\n      if (_this12.unsupportedEditPlugins && !_this12.submissionUrl) {\n        const mod = yield CoreCourse.getModule(_this12.moduleId, _this12.courseId, undefined, true);\n        _this12.submissionUrl = `${mod.url}&action=editsubmission`;\n      }\n    })();\n  }\n  /**\n   * Set the submission status name and class.\n   *\n   * @param status Submission status.\n   */\n  setStatusNameAndClass(status) {\n    if (!this.assign) {\n      return;\n    }\n    if (this.hasOffline || this.submittedOffline) {\n      // Offline data.\n      this.statusTranslated = Translate.instant('core.notsent');\n      this.statusColor = 'warning';\n    } else if (!this.assign.teamsubmission) {\n      // Single submission.\n      if (this.userSubmission && this.userSubmission.status != this.statusNew) {\n        this.statusTranslated = Translate.instant('addon.mod_assign.submissionstatus_' + this.userSubmission.status);\n        this.statusColor = AddonModAssign.getSubmissionStatusColor(this.userSubmission.status);\n      } else {\n        var _status$lastattempt;\n        if (!((_status$lastattempt = status.lastattempt) !== null && _status$lastattempt !== void 0 && _status$lastattempt.submissionsenabled)) {\n          this.statusTranslated = Translate.instant('addon.mod_assign.noonlinesubmissions');\n          this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_ONLINE_SUBMISSIONS);\n        } else {\n          this.statusTranslated = Translate.instant('addon.mod_assign.noattempt');\n          this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_ATTEMPT);\n        }\n      }\n    } else {\n      var _status$lastattempt2;\n      // Team submission.\n      if (!((_status$lastattempt2 = status.lastattempt) !== null && _status$lastattempt2 !== void 0 && _status$lastattempt2.submissiongroup) && this.assign.preventsubmissionnotingroup) {\n        this.statusTranslated = Translate.instant('addon.mod_assign.nosubmission');\n        this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_SUBMISSION);\n      } else if (this.userSubmission && this.userSubmission.status != this.statusNew) {\n        this.statusTranslated = Translate.instant('addon.mod_assign.submissionstatus_' + this.userSubmission.status);\n        this.statusColor = AddonModAssign.getSubmissionStatusColor(this.userSubmission.status);\n      } else {\n        var _status$lastattempt3;\n        if (!((_status$lastattempt3 = status.lastattempt) !== null && _status$lastattempt3 !== void 0 && _status$lastattempt3.submissionsenabled)) {\n          this.statusTranslated = Translate.instant('addon.mod_assign.noonlinesubmissions');\n          this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_ONLINE_SUBMISSIONS);\n        } else {\n          this.statusTranslated = Translate.instant('addon.mod_assign.nosubmission');\n          this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_SUBMISSION);\n        }\n      }\n    }\n  }\n  /**\n   * Show advanced grade.\n   */\n  showAdvancedGrade() {\n    if (this.feedback && this.feedback.advancedgrade) {\n      CoreTextUtils.viewText(Translate.instant('core.grades.grade'), this.feedback.gradefordisplay, {\n        component: AddonModAssignProvider.COMPONENT,\n        componentId: this.moduleId\n      });\n    }\n  }\n  /**\n   * Submit for grading.\n   *\n   * @param acceptStatement Whether the statement has been accepted.\n   */\n  submitForGrading(acceptStatement) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this13.assign || !_this13.userSubmission) {\n        return;\n      }\n      if (_this13.assign.requiresubmissionstatement && !acceptStatement) {\n        CoreDomUtils.showErrorModal('addon.mod_assign.acceptsubmissionstatement', true);\n        return;\n      }\n      try {\n        // Ask for confirmation. @todo plugin precheck_submission\n        yield CoreDomUtils.showConfirm(Translate.instant('addon.mod_assign.confirmsubmission'));\n        const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n        try {\n          yield AddonModAssign.submitForGrading(_this13.assign.id, _this13.courseId, acceptStatement, _this13.userSubmission.timemodified, _this13.hasOffline);\n          // Submitted, trigger event.\n          CoreEvents.trigger(AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT, {\n            assignmentId: _this13.assign.id,\n            submissionId: _this13.userSubmission.id,\n            userId: _this13.currentUserId\n          }, _this13.siteId);\n        } catch (error) {\n          CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n        } finally {\n          modal.dismiss();\n        }\n      } catch (_unused4) {\n        // Cancelled.\n      }\n    })();\n  }\n  /**\n   * Submit a grade and feedback.\n   *\n   * @returns Promise resolved when done.\n   */\n  submitGrade() {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      var _this14$gradeInfo;\n      // Check if there's something to be saved.\n      const modified = yield _this14.hasDataToSave(true);\n      if (!modified || !_this14.assign) {\n        return;\n      }\n      const attemptNumber = _this14.userSubmission ? _this14.userSubmission.attemptnumber : -1;\n      const outcomes = {};\n      // Scale \"no grade\" uses -1 instead of 0.\n      const grade = _this14.grade.scale && _this14.grade.grade == 0 ? -1 : CoreUtils.unformatFloat(_this14.grade.grade, true);\n      if (grade === false) {\n        // Grade is invalid.\n        throw new CoreError(Translate.instant('core.grades.badgrade'));\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      (((_this14$gradeInfo = _this14.gradeInfo) === null || _this14$gradeInfo === void 0 ? void 0 : _this14$gradeInfo.outcomes) || []).forEach(outcome => {\n        if (outcome.itemNumber && outcome.selectedId) {\n          outcomes[outcome.itemNumber] = outcome.selectedId;\n        }\n      });\n      let pluginData = {};\n      try {\n        if (_this14.feedback && _this14.feedback.plugins) {\n          pluginData = yield AddonModAssignHelper.prepareFeedbackPluginData(_this14.assign.id, _this14.submitId, _this14.feedback);\n        }\n        try {\n          // We have all the data, now send it.\n          yield AddonModAssign.submitGradingForm(_this14.assign.id, _this14.submitId, _this14.courseId, grade || 0, attemptNumber, _this14.grade.addAttempt, _this14.grade.gradingStatus || '', _this14.grade.applyToAll, outcomes, pluginData);\n          // Data sent, discard draft.\n          yield _this14.discardDrafts();\n        } finally {\n          // Invalidate and refresh data.\n          _this14.invalidateAndRefresh(true);\n          CoreEvents.trigger(AddonModAssignProvider.GRADED_EVENT, {\n            assignmentId: _this14.assign.id,\n            submissionId: _this14.submitId,\n            userId: _this14.currentUserId\n          }, _this14.siteId);\n        }\n      } finally {\n        // Select submission view.\n        _this14.tabs.selectTab('submission');\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Treat the grade info.\n   *\n   * @param assign Assign info.\n   * @returns Promise resolved when done.\n   */\n  treatGradeInfo(assign) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      var _assignGrades$find;\n      if (!_this15.gradeInfo) {\n        return;\n      }\n      _this15.isGrading = true;\n      // Make sure outcomes is an array.\n      const gradeInfo = _this15.gradeInfo;\n      gradeInfo.outcomes = gradeInfo.outcomes || [];\n      // Check if grading method is simple or not.\n      if (gradeInfo.advancedgrading && gradeInfo.advancedgrading[0] && gradeInfo.advancedgrading[0].method !== undefined) {\n        _this15.grade.method = gradeInfo.advancedgrading[0].method || 'simple';\n      } else {\n        _this15.grade.method = 'simple';\n      }\n      _this15.canSaveGrades = _this15.grade.method == 'simple'; // Grades can be saved if simple grading.\n      const gradeNotReleased = assign.markingworkflow && _this15.grade.gradingStatus !== AddonModAssignGradingStates.MARKING_WORKFLOW_STATE_RELEASED;\n      const [gradebookGrades, assignGrades] = yield Promise.all([CoreGradesHelper.getGradeModuleItems(_this15.courseId, _this15.moduleId, _this15.submitId), gradeNotReleased ? CoreUtils.ignoreErrors(AddonModAssign.getAssignmentGrades(assign.id, {\n        cmId: assign.cmid\n      })) : undefined]);\n      const unreleasedGrade = Number(assignGrades === null || assignGrades === void 0 || (_assignGrades$find = assignGrades.find(grade => grade.userid === _this15.submitId)) === null || _assignGrades$find === void 0 ? void 0 : _assignGrades$find.grade);\n      _this15.grade.unreleasedGrade = undefined;\n      if (gradeInfo.scale) {\n        _this15.grade.scale = CoreUtils.makeMenuFromList(gradeInfo.scale, Translate.instant('core.nograde'));\n        if (isSafeNumber(unreleasedGrade)) {\n          var _ref2;\n          const scaleItem = _this15.grade.scale.find(scaleItem => scaleItem.value === unreleasedGrade);\n          _this15.grade.unreleasedGrade = scaleItem === null || scaleItem === void 0 ? void 0 : scaleItem.label;\n          _this15.grade.grade = (_ref2 = scaleItem !== null && scaleItem !== void 0 ? scaleItem : _this15.grade.scale[0]) === null || _ref2 === void 0 ? void 0 : _ref2.value;\n          _this15.originalGrades.grade = _this15.grade.grade;\n        }\n      } else {\n        var _this15$grade$unrelea;\n        _this15.grade.unreleasedGrade = isSafeNumber(unreleasedGrade) ? unreleasedGrade : undefined;\n        // Format the grade.\n        _this15.grade.grade = CoreUtils.formatFloat((_this15$grade$unrelea = _this15.grade.unreleasedGrade) !== null && _this15$grade$unrelea !== void 0 ? _this15$grade$unrelea : _this15.grade.grade);\n        _this15.originalGrades.grade = _this15.grade.grade;\n        // Get current language to format grade input field.\n        _this15.grade.lang = yield CoreLang.getCurrentLanguage();\n      }\n      // Treat outcomes.\n      if (gradeInfo.outcomes) {\n        gradeInfo.outcomes.forEach(outcome => {\n          if (outcome.scale) {\n            outcome.options = CoreUtils.makeMenuFromList(outcome.scale, Translate.instant('core.grades.nooutcome'));\n          }\n          outcome.selectedId = 0;\n          _this15.originalGrades.outcomes[outcome.id] = outcome.selectedId;\n        });\n      }\n      const outcomes = [];\n      gradebookGrades.forEach(grade => {\n        if (!grade.outcomeid && !grade.scaleid) {\n          // Clean HTML tags, grade can contain an icon.\n          const gradeFormatted = CoreTextUtils.cleanTags(grade.gradeformatted || '');\n          // Not using outcomes or scale, get the numeric grade.\n          if (_this15.grade.scale) {\n            _this15.grade.gradebookGrade = CoreUtils.formatFloat(CoreGradesHelper.getGradeValueFromLabel(_this15.grade.scale, gradeFormatted));\n          } else {\n            const parsedGrade = parseFloat(gradeFormatted);\n            _this15.grade.gradebookGrade = parsedGrade || parsedGrade == 0 ? CoreUtils.formatFloat(parsedGrade) : undefined;\n          }\n          _this15.grade.disabled = !!grade.gradeislocked || !!grade.gradeisoverridden;\n          _this15.grade.modified = grade.gradedategraded;\n        } else if (grade.outcomeid) {\n          var _gradeInfo$outcomes;\n          // Only show outcomes with info on it, outcomeid could be null if outcomes are disabled on site.\n          (_gradeInfo$outcomes = gradeInfo.outcomes) === null || _gradeInfo$outcomes === void 0 || _gradeInfo$outcomes.forEach(outcome => {\n            if (outcome.id == String(grade.outcomeid)) {\n              // Clean HTML tags, grade can contain an icon.\n              outcome.selected = CoreTextUtils.cleanTags(grade.gradeformatted || '');\n              outcome.modified = grade.gradedategraded;\n              if (outcome.options) {\n                outcome.selectedId = CoreGradesHelper.getGradeValueFromLabel(outcome.options, outcome.selected);\n                _this15.originalGrades.outcomes[outcome.id] = outcome.selectedId;\n                outcome.itemNumber = grade.itemnumber;\n              }\n              outcomes.push(outcome);\n            }\n          });\n          gradeInfo.disabled = grade.gradeislocked || grade.gradeisoverridden;\n        }\n      });\n      gradeInfo.outcomes = outcomes;\n    })();\n  }\n  /**\n   * Treat the last attempt.\n   *\n   * @param submissionStatus Response of get submission status.\n   * @param lastAttempt Last attempt (if any).\n   * @returns Promises resolved when done.\n   */\n  treatLastAttempt(submissionStatus, lastAttempt) {\n    const promises = [];\n    if (!lastAttempt || !this.assign) {\n      return [];\n    }\n    const submissionStatementMissing = !!this.assign.requiresubmissionstatement && this.assign.submissionstatement === undefined;\n    this.canSubmit = !this.isSubmittedForGrading && !this.submittedOffline && (lastAttempt.cansubmit || this.hasOffline && AddonModAssign.canSubmitOffline(this.assign, submissionStatus));\n    this.canEdit = !this.isSubmittedForGrading && lastAttempt.canedit && (!this.submittedOffline || !this.assign.submissiondrafts);\n    // Get submission statement if needed.\n    if (this.assign.requiresubmissionstatement && this.assign.submissiondrafts && this.submitId == this.currentUserId) {\n      this.submissionStatement = this.assign.submissionstatement;\n      this.acceptStatement = false;\n    } else {\n      this.submissionStatement = undefined;\n      this.acceptStatement = true; // No submission statement, so it's accepted.\n    }\n    // Show error if submission statement should be shown but it couldn't be retrieved.\n    this.showErrorStatementEdit = submissionStatementMissing && !this.assign.submissiondrafts && this.submitId == this.currentUserId;\n    this.showErrorStatementSubmit = submissionStatementMissing && !!this.assign.submissiondrafts;\n    this.userSubmission = AddonModAssign.getSubmissionObjectFromAttempt(this.assign, lastAttempt);\n    if (this.assign.attemptreopenmethod != this.attemptReopenMethodNone && this.userSubmission) {\n      this.currentAttempt = this.userSubmission.attemptnumber + 1;\n    }\n    this.setStatusNameAndClass(submissionStatus);\n    if (this.assign.teamsubmission) {\n      if (lastAttempt.submissiongroup) {\n        // Get the name of the group.\n        promises.push(CoreGroups.getActivityAllowedGroups(this.assign.cmid).then(result => {\n          const group = result.groups.find(group => group.id === lastAttempt.submissiongroup);\n          if (group) {\n            lastAttempt.submissiongroupname = group.name;\n          }\n          return;\n        }));\n      }\n      // Get the members that need to submit.\n      if (this.userSubmission && this.userSubmission.status != this.statusNew && lastAttempt.submissiongroupmemberswhoneedtosubmit) {\n        lastAttempt.submissiongroupmemberswhoneedtosubmit.forEach(member => {\n          if (!this.blindMarking) {\n            promises.push(CoreUser.getProfile(member, this.courseId).then(profile => {\n              this.membersToSubmit.push(profile);\n              return;\n            }));\n          }\n        });\n      }\n    }\n    // Get grading text and color.\n    this.gradingStatusTranslationId = AddonModAssign.getSubmissionGradingStatusTranslationId(lastAttempt.gradingstatus);\n    this.gradingColor = AddonModAssign.getSubmissionGradingStatusColor(lastAttempt.gradingstatus);\n    // Get the submission plugins.\n    if (this.userSubmission) {\n      if (!this.assign.teamsubmission || !lastAttempt.submissiongroup || !this.assign.preventsubmissionnotingroup) {\n        var _this$previousAttempt;\n        if ((_this$previousAttempt = this.previousAttempt) !== null && _this$previousAttempt !== void 0 && (_this$previousAttempt = _this$previousAttempt.submission) !== null && _this$previousAttempt !== void 0 && _this$previousAttempt.plugins && this.userSubmission.status === this.statusReopened) {\n          // Get latest attempt if available.\n          this.submissionPlugins = this.previousAttempt.submission.plugins;\n        } else {\n          this.submissionPlugins = this.userSubmission.plugins || [];\n        }\n      }\n    }\n    return promises;\n  }\n  /**\n   * Block or unblock the automatic sync of the user grade.\n   *\n   * @param block Whether to block or unblock.\n   */\n  setGradeSyncBlocked(block = false) {\n    if (this.isDestroyed || !this.assign || !this.isGrading) {\n      return;\n    }\n    const syncId = AddonModAssignSync.getGradeSyncId(this.assign.id, this.submitId);\n    if (block) {\n      CoreSync.blockOperation(AddonModAssignProvider.COMPONENT, syncId);\n    } else {\n      CoreSync.unblockOperation(AddonModAssignProvider.COMPONENT, syncId);\n    }\n  }\n  /**\n   * A certain tab has been selected, either manually or automatically.\n   *\n   * @param tab The tab that was selected.\n   */\n  tabSelected(tab) {\n    this.selectedTab = tab.id;\n    // Block sync when selecting grade tab, unblock when leaving it.\n    this.setGradeSyncBlocked(tab.id === 'grade');\n  }\n  /**\n   * Function called when the time is up.\n   */\n  timeUp() {\n    this.timeLimitFinished = true;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$syncObserver;\n    this.setGradeSyncBlocked(false);\n    this.isDestroyed = true;\n    (_this$syncObserver = this.syncObserver) === null || _this$syncObserver === void 0 || _this$syncObserver.off();\n  }\n}\n_class = AddonModAssignSubmissionComponent;\n_class.ɵfac = function AddonModAssignSubmissionComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CoreSplitViewComponent, 8));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-assign-submission\"]],\n  viewQuery: function AddonModAssignSubmissionComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreTabsComponent, 5);\n      i0.ɵɵviewQuery(AddonModAssignSubmissionPluginComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabs = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.submissionComponents = _t);\n    }\n  },\n  inputs: {\n    courseId: \"courseId\",\n    moduleId: \"moduleId\",\n    submitId: \"submitId\",\n    blindId: \"blindId\"\n  },\n  decls: 13,\n  vars: 10,\n  consts: [[3, \"hideUntil\"], [1, \"list-item-limited-width\"], [\"class\", \"core-danger-card\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", \"core-user-link\", \"\", 3, \"userId\", \"courseId\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [\"parentScrollable\", \"true\", 3, \"hideUntil\", \"ionChange\"], [\"id\", \"submission\", 3, \"title\"], [\"id\", \"grade\", 3, \"title\", 4, \"ngIf\"], [\"submissionStatus\", \"\"], [1, \"core-danger-card\"], [1, \"ion-text-wrap\"], [\"name\", \"fas-triangle-exclamation\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"core-user-link\", \"\", 1, \"ion-text-wrap\", 3, \"userId\", \"courseId\"], [\"slot\", \"start\", 3, \"user\", \"linkProfile\"], [1, \"item-heading\"], [4, \"ngTemplateOutlet\"], [\"class\", \"ion-text-wrap\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"assign\", \"submission\", \"plugin\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"collapsible-footer\", \"\", \"slot\", \"fixed\", 3, \"hidden\", 4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"innerHTML\"], [1, \"ion-text-wrap\", 3, \"ngClass\"], [\"mode\", \"basic\", \"timeUpText\", \"00:00:00\", 3, \"endTime\", \"timeLeftClassThreshold\", \"underTimeClassThresholds\", \"finished\", 4, \"ngIf\"], [\"mode\", \"basic\", \"timeUpText\", \"00:00:00\", 3, \"endTime\", \"timeLeftClassThreshold\", \"underTimeClassThresholds\", \"finished\"], [3, \"assign\", \"submission\", \"plugin\"], [4, \"ngFor\", \"ngForOf\"], [\"collapsible-footer\", \"\", \"slot\", \"fixed\", 3, \"hidden\"], [\"class\", \"list-item-limited-width\", 4, \"ngIf\"], [3, \"courseId\", \"currentModuleId\"], [\"class\", \"core-danger-item ion-text-wrap\", 4, \"ngIf\"], [\"expand\", \"block\", \"class\", \"ion-text-wrap\", 3, \"click\", 4, \"ngIf\"], [\"expand\", \"block\", 1, \"ion-text-wrap\", 3, \"click\"], [1, \"core-danger-item\", \"ion-text-wrap\"], [1, \"ion-padding-horizontal\"], [\"expand\", \"block\", \"core-link\", \"\", 3, \"href\", \"showBrowserWarning\", 4, \"ngIf\"], [\"expand\", \"block\", \"core-link\", \"\", 3, \"href\", \"showBrowserWarning\"], [\"name\", \"fas-up-right-from-square\", \"slot\", \"end\", \"aria-hidden\", \"true\"], [3, \"text\", \"filter\"], [\"slot\", \"end\", \"name\", \"submissionstatement\", 3, \"ngModel\", \"ngModelChange\"], [1, \"core-danger-item\"], [\"id\", \"grade\", 3, \"title\"], [\"class\", \"ion-text-wrap core-grading-summary\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", \"core-user-link\", \"\", 3, \"userId\", \"courseId\", \"detail\", 4, \"ngIf\"], [\"class\", \"core-warning-card\", 4, \"ngIf\"], [1, \"ion-text-wrap\", \"core-grading-summary\"], [\"slot\", \"end\", 3, \"click\", 4, \"ngIf\"], [\"slot\", \"end\", 3, \"click\"], [\"name\", \"fas-magnifying-glass\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"class\", \"ion-text-wrap\", 4, \"ngFor\", \"ngForOf\"], [\"position\", \"stacked\"], [\"type\", \"text\", \"min\", \"0\", 3, \"ngModel\", \"max\", \"lang\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"text\", \"min\", \"0\", 3, \"ngModel\", \"max\", \"lang\", \"ngModelChange\"], [\"interface\", \"action-sheet\", 3, \"ngModel\", \"disabled\", \"cancelText\", \"interfaceOptions\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"interface\", \"action-sheet\", 3, \"ngModel\", \"disabled\", \"cancelText\", \"interfaceOptions\", \"ngModelChange\", 4, \"ngIf\"], [3, \"assign\", \"submission\", \"userId\", \"plugin\", \"canEdit\", 4, \"ngFor\", \"ngForOf\"], [3, \"assign\", \"submission\", \"userId\", \"plugin\", \"canEdit\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\"], [\"core-user-link\", \"\", 1, \"ion-text-wrap\", 3, \"userId\", \"courseId\", \"detail\"], [1, \"core-warning-card\"], [\"class\", \"ion-text-wrap ion-text-start\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"core-groupname\", 4, \"ngIf\"], [1, \"core-groupname\"], [\"contextLevel\", \"course\", 3, \"text\", \"contextInstanceId\", \"wsNotFiltered\"], [1, \"text-danger\"], [1, \"ion-text-wrap\", \"ion-text-start\", 3, \"color\"]],\n  template: function AddonModAssignSubmissionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"core-loading\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, AddonModAssignSubmissionComponent_ion_card_2_Template, 7, 3, \"ion-card\", 2);\n      i0.ɵɵtemplate(3, AddonModAssignSubmissionComponent_ion_item_3_Template, 6, 7, \"ion-item\", 3);\n      i0.ɵɵtemplate(4, AddonModAssignSubmissionComponent_ion_item_4_Template, 6, 5, \"ion-item\", 4);\n      i0.ɵɵtemplate(5, AddonModAssignSubmissionComponent_ion_item_5_Template, 6, 4, \"ion-item\", 4);\n      i0.ɵɵelementStart(6, \"core-tabs\", 5);\n      i0.ɵɵlistener(\"ionChange\", function AddonModAssignSubmissionComponent_Template_core_tabs_ionChange_6_listener($event) {\n        return ctx.tabSelected($event);\n      });\n      i0.ɵɵelementStart(7, \"core-tab\", 6);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵtemplate(9, AddonModAssignSubmissionComponent_ng_template_9_Template, 15, 15, \"ng-template\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, AddonModAssignSubmissionComponent_core_tab_10_Template, 3, 3, \"core-tab\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(11, AddonModAssignSubmissionComponent_ng_template_11_Template, 4, 3, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeLimitFinished && (ctx.canEdit || ctx.canSubmit));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.blindMarking && ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.blindMarking && !ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.blindMarking && ctx.user || !ctx.blindMarking && !ctx.user);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(8, 8, \"addon.mod_assign.submission\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.feedback || ctx.isGrading);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]     ion-item.latesubmission, [_nghost-%COMP%]     ion-item.overdue {\\n  border-bottom: 3px solid var(--danger) !important;\\n}\\n[_nghost-%COMP%]     ion-item.latesubmission ion-icon, [_nghost-%COMP%]     ion-item.overdue ion-icon {\\n  color: var(--danger);\\n}\\n[_nghost-%COMP%]     ion-item.earlysubmission {\\n  border-bottom: 3px solid var(--success) !important;\\n}\\n[_nghost-%COMP%]     ion-item.earlysubmission ion-icon {\\n  color: var(--success);\\n}\\n[_nghost-%COMP%]     ion-item.submissioneditable p {\\n  color: var(--danger);\\n}\\n[_nghost-%COMP%]     .core-grading-summary .advancedgrade {\\n  display: none;\\n}\\n[_nghost-%COMP%]     ion-badge {\\n  margin-left: 2px;\\n  margin-right: 2px;\\n}\\n[_nghost-%COMP%]     core-timer.core-timer-under-300 {\\n  --timer-background: var(--danger-tint);\\n  --timer-text-color: var(--danger-shade);\\n}\\n[_nghost-%COMP%]     core-timer.core-timer-under-900 {\\n  --timer-background: var(--warning-tint);\\n  --timer-text-color: var(--warning-shade);\\n}\\n\\nhtml.dark[_nghost-%COMP%]     ion-item.submissioneditable p, html.dark   [_nghost-%COMP%]     ion-item.submissioneditable p {\\n  color: var(--danger-tint);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvbW9kL2Fzc2lnbi9jb21wb25lbnRzL3N1Ym1pc3Npb24vc3VibWlzc2lvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJOztFQUVJLGlEQUFBO0FBQVI7QUFDUTs7RUFDSSxvQkFBQTtBQUVaO0FBRUk7RUFDSSxrREFBQTtBQUFSO0FBQ1E7RUFDSSxxQkFBQTtBQUNaO0FBR0k7RUFDSSxvQkFBQTtBQURSO0FBSUk7RUFDSSxhQUFBO0FBRlI7QUFLSTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7QUFIUjtBQU9RO0VBQ0ksc0NBQUE7RUFDQSx1Q0FBQTtBQUxaO0FBUVE7RUFDSSx1Q0FBQTtFQUNBLHdDQUFBO0FBTlo7O0FBWUk7RUFDSSx5QkFBQTtBQVRSIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIHtcbiAgICBpb24taXRlbS5sYXRlc3VibWlzc2lvbixcbiAgICBpb24taXRlbS5vdmVyZHVlIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHZhcigtLWRhbmdlcikgIWltcG9ydGFudDtcbiAgICAgICAgaW9uLWljb24ge1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWRhbmdlcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpb24taXRlbS5lYXJseXN1Ym1pc3Npb24ge1xuICAgICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdmFyKC0tc3VjY2VzcykgIWltcG9ydGFudDtcbiAgICAgICAgaW9uLWljb24ge1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLXN1Y2Nlc3MpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaW9uLWl0ZW0uc3VibWlzc2lvbmVkaXRhYmxlIHAge1xuICAgICAgICBjb2xvcjogdmFyKC0tZGFuZ2VyKTtcbiAgICB9XG5cbiAgICAuY29yZS1ncmFkaW5nLXN1bW1hcnkgLmFkdmFuY2VkZ3JhZGUge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIGlvbi1iYWRnZSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAycHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMnB4O1xuICAgIH1cblxuICAgIGNvcmUtdGltZXIge1xuICAgICAgICAmLmNvcmUtdGltZXItdW5kZXItMzAwIHtcbiAgICAgICAgICAgIC0tdGltZXItYmFja2dyb3VuZDogdmFyKC0tZGFuZ2VyLXRpbnQpO1xuICAgICAgICAgICAgLS10aW1lci10ZXh0LWNvbG9yOiB2YXIoLS1kYW5nZXItc2hhZGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgJi5jb3JlLXRpbWVyLXVuZGVyLTkwMCB7XG4gICAgICAgICAgICAtLXRpbWVyLWJhY2tncm91bmQ6IHZhcigtLXdhcm5pbmctdGludCk7XG4gICAgICAgICAgICAtLXRpbWVyLXRleHQtY29sb3I6IHZhcigtLXdhcm5pbmctc2hhZGUpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG46aG9zdC1jb250ZXh0KGh0bWwuZGFyaykgOjpuZy1kZWVwIHtcbiAgICBpb24taXRlbS5zdWJtaXNzaW9uZWRpdGFibGUgcCB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1kYW5nZXItdGludCk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreEvents","CoreSites","AddonModAssignProvider","AddonModAssign","AddonModAssignGradingStates","AddonModAssignSubmissionStatusValues","AddonModAssignAttemptReopenMethodValues","AddonModAssignSync","AddonModAssignSyncProvider","CoreTabsComponent","CoreGradesHelper","CoreUtils","AddonModAssignHelper","CoreDomUtils","Translate","CoreTextUtils","CoreCourse","AddonModAssignOffline","CoreUser","CoreTimeUtils","CoreNavigator","CoreNetwork","CoreFileUploaderHelper","CoreLang","CoreError","CoreGroups","CoreSync","AddonModAssignSubmissionPluginComponent","AddonModAssignModuleHandlerService","CoreTime","isSafeNumber","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵelementContainer","ɵɵtemplate","AddonModAssignSubmissionComponent_ion_item_3_ng_container_5_Template","ɵɵproperty","ctx_r1","submitId","courseId","ɵɵattribute","user","fullname","_r6","AddonModAssignSubmissionComponent_ion_item_4_ng_container_5_Template","ɵɵtextInterpolate2","ctx_r2","blindId","AddonModAssignSubmissionComponent_ion_item_5_ng_container_5_Template","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵpureFunction1","_c1","ɵɵpureFunction2","_c0","ctx_r26","currentAttempt","maxAttemptsText","ctx_r27","assign","maxattempts","AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_p_5_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_p_6_Template","ctx_r11","unlimitedAttempts","ctx_r28","fromDate","ɵɵsanitizeHtml","ctx_r29","AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_p_2_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_p_3_Template","ctx_r13","intro","ctx_r30","duedate","AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_p_5_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_p_6_Template","ctx_r14","ctx_r15","cutoffdate","ctx_r16","lastAttempt","extensionduedate","ctx_r32","timeRemaining","ɵɵlistener","AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_core_timer_6_Template_core_timer_finished_0_listener","ɵɵrestoreView","_r35","ctx_r34","ɵɵnextContext","ɵɵresetView","timeUp","ctx_r33","timeLimitEndTime","ɵɵpureFunction0","_c2","AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_p_5_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_core_timer_6_Template","_c3","ctx_r17","timeRemainingClass","ctx_r18","timelimit","AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_p_5_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_p_6_Template","_c4","ctx_r19","caneditowner","ctx_r20","userSubmission","timemodified","ctx_r21","plugin_r38","_c5","ɵɵelementContainerStart","ɵɵelementContainerEnd","user_r40","id","ctx_r39","AddonModAssignSubmissionComponent_ng_template_9_ng_container_12_ng_container_1_Template","ctx_r23","membersToSubmit","blindId_r42","AddonModAssignSubmissionComponent_ng_template_9_ng_container_13_ng_container_1_Template","ctx_r24","membersToSubmitBlind","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_1_Template_ion_button_click_0_listener","_r53","ctx_r52","goToEdit","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_Template_ion_button_click_0_listener","_r57","ctx_r56","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_ng_container_1_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_ng_container_2_Template","ctx_r49","timestarted","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_ion_button_1_Template_ion_button_click_0_listener","_r60","ctx_r59","copyPrevious","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_ion_button_1_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_Template_ion_button_click_2_listener","_r62","ctx_r61","ctx_r50","isPreviousAttemptEmpty","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_4_Template_ion_button_click_0_listener","_r64","ctx_r63","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_1_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_2_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ng_container_3_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_ion_button_4_Template","ctx_r46","hasOffline","status","statusNew","statusReopened","name_r69","ctx_r68","submissionUrl","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_li_5_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_ion_button_6_Template","ctx_r65","unsupportedEditPlugins","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_2_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_ng_container_3_Template","ctx_r47","length","showErrorStatementEdit","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ng_container_1_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_ion_item_2_Template","ctx_r44","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_1_Template_ion_checkbox_ngModelChange_3_listener","$event","_r74","ctx_r73","acceptStatement","ctx_r70","submissionStatement","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_2_Template_ion_button_click_2_listener","_r76","ctx_r75","submitForGrading","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_1_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_2_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_ion_item_3_Template","ctx_r45","showErrorStatementSubmit","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_1_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_ng_container_2_Template","ctx_r43","canEdit","canSubmit","AddonModAssignSubmissionComponent_ng_template_9_div_14_div_1_Template","ctx_r25","selectedTab","moduleId","AddonModAssignSubmissionComponent_ng_template_9_ion_item_0_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_1_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_2_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_3_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_4_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_5_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_6_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_7_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_8_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_9_Template","AddonModAssignSubmissionComponent_ng_template_9_addon_mod_assign_submission_plugin_10_Template","AddonModAssignSubmissionComponent_ng_template_9_ion_item_divider_11_Template","AddonModAssignSubmissionComponent_ng_template_9_ng_container_12_Template","AddonModAssignSubmissionComponent_ng_template_9_ng_container_13_Template","AddonModAssignSubmissionComponent_ng_template_9_div_14_Template","ctx_r4","isGrading","locked","showDates","isSubmittedForGrading","undefined","submissionPlugins","blindMarking","loaded","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_ion_button_7_Template_ion_button_click_0_listener","_r89","ctx_r88","showAdvancedGrade","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_ion_button_7_Template","ctx_r78","feedback","gradefordisplay","advancedgrade","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_ion_input_5_Template_ion_input_ngModelChange_0_listener","_r98","ctx_r97","grade","ctx_r95","gradeInfo","lang","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_ion_input_5_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_p_6_Template","_c6","ctx_r90","disabled","grade_r100","value","label","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_Template_ion_select_ngModelChange_5_listener","_r102","ctx_r101","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_ion_select_option_8_Template","ctx_r91","_c7","scale","grade_r107","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_Template_ion_select_ngModelChange_0_listener","_r110","outcome_r103","$implicit","selectedId","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_ion_select_option_2_Template","ctx_r104","name","options","selected","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_ion_select_4_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_p_5_Template","ctx_r92","canSaveGrades","itemNumber","ctx_r113","unreleasedGrade","ctx_r114","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_p_5_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_p_6_Template","ctx_r93","method","ctx_r115","gradebookGrade","ctx_r116","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_5_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_6_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_p_7_Template","ctx_r94","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_1_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_2_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_3_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_4_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_ion_item_5_Template","ctx_r79","outcomes","ctx_r118","plugin_r119","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_2_addon_mod_assign_feedback_plugin_1_Template","ctx_r80","plugins","ctx_r81","workflowStatusTranslationId","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_4_Template_ion_toggle_ngModelChange_8_listener","_r121","ctx_r120","applyToAll","ctx_r82","ctx_r122","ctx_r123","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_ion_item_12_Template_ion_toggle_ngModelChange_4_listener","_r126","ctx_r125","addAttempt","ctx_r124","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_p_6_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_p_7_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_ion_item_12_Template","ctx_r83","attemptreopenmethod","allowAddAttempt","ctx_r127","gradeddate","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_6_p_8_Template","ctx_r84","grader","ctx_r85","ctx_r128","gradeUrl","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_card_8_ion_button_7_Template","ctx_r86","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_0_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_1_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_2_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_3_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_4_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ng_container_5_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_6_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_item_7_Template","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_ion_card_8_Template","ctx_r77","teamsubmission","attemptReopenMethodNone","AddonModAssignSubmissionComponent_core_tab_10_ng_template_2_Template","ctx_r132","submissiongroupname","AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_p_1_Template","AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_ng_container_2_Template","AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_ng_container_3_Template","AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_p_4_Template","ctx_r129","submissiongroup","preventsubmissionnotingroup","usergroups","ctx_r130","statusColor","statusTranslated","ctx_r131","gradingColor","gradingStatusTranslationId","AddonModAssignSubmissionComponent_ng_template_11_ng_container_0_Template","AddonModAssignSubmissionComponent_ng_template_11_ion_badge_2_Template","AddonModAssignSubmissionComponent_ng_template_11_ion_badge_3_Template","ctx_r7","AddonModAssignSubmissionComponent","constructor","splitviewCtrl","_this","submittedOffline","modified","timeLimitFinished","NEW","REOPENED","NONE","UNLIMITED_ATTEMPTS","submissionStatusAvailable","originalGrades","isDestroyed","hasOfflineGrade","siteId","getCurrentSiteId","currentUserId","getCurrentSiteUserId","instant","events","AUTO_SYNCED","MANUAL_SYNCED","syncObserver","onMultiple","_ref","_asyncToGenerator","data","gradesBlocked","indexOf","context","hasDataToSave","invalidateAndRefresh","_x","apply","arguments","ngOnInit","_CoreSites$getCurrent","getCurrentSite","isVersionGreaterEqualThan","loadData","calculateTimeRemaining","response","_this$userSubmission","_response$lastattempt","submissionStarted","time","timestamp","timeLimitEnabled","extensionDuedate","lastattempt","Math","max","dueDateReached","timeLimitEnabledBeforeDueDate","SUBMITTED","lateCalculation","timecreated","lateThreshold","earlyString","lateString","onTime","$a","formatTime","abs","_response$lastattempt2","_response$gradingsumm","submissionsEnabled","submissionsenabled","gradingsummary","calculateEndTime","canLeave","_this2","showConfirm","discardDrafts","_this3","_this3$previousAttemp","isOnline","showErrorModal","previousAttempt","submission","previousSubmission","modal","showModalLoading","size","ignoreErrors","getSubmissionSizeForCopy","dismiss","confirmUploadFile","_unused","copyPreviousAttempt","submissiondrafts","trigger","SUBMITTED_FOR_GRADING_EVENT","assignmentId","submissionId","userId","error","showErrorModalDefault","_this4","discardFeedbackPluginData","afterCopyPrevious","_this5","_this5$assign","_unused2","navigateToSitePath","PAGE_NAME","params","isSubmit","_this6","_this6$gradeInfo","_this6$feedback","x","outcome","hasFeedbackDataChanged","ionViewDidEnter","_this$tabs","tabs","ionViewDidLeave","_this$tabs2","sync","_this7","promises","push","invalidateAssignmentData","invalidateSubmissionStatusData","invalidateAssignmentUserMappingsData","invalidateListParticipantsData","invalidateAssignmentGradesData","invalidateGradeModuleItems","invalidateModule","submissionComponents","forEach","component","invalidate","Promise","all","_this8","isBlind","getAssignment","result","syncAssign","updated","assignId","warnings","_unused3","allowsubmissionsfromdate","userDate","blindmarking","revealidentities","loadSubmissionUserProfile","loadSubmissionOfflineData","submissionStatus","getSubmissionStatusWithRetry","previousattempts","previousAttempts","sort","a","b","attemptnumber","isSubmissionEmpty","treatLastAttempt","loadFeedback","createEmptySubmission","getPluginsEnabled","loadUnsupportedPlugins","_this9","getProfile","_this10","getSubmission","plugindata","Object","keys","submitted","_this11","_this11$lastAttempt","_this11$lastAttempt2","position","parsedGrade","parseFloat","formatFloat","selectTab","gradingStatus","gradingstatus","getModuleBasicGradeInfo","treatGradeInfo","isManual","MANUAL","isUnlimited","isLessThanMaxAttempts","markingworkflow","getSubmissionGradingStatusTranslationId","GRADED","GRADED_FOLLOWUP_SUBMIT","getSubmissionGradingStatusColor","createEmptyFeedback","mod","getModule","url","submissionGrade","getSubmissionGrade","_this11$gradeInfo","applytoall","addattempt","_this12","_this12$userSubmissio","getUnsupportedEditPlugins","setStatusNameAndClass","getSubmissionStatusColor","_status$lastattempt","NO_ONLINE_SUBMISSIONS","NO_ATTEMPT","_status$lastattempt2","NO_SUBMISSION","_status$lastattempt3","viewText","COMPONENT","componentId","_this13","requiresubmissionstatement","_unused4","submitGrade","_this14","_this14$gradeInfo","attemptNumber","unformatFloat","pluginData","prepareFeedbackPluginData","submitGradingForm","GRADED_EVENT","_this15","_assignGrades$find","advancedgrading","gradeNotReleased","MARKING_WORKFLOW_STATE_RELEASED","gradebookGrades","assignGrades","getGradeModuleItems","getAssignmentGrades","cmId","cmid","Number","find","userid","makeMenuFromList","_ref2","scaleItem","_this15$grade$unrelea","getCurrentLanguage","outcomeid","scaleid","gradeFormatted","cleanTags","gradeformatted","getGradeValueFromLabel","gradeislocked","gradeisoverridden","gradedategraded","_gradeInfo$outcomes","String","itemnumber","submissionStatementMissing","submissionstatement","cansubmit","canSubmitOffline","canedit","getSubmissionObjectFromAttempt","getActivityAllowedGroups","then","group","groups","submissiongroupmemberswhoneedtosubmit","member","profile","_this$previousAttempt","setGradeSyncBlocked","block","syncId","getGradeSyncId","blockOperation","unblockOperation","tabSelected","tab","ngOnDestroy","_this$syncObserver","off","ɵɵdirectiveInject","i1","CoreSplitViewComponent","selectors","viewQuery","AddonModAssignSubmissionComponent_Query","rf","ctx","AddonModAssignSubmissionComponent_ion_card_2_Template","AddonModAssignSubmissionComponent_ion_item_3_Template","AddonModAssignSubmissionComponent_ion_item_4_Template","AddonModAssignSubmissionComponent_ion_item_5_Template","AddonModAssignSubmissionComponent_Template_core_tabs_ionChange_6_listener","AddonModAssignSubmissionComponent_ng_template_9_Template","AddonModAssignSubmissionComponent_core_tab_10_Template","AddonModAssignSubmissionComponent_ng_template_11_Template","ɵɵtemplateRefExtractor"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/components/submission/submission.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/components/submission/addon-mod-assign-submission.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, OnDestroy, ViewChild, Optional, ViewChildren, QueryList } from '@angular/core';\nimport { CoreEvents, CoreEventObserver } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport {\n    AddonModAssignProvider,\n    AddonModAssignAssign,\n    AddonModAssignSubmissionFeedback,\n    AddonModAssignSubmissionAttempt,\n    AddonModAssignSubmissionPreviousAttempt,\n    AddonModAssignPlugin,\n    AddonModAssign,\n    AddonModAssignGetSubmissionStatusWSResponse,\n    AddonModAssignSavePluginData,\n    AddonModAssignGradingStates,\n    AddonModAssignSubmissionStatusValues,\n    AddonModAssignAttemptReopenMethodValues,\n} from '../../services/assign';\nimport {\n    AddonModAssignAutoSyncData,\n    AddonModAssignManualSyncData,\n    AddonModAssignSync,\n    AddonModAssignSyncProvider,\n} from '../../services/assign-sync';\nimport { CoreTabsComponent } from '@components/tabs/tabs';\nimport { CoreTabComponent } from '@components/tabs/tab';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreGradesFormattedItem, CoreGradesHelper } from '@features/grades/services/grades-helper';\nimport { CoreMenuItem, CoreUtils } from '@services/utils/utils';\nimport { AddonModAssignHelper, AddonModAssignSubmissionFormatted } from '../../services/assign-helper';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreCourse, CoreCourseModuleGradeInfo, CoreCourseModuleGradeOutcome } from '@features/course/services/course';\nimport { AddonModAssignOffline } from '../../services/assign-offline';\nimport { CoreUser, CoreUserProfile } from '@features/user/services/user';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreNetwork } from '@services/network';\nimport { CoreFileUploaderHelper } from '@features/fileuploader/services/fileuploader-helper';\nimport { CoreLang } from '@services/lang';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreGroups } from '@services/groups';\nimport { CoreSync } from '@services/sync';\nimport { AddonModAssignSubmissionPluginComponent } from '../submission-plugin/submission-plugin';\nimport { AddonModAssignModuleHandlerService } from '../../services/handlers/module';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreTime } from '@singletons/time';\nimport { isSafeNumber, SafeNumber } from '@/core/utils/types';\n\n/**\n * Component that displays an assignment submission.\n */\n@Component({\n    selector: 'addon-mod-assign-submission',\n    templateUrl: 'addon-mod-assign-submission.html',\n    styleUrls: ['submission.scss'],\n})\nexport class AddonModAssignSubmissionComponent implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(CoreTabsComponent) tabs!: CoreTabsComponent;\n    @ViewChildren(AddonModAssignSubmissionPluginComponent) submissionComponents!:\n        QueryList<AddonModAssignSubmissionPluginComponent>;\n\n    @Input() courseId!: number; // Course ID the submission belongs to.\n    @Input() moduleId!: number; // Module ID the submission belongs to.\n    @Input() submitId!: number; // User that did the submission.\n    @Input() blindId?: number; // Blinded user ID (if it's blinded).\n\n    loaded = false; // Whether data has been loaded.\n    selectedTab = 'submission'; // Tab selected on start.\n    assign?: AddonModAssignAssign; // The assignment the submission belongs to.\n    userSubmission?: AddonModAssignSubmissionFormatted; // The submission object.\n    isSubmittedForGrading = false; // Whether the submission has been submitted for grading.\n    acceptStatement = false; // Statement accepted (for grading).\n    feedback?: AddonModAssignSubmissionFeedbackFormatted; // The feedback.\n    hasOffline = false; // Whether there is offline data.\n    submittedOffline = false; // Whether it was submitted in offline.\n    fromDate?: string; // Readable date when the assign started accepting submissions.\n    currentAttempt = 0; // The current attempt number.\n    maxAttemptsText: string; // The text for maximum attempts.\n    blindMarking = false; // Whether blind marking is enabled.\n    user?: CoreUserProfile; // The user.\n    lastAttempt?: AddonModAssignSubmissionAttemptFormatted; // The last attempt.\n    membersToSubmit: CoreUserProfile[] = []; // Team members that need to submit the assignment.\n    membersToSubmitBlind: number[] = []; // Team members that need to submit the assignment (blindmarking).\n    canSubmit = false; // Whether the user can submit for grading.\n    canEdit = false; // Whether the user can edit the submission.\n    submissionStatement?: string; // The submission statement.\n    showErrorStatementEdit = false; // Whether to show an error in edit due to submission statement.\n    showErrorStatementSubmit = false; // Whether to show an error in submit due to submission statement.\n    gradingStatusTranslationId?: string; // Key of the text to display for the grading status.\n    gradingColor = ''; // Color to apply to the grading status.\n    workflowStatusTranslationId?: string; // Key of the text to display for the workflow status.\n    submissionPlugins: AddonModAssignPlugin[] = []; // List of submission plugins.\n    timeRemaining = ''; // Message about time remaining.\n    timeRemainingClass = ''; // Class to apply to time remaining message.\n    timeLimitEndTime = 0; // If time limit is enabled and submission is ongoing, the end time for the timer.\n    statusTranslated?: string; // Status.\n    statusColor = ''; // Color to apply to the status.\n    unsupportedEditPlugins: string[] = []; // List of submission plugins that don't support edit.\n    grade: AddonModAssignSubmissionGrade = {\n        method: '',\n        modified: 0,\n        addAttempt : false,\n        applyToAll: false,\n        lang: 'en',\n        disabled: false,\n    }; // Data about the grade.\n\n    grader?: CoreUserProfile; // Profile of the teacher that graded the submission.\n    gradeInfo?: AddonModAssignGradeInfo; // Grade data for the assignment, retrieved from the server.\n    isGrading = false; // Whether the user is grading.\n    canSaveGrades = false; // Whether the user can save the grades.\n    allowAddAttempt = false; // Allow adding a new attempt when grading.\n    gradeUrl?: string; // URL to grade in browser.\n    submissionUrl?: string; // URL to add/edit a submission in browser.\n    isPreviousAttemptEmpty = true; // Whether the previous attempt contains an empty submission.\n    showDates = false; // Whether to show some dates.\n    timeLimitFinished = false; // Whether there is a time limit and it finished, so the user will submit late.\n\n    // Some constants.\n    statusNew = AddonModAssignSubmissionStatusValues.NEW;\n    statusReopened = AddonModAssignSubmissionStatusValues.REOPENED;\n    attemptReopenMethodNone = AddonModAssignAttemptReopenMethodValues.NONE;\n    unlimitedAttempts = AddonModAssignProvider.UNLIMITED_ATTEMPTS;\n\n    protected siteId: string; // Current site ID.\n    protected currentUserId: number; // Current user ID.\n    protected previousAttempt?: AddonModAssignSubmissionPreviousAttempt; // The previous attempt.\n    protected submissionStatusAvailable = false; // Whether we were able to retrieve the submission status.\n    protected originalGrades: AddonModAssignSubmissionOriginalGrades = {\n        addAttempt: false,\n        applyToAll: false,\n        outcomes: {},\n    }; // Object with the original grade data, to check for changes.\n\n    protected isDestroyed = false; // Whether the component has been destroyed.\n    protected syncObserver: CoreEventObserver;\n    protected hasOfflineGrade = false;\n\n    constructor(\n        @Optional() protected splitviewCtrl: CoreSplitViewComponent,\n    ) {\n        this.siteId = CoreSites.getCurrentSiteId();\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n        this.maxAttemptsText = Translate.instant('addon.mod_assign.unlimitedattempts');\n\n        // Refresh data if this assign is synchronized and it's grading.\n        const events = [AddonModAssignSyncProvider.AUTO_SYNCED, AddonModAssignSyncProvider.MANUAL_SYNCED];\n        this.syncObserver = CoreEvents.onMultiple<AddonModAssignAutoSyncData | AddonModAssignManualSyncData>(\n            events,\n            async (data) => {\n                // Check that user is grading and this grade wasn't blocked when sync was performed.\n                if (!this.loaded || !this.isGrading || data.gradesBlocked.indexOf(this.submitId) != -1) {\n                    return;\n                }\n\n                if ('context' in data && data.context == 'submission' && data.submitId == this.submitId) {\n                    // Manual sync triggered by this same submission, ignore it.\n                    return;\n                }\n\n                // Don't refresh if the user has modified some data.\n                const hasDataToSave = await this.hasDataToSave();\n\n                if (!hasDataToSave) {\n                    this.invalidateAndRefresh(false);\n                }\n            },\n            this.siteId,\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.isSubmittedForGrading = !!this.submitId;\n        this.showDates = !CoreSites.getCurrentSite()?.isVersionGreaterEqualThan('3.11');\n\n        this.loadData(true);\n    }\n\n    /**\n     * Calculate the time remaining message and class.\n     *\n     * @param response Response of get submission status.\n     */\n    protected calculateTimeRemaining(response: AddonModAssignGetSubmissionStatusWSResponse): void {\n        if (!this.assign) {\n            return;\n        }\n\n        const submissionStarted = !!this.userSubmission?.timestarted;\n        this.timeLimitEndTime = 0;\n        this.timeLimitFinished = false;\n\n        if (this.assign.duedate <= 0 && !submissionStarted) {\n            // No due date and no countdown.\n            this.timeRemaining = '';\n            this.timeRemainingClass = '';\n\n            return;\n        }\n\n        const time = CoreTimeUtils.timestamp();\n        const timeLimitEnabled = this.assign.timelimit && submissionStarted;\n\n        // Define duedate as latest between due date and extension - which is a possibility...\n        const extensionDuedate = response.lastattempt?.extensionduedate;\n        const duedate = extensionDuedate ? Math.max(this.assign.duedate, extensionDuedate) : this.assign.duedate;\n        const dueDateReached = duedate > 0 && duedate - time <= 0;\n\n        const timeLimitEnabledBeforeDueDate = timeLimitEnabled && !dueDateReached;\n\n        if (this.userSubmission && this.userSubmission.status === AddonModAssignSubmissionStatusValues.SUBMITTED) {\n            // Submitted, display the relevant early/late message.\n            const lateCalculation = this.userSubmission.timemodified -\n                (timeLimitEnabledBeforeDueDate ? this.userSubmission.timecreated : 0);\n            const lateThreshold = timeLimitEnabledBeforeDueDate ? this.assign.timelimit || 0 : duedate;\n            const earlyString = timeLimitEnabledBeforeDueDate ? 'submittedundertime' : 'submittedearly';\n            const lateString = timeLimitEnabledBeforeDueDate ? 'submittedovertime' : 'submittedlate';\n            const onTime = lateCalculation <= lateThreshold;\n\n            this.timeRemaining = Translate.instant(\n                'addon.mod_assign.' + (onTime ? earlyString : lateString),\n                { $a: CoreTime.formatTime(Math.abs(lateCalculation - lateThreshold)) },\n            );\n            this.timeRemainingClass = onTime ? 'earlysubmission' : 'latesubmission';\n\n            return;\n        }\n\n        if (dueDateReached) {\n            // There is no submission, due date has passed, show assignment is overdue.\n            const submissionsEnabled = response.lastattempt?.submissionsenabled || response.gradingsummary?.submissionsenabled;\n            this.timeRemaining = Translate.instant(\n                'addon.mod_assign.' + (submissionsEnabled ? 'overdue' : 'duedatereached'),\n                { $a: CoreTime.formatTime(time - duedate) },\n            );\n            this.timeRemainingClass = 'overdue';\n            this.timeLimitFinished = true;\n\n            return;\n        }\n\n        if (timeLimitEnabled && submissionStarted) {\n            // An attempt has started and there is a time limit, display the time limit.\n            this.timeRemaining = '';\n            this.timeRemainingClass = 'timeremaining';\n            this.timeLimitEndTime = AddonModAssignHelper.calculateEndTime(this.assign, this.userSubmission);\n\n            return;\n        }\n\n        // Assignment is not overdue, and no submission has been made. Just display the due date.\n        this.timeRemaining = CoreTime.formatTime(duedate - time);\n        this.timeRemainingClass = 'timeremaining';\n    }\n\n    /**\n     * Check if the user can leave the view. If there are changes to be saved, it will ask for confirm.\n     *\n     * @returns Promise resolved with true if can leave the view, rejected otherwise.\n     */\n    async canLeave(): Promise<boolean> {\n        // Check if there is data to save.\n        const modified = await this.hasDataToSave();\n\n        if (modified) {\n            // Modified, confirm user wants to go back.\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n\n            await this.discardDrafts();\n        }\n\n        return true;\n    }\n\n    /**\n     * Copy a previous attempt and then go to edit.\n     *\n     * @returns Promise resolved when done.\n     */\n    async copyPrevious(): Promise<void> {\n        if (!this.assign) {\n            return;\n        }\n\n        if (!CoreNetwork.isOnline()) {\n            CoreDomUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        if (!this.previousAttempt?.submission) {\n            // Cannot access previous attempts, just go to edit.\n            return this.goToEdit(true);\n        }\n\n        const previousSubmission = this.previousAttempt.submission;\n        let modal = await CoreDomUtils.showModalLoading();\n\n        const size = await CoreUtils.ignoreErrors(\n            AddonModAssignHelper.getSubmissionSizeForCopy(this.assign, previousSubmission),\n            -1,\n        ); // Error calculating size, return -1.\n\n        modal.dismiss();\n\n        try {\n            // Confirm action.\n            await CoreFileUploaderHelper.confirmUploadFile(size, true);\n        } catch {\n            // Cancelled.\n            return;\n        }\n\n        // User confirmed, copy the attempt.\n        modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModAssignHelper.copyPreviousAttempt(this.assign, previousSubmission);\n            // Now go to edit.\n            this.goToEdit(true);\n\n            if (!this.assign.submissiondrafts && this.userSubmission) {\n                // No drafts allowed, so it was submitted. Trigger event.\n                CoreEvents.trigger(AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT, {\n                    assignmentId: this.assign.id,\n                    submissionId: this.userSubmission.id,\n                    userId: this.currentUserId,\n                }, this.siteId);\n            } else {\n                // Invalidate and refresh data to update this view.\n                await this.invalidateAndRefresh(true);\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Discard feedback drafts.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async discardDrafts(): Promise<void> {\n        if (this.assign && this.feedback && this.feedback.plugins) {\n            await AddonModAssignHelper.discardFeedbackPluginData(this.assign.id, this.submitId, this.feedback);\n        }\n    }\n\n    /**\n     * Go to the page to add or edit submission.\n     *\n     * @param afterCopyPrevious Whether the user has just copied the previous submission.\n     */\n    async goToEdit(afterCopyPrevious = false): Promise<void> {\n        if (!afterCopyPrevious && this.assign?.timelimit && (!this.userSubmission || !this.userSubmission.timestarted)) {\n            try {\n                await CoreDomUtils.showConfirm(\n                    Translate.instant('addon.mod_assign.confirmstart', {\n                        $a: CoreTime.formatTime(this.assign.timelimit),\n                    }),\n                    undefined,\n                    Translate.instant('addon.mod_assign.beginassignment'),\n                );\n            } catch {\n                return; // User canceled.\n            }\n        }\n\n        CoreNavigator.navigateToSitePath(\n            AddonModAssignModuleHandlerService.PAGE_NAME + '/' + this.courseId + '/' + this.moduleId + '/edit',\n            {\n                params: {\n                    blindId: this.blindId,\n                },\n            },\n        );\n    }\n\n    /**\n     * Check if there's data to save (grade).\n     *\n     * @param isSubmit Whether the user is about to submit the grade.\n     * @returns Promise resolved with boolean: whether there's data to save.\n     */\n    protected async hasDataToSave(isSubmit = false): Promise<boolean> {\n        if (!this.canSaveGrades || !this.loaded || !this.assign) {\n            return false;\n        }\n\n        if (isSubmit && this.hasOfflineGrade) {\n            // Always allow sending if the grade is saved in offline.\n            return true;\n        }\n\n        // Check if numeric grade and toggles changed.\n        if (this.originalGrades.grade != this.grade.grade || this.originalGrades.addAttempt != this.grade.addAttempt ||\n                this.originalGrades.applyToAll != this.grade.applyToAll) {\n            return true;\n        }\n\n        // Check if outcomes changed.\n        if (this.gradeInfo?.outcomes) {\n            for (const x in this.gradeInfo.outcomes) {\n                const outcome = this.gradeInfo.outcomes[x];\n\n                if (this.originalGrades.outcomes[outcome.id] === undefined ||\n                        this.originalGrades.outcomes[outcome.id] != outcome.selectedId) {\n                    return true;\n                }\n            }\n        }\n\n        if (!this.feedback?.plugins) {\n            return false;\n        }\n\n        try {\n            return AddonModAssignHelper.hasFeedbackDataChanged(\n                this.assign,\n                this.userSubmission,\n                this.feedback,\n                this.submitId,\n            );\n        } catch (error) {\n            // Error ocurred, consider there are no changes.\n            return false;\n        }\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    ionViewDidEnter(): void {\n        this.tabs?.ionViewDidEnter();\n    }\n\n    /**\n     * User left the page that contains the component.\n     */\n    ionViewDidLeave(): void {\n        this.tabs?.ionViewDidLeave();\n    }\n\n    /**\n     * Invalidate and refresh data.\n     *\n     * @param sync Whether to try to synchronize data.\n     * @returns Promise resolved when done.\n     */\n    async invalidateAndRefresh(sync = false): Promise<void> {\n        this.loaded = false;\n\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModAssign.invalidateAssignmentData(this.courseId));\n        if (this.assign) {\n            promises.push(AddonModAssign.invalidateSubmissionStatusData(\n                this.assign.id,\n                this.submitId,\n                undefined,\n                !!this.blindId,\n            ));\n            promises.push(AddonModAssign.invalidateAssignmentUserMappingsData(this.assign.id));\n            promises.push(AddonModAssign.invalidateListParticipantsData(this.assign.id));\n            promises.push(AddonModAssign.invalidateAssignmentGradesData(this.assign.id));\n        }\n        promises.push(CoreGradesHelper.invalidateGradeModuleItems(this.courseId, this.submitId));\n        promises.push(CoreCourse.invalidateModule(this.moduleId));\n\n        // Invalidate plugins.\n        if (this.submissionComponents && this.submissionComponents.length) {\n            this.submissionComponents.forEach((component) => {\n                promises.push(component.invalidate());\n            });\n        }\n\n        await CoreUtils.ignoreErrors(Promise.all(promises));\n\n        await this.loadData(sync);\n    }\n\n    /**\n     * Load the data to render the submission.\n     *\n     * @param sync Whether to try to synchronize data.\n     * @returns Promise resolved when done.\n     */\n    protected async loadData(sync = false): Promise<void> {\n        let isBlind = !!this.blindId;\n\n        this.previousAttempt = undefined;\n        this.isPreviousAttemptEmpty = true;\n\n        if (!this.submitId) {\n            this.submitId = this.currentUserId;\n            isBlind = false;\n        }\n\n        try {\n            // Get the assignment.\n            this.assign = await AddonModAssign.getAssignment(this.courseId, this.moduleId);\n\n            if (this.submitId != this.currentUserId && sync) {\n                // Teacher viewing a student submission. Try to sync the assign, there could be offline grades stored.\n                try {\n                    const result = await AddonModAssignSync.syncAssign(this.assign.id);\n\n                    if (result && result.updated) {\n                        CoreEvents.trigger(AddonModAssignSyncProvider.MANUAL_SYNCED, {\n                            assignId: this.assign.id,\n                            warnings: result.warnings,\n                            gradesBlocked: result.gradesBlocked,\n                            context: 'submission',\n                            submitId: this.submitId,\n                        }, this.siteId);\n                    }\n                } catch {\n                    // Ignore errors, probably user is offline or sync is blocked.\n                }\n            }\n\n            const time = CoreTimeUtils.timestamp();\n            let promises: Promise<void>[] = [];\n\n            if (this.assign.allowsubmissionsfromdate && this.assign.allowsubmissionsfromdate >= time) {\n                this.fromDate = CoreTimeUtils.userDate(this.assign.allowsubmissionsfromdate * 1000);\n            }\n\n            this.blindMarking = this.isSubmittedForGrading && !!this.assign.blindmarking && !this.assign.revealidentities;\n\n            if (!this.blindMarking && this.submitId != this.currentUserId) {\n                promises.push(this.loadSubmissionUserProfile());\n            }\n\n            // Check if there's any offline data for this submission.\n            promises.push(this.loadSubmissionOfflineData());\n\n            await Promise.all(promises);\n\n            // Get submission status.\n            const submissionStatus =\n                await AddonModAssign.getSubmissionStatusWithRetry(this.assign, { userId: this.submitId, isBlind });\n\n            this.submissionStatusAvailable = true;\n            this.lastAttempt = submissionStatus.lastattempt;\n            this.membersToSubmit = [];\n            this.membersToSubmitBlind = [];\n\n            // Search the previous attempt.\n            if (submissionStatus.previousattempts && submissionStatus.previousattempts.length > 0) {\n                const previousAttempts = submissionStatus.previousattempts.sort((a, b) => a.attemptnumber - b.attemptnumber);\n                this.previousAttempt = previousAttempts[previousAttempts.length - 1];\n                this.isPreviousAttemptEmpty =\n                    AddonModAssignHelper.isSubmissionEmpty(this.assign, this.previousAttempt.submission);\n            }\n\n            // Treat last attempt.\n            promises = this.treatLastAttempt(submissionStatus, this.lastAttempt);\n\n            // Calculate the time remaining.\n            this.calculateTimeRemaining(submissionStatus);\n\n            // Load the feedback.\n            promises.push(this.loadFeedback(this.assign, submissionStatus.feedback));\n\n            // Check if there's any unsupported plugin for editing.\n            if (!this.userSubmission || !this.userSubmission.plugins) {\n                // Submission not created yet, we have to use assign configs to detect the plugins used.\n                this.userSubmission = AddonModAssignHelper.createEmptySubmission();\n                this.userSubmission.plugins = AddonModAssignHelper.getPluginsEnabled(this.assign, 'assignsubmission');\n            }\n\n            // Get the submission plugins that don't support editing.\n            promises.push(this.loadUnsupportedPlugins());\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Load profile of submission's user.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadSubmissionUserProfile(): Promise<void> {\n        this.user = await CoreUser.getProfile(this.submitId, this.courseId);\n    }\n\n    /**\n     * Load offline data for the submission (not the submission grade).\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadSubmissionOfflineData(): Promise<void> {\n        if (!this.assign) {\n            return;\n        }\n\n        try {\n            const submission = await AddonModAssignOffline.getSubmission(this.assign.id, this.submitId);\n\n            this.hasOffline = submission && submission.plugindata && Object.keys(submission.plugindata).length > 0;\n\n            this.submittedOffline = !!submission?.submitted;\n        } catch (error) {\n            // No offline data found.\n            this.hasOffline = false;\n            this.submittedOffline = false;\n        }\n    }\n\n    /**\n     * Load the data to render the feedback and grade.\n     *\n     * @param assign Assign data.\n     * @param feedback The feedback data from the submission status.\n     * @returns Promise resolved when done.\n     */\n    protected async loadFeedback(assign: AddonModAssignAssign, feedback?: AddonModAssignSubmissionFeedback): Promise<void> {\n        this.grade = {\n            method: '',\n            modified: 0,\n            addAttempt : false,\n            applyToAll: false,\n            lang: '',\n            disabled: false,\n        };\n\n        this.originalGrades = {\n            addAttempt: false,\n            applyToAll: false,\n            outcomes: {},\n        };\n\n        if (feedback) {\n            this.feedback = feedback;\n\n            // If we have data about the grader, get its profile.\n            if (feedback.grade && feedback.grade.grader > 0) {\n                this.grader = await CoreUtils.ignoreErrors(CoreUser.getProfile(feedback.grade.grader, this.courseId));\n            } else {\n                delete this.grader;\n            }\n\n            // Check if the grade uses advanced grading.\n            if (feedback.gradefordisplay) {\n                const position = feedback.gradefordisplay.indexOf('class=\"advancedgrade\"');\n                if (position > -1) {\n                    this.feedback.advancedgrade = true;\n                }\n            }\n\n            // Do not override already loaded grade.\n            if (feedback.grade && feedback.grade.grade && !this.grade.grade) {\n                const parsedGrade = parseFloat(feedback.grade.grade);\n\n                this.grade.grade = parsedGrade >= 0 ? parsedGrade : undefined;\n                this.grade.gradebookGrade = CoreUtils.formatFloat(this.grade.grade);\n                this.originalGrades.grade = this.grade.grade;\n            }\n        } else {\n            // If no feedback, always show Submission.\n            this.selectedTab = 'submission';\n            this.tabs.selectTab(this.selectedTab);\n        }\n\n        this.grade.gradingStatus = this.lastAttempt?.gradingstatus;\n\n        // Get the grade for the assign.\n        this.gradeInfo = await CoreCourse.getModuleBasicGradeInfo(this.moduleId);\n\n        if (!this.gradeInfo) {\n            return;\n        }\n\n        // Treat the grade info.\n        await this.treatGradeInfo(assign);\n\n        const isManual = assign.attemptreopenmethod == AddonModAssignAttemptReopenMethodValues.MANUAL;\n        const isUnlimited = assign.maxattempts == AddonModAssignProvider.UNLIMITED_ATTEMPTS;\n        const isLessThanMaxAttempts = !!this.userSubmission && (this.userSubmission.attemptnumber < (assign.maxattempts - 1));\n\n        this.allowAddAttempt = isManual && (!this.userSubmission || isUnlimited || isLessThanMaxAttempts);\n\n        if (assign.teamsubmission) {\n            this.grade.applyToAll = true;\n            this.originalGrades.applyToAll = true;\n        }\n        if (assign.markingworkflow && this.grade.gradingStatus) {\n            this.workflowStatusTranslationId =\n                AddonModAssign.getSubmissionGradingStatusTranslationId(this.grade.gradingStatus);\n        }\n\n        if (\n            this.lastAttempt?.gradingstatus === AddonModAssignGradingStates.GRADED && !assign.markingworkflow &&\n            this.userSubmission && feedback\n        ) {\n            if (feedback.gradeddate < this.userSubmission.timemodified) {\n                this.lastAttempt.gradingstatus = AddonModAssignGradingStates.GRADED_FOLLOWUP_SUBMIT;\n\n                // Get grading text and color.\n                this.gradingStatusTranslationId = AddonModAssign.getSubmissionGradingStatusTranslationId(\n                    this.lastAttempt.gradingstatus,\n                );\n                this.gradingColor = AddonModAssign.getSubmissionGradingStatusColor(this.lastAttempt.gradingstatus);\n\n            }\n        }\n\n        if (!this.feedback || !this.feedback.plugins) {\n            // Feedback plugins not present, we have to use assign configs to detect the plugins used.\n            this.feedback = AddonModAssignHelper.createEmptyFeedback();\n            this.feedback.plugins = AddonModAssignHelper.getPluginsEnabled(assign, 'assignfeedback');\n        }\n\n        // Check if there's any offline data for this submission.\n        if (!this.canSaveGrades) {\n            // User cannot save grades in the app. Load the URL to grade it in browser.\n            const mod = await CoreCourse.getModule(this.moduleId, this.courseId, undefined, true);\n            this.gradeUrl = mod.url + '&action=grader&userid=' + this.submitId;\n\n            return;\n        }\n\n        // Submission grades aren't identified by attempt number so it can retrieve the feedback for a previous attempt.\n        // The app will not treat that as an special case.\n        const submissionGrade = await CoreUtils.ignoreErrors(\n            AddonModAssignOffline.getSubmissionGrade(assign.id, this.submitId),\n        );\n\n        this.hasOfflineGrade = false;\n\n        // Load offline grades.\n        if (submissionGrade && (!feedback || !feedback.gradeddate || feedback.gradeddate < submissionGrade.timemodified)) {\n            // If grade has been modified from gradebook, do not use offline.\n            if ((this.grade.modified || 0) < submissionGrade.timemodified) {\n                this.hasOfflineGrade = true;\n                this.grade.grade = !this.grade.scale\n                    ? CoreUtils.formatFloat(submissionGrade.grade)\n                    : submissionGrade.grade;\n                this.gradingStatusTranslationId = 'addon.mod_assign.gradenotsynced';\n                this.gradingColor = '';\n                this.originalGrades.grade = this.grade.grade;\n            }\n\n            this.grade.applyToAll = !!submissionGrade.applytoall;\n            this.grade.addAttempt = !!submissionGrade.addattempt;\n            this.originalGrades.applyToAll = !!this.grade.applyToAll;\n            this.originalGrades.addAttempt = !!this.grade.addAttempt;\n\n            if (submissionGrade.outcomes && Object.keys(submissionGrade.outcomes).length && this.gradeInfo?.outcomes) {\n                this.gradeInfo.outcomes.forEach((outcome) => {\n                    if (outcome.itemNumber !== undefined && submissionGrade.outcomes[outcome.itemNumber] !== undefined) {\n                        // If outcome has been modified from gradebook, do not use offline.\n                        if ((outcome.modified || 0) < submissionGrade.timemodified) {\n                            outcome.selectedId = submissionGrade.outcomes[outcome.itemNumber];\n                            this.originalGrades.outcomes[outcome.id] = outcome.selectedId;\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    /**\n     * Get the submission plugins that don't support editing.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadUnsupportedPlugins(): Promise<void> {\n        this.unsupportedEditPlugins = await AddonModAssign.getUnsupportedEditPlugins(this.userSubmission?.plugins || []);\n\n        if (this.unsupportedEditPlugins && !this.submissionUrl) {\n            const mod = await CoreCourse.getModule(this.moduleId, this.courseId, undefined, true);\n            this.submissionUrl = `${mod.url}&action=editsubmission`;\n        }\n\n    }\n\n    /**\n     * Set the submission status name and class.\n     *\n     * @param status Submission status.\n     */\n    protected setStatusNameAndClass(status: AddonModAssignGetSubmissionStatusWSResponse): void {\n        if (!this.assign) {\n            return;\n        }\n\n        if (this.hasOffline || this.submittedOffline) {\n            // Offline data.\n            this.statusTranslated = Translate.instant('core.notsent');\n            this.statusColor = 'warning';\n        } else if (!this.assign.teamsubmission) {\n\n            // Single submission.\n            if (this.userSubmission && this.userSubmission.status != this.statusNew) {\n                this.statusTranslated = Translate.instant('addon.mod_assign.submissionstatus_' + this.userSubmission.status);\n                this.statusColor = AddonModAssign.getSubmissionStatusColor(this.userSubmission.status);\n            } else {\n                if (!status.lastattempt?.submissionsenabled) {\n                    this.statusTranslated = Translate.instant('addon.mod_assign.noonlinesubmissions');\n                    this.statusColor =\n                        AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_ONLINE_SUBMISSIONS);\n                } else {\n                    this.statusTranslated = Translate.instant('addon.mod_assign.noattempt');\n                    this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_ATTEMPT);\n                }\n            }\n        } else {\n\n            // Team submission.\n            if (!status.lastattempt?.submissiongroup && this.assign.preventsubmissionnotingroup) {\n                this.statusTranslated = Translate.instant('addon.mod_assign.nosubmission');\n                this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_SUBMISSION);\n            } else if (this.userSubmission && this.userSubmission.status != this.statusNew) {\n                this.statusTranslated = Translate.instant('addon.mod_assign.submissionstatus_' + this.userSubmission.status);\n                this.statusColor = AddonModAssign.getSubmissionStatusColor(this.userSubmission.status);\n            } else {\n                if (!status.lastattempt?.submissionsenabled) {\n                    this.statusTranslated = Translate.instant('addon.mod_assign.noonlinesubmissions');\n                    this.statusColor =\n                        AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_ONLINE_SUBMISSIONS);\n                } else {\n                    this.statusTranslated = Translate.instant('addon.mod_assign.nosubmission');\n                    this.statusColor = AddonModAssign.getSubmissionStatusColor(AddonModAssignSubmissionStatusValues.NO_SUBMISSION);\n                }\n            }\n        }\n    }\n\n    /**\n     * Show advanced grade.\n     */\n    showAdvancedGrade(): void {\n        if (this.feedback && this.feedback.advancedgrade) {\n            CoreTextUtils.viewText(\n                Translate.instant('core.grades.grade'),\n                this.feedback.gradefordisplay,\n                {\n                    component: AddonModAssignProvider.COMPONENT,\n                    componentId: this.moduleId,\n                },\n            );\n        }\n    }\n\n    /**\n     * Submit for grading.\n     *\n     * @param acceptStatement Whether the statement has been accepted.\n     */\n    async submitForGrading(acceptStatement: boolean): Promise<void> {\n        if (!this.assign || !this.userSubmission) {\n            return;\n        }\n\n        if (this.assign.requiresubmissionstatement && !acceptStatement) {\n            CoreDomUtils.showErrorModal('addon.mod_assign.acceptsubmissionstatement', true);\n\n            return;\n        }\n\n        try {\n            // Ask for confirmation. @todo plugin precheck_submission\n            await CoreDomUtils.showConfirm(Translate.instant('addon.mod_assign.confirmsubmission'));\n\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            try {\n                await AddonModAssign.submitForGrading(\n                    this.assign.id,\n                    this.courseId,\n                    acceptStatement,\n                    this.userSubmission.timemodified,\n                    this.hasOffline,\n                );\n\n                // Submitted, trigger event.\n                CoreEvents.trigger(AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT, {\n                    assignmentId: this.assign.id,\n                    submissionId: this.userSubmission.id,\n                    userId: this.currentUserId,\n                }, this.siteId);\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n            } finally {\n                modal.dismiss();\n            }\n        } catch {\n            // Cancelled.\n        }\n    }\n\n    /**\n     * Submit a grade and feedback.\n     *\n     * @returns Promise resolved when done.\n     */\n    async submitGrade(): Promise<void> {\n        // Check if there's something to be saved.\n        const modified = await this.hasDataToSave(true);\n        if (!modified || !this.assign) {\n            return;\n        }\n\n        const attemptNumber = this.userSubmission ? this.userSubmission.attemptnumber : -1;\n        const outcomes: Record<number, number> = {};\n        // Scale \"no grade\" uses -1 instead of 0.\n        const grade = this.grade.scale && this.grade.grade == 0\n            ? -1\n            : CoreUtils.unformatFloat(this.grade.grade, true);\n\n        if (grade === false) {\n            // Grade is invalid.\n            throw new CoreError(Translate.instant('core.grades.badgrade'));\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        (this.gradeInfo?.outcomes || []).forEach((outcome) => {\n            if (outcome.itemNumber && outcome.selectedId) {\n                outcomes[outcome.itemNumber] = outcome.selectedId;\n            }\n        });\n\n        let pluginData: AddonModAssignSavePluginData = {};\n        try {\n            if (this.feedback && this.feedback.plugins) {\n                pluginData = await AddonModAssignHelper.prepareFeedbackPluginData(this.assign.id, this.submitId, this.feedback);\n            }\n\n            try {\n                // We have all the data, now send it.\n                await AddonModAssign.submitGradingForm(\n                    this.assign.id,\n                    this.submitId,\n                    this.courseId,\n                    grade || 0,\n                    attemptNumber,\n                    this.grade.addAttempt,\n                    this.grade.gradingStatus || '',\n                    this.grade.applyToAll,\n                    outcomes,\n                    pluginData,\n                );\n\n                // Data sent, discard draft.\n                await this.discardDrafts();\n            } finally {\n                // Invalidate and refresh data.\n                this.invalidateAndRefresh(true);\n\n                CoreEvents.trigger(AddonModAssignProvider.GRADED_EVENT, {\n                    assignmentId: this.assign.id,\n                    submissionId: this.submitId,\n                    userId: this.currentUserId,\n                }, this.siteId);\n            }\n        } finally {\n            // Select submission view.\n            this.tabs.selectTab('submission');\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Treat the grade info.\n     *\n     * @param assign Assign info.\n     * @returns Promise resolved when done.\n     */\n    protected async treatGradeInfo(assign: AddonModAssignAssign): Promise<void> {\n        if (!this.gradeInfo) {\n            return;\n        }\n\n        this.isGrading = true;\n\n        // Make sure outcomes is an array.\n        const gradeInfo = this.gradeInfo;\n        gradeInfo.outcomes = gradeInfo.outcomes || [];\n\n        // Check if grading method is simple or not.\n        if (gradeInfo.advancedgrading && gradeInfo.advancedgrading[0] && gradeInfo.advancedgrading[0].method !== undefined) {\n            this.grade.method = gradeInfo.advancedgrading[0].method || 'simple';\n        } else {\n            this.grade.method = 'simple';\n        }\n\n        this.canSaveGrades = this.grade.method == 'simple'; // Grades can be saved if simple grading.\n\n        const gradeNotReleased = assign.markingworkflow &&\n            this.grade.gradingStatus !== AddonModAssignGradingStates.MARKING_WORKFLOW_STATE_RELEASED;\n\n        const [gradebookGrades, assignGrades] = await Promise.all([\n            CoreGradesHelper.getGradeModuleItems(this.courseId, this.moduleId, this.submitId),\n            gradeNotReleased ?\n                CoreUtils.ignoreErrors(AddonModAssign.getAssignmentGrades(assign.id, { cmId: assign.cmid })) :\n                undefined,\n        ]);\n\n        const unreleasedGrade = Number(assignGrades?.find(grade => grade.userid === this.submitId)?.grade);\n        this.grade.unreleasedGrade = undefined;\n\n        if (gradeInfo.scale) {\n            this.grade.scale = CoreUtils.makeMenuFromList(gradeInfo.scale, Translate.instant('core.nograde'));\n\n            if (isSafeNumber(unreleasedGrade)) {\n                const scaleItem = this.grade.scale.find(scaleItem => scaleItem.value === unreleasedGrade);\n                this.grade.unreleasedGrade = scaleItem?.label;\n                this.grade.grade = (scaleItem ?? this.grade.scale[0])?.value;\n                this.originalGrades.grade = this.grade.grade;\n            }\n        } else {\n            this.grade.unreleasedGrade = isSafeNumber(unreleasedGrade) ? unreleasedGrade : undefined;\n\n            // Format the grade.\n            this.grade.grade = CoreUtils.formatFloat(this.grade.unreleasedGrade ?? this.grade.grade);\n            this.originalGrades.grade = this.grade.grade;\n\n            // Get current language to format grade input field.\n            this.grade.lang = await CoreLang.getCurrentLanguage();\n        }\n\n        // Treat outcomes.\n        if (gradeInfo.outcomes) {\n            gradeInfo.outcomes.forEach((outcome) => {\n                if (outcome.scale) {\n                    outcome.options =\n                        CoreUtils.makeMenuFromList<number>(\n                            outcome.scale,\n                            Translate.instant('core.grades.nooutcome'),\n                        );\n                }\n                outcome.selectedId = 0;\n                this.originalGrades.outcomes[outcome.id] = outcome.selectedId;\n            });\n        }\n\n        const outcomes: AddonModAssignGradeOutcome[] = [];\n\n        gradebookGrades.forEach((grade: CoreGradesFormattedItem) => {\n            if (!grade.outcomeid && !grade.scaleid) {\n\n                // Clean HTML tags, grade can contain an icon.\n                const gradeFormatted = CoreTextUtils.cleanTags(grade.gradeformatted || '');\n                // Not using outcomes or scale, get the numeric grade.\n                if (this.grade.scale) {\n                    this.grade.gradebookGrade = CoreUtils.formatFloat(\n                        CoreGradesHelper.getGradeValueFromLabel(this.grade.scale, gradeFormatted),\n                    );\n                } else {\n                    const parsedGrade = parseFloat(gradeFormatted);\n                    this.grade.gradebookGrade = parsedGrade || parsedGrade == 0\n                        ? CoreUtils.formatFloat(parsedGrade)\n                        : undefined;\n                }\n\n                this.grade.disabled = !!grade.gradeislocked || !!grade.gradeisoverridden;\n                this.grade.modified = grade.gradedategraded;\n            } else if (grade.outcomeid) {\n\n                // Only show outcomes with info on it, outcomeid could be null if outcomes are disabled on site.\n                gradeInfo.outcomes?.forEach((outcome) => {\n                    if (outcome.id == String(grade.outcomeid)) {\n                        // Clean HTML tags, grade can contain an icon.\n                        outcome.selected = CoreTextUtils.cleanTags(grade.gradeformatted || '');\n                        outcome.modified = grade.gradedategraded;\n                        if (outcome.options) {\n                            outcome.selectedId = CoreGradesHelper.getGradeValueFromLabel(outcome.options, outcome.selected);\n                            this.originalGrades.outcomes[outcome.id] = outcome.selectedId;\n                            outcome.itemNumber = grade.itemnumber;\n                        }\n                        outcomes.push(outcome);\n                    }\n                });\n                gradeInfo.disabled = grade.gradeislocked || grade.gradeisoverridden;\n            }\n        });\n\n        gradeInfo.outcomes = outcomes;\n    }\n\n    /**\n     * Treat the last attempt.\n     *\n     * @param submissionStatus Response of get submission status.\n     * @param lastAttempt Last attempt (if any).\n     * @returns Promises resolved when done.\n     */\n    protected treatLastAttempt(\n        submissionStatus: AddonModAssignGetSubmissionStatusWSResponse,\n        lastAttempt?: AddonModAssignSubmissionAttemptFormatted,\n    ): Promise<void>[] {\n        const promises: Promise<void>[] =[];\n\n        if (!lastAttempt || !this.assign) {\n            return [];\n        }\n\n        const submissionStatementMissing = !!this.assign.requiresubmissionstatement &&\n            this.assign.submissionstatement === undefined;\n\n        this.canSubmit = !this.isSubmittedForGrading && !this.submittedOffline && (lastAttempt.cansubmit ||\n            (this.hasOffline && AddonModAssign.canSubmitOffline(this.assign, submissionStatus)));\n\n        this.canEdit = !this.isSubmittedForGrading && lastAttempt.canedit &&\n            (!this.submittedOffline || !this.assign.submissiondrafts);\n\n        // Get submission statement if needed.\n        if (this.assign.requiresubmissionstatement && this.assign.submissiondrafts && this.submitId == this.currentUserId) {\n            this.submissionStatement = this.assign.submissionstatement;\n            this.acceptStatement = false;\n        } else {\n            this.submissionStatement = undefined;\n            this.acceptStatement = true; // No submission statement, so it's accepted.\n        }\n\n        // Show error if submission statement should be shown but it couldn't be retrieved.\n        this.showErrorStatementEdit = submissionStatementMissing && !this.assign.submissiondrafts &&\n            this.submitId == this.currentUserId;\n\n        this.showErrorStatementSubmit = submissionStatementMissing && !!this.assign.submissiondrafts;\n\n        this.userSubmission = AddonModAssign.getSubmissionObjectFromAttempt(this.assign, lastAttempt);\n\n        if (this.assign.attemptreopenmethod != this.attemptReopenMethodNone && this.userSubmission) {\n            this.currentAttempt = this.userSubmission.attemptnumber + 1;\n        }\n\n        this.setStatusNameAndClass(submissionStatus);\n\n        if (this.assign.teamsubmission) {\n            if (lastAttempt.submissiongroup) {\n                // Get the name of the group.\n                promises.push(CoreGroups.getActivityAllowedGroups(this.assign.cmid).then((result) => {\n                    const group = result.groups.find((group) => group.id === lastAttempt.submissiongroup);\n                    if (group) {\n                        lastAttempt.submissiongroupname = group.name;\n                    }\n\n                    return;\n                }));\n            }\n\n            // Get the members that need to submit.\n            if (this.userSubmission &&\n                this.userSubmission.status != this.statusNew &&\n                lastAttempt.submissiongroupmemberswhoneedtosubmit\n            ) {\n                lastAttempt.submissiongroupmemberswhoneedtosubmit.forEach((member) => {\n                    if (!this.blindMarking) {\n                        promises.push(CoreUser.getProfile(member, this.courseId).then((profile) => {\n                            this.membersToSubmit.push(profile);\n\n                            return;\n                        }));\n                    }\n                });\n            }\n        }\n\n        // Get grading text and color.\n        this.gradingStatusTranslationId = AddonModAssign.getSubmissionGradingStatusTranslationId(lastAttempt.gradingstatus);\n        this.gradingColor = AddonModAssign.getSubmissionGradingStatusColor(lastAttempt.gradingstatus);\n\n        // Get the submission plugins.\n        if (this.userSubmission) {\n            if (!this.assign.teamsubmission ||\n                !lastAttempt.submissiongroup ||\n                !this.assign.preventsubmissionnotingroup\n            ) {\n                if (this.previousAttempt?.submission?.plugins && this.userSubmission.status === this.statusReopened) {\n                    // Get latest attempt if available.\n                    this.submissionPlugins = this.previousAttempt.submission.plugins;\n                } else {\n                    this.submissionPlugins = this.userSubmission.plugins || [];\n                }\n            }\n        }\n\n        return promises;\n    }\n\n    /**\n     * Block or unblock the automatic sync of the user grade.\n     *\n     * @param block Whether to block or unblock.\n     */\n    protected setGradeSyncBlocked(block = false): void {\n        if (this.isDestroyed || !this.assign || !this.isGrading) {\n            return;\n        }\n\n        const syncId = AddonModAssignSync.getGradeSyncId(this.assign.id, this.submitId);\n\n        if (block) {\n            CoreSync.blockOperation(AddonModAssignProvider.COMPONENT, syncId);\n        } else {\n            CoreSync.unblockOperation(AddonModAssignProvider.COMPONENT, syncId);\n        }\n    }\n\n    /**\n     * A certain tab has been selected, either manually or automatically.\n     *\n     * @param tab The tab that was selected.\n     */\n    tabSelected(tab: CoreTabComponent): void {\n        this.selectedTab = tab.id;\n        // Block sync when selecting grade tab, unblock when leaving it.\n        this.setGradeSyncBlocked(tab.id === 'grade');\n    }\n\n    /**\n     * Function called when the time is up.\n     */\n    timeUp(): void {\n        this.timeLimitFinished = true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.setGradeSyncBlocked(false);\n        this.isDestroyed = true;\n        this.syncObserver?.off();\n    }\n\n}\n\n/**\n * Submission attempt with some calculated data.\n */\ntype AddonModAssignSubmissionAttemptFormatted = AddonModAssignSubmissionAttempt & {\n    submissiongroupname?: string; // Calculated in the app. Group name the attempt belongs to.\n};\n\n/**\n * Feedback of an assign submission with some calculated data.\n */\ntype AddonModAssignSubmissionFeedbackFormatted = AddonModAssignSubmissionFeedback & {\n    advancedgrade?: boolean; // Calculated in the app. Whether it uses advanced grading.\n};\n\ntype AddonModAssignSubmissionGrade = {\n    method: string;\n    grade?: number | string;\n    gradebookGrade?: string;\n    modified?: number;\n    gradingStatus?: AddonModAssignGradingStates;\n    addAttempt: boolean;\n    applyToAll: boolean;\n    scale?: CoreMenuItem<number>[];\n    lang: string;\n    disabled: boolean;\n    unreleasedGrade?: SafeNumber | string;\n};\n\ntype AddonModAssignSubmissionOriginalGrades = {\n    grade?: number | string;\n    addAttempt: boolean;\n    applyToAll: boolean;\n    outcomes: Record<number, AddonModAssignGradeOutcome>;\n};\n\ntype AddonModAssignGradeInfo = Omit<CoreCourseModuleGradeInfo, 'outcomes'> & {\n    outcomes?: AddonModAssignGradeOutcome[];\n    disabled?: boolean;\n};\n\ntype AddonModAssignGradeOutcome = CoreCourseModuleGradeOutcome & {\n    selectedId?: number;\n    selected?: string;\n    modified?: number;\n    options?: CoreMenuItem<number>[];\n    itemNumber?: number;\n};\n","<core-loading [hideUntil]=\"loaded\">\n    <div class=\"list-item-limited-width\">\n        <!-- Time limit is over. -->\n        <ion-card *ngIf=\"timeLimitFinished && (canEdit || canSubmit)\" class=\"core-danger-card\">\n            <ion-item class=\"ion-text-wrap\">\n                <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n                <ion-label>\n                    <p>{{ 'addon.mod_assign.caneditsubmission' | translate }}</p>\n                </ion-label>\n            </ion-item>\n        </ion-card>\n\n        <!-- User and status of the submission. -->\n        <ion-item class=\"ion-text-wrap\" *ngIf=\"!blindMarking && user\" core-user-link [userId]=\"submitId\" [courseId]=\"courseId\"\n            [attr.aria-label]=\"user!.fullname\">\n            <core-user-avatar [user]=\"user\" slot=\"start\" [linkProfile]=\"false\" />\n            <ion-label>\n                <p class=\"item-heading\">{{ user!.fullname }}</p>\n                <ng-container *ngTemplateOutlet=\"submissionStatus\" />\n            </ion-label>\n        </ion-item>\n\n        <!-- Status of the submission if user is blinded. -->\n        <ion-item class=\"ion-text-wrap\" *ngIf=\"blindMarking && !user\">\n            <ion-label>\n                <p class=\"item-heading\">{{ 'addon.mod_assign.hiddenuser' | translate }} {{blindId}}</p>\n                <ng-container *ngTemplateOutlet=\"submissionStatus\" />\n            </ion-label>\n        </ion-item>\n\n        <!-- Status of the submission in the rest of cases. -->\n        <ion-item class=\"ion-text-wrap\" *ngIf=\"(blindMarking && user) || (!blindMarking && !user)\">\n            <ion-label>\n                <p class=\"item-heading\">{{ 'addon.mod_assign.submissionstatus' | translate }}</p>\n                <ng-container *ngTemplateOutlet=\"submissionStatus\" />\n            </ion-label>\n        </ion-item>\n\n        <!-- Tabs: see the submission or grade it. -->\n        <core-tabs [hideUntil]=\"loaded\" parentScrollable=\"true\" (ionChange)=\"tabSelected($event)\">\n            <!-- View the submission tab. -->\n            <core-tab [title]=\"'addon.mod_assign.submission' | translate\" id=\"submission\">\n                <ng-template>\n                    <!-- Render some data about the submission. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"currentAttempt && !isGrading\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.attemptnumber' | translate }}</p>\n                            <p *ngIf=\"assign!.maxattempts === unlimitedAttempts\">\n                                {{ 'addon.mod_assign.outof' | translate :\n                                {'$a': {'current': currentAttempt, 'total': maxAttemptsText} } }}\n                            </p>\n                            <p *ngIf=\"assign!.maxattempts !== unlimitedAttempts\">\n                                {{ 'addon.mod_assign.outof' | translate :\n                                {'$a': {'current': currentAttempt, 'total': assign!.maxattempts} } }}\n                            </p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Submission is locked. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"lastAttempt?.locked\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.submissionslocked' | translate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Dates. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"showDates && fromDate && !isSubmittedForGrading\">\n                        <ion-label>\n                            <p *ngIf=\"assign!.intro\"\n                                [innerHTML]=\"'addon.mod_assign.allowsubmissionsfromdatesummary' | translate: {'$a': fromDate}\">\n                            </p>\n                            <p [innerHTML]=\"'addon.mod_assign.allowsubmissionsanddescriptionfromdatesummary' | translate: {'$a': fromDate}\"\n                                *ngIf=\"!assign!.intro\">\n                            </p>\n                        </ion-label>\n                    </ion-item>\n\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"showDates && assign!.duedate && !isSubmittedForGrading\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.duedate' | translate }}</p>\n                            <p *ngIf=\"assign!.duedate\">{{ assign!.duedate * 1000 | coreFormatDate }}</p>\n                            <p *ngIf=\"!assign!.duedate\">{{ 'addon.mod_assign.duedateno' | translate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"assign!.duedate && assign!.cutoffdate && isSubmittedForGrading\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.cutoffdate' | translate }}</p>\n                            <p>{{ assign!.cutoffdate * 1000 | coreFormatDate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"assign!.duedate && lastAttempt?.extensionduedate && !isSubmittedForGrading\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.extensionduedate' | translate }}</p>\n                            <p>{{ lastAttempt!.extensionduedate * 1000 | coreFormatDate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Time remaining. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"timeRemaining || timeLimitEndTime > 0\" [ngClass]=\"[timeRemainingClass]\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.timeremaining' | translate }}</p>\n                            <p *ngIf=\"!timeLimitEndTime\" [innerHTML]=\"timeRemaining\"></p>\n                            <core-timer *ngIf=\"timeLimitEndTime > 0\" [endTime]=\"timeLimitEndTime\" mode=\"basic\" timeUpText=\"00:00:00\"\n                                [timeLeftClassThreshold]=\"-1\" [underTimeClassThresholds]=\"[300, 900]\" (finished)=\"timeUp()\" />\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Time limit. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"assign && assign.timelimit\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.timelimit' | translate }}</p>\n                            <p>{{ assign.timelimit | coreDuration }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Editing status. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"lastAttempt && isSubmittedForGrading && lastAttempt!.caneditowner !== undefined\"\n                        [ngClass]=\"{submissioneditable: lastAttempt!.caneditowner, submissionnoteditable: !lastAttempt!.caneditowner}\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.editingstatus' | translate }}</p>\n                            <p *ngIf=\"lastAttempt!.caneditowner\">{{ 'addon.mod_assign.submissioneditable' | translate }}</p>\n                            <p *ngIf=\"!lastAttempt!.caneditowner\">{{ 'addon.mod_assign.submissionnoteditable' | translate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Last modified. -->\n                    <ion-item class=\"ion-text-wrap\"\n                        *ngIf=\"userSubmission && userSubmission!.status !== statusNew && userSubmission!.timemodified\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.timemodified' | translate }}</p>\n                            <p>{{ userSubmission!.timemodified * 1000 | coreFormatDate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <addon-mod-assign-submission-plugin *ngFor=\"let plugin of submissionPlugins\" [assign]=\"assign\"\n                        [submission]=\"userSubmission\" [plugin]=\"plugin\" />\n\n                    <!-- Team members that need to submit it too. -->\n                    <ion-item-divider class=\"ion-text-wrap\" *ngIf=\"membersToSubmit && membersToSubmit.length > 0\">\n                        <ion-label>\n                            <h2>{{ 'addon.mod_assign.userswhoneedtosubmit' | translate: {$a: ''} }}</h2>\n                        </ion-label>\n                    </ion-item-divider>\n                    <ng-container *ngIf=\"membersToSubmit && membersToSubmit.length > 0 && !blindMarking\">\n                        <ng-container *ngFor=\"let user of membersToSubmit\">\n                            <ion-item class=\"ion-text-wrap\" core-user-link [userId]=\"user.id\" [courseId]=\"courseId\"\n                                [attr.aria-label]=\"user.fullname\">\n                                <core-user-avatar [user]=\"user\" slot=\"start\" [linkProfile]=\"false\" />\n                                <ion-label>\n                                    <p class=\"item-heading\">{{ user.fullname }}</p>\n                                </ion-label>\n                            </ion-item>\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"membersToSubmit && membersToSubmit.length > 0 && blindMarking\">\n                        <ng-container *ngFor=\"let blindId of membersToSubmitBlind\">\n                            <ion-item class=\"ion-text-wrap\">\n                                <ion-label>{{ 'addon.mod_assign.hiddenuser' | translate }} {{ blindId }}</ion-label>\n                            </ion-item>\n                        </ng-container>\n                    </ng-container>\n\n                    <!-- Add or edit submission. -->\n                    <div collapsible-footer *ngIf=\"loaded && !isSubmittedForGrading\" [hidden]=\"selectedTab !== 'submission'\" slot=\"fixed\">\n                        <div class=\"list-item-limited-width\" *ngIf=\"canEdit || canSubmit\">\n                            <ng-container *ngIf=\"canEdit\">\n                                <ng-container *ngIf=\" !unsupportedEditPlugins.length && !showErrorStatementEdit\">\n                                    <!-- If has offline data, show edit. -->\n                                    <ion-button expand=\"block\" class=\"ion-text-wrap\" *ngIf=\"hasOffline\" (click)=\"goToEdit()\">\n                                        {{ 'addon.mod_assign.editsubmission' | translate }}\n                                    </ion-button>\n                                    <!-- If no submission or is new, show add submission. -->\n                                    <ion-button expand=\"block\" class=\"ion-text-wrap\" (click)=\"goToEdit()\" *ngIf=\"!hasOffline &&\n                                        (!userSubmission || !userSubmission!.status || userSubmission!.status === statusNew)\">\n                                        <ng-container *ngIf=\"!assign?.timelimit || userSubmission?.timestarted\">\n                                            {{ 'addon.mod_assign.addsubmission' | translate }}\n                                        </ng-container>\n                                        <ng-container *ngIf=\"assign?.timelimit && (!userSubmission || !userSubmission.timestarted)\">\n                                            {{ 'addon.mod_assign.beginassignment' | translate }}\n                                        </ng-container>\n                                    </ion-button>\n                                    <!-- If reopened, show addfromprevious and addnewattempt. -->\n                                    <ng-container *ngIf=\"!hasOffline && userSubmission?.status === statusReopened\">\n                                        <ion-button *ngIf=\"!isPreviousAttemptEmpty\" expand=\"block\" class=\"ion-text-wrap\"\n                                            (click)=\"copyPrevious()\">\n                                            {{ 'addon.mod_assign.addnewattemptfromprevious' | translate }}\n                                        </ion-button>\n                                        <ion-button expand=\"block\" class=\"ion-text-wrap\" (click)=\"goToEdit()\">\n                                            {{ 'addon.mod_assign.addnewattempt' | translate }}\n                                        </ion-button>\n                                    </ng-container>\n                                    <!-- Else show editsubmission. -->\n                                    <ion-button expand=\"block\" class=\"ion-text-wrap\" *ngIf=\"!hasOffline && userSubmission &&\n                                        userSubmission!.status && userSubmission!.status !== statusNew &&\n                                        userSubmission!.status !== statusReopened\" (click)=\"goToEdit()\">\n                                        {{ 'addon.mod_assign.editsubmission' | translate }}\n                                    </ion-button>\n                                </ng-container>\n                                <ion-item class=\"core-danger-item ion-text-wrap\"\n                                    *ngIf=\"(unsupportedEditPlugins.length && !showErrorStatementEdit)|| showErrorStatementEdit\">\n                                    <ion-label>\n                                        <ng-container\n                                            *ngIf=\"unsupportedEditPlugins && unsupportedEditPlugins.length && !showErrorStatementEdit\">\n                                            <p class=\"ion-padding-horizontal\">\n                                                {{ 'addon.mod_assign.erroreditpluginsnotsupported' | translate }}</p>\n                                            <ul>\n                                                <li *ngFor=\"let name of unsupportedEditPlugins\">{{ name }}</li>\n                                            </ul>\n                                            <ion-button expand=\"block\" *ngIf=\"submissionUrl\" [href]=\"submissionUrl\" core-link\n                                                [showBrowserWarning]=\"false\">\n                                                {{ 'core.openinbrowser' | translate }}\n                                                <ion-icon name=\"fas-up-right-from-square\" slot=\"end\" aria-hidden=\"true\" />\n                                            </ion-button>\n\n                                        </ng-container>\n                                        <ng-container *ngIf=\"showErrorStatementEdit\">\n                                            <p>{{ 'addon.mod_assign.cannoteditduetostatementsubmission' | translate }}</p>\n                                        </ng-container>\n                                    </ion-label>\n                                </ion-item>\n\n                            </ng-container>\n\n                            <!-- Submit for grading form. -->\n                            <ng-container *ngIf=\"canSubmit\">\n                                <ion-item class=\"ion-text-wrap\" *ngIf=\"submissionStatement\">\n                                    <ion-label>\n                                        <core-format-text [text]=\"submissionStatement\" [filter]=\"false\" />\n                                    </ion-label>\n                                    <ion-checkbox slot=\"end\" name=\"submissionstatement\" [(ngModel)]=\"acceptStatement\" />\n                                </ion-item>\n                                <!-- Submit button. -->\n                                <ion-item class=\"ion-text-wrap\" *ngIf=\"!showErrorStatementSubmit\">\n                                    <ion-label>\n                                        <ion-button expand=\"block\" class=\"ion-text-wrap\" (click)=\"submitForGrading(acceptStatement)\">\n                                            {{ 'addon.mod_assign.submitassignment' | translate }}\n                                        </ion-button>\n                                        <p>{{ 'addon.mod_assign.submitassignment_help' | translate }}</p>\n                                    </ion-label>\n                                </ion-item>\n                                <!-- Error because we lack submissions statement. -->\n                                <ion-item class=\"ion-text-wrap\" *ngIf=\"showErrorStatementSubmit\">\n                                    <ion-label>\n                                        <p class=\"core-danger-item\">\n                                            {{ 'addon.mod_assign.cannotsubmitduetostatementsubmission' | translate }}\n                                        </p>\n                                    </ion-label>\n                                </ion-item>\n                            </ng-container>\n                        </div>\n                        <core-course-module-navigation [courseId]=\"courseId\" [currentModuleId]=\"moduleId\" />\n                    </div>\n                </ng-template>\n            </core-tab>\n\n            <!-- Grade the submission tab. -->\n            <core-tab [title]=\"'addon.mod_assign.grade' | translate\" *ngIf=\"feedback || isGrading\" id=\"grade\">\n                <ng-template>\n                    <!-- Current grade if method is advanced. -->\n                    <ion-item class=\"ion-text-wrap core-grading-summary\"\n                        *ngIf=\"feedback?.gradefordisplay && (!isGrading || grade.method !== 'simple')\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.currentgrade' | translate }}</p>\n                            <p>\n                                <core-format-text [text]=\"feedback!.gradefordisplay\" [filter]=\"false\" />\n                            </p>\n                        </ion-label>\n                        <ion-button slot=\"end\" *ngIf=\"feedback!.advancedgrade\" (click)=\"showAdvancedGrade()\"\n                            [attr.aria-label]=\"'core.showadvanced' |translate\">\n                            <ion-icon name=\"fas-magnifying-glass\" slot=\"icon-only\" aria-hidden=\"true\" />\n                        </ion-button>\n                    </ion-item>\n\n                    <ng-container *ngIf=\"isGrading\">\n                        <!-- Numeric grade.\n                        Use a text input because otherwise we cannot readthe value if it has an invalid character. -->\n                        <ion-item class=\"ion-text-wrap\" *ngIf=\"grade.method === 'simple' && !grade.scale\">\n                            <ion-label position=\"stacked\">\n                                <p class=\"item-heading\">{{ 'addon.mod_assign.gradeoutof' | translate: {$a: gradeInfo!.grade} }}</p>\n                            </ion-label>\n                            <ion-input *ngIf=\"!grade.disabled\" type=\"text\" [(ngModel)]=\"grade.grade\" min=\"0\" [max]=\"gradeInfo!.grade\"\n                                [lang]=\"grade.lang\" />\n                            <p *ngIf=\"grade.disabled\">{{ 'addon.mod_assign.gradelocked' | translate }}</p>\n                        </ion-item>\n\n                        <!-- Grade using a scale. -->\n                        <ion-item class=\"ion-text-wrap\" *ngIf=\"grade.method === 'simple' && grade.scale\">\n                            <ion-label>\n                                <p class=\"item-heading\">{{ 'addon.mod_assign.grade' | translate }}</p>\n                            </ion-label>\n                            <ion-select [(ngModel)]=\"grade.grade\" interface=\"action-sheet\" [disabled]=\"grade.disabled\"\n                                [cancelText]=\"'core.cancel' | translate\"\n                                [interfaceOptions]=\"{header: 'addon.mod_assign.grade' | translate}\">\n                                <ion-select-option *ngFor=\"let grade of grade.scale\" [value]=\"grade.value\">\n                                    {{grade.label}}\n                                </ion-select-option>\n                            </ion-select>\n                        </ion-item>\n\n                        <!-- Outcomes. -->\n                        <ion-item class=\"ion-text-wrap\" *ngFor=\"let outcome of gradeInfo!.outcomes\">\n                            <ion-label>\n                                <p class=\"item-heading\">{{ outcome.name }}</p>\n                            </ion-label>\n                            <ion-select *ngIf=\"canSaveGrades && outcome.itemNumber\" [(ngModel)]=\"outcome.selectedId\"\n                                interface=\"action-sheet\" [disabled]=\"gradeInfo!.disabled\" [cancelText]=\"'core.cancel' | translate\"\n                                [interfaceOptions]=\"{header: outcome.name }\">\n                                <ion-select-option *ngFor=\"let grade of outcome.options\" [value]=\"grade.value\">\n                                    {{grade.label}}\n                                </ion-select-option>\n                            </ion-select>\n                            <p *ngIf=\"!canSaveGrades || !outcome.itemNumber\">{{ outcome.selected }}</p>\n                        </ion-item>\n\n                        <!-- Assign grade if it wasn't released to gradebook. -->\n                        <ion-item class=\"ion-text-wrap\" *ngIf=\"gradeInfo && grade.unreleasedGrade !== undefined\">\n                            <ion-label>\n                                <p class=\"item-heading\">{{ 'addon.mod_assign.currentassigngrade' | translate }}</p>\n                                <p *ngIf=\"grade.method !== 'simple' || !grade.scale\">{{ grade.unreleasedGrade}} / {{ gradeInfo.grade }}</p>\n                                <p *ngIf=\"grade.method === 'simple' && grade.scale\">{{ grade.unreleasedGrade }}</p>\n                            </ion-label>\n                        </ion-item>\n\n                        <!-- Gradebook grade for simple grading. -->\n                        <ion-item class=\"ion-text-wrap\" *ngIf=\"grade.method === 'simple'\">\n                            <ion-label>\n                                <p class=\"item-heading\">{{ 'addon.mod_assign.currentgrade' | translate }}</p>\n                                <p *ngIf=\"grade.gradebookGrade && !grade.scale\">\n                                    {{ grade.gradebookGrade }}\n                                </p>\n                                <p *ngIf=\"grade.gradebookGrade && grade.scale\">\n                                    {{ grade.scale[grade.gradebookGrade].label }}\n                                </p>\n                                <p *ngIf=\"!grade.gradebookGrade\">-</p>\n                            </ion-label>\n                        </ion-item>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"feedback\">\n                        <addon-mod-assign-feedback-plugin *ngFor=\"let plugin of feedback.plugins\" [assign]=\"assign\"\n                            [submission]=\"userSubmission\" [userId]=\"submitId\" [plugin]=\"plugin\" [canEdit]=\"canSaveGrades\" />\n                    </ng-container>\n\n                    <!-- Workflow status. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"workflowStatusTranslationId\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.markingworkflowstate' | translate }}</p>\n                            <p>{{ workflowStatusTranslationId | translate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!--- Apply grade to all team members. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"assign!.teamsubmission && canSaveGrades\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.groupsubmissionsettings' | translate }}</p>\n                            <p>{{ 'addon.mod_assign.applytoteam' | translate }}</p>\n                        </ion-label>\n                        <ion-toggle [(ngModel)]=\"grade.applyToAll\" slot=\"end\" />\n                    </ion-item>\n\n                    <!-- Attempt status. -->\n                    <ng-container *ngIf=\"isGrading && assign!.attemptreopenmethod !== attemptReopenMethodNone\">\n                        <ion-item class=\"ion-text-wrap\">\n                            <ion-label>\n                                <p class=\"item-heading\">{{ 'addon.mod_assign.attemptsettings' | translate }}</p>\n                                <p *ngIf=\"assign!.maxattempts === unlimitedAttempts\">\n                                    {{ 'addon.mod_assign.outof' | translate :\n                                    {'$a': {'current': currentAttempt, 'total': maxAttemptsText} } }}\n                                </p>\n                                <p *ngIf=\"assign!.maxattempts !== unlimitedAttempts\">\n                                    {{ 'addon.mod_assign.outof' | translate :\n                                    {'$a': {'current': currentAttempt, 'total': assign!.maxattempts} } }}\n                                </p>\n                                <p>\n                                    {{ 'addon.mod_assign.attemptreopenmethod' | translate }}:\n                                    {{ 'addon.mod_assign.attemptreopenmethod_' + assign!.attemptreopenmethod | translate }}\n                                </p>\n                            </ion-label>\n                        </ion-item>\n                        <ion-item *ngIf=\"canSaveGrades && allowAddAttempt\">\n                            <ion-label>{{ 'addon.mod_assign.addattempt' | translate }}</ion-label>\n                            <ion-toggle [(ngModel)]=\"grade.addAttempt\" slot=\"end\" />\n                        </ion-item>\n                    </ng-container>\n\n                    <!-- Data about the grader (teacher who graded). -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"grader\" core-user-link [userId]=\"grader!.id\" [courseId]=\"courseId\"\n                        [attr.aria-label]=\"grader!.fullname\" [detail]=\"true\">\n                        <core-user-avatar [user]=\"grader\" slot=\"start\" [linkProfile]=\"false\" />\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.gradedby' | translate }}</p>\n                            <p class=\"item-heading\">{{ grader!.fullname }}</p>\n                            <p *ngIf=\"feedback!.gradeddate\">{{ feedback!.gradeddate * 1000 | coreFormatDate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Grader is hidden, display only the grade date. -->\n                    <ion-item class=\"ion-text-wrap\" *ngIf=\"!grader && feedback?.gradeddate\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ 'addon.mod_assign.gradedon' | translate }}</p>\n                            <p>{{ feedback!.gradeddate * 1000 | coreFormatDate }}</p>\n                        </ion-label>\n                    </ion-item>\n\n                    <!-- Warning message if cannot save grades. -->\n                    <ion-card *ngIf=\"isGrading && !canSaveGrades\" class=\"core-warning-card\">\n                        <ion-item>\n                            <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n                            <ion-label>\n                                <p>{{ 'addon.mod_assign.cannotgradefromapp' | translate }}</p>\n                                <ion-button expand=\"block\" *ngIf=\"gradeUrl\" [href]=\"gradeUrl\" core-link [showBrowserWarning]=\"false\">\n                                    {{ 'core.openinbrowser' | translate }}\n                                    <ion-icon name=\"fas-up-right-from-square\" slot=\"end\" aria-hidden=\"true\" />\n                                </ion-button>\n                            </ion-label>\n                        </ion-item>\n                    </ion-card>\n                </ng-template>\n            </core-tab>\n        </core-tabs>\n    </div>\n</core-loading>\n\n<!-- Template to render some data regarding the submission status. -->\n<ng-template #submissionStatus>\n    <ng-container *ngIf=\"assign && assign!.teamsubmission && lastAttempt\">\n        <p *ngIf=\"lastAttempt.submissiongroup && lastAttempt.submissiongroupname\" class=\"core-groupname\">\n            <core-format-text [text]=\"lastAttempt.submissiongroupname\" contextLevel=\"course\" [contextInstanceId]=\"courseId\"\n                [wsNotFiltered]=\"true\" />\n        </p>\n        <ng-container *ngIf=\"assign!.preventsubmissionnotingroup &&\n            !lastAttempt!.submissiongroup &&\n            (!lastAttempt!.usergroups || lastAttempt!.usergroups.length <= 0)\">\n            <p class=\"text-danger\"><strong>{{ 'addon.mod_assign.noteam' | translate }}</strong></p>\n            <p class=\"text-danger\">{{ 'addon.mod_assign.noteam_desc' | translate }}</p>\n        </ng-container>\n        <ng-container *ngIf=\"assign!.preventsubmissionnotingroup &&\n            !lastAttempt!.submissiongroup &&\n            lastAttempt!.usergroups &&\n            lastAttempt!.usergroups.length > 1\">\n            <p class=\"text-danger\"><strong>{{ 'addon.mod_assign.multipleteams' | translate }}</strong></p>\n            <p class=\"text-danger\">{{ 'addon.mod_assign.multipleteams_desc' | translate }}</p>\n        </ng-container>\n        <p *ngIf=\"!assign!.preventsubmissionnotingroup && !lastAttempt!.submissiongroup\">\n            {{ 'addon.mod_assign.defaultteam' | translate }}\n        </p>\n    </ng-container>\n    <p>\n        <ion-badge *ngIf=\"statusTranslated\" [color]=\"statusColor\" class=\"ion-text-wrap ion-text-start\">\n            {{ statusTranslated }}\n        </ion-badge>\n        <ion-badge class=\"ion-text-wrap ion-text-start\" *ngIf=\"gradingStatusTranslationId\" [color]=\"gradingColor\">\n            {{ gradingStatusTranslationId | translate }}\n        </ion-badge>\n    </p>\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}