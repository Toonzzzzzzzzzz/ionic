{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreSiteError } from '@classes/errors/siteerror';\n/**\n * Generic error returned by an Ajax call.\n */\nexport class CoreAjaxError extends CoreSiteError {\n  constructor(messageOrOptions, available, status) {\n    super(typeof messageOrOptions === 'string' ? {\n      message: messageOrOptions\n    } : messageOrOptions);\n    this.status = status;\n  }\n}","map":{"version":3,"names":["CoreSiteError","CoreAjaxError","constructor","messageOrOptions","available","status","message"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/classes/errors/ajaxerror.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreSiteError, CoreSiteErrorOptions } from '@classes/errors/siteerror';\n\n/**\n * Generic error returned by an Ajax call.\n */\nexport class CoreAjaxError extends CoreSiteError {\n\n    status?: number;\n\n    constructor(messageOrOptions: string | CoreSiteErrorOptions, available?: number, status?: number) {\n        super(typeof messageOrOptions === 'string' ? { message: messageOrOptions } : messageOrOptions);\n\n        this.status = status;\n    }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAa,QAA8B,2BAA2B;AAE/E;;;AAGA,OAAM,MAAOC,aAAc,SAAQD,aAAa;EAI5CE,YAAYC,gBAA+C,EAAEC,SAAkB,EAAEC,MAAe;IAC5F,KAAK,CAAC,OAAOF,gBAAgB,KAAK,QAAQ,GAAG;MAAEG,OAAO,EAAEH;IAAgB,CAAE,GAAGA,gBAAgB,CAAC;IAE9F,IAAI,CAACE,MAAM,GAAGA,MAAM;EACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}