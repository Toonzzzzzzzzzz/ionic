{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreConstants } from '@/core/constants';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreRatingProvider } from '@features/rating/services/rating';\nimport { CoreRatingOffline } from '@features/rating/services/rating-offline';\nimport { CoreRatingSyncProvider } from '@features/rating/services/rating-sync';\nimport { CoreUser } from '@features/user/services/user';\nimport { IonContent } from '@ionic/angular';\nimport { CoreNetwork } from '@services/network';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreArray } from '@singletons/array';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModForumDiscussionsSource } from '../../classes/forum-discussions-source';\nimport { AddonModForumDiscussionsSwipeManager } from '../../classes/forum-discussions-swipe-manager';\nimport { AddonModForum, AddonModForumProvider } from '../../services/forum';\nimport { AddonModForumHelper } from '../../services/forum-helper';\nimport { AddonModForumOffline } from '../../services/forum-offline';\nimport { AddonModForumSync, AddonModForumSyncProvider } from '../../services/forum-sync';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@components/split-view/split-view\";\nimport * as i2 from \"@angular/router\";\nfunction AddonModForumDiscussionPage_h1_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵelement(1, \"core-format-text\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", ctx_r0.startingPost.subject)(\"contextInstanceId\", ctx_r0.cmId)(\"courseId\", ctx_r0.courseId);\n  }\n}\nfunction AddonModForumDiscussionPage_core_context_menu_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 24);\n    i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_core_context_menu_item_10_Template_core_context_menu_item_action_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.doRefresh(null, $event));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"priority\", 650)(\"content\", i0.ɵɵpipeBind1(1, 4, \"addon.mod_forum.refreshposts\"))(\"iconAction\", ctx_r1.refreshIcon)(\"closeOnClick\", false);\n  }\n}\nfunction AddonModForumDiscussionPage_core_context_menu_item_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 24);\n    i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_core_context_menu_item_11_Template_core_context_menu_item_action_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.doRefresh(null, $event, true));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"priority\", 550)(\"content\", i0.ɵɵpipeBind1(1, 4, \"core.settings.synchronizenow\"))(\"iconAction\", ctx_r2.syncIcon)(\"closeOnClick\", false);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonModForumDiscussionPage_ion_card_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 25)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 26);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 1, \"core.hasdatatosync\", i0.ɵɵpureFunction1(4, _c0, ctx_r3.discussionStr)));\n  }\n}\nfunction AddonModForumDiscussionPage_ion_card_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 27)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 28);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r4.availabilityMessage);\n  }\n}\nfunction AddonModForumDiscussionPage_ion_card_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 27)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 29);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 1, \"addon.mod_forum.discussionlocked\"));\n  }\n}\nfunction AddonModForumDiscussionPage_ion_card_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 27)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 28);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 1, \"addon.mod_forum.qandanotify\"));\n  }\n}\nfunction AddonModForumDiscussionPage_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"addon-mod-forum-post\", 31);\n    i0.ɵɵlistener(\"onPostChange\", function AddonModForumDiscussionPage_div_41_Template_addon_mod_forum_post_onPostChange_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.postListChanged());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", ctx_r7.startingPost)(\"discussion\", ctx_r7.discussion)(\"courseId\", ctx_r7.courseId)(\"highlight\", true)(\"discussionId\", ctx_r7.discussionId)(\"component\", ctx_r7.component)(\"componentId\", ctx_r7.cmId)(\"formData\", ctx_r7.formData)(\"originalData\", ctx_r7.originalData)(\"forum\", ctx_r7.forum)(\"accessInfo\", ctx_r7.accessInfo)(\"trackPosts\", ctx_r7.trackPosts)(\"ratingInfo\", ctx_r7.ratingInfo)(\"leavingPage\", ctx_r7.leavingPage);\n  }\n}\nfunction AddonModForumDiscussionPage_ion_card_42_ng_container_1_core_spacer_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-spacer\");\n  }\n}\nfunction AddonModForumDiscussionPage_ion_card_42_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModForumDiscussionPage_ion_card_42_ng_container_1_core_spacer_1_Template, 1, 0, \"core-spacer\", 2);\n    i0.ɵɵelementStart(2, \"addon-mod-forum-post\", 33);\n    i0.ɵɵlistener(\"onPostChange\", function AddonModForumDiscussionPage_ion_card_42_ng_container_1_Template_addon_mod_forum_post_onPostChange_2_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.postListChanged());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const post_r19 = ctx.$implicit;\n    const first_r20 = ctx.first;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !first_r20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r19)(\"courseId\", ctx_r18.courseId)(\"discussionId\", ctx_r18.discussionId)(\"component\", ctx_r18.component)(\"componentId\", ctx_r18.cmId)(\"formData\", ctx_r18.formData)(\"originalData\", ctx_r18.originalData)(\"parentSubject\", ctx_r18.postSubjects[post_r19.parentid])(\"forum\", ctx_r18.forum)(\"accessInfo\", ctx_r18.accessInfo)(\"trackPosts\", ctx_r18.trackPosts)(\"ratingInfo\", ctx_r18.ratingInfo)(\"leavingPage\", ctx_r18.leavingPage);\n  }\n}\nfunction AddonModForumDiscussionPage_ion_card_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵtemplate(1, AddonModForumDiscussionPage_ion_card_42_ng_container_1_Template, 3, 14, \"ng-container\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.posts);\n  }\n}\nfunction AddonModForumDiscussionPage_ng_container_43_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    post: a0\n  };\n};\nfunction AddonModForumDiscussionPage_ng_container_43_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModForumDiscussionPage_ng_container_43_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const post_r25 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n    const _r10 = i0.ɵɵreference(45);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, post_r25));\n  }\n}\nfunction AddonModForumDiscussionPage_ng_container_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModForumDiscussionPage_ng_container_43_ng_container_1_Template, 2, 4, \"ng-container\", 32);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.posts);\n  }\n}\nfunction AddonModForumDiscussionPage_ng_template_44_div_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AddonModForumDiscussionPage_ng_template_44_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModForumDiscussionPage_ng_template_44_div_2_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const child_r30 = ctx.$implicit;\n    i0.ɵɵnextContext(3);\n    const _r10 = i0.ɵɵreference(45);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, child_r30));\n  }\n}\nfunction AddonModForumDiscussionPage_ng_template_44_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, AddonModForumDiscussionPage_ng_template_44_div_2_ng_container_1_Template, 2, 4, \"ng-container\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r27 = i0.ɵɵnextContext().post;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", post_r27.children);\n  }\n}\nfunction AddonModForumDiscussionPage_ng_template_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"addon-mod-forum-post\", 33);\n    i0.ɵɵlistener(\"onPostChange\", function AddonModForumDiscussionPage_ng_template_44_Template_addon_mod_forum_post_onPostChange_1_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.postListChanged());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(2, AddonModForumDiscussionPage_ng_template_44_div_2_Template, 2, 1, \"div\", 35);\n  }\n  if (rf & 2) {\n    const post_r27 = ctx.post;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"post\", post_r27)(\"courseId\", ctx_r11.courseId)(\"discussionId\", ctx_r11.discussionId)(\"component\", ctx_r11.component)(\"componentId\", ctx_r11.cmId)(\"formData\", ctx_r11.formData)(\"originalData\", ctx_r11.originalData)(\"parentSubject\", ctx_r11.postSubjects[post_r27.parentid])(\"forum\", ctx_r11.forum)(\"accessInfo\", ctx_r11.accessInfo)(\"trackPosts\", ctx_r11.trackPosts)(\"ratingInfo\", ctx_r11.ratingInfo)(\"leavingPage\", ctx_r11.leavingPage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", post_r27.children && post_r27.children.length && post_r27.children[0].subject);\n  }\n}\n/**\n * Page that displays a forum discussion.\n */\nexport class AddonModForumDiscussionPage {\n  constructor(splitView, elementRef, route) {\n    this.splitView = splitView;\n    this.elementRef = elementRef;\n    this.route = route;\n    this.forum = {};\n    this.accessInfo = {};\n    this.posts = [];\n    this.discussionLoaded = false;\n    this.sort = 'nested';\n    this.formData = {\n      replyingTo: 0,\n      isEditing: false,\n      subject: '',\n      message: null,\n      files: [],\n      isprivatereply: false\n    };\n    this.originalData = {\n      subject: null,\n      message: null,\n      files: [],\n      isprivatereply: false\n    };\n    this.refreshIcon = CoreConstants.ICON_LOADING;\n    this.syncIcon = CoreConstants.ICON_LOADING;\n    this.discussionStr = '';\n    this.component = AddonModForumProvider.COMPONENT;\n    this.canPin = false;\n    this.availabilityMessage = null;\n    this.showQAMessage = false;\n    this.leavingPage = false;\n    this.hasOfflineRatings = false;\n  }\n  get isMobile() {\n    return CoreScreen.isMobile;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var _routeData$swipeEnabl;\n        const routeData = _this.route.snapshot.data;\n        _this.courseId = CoreNavigator.getRouteNumberParam('courseId');\n        _this.cmId = CoreNavigator.getRouteNumberParam('cmId');\n        _this.forumId = CoreNavigator.getRouteNumberParam('forumId');\n        _this.discussion = CoreNavigator.getRouteParam('discussion');\n        _this.discussionId = _this.discussion ? _this.discussion.discussion : CoreNavigator.getRequiredRouteNumberParam('discussionId');\n        _this.trackPosts = CoreNavigator.getRouteBooleanParam('trackPosts') || false;\n        _this.postId = CoreNavigator.getRouteNumberParam('postId');\n        _this.parent = CoreNavigator.getRouteNumberParam('parent');\n        if (_this.courseId && _this.cmId && ((_routeData$swipeEnabl = routeData.swipeEnabled) !== null && _routeData$swipeEnabl !== void 0 ? _routeData$swipeEnabl : true)) {\n          var _routeData$discussion;\n          _this.discussions = new AddonModForumDiscussionDiscussionsSwipeManager(CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonModForumDiscussionsSource, [_this.courseId, _this.cmId, (_routeData$discussion = routeData.discussionsPathPrefix) !== null && _routeData$discussion !== void 0 ? _routeData$discussion : '']));\n          yield _this.discussions.start();\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n        _this.goBack();\n        return;\n      }\n      const currentSite = CoreSites.getCurrentSite();\n      _this.isOnline = CoreNetwork.isOnline();\n      _this.externalUrl = currentSite && currentSite.shouldDisplayInformativeLinks() ? currentSite.createSiteUrl('/mod/forum/discuss.php', {\n        d: _this.discussionId.toString()\n      }) : undefined;\n      _this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n        // Execute the callback in the Angular zone, so change detection doesn't stop working.\n        NgZone.run(() => {\n          _this.isOnline = CoreNetwork.isOnline();\n        });\n      });\n      _this.discussionStr = Translate.instant('addon.mod_forum.discussion');\n    })();\n  }\n  /**\n   * View loaded.\n   */\n  ngAfterViewInit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.sort = _this2.parent ? 'nested' // Force nested order.\n      : yield _this2.getUserSort();\n      yield _this2.fetchPosts(true, false, true);\n      const scrollTo = _this2.postId || _this2.parent;\n      if (scrollTo) {\n        // Scroll to the post.\n        CoreDom.scrollToElement(_this2.elementRef.nativeElement, '#addon-mod_forum-post-' + scrollTo);\n      }\n    })();\n  }\n  /**\n   * User entered the page that contains the component.\n   */\n  ionViewDidEnter() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.syncObserver) {\n        // Already setup.\n        return;\n      }\n      // The discussion object was not passed as parameter.\n      if (!_this3.discussion) {\n        yield _this3.loadDiscussion(_this3.discussionId, _this3.forumId, _this3.cmId);\n      }\n      const discussion = _this3.discussion;\n      // Refresh data if this discussion is synchronized automatically.\n      _this3.syncObserver = CoreEvents.on(AddonModForumSyncProvider.AUTO_SYNCED, data => {\n        if (data.forumId == _this3.forumId && _this3.discussionId == data.discussionId && data.userId == CoreSites.getCurrentSiteUserId()) {\n          // Refresh the data.\n          _this3.discussionLoaded = false;\n          _this3.refreshPosts();\n        }\n      }, CoreSites.getCurrentSiteId());\n      // Refresh data if this forum discussion is synchronized from discussions list.\n      _this3.syncManualObserver = CoreEvents.on(AddonModForumSyncProvider.MANUAL_SYNCED, data => {\n        if (data.source != 'discussion' && data.forumId == _this3.forumId && data.userId == CoreSites.getCurrentSiteUserId()) {\n          // Refresh the data.\n          _this3.discussionLoaded = false;\n          _this3.refreshPosts();\n        }\n      }, CoreSites.getCurrentSiteId());\n      // Invalidate discussion list if it was not read.\n      if (_this3.forumId && discussion && discussion.numunread > 0) {\n        AddonModForum.invalidateDiscussionsList(_this3.forumId);\n      }\n      // Listen for offline ratings saved and synced.\n      _this3.ratingOfflineObserver = CoreEvents.on(CoreRatingProvider.RATING_SAVED_EVENT, data => {\n        if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == \"module\" /* ContextLevel.MODULE */ && data.instanceId == _this3.cmId && data.itemSetId == _this3.discussionId) {\n          _this3.hasOfflineRatings = true;\n        }\n      });\n      _this3.ratingSyncObserver = CoreEvents.on(CoreRatingSyncProvider.SYNCED_EVENT, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (data) {\n          if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == \"module\" /* ContextLevel.MODULE */ && data.instanceId == _this3.cmId && data.itemSetId == _this3.discussionId) {\n            _this3.hasOfflineRatings = false;\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      _this3.changeDiscObserver = CoreEvents.on(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data => {\n        if (discussion && _this3.forumId && (_this3.forumId === data.forumId || data.cmId === _this3.cmId)) {\n          AddonModForum.invalidateDiscussionsList(_this3.forumId).finally(() => {\n            if (data.locked !== undefined) {\n              discussion.locked = data.locked;\n            }\n            if (data.pinned !== undefined) {\n              discussion.pinned = data.pinned;\n            }\n            if (data.starred !== undefined) {\n              discussion.starred = data.starred;\n            }\n            if (data.deleted !== undefined && data.deleted) {\n              var _data$post;\n              if (!((_data$post = data.post) !== null && _data$post !== void 0 && _data$post.parentid)) {\n                _this3.goBack();\n              } else {\n                _this3.discussionLoaded = false;\n                _this3.refreshPosts();\n              }\n            }\n          });\n        }\n      });\n    })();\n  }\n  /**\n   * Check if we can leave the page or not.\n   *\n   * @returns Resolved if we can leave it, rejected if not.\n   */\n  canLeave() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (AddonModForumHelper.hasPostDataChanged(_this4.formData, _this4.originalData)) {\n        // Show confirmation if some data has been modified.\n        yield CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n      }\n      // Delete the local files from the tmp folder.\n      CoreFileUploader.clearTmpFiles(_this4.formData.files);\n      _this4.leavingPage = true;\n      return true;\n    })();\n  }\n  /**\n   * Helper function to go back.\n   */\n  goBack() {\n    var _this$splitView;\n    if (this.leavingPage) {\n      return;\n    }\n    if ((_this$splitView = this.splitView) !== null && _this$splitView !== void 0 && _this$splitView.outletActivated) {\n      CoreNavigator.navigate('../');\n    } else {\n      CoreNavigator.back();\n    }\n  }\n  /**\n   * Runs when the page is about to leave and no longer be the active page.\n   */\n  ionViewWillLeave() {\n    this.syncObserver && this.syncObserver.off();\n    this.syncManualObserver && this.syncManualObserver.off();\n    this.ratingOfflineObserver && this.ratingOfflineObserver.off();\n    this.ratingSyncObserver && this.ratingSyncObserver.off();\n    this.changeDiscObserver && this.changeDiscObserver.off();\n    delete this.syncObserver;\n  }\n  /**\n   * Page destroyed.\n   */\n  ngOnDestroy() {\n    this.onlineObserver && this.onlineObserver.unsubscribe();\n    this.discussions && this.discussions.destroy();\n  }\n  /**\n   * Get sort type configured by the current user.\n   *\n   * @returns Promise resolved with the sort type.\n   */\n  getUserSort() {\n    return _asyncToGenerator(function* () {\n      try {\n        const value = yield CoreSites.getRequiredCurrentSite().getLocalSiteConfig('AddonModForumDiscussionSort');\n        return value;\n      } catch (error) {\n        try {\n          const value = yield CoreUser.getUserPreference('forum_displaymode');\n          switch (Number(value)) {\n            case 1:\n              return 'flat-oldest';\n            case -1:\n              return 'flat-newest';\n            case 3:\n              return 'nested';\n            case 2: // Threaded not implemented.\n            default:\n            // Not set, use default sort.\n            // @TODO add fallback to $CFG->forum_displaymode.\n          }\n        } catch (_unused) {\n          // Ignore errors.\n        }\n      }\n      return 'flat-oldest';\n    })();\n  }\n  /**\n   * Convenience function to get the forum.\n   *\n   * @returns Promise resolved with the forum.\n   */\n  fetchForum() {\n    if (this.courseId && this.cmId) {\n      return AddonModForum.getForum(this.courseId, this.cmId);\n    }\n    if (this.courseId && this.forumId) {\n      return AddonModForum.getForumById(this.courseId, this.forumId);\n    }\n    throw new Error('Cannot get the forum');\n  }\n  /**\n   * Convenience function to get the posts.\n   *\n   * @param sync Whether to try to synchronize the discussion.\n   * @param showErrors Whether to show errors in a modal.\n   * @param forceMarkAsRead Whether to mark all posts as read.\n   * @returns Promise resolved when done.\n   */\n  fetchPosts(sync, showErrors, forceMarkAsRead) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      let onlinePosts = [];\n      const offlineReplies = [];\n      let hasUnreadPosts = false;\n      try {\n        if (sync) {\n          // Try to synchronize the forum.\n          yield CoreUtils.ignoreErrors(_this5.syncDiscussion(!!showErrors));\n        }\n        const response = yield AddonModForum.getDiscussionPosts(_this5.discussionId, {\n          cmId: _this5.cmId\n        });\n        const replies = yield AddonModForumOffline.getDiscussionReplies(_this5.discussionId);\n        _this5.ratingInfo = response.ratinginfo;\n        onlinePosts = response.posts;\n        _this5.courseId = response.courseid || _this5.courseId;\n        _this5.forumId = response.forumid || _this5.forumId;\n        // Check if there are responses stored in offline.\n        _this5.postHasOffline = !!replies.length;\n        const convertPromises = [];\n        // Index posts to allow quick access. Also check unread field.\n        const onlinePostsMap = {};\n        onlinePosts.forEach(post => {\n          onlinePostsMap[post.id] = post;\n          hasUnreadPosts = hasUnreadPosts || !!post.unread;\n        });\n        replies.forEach(offlineReply => {\n          // If we don't have forumId and courseId, get it from the post.\n          if (!_this5.forumId) {\n            _this5.forumId = offlineReply.forumid;\n          }\n          if (!_this5.courseId) {\n            _this5.courseId = offlineReply.courseid;\n          }\n          convertPromises.push(AddonModForumHelper.instance.convertOfflineReplyToOnline(offlineReply).then( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(function* (reply) {\n              offlineReplies.push(reply);\n              // Disable reply of the parent. Reply in offline to the same post is not allowed, edit instead.\n              reply.parentid && (onlinePostsMap[reply.parentid].capabilities.reply = false);\n              return;\n            });\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n        });\n        yield Promise.all(convertPromises);\n        // Convert back to array.\n        onlinePosts = CoreUtils.objectToArray(onlinePostsMap);\n        let posts = offlineReplies.concat(onlinePosts);\n        _this5.startingPost = AddonModForum.extractStartingPost(posts);\n        // If sort type is nested, normal sorting is disabled and nested posts will be displayed.\n        if (_this5.sort == 'nested') {\n          // Sort first by creation date to make format tree work.\n          AddonModForum.sortDiscussionPosts(posts, 'ASC');\n          const rootId = _this5.startingPost ? _this5.startingPost.id : _this5.discussion ? _this5.discussion.id : 0;\n          posts = CoreUtils.formatTree(posts, 'parentid', 'id', rootId);\n        } else {\n          // Set default reply subject.\n          const direction = _this5.sort == 'flat-newest' ? 'DESC' : 'ASC';\n          AddonModForum.sortDiscussionPosts(posts, direction);\n        }\n        try {\n          // Now try to get the forum.\n          const forum = yield _this5.fetchForum();\n          // \"forum.istracked\" is more reliable than \"trackPosts\".\n          if (forum.istracked !== undefined) {\n            _this5.trackPosts = forum.istracked;\n          }\n          _this5.forumId = forum.id;\n          _this5.cmId = forum.cmid;\n          _this5.courseId = forum.course;\n          _this5.forum = forum;\n          _this5.availabilityMessage = AddonModForumHelper.getAvailabilityMessage(forum);\n          const promises = [];\n          promises.push(AddonModForum.instance.getAccessInformation(_this5.forumId, {\n            cmId: _this5.cmId\n          }).then( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator(function* (accessInfo) {\n              _this5.accessInfo = accessInfo;\n              // Disallow replying if cut-off date is reached and the user has not the capability to override it.\n              // Just in case the posts were fetched from WS when the cut-off date was not reached but it is now.\n              if (AddonModForumHelper.isCutoffDateReached(forum) && !accessInfo.cancanoverridecutoff) {\n                posts.forEach(post => {\n                  post.capabilities.reply = false;\n                });\n              }\n              // Show Q&A message if user hasn't posted.\n              const currentUserId = CoreSites.getCurrentSiteUserId();\n              _this5.showQAMessage = forum.type === 'qanda' && !accessInfo.canviewqandawithoutposting && !posts.some(post => post.author.id === currentUserId);\n              return;\n            });\n            return function (_x3) {\n              return _ref3.apply(this, arguments);\n            };\n          }()));\n          // The discussion object was not passed as parameter and there is no starting post.\n          if (!_this5.discussion) {\n            promises.push(_this5.loadDiscussion(_this5.discussionId, _this5.forumId, _this5.cmId));\n          }\n          yield Promise.all(promises);\n        } catch (_unused2) {\n          // Ignore errors.\n        }\n        if (!_this5.discussion && !_this5.startingPost) {\n          // The discussion object was not passed as parameter and there is no starting post. Should not happen.\n          throw new Error('Invalid forum discussion.');\n        }\n        if (_this5.startingPost && _this5.startingPost.author && _this5.forum.type == 'single') {\n          // Hide author and groups for first post and type single.\n          delete _this5.startingPost.author.fullname;\n          delete _this5.startingPost.author.groups;\n        }\n        _this5.posts = posts;\n        _this5.postSubjects = _this5.getAllPosts().reduce((postSubjects, post) => {\n          postSubjects[post.id] = post.subject;\n          return postSubjects;\n        }, _this5.startingPost ? {\n          [_this5.startingPost.id]: _this5.startingPost.subject\n        } : {});\n        if (AddonModForum.isSetPinStateAvailableForSite() && _this5.forumId) {\n          // Use the canAddDiscussion WS to check if the user can pin discussions.\n          try {\n            const response = yield AddonModForum.canAddDiscussionToAll(_this5.forumId, {\n              cmId: _this5.cmId\n            });\n            _this5.canPin = !!response.canpindiscussions;\n          } catch (error) {\n            _this5.canPin = false;\n          }\n        } else {\n          _this5.canPin = false;\n        }\n        _this5.hasOfflineRatings = yield CoreRatingOffline.hasRatings('mod_forum', 'post', \"module\" /* ContextLevel.MODULE */, _this5.cmId, _this5.discussionId);\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n      } finally {\n        _this5.discussionLoaded = true;\n        _this5.refreshIcon = CoreConstants.ICON_REFRESH;\n        _this5.syncIcon = CoreConstants.ICON_SYNC;\n        if (forceMarkAsRead || hasUnreadPosts && _this5.trackPosts) {\n          // Add log in Moodle and mark unread posts as readed.\n          _this5.logDiscussionView(forceMarkAsRead);\n        }\n      }\n    })();\n  }\n  /**\n   * Convenience function to load discussion.\n   *\n   * @param discussionId Discussion ID.\n   * @param forumId Forum ID.\n   * @param cmId Forum cmid.\n   * @returns Promise resolved when done.\n   */\n  loadDiscussion(discussionId, forumId, cmId) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      // Fetch the discussion if not passed as parameter.\n      if (_this6.discussion || !forumId || !cmId) {\n        return;\n      }\n      _this6.discussion = yield AddonModForumHelper.getDiscussionById(forumId, cmId, discussionId);\n      _this6.discussionId = _this6.discussion.discussion;\n    })();\n  }\n  /**\n   * Tries to synchronize the posts discussion.\n   *\n   * @param showErrors Whether to show errors in a modal.\n   * @returns Promise resolved when done.\n   */\n  syncDiscussion(showErrors) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonModForumSync.instance.syncDiscussionReplies(_this7.discussionId).then(result => {\n        if (result.warnings && result.warnings.length) {\n          CoreDomUtils.showAlert(undefined, result.warnings[0]);\n        }\n        if (result && result.updated && _this7.forumId) {\n          // Sync successful, send event.\n          CoreEvents.trigger(AddonModForumSyncProvider.MANUAL_SYNCED, {\n            forumId: _this7.forumId,\n            userId: CoreSites.getCurrentSiteUserId(),\n            source: 'discussion'\n          }, CoreSites.getCurrentSiteId());\n        }\n        return;\n      }));\n      promises.push(AddonModForumSync.instance.syncRatings(_this7.cmId, _this7.discussionId).then(result => {\n        if (result.warnings && result.warnings.length) {\n          CoreDomUtils.showAlert(undefined, result.warnings[0]);\n        }\n        return;\n      }));\n      try {\n        yield Promise.all(promises);\n      } catch (error) {\n        if (showErrors) {\n          CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n        }\n        throw new Error('Failed syncing discussion');\n      }\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   * @param done Function to call when done.\n   * @param showErrors If show errors to the user of hide them.\n   * @returns Promise resolved when done.\n   */\n  doRefresh(refresher, done, showErrors = false) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      if (_this8.discussionLoaded) {\n        yield _this8.refreshPosts(true, showErrors).finally(() => {\n          refresher === null || refresher === void 0 || refresher.complete();\n          done && done();\n        });\n      }\n    })();\n  }\n  /**\n   * Refresh posts.\n   *\n   * @param sync Whether to try to synchronize the discussion.\n   * @param showErrors Whether to show errors in a modal.\n   * @returns Promise resolved when done.\n   */\n  refreshPosts(sync, showErrors) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      _this9.content.scrollToTop();\n      _this9.refreshIcon = CoreConstants.ICON_LOADING;\n      _this9.syncIcon = CoreConstants.ICON_LOADING;\n      const promises = [];\n      _this9.courseId && promises.push(AddonModForum.invalidateForumData(_this9.courseId));\n      promises.push(AddonModForum.invalidateDiscussionPosts(_this9.discussionId, _this9.forumId));\n      _this9.forumId && promises.push(AddonModForum.invalidateAccessInformation(_this9.forumId));\n      _this9.forumId && promises.push(AddonModForum.invalidateCanAddDiscussion(_this9.forumId));\n      yield CoreUtils.ignoreErrors(CoreUtils.allPromises(promises));\n      yield _this9.fetchPosts(sync, showErrors);\n    })();\n  }\n  /**\n   * Function to change posts sorting\n   *\n   * @param type Sort type.\n   * @returns Promised resolved when done.\n   */\n  changeSort(type) {\n    this.discussionLoaded = false;\n    this.sort = type;\n    CoreSites.getRequiredCurrentSite().setLocalSiteConfig('AddonModForumDiscussionSort', this.sort);\n    this.content.scrollToTop();\n    return this.fetchPosts();\n  }\n  /**\n   * Lock or unlock the discussion.\n   *\n   * @param locked True to lock the discussion, false to unlock.\n   */\n  setLockState(locked) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this10.discussion || !_this10.forumId || !_this10.cmId) {\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        const response = yield AddonModForum.setLockState(_this10.forumId, _this10.discussionId, locked);\n        _this10.discussion.locked = response.locked;\n        const data = {\n          forumId: _this10.forumId,\n          discussionId: _this10.discussionId,\n          cmId: _this10.cmId,\n          locked: _this10.discussion.locked\n        };\n        CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n        CoreDomUtils.showToast('addon.mod_forum.lockupdated', true);\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Pin or unpin the discussion.\n   *\n   * @param pinned True to pin the discussion, false to unpin it.\n   */\n  setPinState(pinned) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this11.discussion || !_this11.forumId || !_this11.cmId) {\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        yield AddonModForum.setPinState(_this11.discussionId, pinned);\n        _this11.discussion.pinned = pinned;\n        const data = {\n          forumId: _this11.forumId,\n          discussionId: _this11.discussionId,\n          cmId: _this11.cmId,\n          pinned: _this11.discussion.pinned\n        };\n        CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n        CoreDomUtils.showToast('addon.mod_forum.pinupdated', true);\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Star or unstar the discussion.\n   *\n   * @param starred True to star the discussion, false to unstar it.\n   */\n  toggleFavouriteState(starred) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this12.discussion || !_this12.forumId || !_this12.cmId) {\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        yield AddonModForum.toggleFavouriteState(_this12.discussionId, starred);\n        _this12.discussion.starred = starred;\n        const data = {\n          forumId: _this12.forumId,\n          discussionId: _this12.discussionId,\n          cmId: _this12.cmId,\n          starred: _this12.discussion.starred\n        };\n        CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n        CoreDomUtils.showToast('addon.mod_forum.favouriteupdated', true);\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * New post added.\n   */\n  postListChanged() {\n    if (!this.forumId || !this.cmId) {\n      return;\n    }\n    // Trigger an event to notify a new reply.\n    const data = {\n      forumId: this.forumId,\n      discussionId: this.discussionId,\n      cmId: this.cmId\n    };\n    CoreEvents.trigger(AddonModForumProvider.REPLY_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n    this.discussionLoaded = false;\n    this.refreshPosts().finally(() => {\n      this.discussionLoaded = true;\n    });\n  }\n  /**\n   * Get all the posts contained in the discussion.\n   *\n   * @returns Array containing all the posts of the discussion.\n   */\n  getAllPosts() {\n    const allPosts = this.posts.map(post => this.flattenPostHierarchy(post));\n    return CoreArray.flatten(allPosts);\n  }\n  /**\n   * Flatten a post's hierarchy into an array.\n   *\n   * @param parent Parent post.\n   * @returns Array containing all the posts within the hierarchy (including the parent).\n   */\n  flattenPostHierarchy(parent) {\n    const posts = [parent];\n    const children = parent.children || [];\n    for (const child of children) {\n      posts.push(...this.flattenPostHierarchy(child));\n    }\n    return posts;\n  }\n  /**\n   * Log discussion as viewed. This will also mark the posts as read.\n   *\n   * @param logAnalytics Whether to log analytics too or not.\n   */\n  logDiscussionView(logAnalytics = false) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(AddonModForum.logDiscussionView(_this13.discussionId, _this13.forumId || -1));\n      if (logAnalytics) {\n        var _ref4, _this13$startingPost$, _this13$startingPost;\n        CoreAnalytics.logEvent({\n          type: CoreAnalyticsEventType.VIEW_ITEM,\n          ws: 'mod_forum_view_forum_discussion',\n          name: (_ref4 = (_this13$startingPost$ = (_this13$startingPost = _this13.startingPost) === null || _this13$startingPost === void 0 ? void 0 : _this13$startingPost.subject) !== null && _this13$startingPost$ !== void 0 ? _this13$startingPost$ : _this13.forum.name) !== null && _ref4 !== void 0 ? _ref4 : '',\n          data: {\n            id: _this13.discussionId,\n            forumid: _this13.forumId,\n            category: 'forum'\n          },\n          url: `/mod/forum/discuss.php?d=${_this13.discussionId}` + (_this13.postId ? `#p${_this13.postId}` : '')\n        });\n      }\n      if (!_this13.courseId || !_this13.cmId) {\n        return;\n      }\n      // Trigger mark read posts.\n      CoreEvents.trigger(AddonModForumProvider.MARK_READ_EVENT, {\n        courseId: _this13.courseId,\n        moduleId: _this13.cmId\n      }, CoreSites.getCurrentSiteId());\n    })();\n  }\n}\n/**\n * Helper to manage swiping within a collection of discussions.\n */\n_class = AddonModForumDiscussionPage;\n_class.ɵfac = function AddonModForumDiscussionPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CoreSplitViewComponent, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-forum-discussion\"]],\n  viewQuery: function AddonModForumDiscussionPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(IonContent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  decls: 46,\n  vars: 73,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [4, \"ngIf\"], [\"slot\", \"end\"], [3, \"priority\", \"content\", \"iconAction\", \"closeOnClick\", \"action\", 4, \"ngIf\"], [\"iconAction\", \"fas-arrow-down\", 3, \"hidden\", \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-arrow-up\", 3, \"hidden\", \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-right-left\", 3, \"hidden\", \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-lock\", 3, \"hidden\", \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-unlock\", 3, \"hidden\", \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-map-pin\", 3, \"hidden\", \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-map-pin\", 3, \"hidden\", \"priority\", \"content\", \"iconSlash\", \"action\"], [\"iconAction\", \"fas-star\", 3, \"hidden\", \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-star\", 3, \"hidden\", \"priority\", \"content\", \"iconSlash\", \"action\"], [\"iconAction\", \"fas-up-right-from-square\", 3, \"hidden\", \"priority\", \"content\", \"href\", \"showBrowserWarning\"], [1, \"limited-width\", 3, \"core-swipe-navigation\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [\"class\", \"core-warning-card\", 4, \"ngIf\"], [\"class\", \"core-info-card\", 4, \"ngIf\"], [\"class\", \"ion-margin-bottom\", 4, \"ngIf\"], [\"nestedPosts\", \"\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [3, \"priority\", \"content\", \"iconAction\", \"closeOnClick\", \"action\"], [1, \"core-warning-card\"], [\"name\", \"fas-triangle-exclamation\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [1, \"core-info-card\"], [\"name\", \"fas-circle-info\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"name\", \"fas-lock\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [1, \"ion-margin-bottom\"], [3, \"post\", \"discussion\", \"courseId\", \"highlight\", \"discussionId\", \"component\", \"componentId\", \"formData\", \"originalData\", \"forum\", \"accessInfo\", \"trackPosts\", \"ratingInfo\", \"leavingPage\", \"onPostChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"post\", \"courseId\", \"discussionId\", \"component\", \"componentId\", \"formData\", \"originalData\", \"parentSubject\", \"forum\", \"accessInfo\", \"trackPosts\", \"ratingInfo\", \"leavingPage\", \"onPostChange\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"ion-padding-start\", 4, \"ngIf\"], [1, \"ion-padding-start\"]],\n  template: function AddonModForumDiscussionPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\");\n      i0.ɵɵtemplate(6, AddonModForumDiscussionPage_h1_6_Template, 2, 3, \"h1\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"ion-buttons\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"core-navbar-buttons\", 3)(9, \"core-context-menu\");\n      i0.ɵɵtemplate(10, AddonModForumDiscussionPage_core_context_menu_item_10_Template, 2, 6, \"core-context-menu-item\", 4);\n      i0.ɵɵtemplate(11, AddonModForumDiscussionPage_core_context_menu_item_11_Template, 2, 6, \"core-context-menu-item\", 4);\n      i0.ɵɵelementStart(12, \"core-context-menu-item\", 5);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_12_listener() {\n        return ctx.changeSort(\"flat-oldest\");\n      });\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"core-context-menu-item\", 6);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_14_listener() {\n        return ctx.changeSort(\"flat-newest\");\n      });\n      i0.ɵɵpipe(15, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"core-context-menu-item\", 7);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_16_listener() {\n        return ctx.changeSort(\"nested\");\n      });\n      i0.ɵɵpipe(17, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"core-context-menu-item\", 8);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_18_listener() {\n        return ctx.setLockState(true);\n      });\n      i0.ɵɵpipe(19, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"core-context-menu-item\", 9);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_20_listener() {\n        return ctx.setLockState(false);\n      });\n      i0.ɵɵpipe(21, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"core-context-menu-item\", 10);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_22_listener() {\n        return ctx.setPinState(true);\n      });\n      i0.ɵɵpipe(23, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"core-context-menu-item\", 11);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_24_listener() {\n        return ctx.setPinState(false);\n      });\n      i0.ɵɵpipe(25, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"core-context-menu-item\", 12);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_26_listener() {\n        return ctx.toggleFavouriteState(true);\n      });\n      i0.ɵɵpipe(27, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"core-context-menu-item\", 13);\n      i0.ɵɵlistener(\"action\", function AddonModForumDiscussionPage_Template_core_context_menu_item_action_28_listener() {\n        return ctx.toggleFavouriteState(false);\n      });\n      i0.ɵɵpipe(29, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"core-context-menu-item\", 14);\n      i0.ɵɵpipe(31, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"ion-content\", 15)(33, \"ion-refresher\", 16);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModForumDiscussionPage_Template_ion_refresher_ionRefresh_33_listener($event) {\n        return ctx.doRefresh($event.target);\n      });\n      i0.ɵɵelement(34, \"ion-refresher-content\", 17);\n      i0.ɵɵpipe(35, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"core-loading\", 18);\n      i0.ɵɵtemplate(37, AddonModForumDiscussionPage_ion_card_37_Template, 6, 6, \"ion-card\", 19);\n      i0.ɵɵtemplate(38, AddonModForumDiscussionPage_ion_card_38_Template, 5, 1, \"ion-card\", 20);\n      i0.ɵɵtemplate(39, AddonModForumDiscussionPage_ion_card_39_Template, 6, 3, \"ion-card\", 20);\n      i0.ɵɵtemplate(40, AddonModForumDiscussionPage_ion_card_40_Template, 6, 3, \"ion-card\", 20);\n      i0.ɵɵtemplate(41, AddonModForumDiscussionPage_div_41_Template, 2, 14, \"div\", 21);\n      i0.ɵɵtemplate(42, AddonModForumDiscussionPage_ion_card_42_Template, 2, 1, \"ion-card\", 2);\n      i0.ɵɵtemplate(43, AddonModForumDiscussionPage_ng_container_43_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(44, AddonModForumDiscussionPage_ng_template_44_Template, 3, 14, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 49, \"core.back\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.startingPost);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.discussionLoaded && !ctx.postHasOffline && ctx.isOnline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.discussionLoaded && ctx.isMobile && ctx.postHasOffline && ctx.isOnline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", ctx.sort === \"flat-oldest\")(\"priority\", 500)(\"content\", i0.ɵɵpipeBind1(13, 51, \"addon.mod_forum.modeflatoldestfirst\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", ctx.sort === \"flat-newest\")(\"priority\", 450)(\"content\", i0.ɵɵpipeBind1(15, 53, \"addon.mod_forum.modeflatnewestfirst\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", ctx.sort === \"nested\")(\"priority\", 400)(\"content\", i0.ɵɵpipeBind1(17, 55, \"addon.mod_forum.modenested\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.discussion || !ctx.discussion.canlock || ctx.discussion.locked)(\"priority\", 300)(\"content\", i0.ɵɵpipeBind1(19, 57, \"addon.mod_forum.lockdiscussion\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.discussion || !ctx.discussion.canlock || !ctx.discussion.locked)(\"priority\", 300)(\"content\", i0.ɵɵpipeBind1(21, 59, \"addon.mod_forum.unlockdiscussion\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.discussion || !ctx.canPin || ctx.discussion.pinned)(\"priority\", 250)(\"content\", i0.ɵɵpipeBind1(23, 61, \"addon.mod_forum.pindiscussion\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.discussion || !ctx.canPin || !ctx.discussion.pinned)(\"priority\", 250)(\"content\", i0.ɵɵpipeBind1(25, 63, \"addon.mod_forum.unpindiscussion\"))(\"iconSlash\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.discussion || !ctx.discussion.canfavourite || ctx.discussion.starred)(\"priority\", 200)(\"content\", i0.ɵɵpipeBind1(27, 65, \"addon.mod_forum.addtofavourites\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.discussion || !ctx.discussion.canfavourite || !ctx.discussion.starred)(\"priority\", 200)(\"content\", i0.ɵɵpipeBind1(29, 67, \"addon.mod_forum.removefromfavourites\"))(\"iconSlash\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.externalUrl)(\"priority\", 100)(\"content\", i0.ɵɵpipeBind1(31, 69, \"core.openinbrowser\"))(\"href\", ctx.externalUrl)(\"showBrowserWarning\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"core-swipe-navigation\", ctx.discussions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.discussionLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(35, 71, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.discussionLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.postHasOffline || ctx.hasOfflineRatings);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.availabilityMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.discussion && ctx.discussion.locked);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showQAMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.startingPost);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.sort !== \"nested\" && ctx.posts.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.sort === \"nested\" && ctx.posts.length);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]   .addon-forum-reply-button[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvbW9kL2ZvcnVtL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksU0FBQTtBQURSIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuXG4gICAgLmFkZG9uLWZvcnVtLXJlcGx5LWJ1dHRvbiAubGFiZWwge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nclass AddonModForumDiscussionDiscussionsSwipeManager extends AddonModForumDiscussionsSwipeManager {\n  /**\n   * @inheritdoc\n   */\n  getSelectedItemPathFromRoute(route) {\n    return this.getSource().DISCUSSIONS_PATH_PREFIX + route.params.discussionId;\n  }\n}","map":{"version":3,"names":["CoreConstants","CoreRoutedItemsManagerSourcesTracker","CoreFileUploader","CoreRatingProvider","CoreRatingOffline","CoreRatingSyncProvider","CoreUser","IonContent","CoreNetwork","CoreNavigator","CoreScreen","CoreSites","CoreDomUtils","CoreUtils","NgZone","Translate","CoreArray","CoreDom","CoreEvents","AddonModForumDiscussionsSource","AddonModForumDiscussionsSwipeManager","AddonModForum","AddonModForumProvider","AddonModForumHelper","AddonModForumOffline","AddonModForumSync","AddonModForumSyncProvider","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","startingPost","subject","cmId","courseId","ɵɵlistener","AddonModForumDiscussionPage_core_context_menu_item_10_Template_core_context_menu_item_action_0_listener","$event","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","doRefresh","ɵɵpipeBind1","ctx_r1","refreshIcon","AddonModForumDiscussionPage_core_context_menu_item_11_Template_core_context_menu_item_action_0_listener","_r15","ctx_r14","ctx_r2","syncIcon","ɵɵtext","ɵɵtextInterpolate","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r3","discussionStr","ctx_r4","availabilityMessage","AddonModForumDiscussionPage_div_41_Template_addon_mod_forum_post_onPostChange_1_listener","_r17","ctx_r16","postListChanged","ctx_r7","discussion","discussionId","component","formData","originalData","forum","accessInfo","trackPosts","ratingInfo","leavingPage","ɵɵelementContainerStart","ɵɵtemplate","AddonModForumDiscussionPage_ion_card_42_ng_container_1_core_spacer_1_Template","AddonModForumDiscussionPage_ion_card_42_ng_container_1_Template_addon_mod_forum_post_onPostChange_2_listener","_r23","ctx_r22","ɵɵelementContainerEnd","first_r20","post_r19","ctx_r18","postSubjects","parentid","AddonModForumDiscussionPage_ion_card_42_ng_container_1_Template","ctx_r8","posts","ɵɵelementContainer","AddonModForumDiscussionPage_ng_container_43_ng_container_1_ng_container_1_Template","_r10","_c1","post_r25","AddonModForumDiscussionPage_ng_container_43_ng_container_1_Template","ctx_r9","AddonModForumDiscussionPage_ng_template_44_div_2_ng_container_1_ng_container_1_Template","child_r30","AddonModForumDiscussionPage_ng_template_44_div_2_ng_container_1_Template","post_r27","children","AddonModForumDiscussionPage_ng_template_44_Template_addon_mod_forum_post_onPostChange_1_listener","_r34","ctx_r33","AddonModForumDiscussionPage_ng_template_44_div_2_Template","ctx_r11","length","AddonModForumDiscussionPage","constructor","splitView","elementRef","route","discussionLoaded","sort","replyingTo","isEditing","message","files","isprivatereply","ICON_LOADING","COMPONENT","canPin","showQAMessage","hasOfflineRatings","isMobile","ngOnInit","_this","_asyncToGenerator","_routeData$swipeEnabl","routeData","snapshot","data","getRouteNumberParam","forumId","getRouteParam","getRequiredRouteNumberParam","getRouteBooleanParam","postId","parent","swipeEnabled","_routeData$discussion","discussions","AddonModForumDiscussionDiscussionsSwipeManager","getOrCreateSource","discussionsPathPrefix","start","error","showErrorModal","goBack","currentSite","getCurrentSite","isOnline","externalUrl","shouldDisplayInformativeLinks","createSiteUrl","d","toString","undefined","onlineObserver","onChange","subscribe","run","instant","ngAfterViewInit","_this2","getUserSort","fetchPosts","scrollTo","scrollToElement","nativeElement","ionViewDidEnter","_this3","syncObserver","loadDiscussion","on","AUTO_SYNCED","userId","getCurrentSiteUserId","refreshPosts","getCurrentSiteId","syncManualObserver","MANUAL_SYNCED","source","numunread","invalidateDiscussionsList","ratingOfflineObserver","RATING_SAVED_EVENT","ratingArea","contextLevel","instanceId","itemSetId","ratingSyncObserver","SYNCED_EVENT","_ref","_x","apply","arguments","changeDiscObserver","CHANGE_DISCUSSION_EVENT","finally","locked","pinned","starred","deleted","_data$post","post","canLeave","_this4","hasPostDataChanged","showConfirm","clearTmpFiles","_this$splitView","outletActivated","navigate","back","ionViewWillLeave","off","ngOnDestroy","unsubscribe","destroy","value","getRequiredCurrentSite","getLocalSiteConfig","getUserPreference","Number","_unused","fetchForum","getForum","getForumById","Error","sync","showErrors","forceMarkAsRead","_this5","onlinePosts","offlineReplies","hasUnreadPosts","ignoreErrors","syncDiscussion","response","getDiscussionPosts","replies","getDiscussionReplies","ratinginfo","courseid","forumid","postHasOffline","convertPromises","onlinePostsMap","forEach","id","unread","offlineReply","push","instance","convertOfflineReplyToOnline","then","_ref2","reply","capabilities","_x2","Promise","all","objectToArray","concat","extractStartingPost","sortDiscussionPosts","rootId","formatTree","direction","istracked","cmid","course","getAvailabilityMessage","promises","getAccessInformation","_ref3","isCutoffDateReached","cancanoverridecutoff","currentUserId","type","canviewqandawithoutposting","some","author","_x3","_unused2","fullname","groups","getAllPosts","reduce","isSetPinStateAvailableForSite","canAddDiscussionToAll","canpindiscussions","hasRatings","ICON_REFRESH","ICON_SYNC","logDiscussionView","_this6","getDiscussionById","_this7","syncDiscussionReplies","result","warnings","showAlert","updated","trigger","syncRatings","showErrorModalDefault","refresher","done","_this8","complete","_this9","content","scrollToTop","invalidateForumData","invalidateDiscussionPosts","invalidateAccessInformation","invalidateCanAddDiscussion","allPromises","changeSort","setLocalSiteConfig","setLockState","_this10","modal","showModalLoading","showToast","dismiss","setPinState","_this11","toggleFavouriteState","_this12","REPLY_DISCUSSION_EVENT","allPosts","map","flattenPostHierarchy","flatten","child","logAnalytics","_this13","_ref4","_this13$startingPost$","_this13$startingPost","logEvent","VIEW_ITEM","ws","name","category","url","MARK_READ_EVENT","moduleId","_class","ɵɵdirectiveInject","i1","CoreSplitViewComponent","ElementRef","i2","ActivatedRoute","selectors","viewQuery","AddonModForumDiscussionPage_Query","rf","ctx","AddonModForumDiscussionPage_h1_6_Template","AddonModForumDiscussionPage_core_context_menu_item_10_Template","AddonModForumDiscussionPage_core_context_menu_item_11_Template","AddonModForumDiscussionPage_Template_core_context_menu_item_action_12_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_14_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_16_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_18_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_20_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_22_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_24_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_26_listener","AddonModForumDiscussionPage_Template_core_context_menu_item_action_28_listener","AddonModForumDiscussionPage_Template_ion_refresher_ionRefresh_33_listener","target","AddonModForumDiscussionPage_ion_card_37_Template","AddonModForumDiscussionPage_ion_card_38_Template","AddonModForumDiscussionPage_ion_card_39_Template","AddonModForumDiscussionPage_ion_card_40_Template","AddonModForumDiscussionPage_div_41_Template","AddonModForumDiscussionPage_ion_card_42_Template","AddonModForumDiscussionPage_ng_container_43_Template","AddonModForumDiscussionPage_ng_template_44_Template","ɵɵtemplateRefExtractor","canlock","canfavourite","ɵɵpropertyInterpolate","getSelectedItemPathFromRoute","getSource","DISCUSSIONS_PATH_PREFIX","params"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/forum/pages/discussion/discussion.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/forum/pages/discussion/discussion.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ContextLevel, CoreConstants } from '@/core/constants';\nimport { Component, OnDestroy, ViewChild, OnInit, AfterViewInit, ElementRef, Optional } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreRatingInfo, CoreRatingProvider } from '@features/rating/services/rating';\nimport { CoreRatingOffline } from '@features/rating/services/rating-offline';\nimport { CoreRatingSyncProvider } from '@features/rating/services/rating-sync';\nimport { CoreUser } from '@features/user/services/user';\nimport { CanLeave } from '@guards/can-leave';\nimport { IonContent } from '@ionic/angular';\nimport { CoreNetwork } from '@services/network';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreArray } from '@singletons/array';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { Subscription } from 'rxjs';\nimport { AddonModForumDiscussionsSource } from '../../classes/forum-discussions-source';\nimport { AddonModForumDiscussionsSwipeManager } from '../../classes/forum-discussions-swipe-manager';\nimport {\n    AddonModForum,\n    AddonModForumAccessInformation,\n    AddonModForumData,\n    AddonModForumDiscussion,\n    AddonModForumPost,\n    AddonModForumProvider,\n    AddonModForumPostFormData,\n    AddonModForumChangeDiscussionData,\n    AddonModForumReplyDiscussionData,\n} from '../../services/forum';\nimport { AddonModForumHelper } from '../../services/forum-helper';\nimport { AddonModForumOffline } from '../../services/forum-offline';\nimport { AddonModForumSync, AddonModForumSyncProvider } from '../../services/forum-sync';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\ntype SortType = 'flat-newest' | 'flat-oldest' | 'nested';\n\ntype Post = AddonModForumPost & { children?: Post[] };\n\n/**\n * Page that displays a forum discussion.\n */\n@Component({\n    selector: 'page-addon-mod-forum-discussion',\n    templateUrl: 'discussion.html',\n    styleUrls: ['discussion.scss'],\n})\nexport class AddonModForumDiscussionPage implements OnInit, AfterViewInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content!: IonContent;\n\n    courseId?: number;\n    discussionId!: number;\n    forum: Partial<AddonModForumData> = {};\n    accessInfo: AddonModForumAccessInformation = {};\n    discussion?: AddonModForumDiscussion;\n    discussions?: AddonModForumDiscussionDiscussionsSwipeManager;\n    startingPost?: Post;\n    posts: Post[] = [];\n    discussionLoaded = false;\n    postSubjects!: { [id: string]: string };\n    isOnline!: boolean;\n    postHasOffline!: boolean;\n    sort: SortType = 'nested';\n    trackPosts!: boolean;\n    formData: AddonModForumSharedPostFormData = {\n        replyingTo: 0,\n        isEditing: false,\n        subject: '',\n        message: null,\n        files: [],\n        isprivatereply: false,\n    };\n\n    originalData: Omit<AddonModForumPostFormData, 'id'> = {\n        subject: null,\n        message: null,\n        files: [],\n        isprivatereply: false,\n    };\n\n    refreshIcon = CoreConstants.ICON_LOADING;\n    syncIcon = CoreConstants.ICON_LOADING;\n    discussionStr = '';\n    component = AddonModForumProvider.COMPONENT;\n    cmId?: number;\n    canPin = false;\n    availabilityMessage: string | null = null;\n    showQAMessage = false;\n    leavingPage = false;\n    externalUrl?: string;\n\n    protected forumId?: number;\n    protected postId?: number;\n    protected parent?: number;\n    protected onlineObserver?: Subscription;\n    protected syncObserver?: CoreEventObserver;\n    protected syncManualObserver?: CoreEventObserver;\n\n    ratingInfo?: CoreRatingInfo;\n    hasOfflineRatings = false;\n    protected ratingOfflineObserver?: CoreEventObserver;\n    protected ratingSyncObserver?: CoreEventObserver;\n    protected changeDiscObserver?: CoreEventObserver;\n\n    constructor(\n        @Optional() protected splitView: CoreSplitViewComponent,\n        protected elementRef: ElementRef,\n        protected route: ActivatedRoute,\n    ) {}\n\n    get isMobile(): boolean {\n        return CoreScreen.isMobile;\n    }\n\n    async ngOnInit(): Promise<void> {\n        try {\n            const routeData = this.route.snapshot.data;\n            this.courseId = CoreNavigator.getRouteNumberParam('courseId');\n            this.cmId = CoreNavigator.getRouteNumberParam('cmId');\n            this.forumId = CoreNavigator.getRouteNumberParam('forumId');\n            this.discussion = CoreNavigator.getRouteParam<AddonModForumDiscussion>('discussion');\n            this.discussionId = this.discussion\n                ? this.discussion.discussion\n                : CoreNavigator.getRequiredRouteNumberParam('discussionId');\n            this.trackPosts = CoreNavigator.getRouteBooleanParam('trackPosts') || false;\n            this.postId = CoreNavigator.getRouteNumberParam('postId');\n            this.parent = CoreNavigator.getRouteNumberParam('parent');\n\n            if (this.courseId && this.cmId && (routeData.swipeEnabled ?? true)) {\n                this.discussions = new AddonModForumDiscussionDiscussionsSwipeManager(\n                    CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                        AddonModForumDiscussionsSource,\n                        [this.courseId, this.cmId, routeData.discussionsPathPrefix ?? ''],\n                    ),\n                );\n\n                await this.discussions.start();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            this.goBack();\n\n            return;\n        }\n\n        const currentSite = CoreSites.getCurrentSite();\n        this.isOnline = CoreNetwork.isOnline();\n        this.externalUrl = currentSite && currentSite.shouldDisplayInformativeLinks() ?\n            currentSite.createSiteUrl('/mod/forum/discuss.php', { d: this.discussionId.toString() }) :\n            undefined;\n        this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n            });\n        });\n\n        this.discussionStr = Translate.instant('addon.mod_forum.discussion');\n    }\n\n    /**\n     * View loaded.\n     */\n    async ngAfterViewInit(): Promise<void> {\n        this.sort = this.parent\n            ? 'nested' // Force nested order.\n            : await this.getUserSort();\n\n        await this.fetchPosts(true, false, true);\n\n        const scrollTo = this.postId || this.parent;\n        if (scrollTo) {\n            // Scroll to the post.\n            CoreDom.scrollToElement(\n                this.elementRef.nativeElement,\n                '#addon-mod_forum-post-' + scrollTo,\n            );\n        }\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    async ionViewDidEnter(): Promise<void> {\n        if (this.syncObserver) {\n            // Already setup.\n            return;\n        }\n\n        // The discussion object was not passed as parameter.\n        if (!this.discussion) {\n            await this.loadDiscussion(this.discussionId, this.forumId, this.cmId);\n        }\n\n        const discussion = this.discussion;\n\n        // Refresh data if this discussion is synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonModForumSyncProvider.AUTO_SYNCED, data => {\n            if (data.forumId == this.forumId && this.discussionId == data.discussionId\n                    && data.userId == CoreSites.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, CoreSites.getCurrentSiteId());\n\n        // Refresh data if this forum discussion is synchronized from discussions list.\n        this.syncManualObserver = CoreEvents.on(AddonModForumSyncProvider.MANUAL_SYNCED, data => {\n            if (data.source != 'discussion' && data.forumId == this.forumId &&\n                    data.userId == CoreSites.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, CoreSites.getCurrentSiteId());\n\n        // Invalidate discussion list if it was not read.\n        if (this.forumId && discussion && discussion.numunread > 0) {\n            AddonModForum.invalidateDiscussionsList(this.forumId);\n        }\n\n        // Listen for offline ratings saved and synced.\n        this.ratingOfflineObserver = CoreEvents.on(CoreRatingProvider.RATING_SAVED_EVENT, (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = true;\n            }\n        });\n\n        this.ratingSyncObserver = CoreEvents.on(CoreRatingSyncProvider.SYNCED_EVENT, async (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = false;\n            }\n        });\n\n        this.changeDiscObserver = CoreEvents.on(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data => {\n            if (discussion && this.forumId && (this.forumId === data.forumId || data.cmId === this.cmId)) {\n                AddonModForum.invalidateDiscussionsList(this.forumId).finally(() => {\n                    if (data.locked !== undefined) {\n                        discussion.locked = data.locked;\n                    }\n                    if (data.pinned !== undefined) {\n                        discussion.pinned = data.pinned;\n                    }\n                    if (data.starred !== undefined) {\n                        discussion.starred = data.starred;\n                    }\n\n                    if (data.deleted !== undefined && data.deleted) {\n                        if (!data.post?.parentid) {\n                            this.goBack();\n                        } else {\n                            this.discussionLoaded = false;\n                            this.refreshPosts();\n                        }\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (AddonModForumHelper.hasPostDataChanged(this.formData, this.originalData)) {\n            // Show confirmation if some data has been modified.\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        // Delete the local files from the tmp folder.\n        CoreFileUploader.clearTmpFiles(this.formData.files);\n\n        this.leavingPage = true;\n\n        return true;\n    }\n\n    /**\n     * Helper function to go back.\n     */\n    protected goBack(): void {\n        if (this.leavingPage) {\n            return;\n        }\n\n        if (this.splitView?.outletActivated) {\n            CoreNavigator.navigate('../');\n        } else {\n            CoreNavigator.back();\n        }\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.syncObserver && this.syncObserver.off();\n        this.syncManualObserver && this.syncManualObserver.off();\n        this.ratingOfflineObserver && this.ratingOfflineObserver.off();\n        this.ratingSyncObserver && this.ratingSyncObserver.off();\n        this.changeDiscObserver && this.changeDiscObserver.off();\n        delete this.syncObserver;\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.onlineObserver && this.onlineObserver.unsubscribe();\n        this.discussions && this.discussions.destroy();\n    }\n\n    /**\n     * Get sort type configured by the current user.\n     *\n     * @returns Promise resolved with the sort type.\n     */\n    protected async getUserSort(): Promise<SortType> {\n        try {\n            const value = await CoreSites.getRequiredCurrentSite().getLocalSiteConfig<SortType>('AddonModForumDiscussionSort');\n\n            return value;\n        } catch (error) {\n            try {\n                const value = await CoreUser.getUserPreference('forum_displaymode');\n\n                switch (Number(value)) {\n                    case 1:\n                        return 'flat-oldest';\n                    case -1:\n                        return 'flat-newest';\n                    case 3:\n                        return 'nested';\n                    case 2: // Threaded not implemented.\n                    default:\n                        // Not set, use default sort.\n                        // @TODO add fallback to $CFG->forum_displaymode.\n                }\n            } catch {\n                // Ignore errors.\n            }\n        }\n\n        return 'flat-oldest';\n    }\n\n    /**\n     * Convenience function to get the forum.\n     *\n     * @returns Promise resolved with the forum.\n     */\n    protected fetchForum(): Promise<AddonModForumData> {\n        if (this.courseId && this.cmId) {\n            return AddonModForum.getForum(this.courseId, this.cmId);\n        }\n\n        if (this.courseId && this.forumId) {\n            return AddonModForum.getForumById(this.courseId, this.forumId);\n        }\n\n        throw new Error('Cannot get the forum');\n    }\n\n    /**\n     * Convenience function to get the posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @param forceMarkAsRead Whether to mark all posts as read.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchPosts(sync?: boolean, showErrors?: boolean, forceMarkAsRead?: boolean): Promise<void> {\n        let onlinePosts: AddonModForumPost[] = [];\n        const offlineReplies: AddonModForumPost[] = [];\n        let hasUnreadPosts = false;\n\n        try {\n            if (sync) {\n                // Try to synchronize the forum.\n                await CoreUtils.ignoreErrors(this.syncDiscussion(!!showErrors));\n            }\n\n            const response = await AddonModForum.getDiscussionPosts(this.discussionId, { cmId: this.cmId });\n            const replies = await AddonModForumOffline.getDiscussionReplies(this.discussionId);\n            this.ratingInfo = response.ratinginfo;\n\n            onlinePosts = response.posts;\n            this.courseId = response.courseid || this.courseId;\n            this.forumId = response.forumid || this.forumId;\n\n            // Check if there are responses stored in offline.\n            this.postHasOffline = !!replies.length;\n            const convertPromises: Promise<void>[] = [];\n\n            // Index posts to allow quick access. Also check unread field.\n            const onlinePostsMap: Record<string, AddonModForumPost> = {};\n            onlinePosts.forEach((post) => {\n                onlinePostsMap[post.id] = post;\n                hasUnreadPosts = hasUnreadPosts || !!post.unread;\n            });\n\n            replies.forEach((offlineReply) => {\n                // If we don't have forumId and courseId, get it from the post.\n                if (!this.forumId) {\n                    this.forumId = offlineReply.forumid;\n                }\n                if (!this.courseId) {\n                    this.courseId = offlineReply.courseid;\n                }\n\n                convertPromises.push(\n                    AddonModForumHelper.instance\n                        .convertOfflineReplyToOnline(offlineReply)\n                        .then(async reply => {\n                            offlineReplies.push(reply);\n\n                            // Disable reply of the parent. Reply in offline to the same post is not allowed, edit instead.\n                            reply.parentid && (onlinePostsMap[reply.parentid].capabilities.reply = false);\n\n                            return;\n                        }),\n                );\n            });\n\n            await Promise.all(convertPromises);\n\n            // Convert back to array.\n            onlinePosts = CoreUtils.objectToArray(onlinePostsMap);\n\n            let posts = offlineReplies.concat(onlinePosts);\n\n            this.startingPost = AddonModForum.extractStartingPost(posts);\n\n            // If sort type is nested, normal sorting is disabled and nested posts will be displayed.\n            if (this.sort == 'nested') {\n                // Sort first by creation date to make format tree work.\n                AddonModForum.sortDiscussionPosts(posts, 'ASC');\n\n                const rootId = this.startingPost ? this.startingPost.id : (this.discussion ? this.discussion.id : 0);\n                posts = CoreUtils.formatTree(posts, 'parentid', 'id', rootId);\n            } else {\n                // Set default reply subject.\n                const direction = this.sort == 'flat-newest' ? 'DESC' : 'ASC';\n                AddonModForum.sortDiscussionPosts(posts, direction);\n            }\n\n            try {\n                // Now try to get the forum.\n                const forum = await this.fetchForum();\n                // \"forum.istracked\" is more reliable than \"trackPosts\".\n                if (forum.istracked !== undefined) {\n                    this.trackPosts = forum.istracked;\n                }\n\n                this.forumId = forum.id;\n                this.cmId = forum.cmid;\n                this.courseId = forum.course;\n                this.forum = forum;\n                this.availabilityMessage = AddonModForumHelper.getAvailabilityMessage(forum);\n\n                const promises: Promise<void>[] = [];\n\n                promises.push(\n                    AddonModForum.instance\n                        .getAccessInformation(this.forumId, { cmId: this.cmId })\n                        .then(async accessInfo => {\n                            this.accessInfo = accessInfo;\n\n                            // Disallow replying if cut-off date is reached and the user has not the capability to override it.\n                            // Just in case the posts were fetched from WS when the cut-off date was not reached but it is now.\n                            if (AddonModForumHelper.isCutoffDateReached(forum) && !accessInfo.cancanoverridecutoff) {\n                                posts.forEach((post) => {\n                                    post.capabilities.reply = false;\n                                });\n                            }\n\n                            // Show Q&A message if user hasn't posted.\n                            const currentUserId = CoreSites.getCurrentSiteUserId();\n                            this.showQAMessage = forum.type === 'qanda' && !accessInfo.canviewqandawithoutposting &&\n                                !posts.some(post => post.author.id === currentUserId);\n\n                            return;\n                        }),\n                );\n\n                // The discussion object was not passed as parameter and there is no starting post.\n                if (!this.discussion) {\n                    promises.push(this.loadDiscussion(this.discussionId, this.forumId, this.cmId));\n                }\n\n                await Promise.all(promises);\n            } catch {\n                // Ignore errors.\n            }\n\n            if (!this.discussion && !this.startingPost) {\n                // The discussion object was not passed as parameter and there is no starting post. Should not happen.\n                throw new Error('Invalid forum discussion.');\n            }\n\n            if (this.startingPost && this.startingPost.author && this.forum.type == 'single') {\n                // Hide author and groups for first post and type single.\n                delete this.startingPost.author.fullname;\n                delete this.startingPost.author.groups;\n            }\n\n            this.posts = posts;\n            this.postSubjects = this.getAllPosts().reduce(\n                (postSubjects, post) => {\n                    postSubjects[post.id] = post.subject;\n\n                    return postSubjects;\n                },\n                this.startingPost\n                    ? { [this.startingPost.id]: this.startingPost.subject }\n                    : {},\n            );\n\n            if (AddonModForum.isSetPinStateAvailableForSite() && this.forumId) {\n                // Use the canAddDiscussion WS to check if the user can pin discussions.\n                try {\n                    const response = await AddonModForum.canAddDiscussionToAll(this.forumId, { cmId: this.cmId });\n\n                    this.canPin = !!response.canpindiscussions;\n                } catch (error) {\n                    this.canPin = false;\n                }\n            } else {\n                this.canPin = false;\n            }\n\n            this.hasOfflineRatings =\n                await CoreRatingOffline.hasRatings('mod_forum', 'post', ContextLevel.MODULE, this.cmId, this.discussionId);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            this.discussionLoaded = true;\n            this.refreshIcon = CoreConstants.ICON_REFRESH;\n            this.syncIcon = CoreConstants.ICON_SYNC;\n\n            if (forceMarkAsRead || (hasUnreadPosts && this.trackPosts)) {\n                // Add log in Moodle and mark unread posts as readed.\n                this.logDiscussionView(forceMarkAsRead);\n            }\n        }\n    }\n\n    /**\n     * Convenience function to load discussion.\n     *\n     * @param discussionId Discussion ID.\n     * @param forumId Forum ID.\n     * @param cmId Forum cmid.\n     * @returns Promise resolved when done.\n     */\n    protected async loadDiscussion(discussionId: number, forumId?: number, cmId?: number): Promise<void> {\n        // Fetch the discussion if not passed as parameter.\n        if (this.discussion || !forumId || ! cmId) {\n            return;\n        }\n\n        this.discussion = await AddonModForumHelper.getDiscussionById(forumId, cmId, discussionId);\n        this.discussionId = this.discussion.discussion;\n    }\n\n    /**\n     * Tries to synchronize the posts discussion.\n     *\n     * @param showErrors Whether to show errors in a modal.\n     * @returns Promise resolved when done.\n     */\n    protected async syncDiscussion(showErrors: boolean): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(\n            AddonModForumSync.instance\n                .syncDiscussionReplies(this.discussionId)\n                .then((result) => {\n                    if (result.warnings && result.warnings.length) {\n                        CoreDomUtils.showAlert(undefined, result.warnings[0]);\n                    }\n\n                    if (result && result.updated && this.forumId) {\n                        // Sync successful, send event.\n                        CoreEvents.trigger(AddonModForumSyncProvider.MANUAL_SYNCED, {\n                            forumId: this.forumId,\n                            userId: CoreSites.getCurrentSiteUserId(),\n                            source: 'discussion',\n                        }, CoreSites.getCurrentSiteId());\n                    }\n\n                    return;\n                }),\n        );\n\n        promises.push(\n            AddonModForumSync.instance\n                .syncRatings(this.cmId, this.discussionId)\n                .then((result) => {\n                    if (result.warnings && result.warnings.length) {\n                        CoreDomUtils.showAlert(undefined, result.warnings[0]);\n                    }\n\n                    return;\n                }),\n        );\n\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            if (showErrors) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n\n            throw new Error('Failed syncing discussion');\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors If show errors to the user of hide them.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: HTMLIonRefresherElement | null, done?: () => void, showErrors: boolean = false): Promise<void> {\n        if (this.discussionLoaded) {\n            await this.refreshPosts(true, showErrors).finally(() => {\n                refresher?.complete();\n                done && done();\n            });\n        }\n    }\n\n    /**\n     * Refresh posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @returns Promise resolved when done.\n     */\n    async refreshPosts(sync?: boolean, showErrors?: boolean): Promise<void> {\n        this.content.scrollToTop();\n        this.refreshIcon = CoreConstants.ICON_LOADING;\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        this.courseId && promises.push(AddonModForum.invalidateForumData(this.courseId));\n        promises.push(AddonModForum.invalidateDiscussionPosts(this.discussionId, this.forumId));\n        this.forumId && promises.push(AddonModForum.invalidateAccessInformation(this.forumId));\n        this.forumId && promises.push(AddonModForum.invalidateCanAddDiscussion(this.forumId));\n\n        await CoreUtils.ignoreErrors(CoreUtils.allPromises(promises));\n\n        await this.fetchPosts(sync, showErrors);\n    }\n\n    /**\n     * Function to change posts sorting\n     *\n     * @param type Sort type.\n     * @returns Promised resolved when done.\n     */\n    changeSort(type: SortType): Promise<void> {\n        this.discussionLoaded = false;\n        this.sort = type;\n        CoreSites.getRequiredCurrentSite().setLocalSiteConfig('AddonModForumDiscussionSort', this.sort);\n        this.content.scrollToTop();\n\n        return this.fetchPosts();\n    }\n\n    /**\n     * Lock or unlock the discussion.\n     *\n     * @param locked True to lock the discussion, false to unlock.\n     */\n    async setLockState(locked: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            const response = await AddonModForum.setLockState(this.forumId, this.discussionId, locked);\n            this.discussion.locked = response.locked;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                locked: this.discussion.locked,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.lockupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Pin or unpin the discussion.\n     *\n     * @param pinned True to pin the discussion, false to unpin it.\n     */\n    async setPinState(pinned: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModForum.setPinState(this.discussionId, pinned);\n\n            this.discussion.pinned = pinned;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                pinned: this.discussion.pinned,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.pinupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Star or unstar the discussion.\n     *\n     * @param starred True to star the discussion, false to unstar it.\n     */\n    async toggleFavouriteState(starred: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModForum.toggleFavouriteState(this.discussionId, starred);\n\n            this.discussion.starred = starred;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                starred: this.discussion.starred,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.favouriteupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * New post added.\n     */\n    postListChanged(): void {\n        if (!this.forumId || !this.cmId) {\n            return;\n        }\n\n        // Trigger an event to notify a new reply.\n        const data: AddonModForumReplyDiscussionData = {\n            forumId: this.forumId,\n            discussionId: this.discussionId,\n            cmId: this.cmId,\n        };\n        CoreEvents.trigger(AddonModForumProvider.REPLY_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n        this.discussionLoaded = false;\n        this.refreshPosts().finally(() => {\n            this.discussionLoaded = true;\n        });\n    }\n\n    /**\n     * Get all the posts contained in the discussion.\n     *\n     * @returns Array containing all the posts of the discussion.\n     */\n    protected getAllPosts(): Post[] {\n        const allPosts = this.posts.map(post => this.flattenPostHierarchy(post));\n\n        return CoreArray.flatten(allPosts);\n    }\n\n    /**\n     * Flatten a post's hierarchy into an array.\n     *\n     * @param parent Parent post.\n     * @returns Array containing all the posts within the hierarchy (including the parent).\n     */\n    protected flattenPostHierarchy(parent: Post): Post[] {\n        const posts = [parent];\n        const children = parent.children || [];\n\n        for (const child of children) {\n            posts.push(...this.flattenPostHierarchy(child));\n        }\n\n        return posts;\n    }\n\n    /**\n     * Log discussion as viewed. This will also mark the posts as read.\n     *\n     * @param logAnalytics Whether to log analytics too or not.\n     */\n    protected async logDiscussionView(logAnalytics = false): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonModForum.logDiscussionView(this.discussionId, this.forumId || -1));\n\n        if (logAnalytics) {\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM,\n                ws: 'mod_forum_view_forum_discussion',\n                name: this.startingPost?.subject ?? this.forum.name ?? '',\n                data: { id: this.discussionId, forumid: this.forumId, category: 'forum' },\n                url: `/mod/forum/discuss.php?d=${this.discussionId}` + (this.postId ? `#p${this.postId}` : ''),\n            });\n        }\n\n        if (!this.courseId || !this.cmId) {\n            return;\n        }\n\n        // Trigger mark read posts.\n        CoreEvents.trigger(AddonModForumProvider.MARK_READ_EVENT, {\n            courseId: this.courseId,\n            moduleId: this.cmId,\n        }, CoreSites.getCurrentSiteId());\n    }\n\n}\n\n/**\n * Reply data shared by post.\n */\nexport type AddonModForumSharedPostFormData = Omit<AddonModForumPostFormData, 'id'> & {\n    id?: number; // ID when editing an online reply.\n    syncId?: string; // Sync ID if some post has blocked synchronization.\n};\n\n/**\n * Helper to manage swiping within a collection of discussions.\n */\nclass AddonModForumDiscussionDiscussionsSwipeManager extends AddonModForumDiscussionsSwipeManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return this.getSource().DISCUSSIONS_PATH_PREFIX + route.params.discussionId;\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1 *ngIf=\"startingPost\">\n                <core-format-text contextLevel=\"module\" [text]=\"startingPost.subject\" [contextInstanceId]=\"cmId\" [courseId]=\"courseId\" />\n            </h1>\n        </ion-title>\n        <ion-buttons slot=\"end\" />\n    </ion-toolbar>\n</ion-header>\n<core-navbar-buttons slot=\"end\">\n    <core-context-menu>\n        <core-context-menu-item *ngIf=\"discussionLoaded && !postHasOffline && isOnline\" [priority]=\"650\"\n            [content]=\"'addon.mod_forum.refreshposts' | translate\" [iconAction]=\"refreshIcon\" [closeOnClick]=\"false\"\n            (action)=\"doRefresh(null, $event)\" />\n        <core-context-menu-item *ngIf=\"discussionLoaded && isMobile && postHasOffline && isOnline\" [priority]=\"550\"\n            [content]=\"'core.settings.synchronizenow' | translate\" [iconAction]=\"syncIcon\" [closeOnClick]=\"false\"\n            (action)=\"doRefresh(null, $event, true)\" />\n        <core-context-menu-item [hidden]=\"sort === 'flat-oldest'\" [priority]=\"500\"\n            [content]=\"'addon.mod_forum.modeflatoldestfirst' | translate\" iconAction=\"fas-arrow-down\"\n            (action)=\"changeSort('flat-oldest')\" />\n        <core-context-menu-item [hidden]=\"sort === 'flat-newest'\" [priority]=\"450\"\n            [content]=\"'addon.mod_forum.modeflatnewestfirst' | translate\" iconAction=\"fas-arrow-up\" (action)=\"changeSort('flat-newest')\" />\n        <core-context-menu-item [hidden]=\"sort === 'nested'\" [priority]=\"400\" [content]=\"'addon.mod_forum.modenested' | translate\"\n            iconAction=\"fas-right-left\" (action)=\"changeSort('nested')\" />\n        <core-context-menu-item [hidden]=\"!discussion || !discussion.canlock || discussion.locked\" [priority]=\"300\"\n            [content]=\"'addon.mod_forum.lockdiscussion' | translate\" iconAction=\"fas-lock\" (action)=\"setLockState(true)\" />\n        <core-context-menu-item [hidden]=\"!discussion || !discussion.canlock || !discussion.locked\" [priority]=\"300\"\n            [content]=\"'addon.mod_forum.unlockdiscussion' | translate\" iconAction=\"fas-unlock\" (action)=\"setLockState(false)\" />\n        <core-context-menu-item [hidden]=\"!discussion || !canPin || discussion.pinned\" [priority]=\"250\"\n            [content]=\"'addon.mod_forum.pindiscussion' | translate\" iconAction=\"fas-map-pin\" (action)=\"setPinState(true)\" />\n        <core-context-menu-item [hidden]=\"!discussion || !canPin || !discussion.pinned\" [priority]=\"250\"\n            [content]=\"'addon.mod_forum.unpindiscussion' | translate\" [iconSlash]=\"true\" iconAction=\"fas-map-pin\"\n            (action)=\"setPinState(false)\" />\n        <core-context-menu-item [hidden]=\"!discussion || !discussion.canfavourite || discussion.starred\" [priority]=\"200\"\n            [content]=\"'addon.mod_forum.addtofavourites' | translate\" iconAction=\"fas-star\" (action)=\"toggleFavouriteState(true)\" />\n        <core-context-menu-item [hidden]=\"!discussion || !discussion.canfavourite || !discussion.starred\" [priority]=\"200\"\n            [content]=\"'addon.mod_forum.removefromfavourites' | translate\" iconAction=\"fas-star\" [iconSlash]=\"true\"\n            (action)=\"toggleFavouriteState(false)\" />\n        <core-context-menu-item [hidden]=\"!externalUrl\" [priority]=\"100\" [content]=\"'core.openinbrowser' | translate\" [href]=\"externalUrl\"\n            iconAction=\"fas-up-right-from-square\" [showBrowserWarning]=\"false\" />\n    </core-context-menu>\n</core-navbar-buttons>\n<ion-content [core-swipe-navigation]=\"discussions\" class=\"limited-width\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!discussionLoaded\" (ionRefresh)=\"doRefresh($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n\n    <core-loading [hideUntil]=\"discussionLoaded\">\n        <!-- Discussion replies found to be synchronized -->\n        <ion-card class=\"core-warning-card\" *ngIf=\"postHasOffline || hasOfflineRatings\">\n            <ion-item>\n                <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: discussionStr} }}</ion-label>\n            </ion-item>\n        </ion-card>\n\n        <!-- Cut-off date or due date message -->\n        <ion-card class=\"core-info-card\" *ngIf=\"availabilityMessage\">\n            <ion-item>\n                <ion-icon name=\"fas-circle-info\" slot=\"start\" aria-hidden=\"true\" />\n                <ion-label>{{ availabilityMessage }}</ion-label>\n            </ion-item>\n        </ion-card>\n\n        <ion-card class=\"core-info-card\" *ngIf=\"discussion && discussion.locked\">\n            <ion-item>\n                <ion-icon name=\"fas-lock\" slot=\"start\" aria-hidden=\"true\" />\n                <ion-label>{{ 'addon.mod_forum.discussionlocked' | translate }}</ion-label>\n            </ion-item>\n        </ion-card>\n\n        <!-- Q&A message. -->\n        <ion-card class=\"core-info-card\" *ngIf=\"showQAMessage\">\n            <ion-item>\n                <ion-icon name=\"fas-circle-info\" slot=\"start\" aria-hidden=\"true\" />\n                <ion-label>{{ 'addon.mod_forum.qandanotify' | translate }}</ion-label>\n            </ion-item>\n        </ion-card>\n\n        <div *ngIf=\"startingPost\" class=\"ion-margin-bottom\">\n            <addon-mod-forum-post [post]=\"startingPost\" [discussion]=\"discussion\" [courseId]=\"courseId\" [highlight]=\"true\"\n                [discussionId]=\"discussionId\" [component]=\"component\" [componentId]=\"cmId\" [formData]=\"formData\"\n                [originalData]=\"originalData\" [forum]=\"forum\" [accessInfo]=\"accessInfo\" [trackPosts]=\"trackPosts\" [ratingInfo]=\"ratingInfo\"\n                [leavingPage]=\"leavingPage\" (onPostChange)=\"postListChanged()\" />\n        </div>\n\n        <ion-card *ngIf=\"sort !== 'nested' && posts.length\">\n            <ng-container *ngFor=\"let post of posts; first as first\">\n                <core-spacer *ngIf=\"!first\" />\n                <addon-mod-forum-post [post]=\"post\" [courseId]=\"courseId\" [discussionId]=\"discussionId\" [component]=\"component\"\n                    [componentId]=\"cmId\" [formData]=\"formData\" [originalData]=\"originalData\" [parentSubject]=\"postSubjects[post.parentid]\"\n                    [forum]=\"forum\" [accessInfo]=\"accessInfo\" [trackPosts]=\"trackPosts\" [ratingInfo]=\"ratingInfo\"\n                    [leavingPage]=\"leavingPage\" (onPostChange)=\"postListChanged()\" />\n            </ng-container>\n        </ion-card>\n\n        <ng-container *ngIf=\"sort === 'nested' && posts.length\">\n            <ng-container *ngFor=\"let post of posts\">\n                <ng-container *ngTemplateOutlet=\"nestedPosts; context: {post: post}\" />\n            </ng-container>\n        </ng-container>\n\n        <ng-template #nestedPosts let-post=\"post\">\n            <ion-card>\n                <addon-mod-forum-post [post]=\"post\" [courseId]=\"courseId\" [discussionId]=\"discussionId\" [component]=\"component\"\n                    [componentId]=\"cmId\" [formData]=\"formData\" [originalData]=\"originalData\" [parentSubject]=\"postSubjects[post.parentid]\"\n                    [forum]=\"forum\" [accessInfo]=\"accessInfo\" [trackPosts]=\"trackPosts\" [ratingInfo]=\"ratingInfo\"\n                    [leavingPage]=\"leavingPage\" (onPostChange)=\"postListChanged()\" />\n            </ion-card>\n            <div class=\"ion-padding-start\" *ngIf=\"post.children && post.children.length && post.children[0].subject\">\n                <ng-container *ngFor=\"let child of post.children\">\n                    <ng-container *ngTemplateOutlet=\"nestedPosts; context: {post: child}\" />\n                </ng-container>\n            </div>\n        </ng-template>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}