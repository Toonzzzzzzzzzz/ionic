{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { Md5 } from 'ts-md5';\nimport { CoreSharedFiles } from '@features/sharedfiles/services/sharedfiles';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreEvents } from '@singletons/events';\nimport { CorePath } from '@singletons/path';\nimport * as i0 from \"@angular/core\";\nfunction CoreSharedFilesListComponent_core_site_picker_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-site-picker\", 6);\n    i0.ɵɵlistener(\"siteSelected\", function CoreSharedFilesListComponent_core_site_picker_3_Template_core_site_picker_siteSelected_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.changeSite($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.filesLoaded)(\"initialSite\", ctx_r0.siteId);\n  }\n}\nfunction CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-local-file\", 10);\n    i0.ɵɵlistener(\"onClick\", function CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template_core_local_file_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const file_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.filePicked(file_r7));\n    })(\"onDelete\", function CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template_core_local_file_onDelete_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const idx_r8 = i0.ɵɵnextContext().index;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.fileDeleted(idx_r8));\n    })(\"onRename\", function CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template_core_local_file_onRename_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const idx_r8 = i0.ɵɵnextContext().index;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.fileRenamed(idx_r8, $event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const file_r7 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"file\", file_r7)(\"manage\", ctx_r9.manage)(\"overrideClick\", ctx_r9.pick);\n  }\n}\nfunction CoreSharedFilesListComponent_ion_list_5_ng_container_1_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 11);\n    i0.ɵɵlistener(\"click\", function CoreSharedFilesListComponent_ion_list_5_ng_container_1_ion_item_2_Template_ion_item_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const file_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.openFolder(file_r7));\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 12);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 3, \"core.folder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(file_r7.name);\n  }\n}\nfunction CoreSharedFilesListComponent_ion_list_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template, 1, 3, \"core-local-file\", 8);\n    i0.ɵɵtemplate(2, CoreSharedFilesListComponent_ion_list_5_ng_container_1_ion_item_2_Template, 5, 5, \"ion-item\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const file_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", file_r7.isFile);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !file_r7.isFile);\n  }\n}\nfunction CoreSharedFilesListComponent_ion_list_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, CoreSharedFilesListComponent_ion_list_5_ng_container_1_Template, 3, 2, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.files);\n  }\n}\nfunction CoreSharedFilesListComponent_core_empty_box_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 13);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.sharedfiles.nosharedfiles\"));\n  }\n}\nfunction CoreSharedFilesListComponent_core_empty_box_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 13);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.sharedfiles.nosharedfilestoupload\"));\n  }\n}\n/**\n * Component to display the list of shared files, either as a modal or inside a page.\n */\nexport class CoreSharedFilesListComponent {\n  constructor() {\n    this.onPathChanged = new EventEmitter();\n    this.onFilePicked = new EventEmitter();\n    this.filesLoaded = false;\n    this.files = [];\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.siteId = this.siteId || CoreSites.getCurrentSiteId();\n    this.loadFiles();\n    // Listen for new files shared with the app.\n    this.shareObserver = CoreEvents.on(CoreEvents.FILE_SHARED, data => {\n      if (data.siteId === this.siteId) {\n        // File was stored in current site, refresh the list.\n        this.filesLoaded = false;\n        this.loadFiles().finally(() => {\n          this.filesLoaded = true;\n        });\n      }\n    });\n  }\n  /**\n   * Load the files.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadFiles() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.files = yield CoreSharedFiles.getSiteSharedFiles(_this.siteId, _this.path, _this.mimetypes);\n      _this.filesLoaded = true;\n    })();\n  }\n  /**\n   * Refresh the list of files.\n   *\n   * @param refresher Refresher.\n   */\n  refreshFiles(refresher) {\n    this.loadFiles().finally(() => {\n      refresher.complete();\n    });\n  }\n  /**\n   * Called when a file is deleted. Remove the file from the list.\n   *\n   * @param index Position of the file.\n   */\n  fileDeleted(index) {\n    this.files.splice(index, 1);\n  }\n  /**\n   * Called when a file is renamed. Update the list.\n   *\n   * @param index Position of the file.\n   * @param data Data containing the new FileEntry.\n   */\n  fileRenamed(index, data) {\n    this.files[index] = data.file;\n  }\n  /**\n   * Open a subfolder.\n   *\n   * @param folder The folder to open.\n   */\n  openFolder(folder) {\n    const path = CorePath.concatenatePaths(this.path || '', folder.name);\n    if (this.isModal) {\n      this.path = path;\n      this.filesLoaded = false;\n      this.loadFiles();\n      this.onPathChanged.emit(path);\n      return;\n    }\n    const hash = Md5.hashAsciiStr(path);\n    CoreNavigator.navigate(`../${hash}`, {\n      params: {\n        path,\n        manage: this.manage,\n        pick: this.pick,\n        siteId: this.siteId,\n        mimetypes: this.mimetypes,\n        isModal: false\n      }\n    });\n  }\n  /**\n   * Change site loaded.\n   *\n   * @param id Site to load.\n   */\n  changeSite(id) {\n    this.siteId = id;\n    this.path = '';\n    this.filesLoaded = false;\n    this.loadFiles();\n    this.onPathChanged.emit('');\n  }\n  /**\n   * A file was picked.\n   *\n   * @param file Picked file.\n   */\n  filePicked(file) {\n    this.onFilePicked.emit(file);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$shareObserver;\n    (_this$shareObserver = this.shareObserver) === null || _this$shareObserver === void 0 || _this$shareObserver.off();\n  }\n}\n_class = CoreSharedFilesListComponent;\n_class.ɵfac = function CoreSharedFilesListComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-shared-files-list\"]],\n  inputs: {\n    siteId: \"siteId\",\n    mimetypes: \"mimetypes\",\n    isModal: \"isModal\",\n    manage: \"manage\",\n    pick: \"pick\",\n    path: \"path\",\n    showSitePicker: \"showSitePicker\"\n  },\n  outputs: {\n    onPathChanged: \"onPathChanged\",\n    onFilePicked: \"onFilePicked\"\n  },\n  decls: 8,\n  vars: 10,\n  consts: [[\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hidden\", \"initialSite\", \"siteSelected\", 4, \"ngIf\"], [3, \"hideUntil\", \"fullscreen\"], [4, \"ngIf\"], [\"icon\", \"fas-folder\", 3, \"message\", 4, \"ngIf\"], [3, \"hidden\", \"initialSite\", \"siteSelected\"], [4, \"ngFor\", \"ngForOf\"], [3, \"file\", \"manage\", \"overrideClick\", \"onClick\", \"onDelete\", \"onRename\", 4, \"ngIf\"], [\"button\", \"\", \"class\", \"ion-text-wrap item-file item-directory\", 3, \"detail\", \"click\", 4, \"ngIf\"], [3, \"file\", \"manage\", \"overrideClick\", \"onClick\", \"onDelete\", \"onRename\"], [\"button\", \"\", 1, \"ion-text-wrap\", \"item-file\", \"item-directory\", 3, \"detail\", \"click\"], [\"name\", \"fas-folder\", \"slot\", \"start\"], [\"icon\", \"fas-folder\", 3, \"message\"]],\n  template: function CoreSharedFilesListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-refresher\", 0);\n      i0.ɵɵlistener(\"ionRefresh\", function CoreSharedFilesListComponent_Template_ion_refresher_ionRefresh_0_listener($event) {\n        return ctx.refreshFiles($event.target);\n      });\n      i0.ɵɵelement(1, \"ion-refresher-content\", 1);\n      i0.ɵɵpipe(2, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, CoreSharedFilesListComponent_core_site_picker_3_Template, 1, 2, \"core-site-picker\", 2);\n      i0.ɵɵelementStart(4, \"core-loading\", 3);\n      i0.ɵɵtemplate(5, CoreSharedFilesListComponent_ion_list_5_Template, 2, 1, \"ion-list\", 4);\n      i0.ɵɵtemplate(6, CoreSharedFilesListComponent_core_empty_box_6_Template, 2, 3, \"core-empty-box\", 5);\n      i0.ɵɵtemplate(7, CoreSharedFilesListComponent_core_empty_box_7_Template, 2, 3, \"core-empty-box\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"disabled\", !ctx.filesLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(2, 8, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSitePicker);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hideUntil\", ctx.filesLoaded)(\"fullscreen\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.files && ctx.files.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.files && !ctx.files.length && ctx.manage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.files && !ctx.files.length && !ctx.manage);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","Md5","CoreSharedFiles","CoreNavigator","CoreSites","CoreEvents","CorePath","i0","ɵɵelementStart","ɵɵlistener","CoreSharedFilesListComponent_core_site_picker_3_Template_core_site_picker_siteSelected_0_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","changeSite","ɵɵelementEnd","ɵɵproperty","ctx_r0","filesLoaded","siteId","CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template_core_local_file_onClick_0_listener","_r13","file_r7","$implicit","ctx_r11","filePicked","CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template_core_local_file_onDelete_0_listener","idx_r8","index","ctx_r14","fileDeleted","CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template_core_local_file_onRename_0_listener","ctx_r16","fileRenamed","ctx_r9","manage","pick","CoreSharedFilesListComponent_ion_list_5_ng_container_1_ion_item_2_Template_ion_item_click_0_listener","_r21","ctx_r19","openFolder","ɵɵelement","ɵɵtext","ɵɵadvance","ɵɵattribute","ɵɵpipeBind1","ɵɵtextInterpolate","name","ɵɵelementContainerStart","ɵɵtemplate","CoreSharedFilesListComponent_ion_list_5_ng_container_1_core_local_file_1_Template","CoreSharedFilesListComponent_ion_list_5_ng_container_1_ion_item_2_Template","ɵɵelementContainerEnd","isFile","CoreSharedFilesListComponent_ion_list_5_ng_container_1_Template","ctx_r1","files","CoreSharedFilesListComponent","constructor","onPathChanged","onFilePicked","ngOnInit","getCurrentSiteId","loadFiles","shareObserver","on","FILE_SHARED","data","finally","_this","_asyncToGenerator","getSiteSharedFiles","path","mimetypes","refreshFiles","refresher","complete","splice","file","folder","concatenatePaths","isModal","emit","hash","hashAsciiStr","navigate","params","id","ngOnDestroy","_this$shareObserver","off","selectors","inputs","showSitePicker","outputs","decls","vars","consts","template","CoreSharedFilesListComponent_Template","rf","ctx","CoreSharedFilesListComponent_Template_ion_refresher_ionRefresh_0_listener","target","CoreSharedFilesListComponent_core_site_picker_3_Template","CoreSharedFilesListComponent_ion_list_5_Template","CoreSharedFilesListComponent_core_empty_box_6_Template","CoreSharedFilesListComponent_core_empty_box_7_Template","ɵɵpropertyInterpolate","length"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/sharedfiles/components/list/list.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/sharedfiles/components/list/list.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { FileEntry, DirectoryEntry } from '@awesome-cordova-plugins/file/ngx';\nimport { Md5 } from 'ts-md5';\n\nimport { CoreSharedFiles } from '@features/sharedfiles/services/sharedfiles';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CorePath } from '@singletons/path';\n\n/**\n * Component to display the list of shared files, either as a modal or inside a page.\n */\n@Component({\n    selector: 'core-shared-files-list',\n    templateUrl: 'list.html',\n})\nexport class CoreSharedFilesListComponent implements OnInit, OnDestroy {\n\n    @Input() siteId?: string;\n    @Input() mimetypes?: string[];\n    @Input() isModal?: boolean; // Whether the component is loaded in a modal.\n    @Input() manage?: boolean;\n    @Input() pick?: boolean; // To pick a file you MUST use a modal.\n    @Input() path?: string;\n    @Input() showSitePicker?: boolean;\n    @Output() onPathChanged = new EventEmitter<string>();\n    @Output() onFilePicked = new EventEmitter<FileEntry>();\n\n    filesLoaded = false;\n    files: (FileEntry | DirectoryEntry)[] = [];\n\n    protected shareObserver?: CoreEventObserver;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.siteId = this.siteId || CoreSites.getCurrentSiteId();\n\n        this.loadFiles();\n\n        // Listen for new files shared with the app.\n        this.shareObserver = CoreEvents.on(CoreEvents.FILE_SHARED, (data) => {\n            if (data.siteId === this.siteId) {\n                // File was stored in current site, refresh the list.\n                this.filesLoaded = false;\n                this.loadFiles().finally(() => {\n                    this.filesLoaded = true;\n                });\n            }\n        });\n    }\n\n    /**\n     * Load the files.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadFiles(): Promise<void> {\n        this.files = await CoreSharedFiles.getSiteSharedFiles(this.siteId, this.path, this.mimetypes);\n        this.filesLoaded = true;\n    }\n\n    /**\n     * Refresh the list of files.\n     *\n     * @param refresher Refresher.\n     */\n    refreshFiles(refresher: HTMLIonRefresherElement): void {\n        this.loadFiles().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Called when a file is deleted. Remove the file from the list.\n     *\n     * @param index Position of the file.\n     */\n    fileDeleted(index: number): void {\n        this.files.splice(index, 1);\n    }\n\n    /**\n     * Called when a file is renamed. Update the list.\n     *\n     * @param index Position of the file.\n     * @param data Data containing the new FileEntry.\n     */\n    fileRenamed(index: number, data: { file: FileEntry }): void {\n        this.files[index] = data.file;\n    }\n\n    /**\n     * Open a subfolder.\n     *\n     * @param folder The folder to open.\n     */\n    openFolder(folder: DirectoryEntry): void {\n        const path = CorePath.concatenatePaths(this.path || '', folder.name);\n\n        if (this.isModal) {\n            this.path = path;\n            this.filesLoaded = false;\n            this.loadFiles();\n            this.onPathChanged.emit(path);\n\n            return;\n        }\n\n        const hash = <string> Md5.hashAsciiStr(path);\n\n        CoreNavigator.navigate(`../${hash}`, {\n            params: {\n                path,\n                manage: this.manage,\n                pick: this.pick,\n                siteId: this.siteId,\n                mimetypes: this.mimetypes,\n                isModal: false,\n            },\n        });\n    }\n\n    /**\n     * Change site loaded.\n     *\n     * @param id Site to load.\n     */\n    changeSite(id: string): void {\n        this.siteId = id;\n        this.path = '';\n        this.filesLoaded = false;\n        this.loadFiles();\n        this.onPathChanged.emit('');\n    }\n\n    /**\n     * A file was picked.\n     *\n     * @param file Picked file.\n     */\n    filePicked(file: FileEntry): void {\n        this.onFilePicked.emit(file);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.shareObserver?.off();\n    }\n\n}\n","<ion-refresher slot=\"fixed\" [disabled]=\"!filesLoaded\" (ionRefresh)=\"refreshFiles($event.target)\">\n    <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n</ion-refresher>\n\n<!-- Allow selecting the site to view. -->\n<core-site-picker *ngIf=\"showSitePicker\" [hidden]=\"!filesLoaded\" [initialSite]=\"siteId\" (siteSelected)=\"changeSite($event)\" />\n\n<core-loading [hideUntil]=\"filesLoaded\" [fullscreen]=\"false\">\n    <ion-list *ngIf=\"files && files.length > 0\">\n        <ng-container *ngFor=\"let file of files; let idx = index\">\n            <core-local-file *ngIf=\"file.isFile\" [file]=\"file\" [manage]=\"manage\" [overrideClick]=\"pick\" (onClick)=\"filePicked(file)\"\n                (onDelete)=\"fileDeleted(idx)\" (onRename)=\"fileRenamed(idx, $event)\" />\n\n            <ion-item button *ngIf=\"!file.isFile\" class=\"ion-text-wrap item-file item-directory\" (click)=\"openFolder(file)\" [detail]=\"true\">\n                <ion-icon name=\"fas-folder\" slot=\"start\" [attr.aria-label]=\"'core.folder' | translate\" />\n                <ion-label>{{ file.name }}</ion-label>\n            </ion-item>\n        </ng-container>\n    </ion-list>\n\n    <core-empty-box *ngIf=\"files && !files.length && manage\" icon=\"fas-folder\" [message]=\"'core.sharedfiles.nosharedfiles' | translate\" />\n\n    <core-empty-box *ngIf=\"files && !files.length && !manage\" icon=\"fas-folder\"\n        [message]=\"'core.sharedfiles.nosharedfilestoupload' | translate\" />\n</core-loading>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}