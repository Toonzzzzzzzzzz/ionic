{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreApp } from '@services/app';\nimport { CoreUpdateManager } from '@services/update-manager';\n/**\n * Read redirect data from local storage and clear it if it existed.\n */\nexport default function () {\n  return _ref.apply(this, arguments);\n}\nfunction _ref() {\n  _ref = _asyncToGenerator(function* () {\n    yield CoreUpdateManager.donePromise;\n    CoreApp.consumeStorageRedirect();\n  });\n  return _ref.apply(this, arguments);\n}","map":{"version":3,"names":["CoreApp","CoreUpdateManager","_ref","apply","arguments","_asyncToGenerator","donePromise","consumeStorageRedirect"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/initializers/consume-storage-redirect.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreApp } from '@services/app';\nimport { CoreUpdateManager } from '@services/update-manager';\n\n/**\n * Read redirect data from local storage and clear it if it existed.\n */\nexport default async function(): Promise<void> {\n    await CoreUpdateManager.donePromise;\n\n    CoreApp.consumeStorageRedirect();\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,iBAAiB,QAAQ,0BAA0B;AAE5D;;;AAGA;EAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAIC,SAAAF,KAAA;EAAAA,IAAA,GAAAG,iBAAA,CAJc,aAAK;IAChB,MAAMJ,iBAAiB,CAACK,WAAW;IAEnCN,OAAO,CAACO,sBAAsB,EAAE;EACpC,CAAC;EAAA,OAAAL,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}