{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CorePlatform } from '@services/platform';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { CoreFileUploaderHelper } from '../fileuploader-helper';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to upload files from the album.\n */\nexport class CoreFileUploaderAlbumHandlerService {\n  constructor() {\n    this.name = 'CoreFileUploaderAlbum';\n    this.priority = 2000;\n  }\n  /**\n   * Whether or not the handler is enabled on a site level.\n   *\n   * @returns Promise resolved with true if enabled.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return CorePlatform.isMobile();\n    })();\n  }\n  /**\n   * Given a list of mimetypes, return the ones that are supported by the handler.\n   *\n   * @param mimetypes List of mimetypes.\n   * @returns Supported mimetypes.\n   */\n  getSupportedMimetypes(mimetypes) {\n    // Album allows picking images and videos.\n    return CoreUtils.filterByRegexp(mimetypes, /^(image|video)\\//);\n  }\n  /**\n   * Get the data to display the handler.\n   *\n   * @returns Data.\n   */\n  getData() {\n    return {\n      title: 'core.fileuploader.photoalbums',\n      class: 'core-fileuploader-album-handler',\n      icon: 'images',\n      action: function () {\n        var _ref = _asyncToGenerator(function* (maxSize, upload, allowOffline, mimetypes) {\n          const result = yield CoreFileUploaderHelper.uploadImage(true, maxSize, upload, mimetypes);\n          return {\n            treated: true,\n            result: result\n          };\n        });\n        return function action(_x, _x2, _x3, _x4) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    };\n  }\n}\n_class = CoreFileUploaderAlbumHandlerService;\n_class.ɵfac = function CoreFileUploaderAlbumHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreFileUploaderAlbumHandler = makeSingleton(CoreFileUploaderAlbumHandlerService);","map":{"version":3,"names":["CorePlatform","CoreUtils","makeSingleton","CoreFileUploaderHelper","CoreFileUploaderAlbumHandlerService","constructor","name","priority","isEnabled","_asyncToGenerator","isMobile","getSupportedMimetypes","mimetypes","filterByRegexp","getData","title","class","icon","action","_ref","maxSize","upload","allowOffline","result","uploadImage","treated","_x","_x2","_x3","_x4","apply","arguments","factory","ɵfac","providedIn","CoreFileUploaderAlbumHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/fileuploader/services/handlers/album.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CorePlatform } from '@services/platform';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { CoreFileUploaderHandler, CoreFileUploaderHandlerData, CoreFileUploaderHandlerResult } from '../fileuploader-delegate';\nimport { CoreFileUploaderHelper } from '../fileuploader-helper';\n\n/**\n * Handler to upload files from the album.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreFileUploaderAlbumHandlerService implements CoreFileUploaderHandler {\n\n    name = 'CoreFileUploaderAlbum';\n    priority = 2000;\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @returns Promise resolved with true if enabled.\n     */\n    async isEnabled(): Promise<boolean> {\n        return CorePlatform.isMobile();\n    }\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param mimetypes List of mimetypes.\n     * @returns Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[] {\n        // Album allows picking images and videos.\n        return CoreUtils.filterByRegexp(mimetypes, /^(image|video)\\//);\n    }\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @returns Data.\n     */\n    getData(): CoreFileUploaderHandlerData {\n        return {\n            title: 'core.fileuploader.photoalbums',\n            class: 'core-fileuploader-album-handler',\n            icon: 'images', // Cannot use font-awesome in action sheet.\n            action: async (\n                maxSize?: number,\n                upload?: boolean,\n                allowOffline?: boolean,\n                mimetypes?: string[],\n            ): Promise<CoreFileUploaderHandlerResult> => {\n                const result = await CoreFileUploaderHelper.uploadImage(true, maxSize, upload, mimetypes);\n\n                return {\n                    treated: true,\n                    result: result,\n                };\n            },\n        };\n    }\n\n}\n\nexport const CoreFileUploaderAlbumHandler = makeSingleton(CoreFileUploaderAlbumHandlerService);\n"],"mappings":";;AAgBA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,aAAa,QAAQ,aAAa;AAE3C,SAASC,sBAAsB,QAAQ,wBAAwB;;AAE/D;;;AAIA,OAAM,MAAOC,mCAAmC;EADhDC,YAAA;IAGI,KAAAC,IAAI,GAAG,uBAAuB;IAC9B,KAAAC,QAAQ,GAAG,IAAI;;EAEf;;;;;EAKMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAOT,YAAY,CAACU,QAAQ,EAAE;IAAC;EACnC;EAEA;;;;;;EAMAC,qBAAqBA,CAACC,SAAmB;IACrC;IACA,OAAOX,SAAS,CAACY,cAAc,CAACD,SAAS,EAAE,kBAAkB,CAAC;EAClE;EAEA;;;;;EAKAE,OAAOA,CAAA;IACH,OAAO;MACHC,KAAK,EAAE,+BAA+B;MACtCC,KAAK,EAAE,iCAAiC;MACxCC,IAAI,EAAE,QAAQ;MACdC,MAAM;QAAA,IAAAC,IAAA,GAAAV,iBAAA,CAAE,WACJW,OAAgB,EAChBC,MAAgB,EAChBC,YAAsB,EACtBV,SAAoB,EACoB;UACxC,MAAMW,MAAM,SAASpB,sBAAsB,CAACqB,WAAW,CAAC,IAAI,EAAEJ,OAAO,EAAEC,MAAM,EAAET,SAAS,CAAC;UAEzF,OAAO;YACHa,OAAO,EAAE,IAAI;YACbF,MAAM,EAAEA;WACX;QACL,CAAC;QAAA,gBAAAL,OAAAQ,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;UAAA,OAAAV,IAAA,CAAAW,KAAA,OAAAC,SAAA;QAAA;MAAA;KACJ;EACL;;SAjDS3B,mCAAmC;;mBAAnCA,MAAmC;AAAA;;SAAnCA,MAAmC;EAAA4B,OAAA,EAAnC5B,MAAmC,CAAA6B,IAAA;EAAAC,UAAA,EADtB;AAAM;AAsDhC,OAAO,MAAMC,4BAA4B,GAAGjC,aAAa,CAACE,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}