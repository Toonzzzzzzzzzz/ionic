{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreFileUploaderHelper } from '@features/fileuploader/services/fileuploader-helper';\nimport { AddonPrivateFiles } from './privatefiles';\nimport { CoreError } from '@classes/errors/error';\nimport { makeSingleton, Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Service that provides some helper functions regarding private and site files.\n */\nexport class AddonPrivateFilesHelperProvider {\n  /**\n   * Select a file, upload it and move it to private files.\n   *\n   * @param info Private files info. See AddonPrivateFilesProvider.getPrivateFilesInfo.\n   * @returns Promise resolved when a file is uploaded, rejected otherwise.\n   */\n  uploadPrivateFile(info) {\n    return _asyncToGenerator(function* () {\n      var _currentSite$getInfo, _currentSite$getInfo2;\n      // Calculate the max size.\n      const currentSite = CoreSites.getCurrentSite();\n      let maxSize = (currentSite === null || currentSite === void 0 || (_currentSite$getInfo = currentSite.getInfo()) === null || _currentSite$getInfo === void 0 ? void 0 : _currentSite$getInfo.usermaxuploadfilesize) || -1;\n      let userQuota = currentSite === null || currentSite === void 0 || (_currentSite$getInfo2 = currentSite.getInfo()) === null || _currentSite$getInfo2 === void 0 ? void 0 : _currentSite$getInfo2.userquota;\n      if (userQuota === 0) {\n        // 0 means ignore user quota. In the app it is -1.\n        userQuota = -1;\n      } else if (userQuota !== undefined && userQuota > 0 && info !== undefined) {\n        userQuota = userQuota - info.filesizewithoutreferences;\n      }\n      if (userQuota !== undefined) {\n        // Use the minimum value.\n        maxSize = Math.min(maxSize, userQuota);\n      }\n      // Select and upload the file.\n      const result = yield CoreFileUploaderHelper.selectAndUploadFile(maxSize);\n      if (!result) {\n        throw new CoreError(Translate.instant('core.fileuploader.errorwhileuploading'));\n      }\n      // File uploaded. Move it to private files.\n      const modal = yield CoreDomUtils.showModalLoading('core.fileuploader.uploading', true);\n      try {\n        yield AddonPrivateFiles.moveFromDraftToPrivate(result.itemid);\n        CoreDomUtils.showToast('core.fileuploader.fileuploaded', true, undefined, 'core-toast-success');\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n}\n_class = AddonPrivateFilesHelperProvider;\n_class.ɵfac = function AddonPrivateFilesHelperProvider_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonPrivateFilesHelper = makeSingleton(AddonPrivateFilesHelperProvider);","map":{"version":3,"names":["CoreSites","CoreDomUtils","CoreFileUploaderHelper","AddonPrivateFiles","CoreError","makeSingleton","Translate","AddonPrivateFilesHelperProvider","uploadPrivateFile","info","_asyncToGenerator","_currentSite$getInfo","_currentSite$getInfo2","currentSite","getCurrentSite","maxSize","getInfo","usermaxuploadfilesize","userQuota","userquota","undefined","filesizewithoutreferences","Math","min","result","selectAndUploadFile","instant","modal","showModalLoading","moveFromDraftToPrivate","itemid","showToast","dismiss","factory","ɵfac","providedIn","AddonPrivateFilesHelper"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/privatefiles/services/privatefiles-helper.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreFileUploaderHelper } from '@features/fileuploader/services/fileuploader-helper';\nimport { AddonPrivateFiles, AddonPrivateFilesGetUserInfoWSResult } from './privatefiles';\nimport { CoreError } from '@classes/errors/error';\nimport { makeSingleton, Translate } from '@singletons';\n\n/**\n * Service that provides some helper functions regarding private and site files.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonPrivateFilesHelperProvider {\n\n    /**\n     * Select a file, upload it and move it to private files.\n     *\n     * @param info Private files info. See AddonPrivateFilesProvider.getPrivateFilesInfo.\n     * @returns Promise resolved when a file is uploaded, rejected otherwise.\n     */\n    async uploadPrivateFile(info?: AddonPrivateFilesGetUserInfoWSResult): Promise<void> {\n        // Calculate the max size.\n        const currentSite = CoreSites.getCurrentSite();\n        let maxSize = currentSite?.getInfo()?.usermaxuploadfilesize || -1;\n        let userQuota = currentSite?.getInfo()?.userquota;\n\n        if (userQuota === 0) {\n            // 0 means ignore user quota. In the app it is -1.\n            userQuota = -1;\n        } else if (userQuota !== undefined && userQuota > 0 && info !== undefined) {\n            userQuota = userQuota - info.filesizewithoutreferences;\n        }\n\n        if (userQuota !== undefined) {\n            // Use the minimum value.\n            maxSize = Math.min(maxSize, userQuota);\n        }\n\n        // Select and upload the file.\n        const result = await CoreFileUploaderHelper.selectAndUploadFile(maxSize);\n\n        if (!result) {\n            throw new CoreError(Translate.instant('core.fileuploader.errorwhileuploading'));\n        }\n\n        // File uploaded. Move it to private files.\n        const modal = await CoreDomUtils.showModalLoading('core.fileuploader.uploading', true);\n\n        try {\n            await AddonPrivateFiles.moveFromDraftToPrivate(result.itemid);\n\n            CoreDomUtils.showToast('core.fileuploader.fileuploaded', true, undefined, 'core-toast-success');\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n}\n\nexport const AddonPrivateFilesHelper = makeSingleton(AddonPrivateFilesHelperProvider);\n"],"mappings":";;AAgBA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,sBAAsB,QAAQ,qDAAqD;AAC5F,SAASC,iBAAiB,QAA8C,gBAAgB;AACxF,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,aAAa,EAAEC,SAAS,QAAQ,aAAa;;AAEtD;;;AAIA,OAAM,MAAOC,+BAA+B;EAExC;;;;;;EAMMC,iBAAiBA,CAACC,IAA2C;IAAA,OAAAC,iBAAA;MAAA,IAAAC,oBAAA,EAAAC,qBAAA;MAC/D;MACA,MAAMC,WAAW,GAAGb,SAAS,CAACc,cAAc,EAAE;MAC9C,IAAIC,OAAO,GAAG,CAAAF,WAAW,aAAXA,WAAW,gBAAAF,oBAAA,GAAXE,WAAW,CAAEG,OAAO,EAAE,cAAAL,oBAAA,uBAAtBA,oBAAA,CAAwBM,qBAAqB,KAAI,CAAC,CAAC;MACjE,IAAIC,SAAS,GAAGL,WAAW,aAAXA,WAAW,gBAAAD,qBAAA,GAAXC,WAAW,CAAEG,OAAO,EAAE,cAAAJ,qBAAA,uBAAtBA,qBAAA,CAAwBO,SAAS;MAEjD,IAAID,SAAS,KAAK,CAAC,EAAE;QACjB;QACAA,SAAS,GAAG,CAAC,CAAC;OACjB,MAAM,IAAIA,SAAS,KAAKE,SAAS,IAAIF,SAAS,GAAG,CAAC,IAAIT,IAAI,KAAKW,SAAS,EAAE;QACvEF,SAAS,GAAGA,SAAS,GAAGT,IAAI,CAACY,yBAAyB;;MAG1D,IAAIH,SAAS,KAAKE,SAAS,EAAE;QACzB;QACAL,OAAO,GAAGO,IAAI,CAACC,GAAG,CAACR,OAAO,EAAEG,SAAS,CAAC;;MAG1C;MACA,MAAMM,MAAM,SAAStB,sBAAsB,CAACuB,mBAAmB,CAACV,OAAO,CAAC;MAExE,IAAI,CAACS,MAAM,EAAE;QACT,MAAM,IAAIpB,SAAS,CAACE,SAAS,CAACoB,OAAO,CAAC,uCAAuC,CAAC,CAAC;;MAGnF;MACA,MAAMC,KAAK,SAAS1B,YAAY,CAAC2B,gBAAgB,CAAC,6BAA6B,EAAE,IAAI,CAAC;MAEtF,IAAI;QACA,MAAMzB,iBAAiB,CAAC0B,sBAAsB,CAACL,MAAM,CAACM,MAAM,CAAC;QAE7D7B,YAAY,CAAC8B,SAAS,CAAC,gCAAgC,EAAE,IAAI,EAAEX,SAAS,EAAE,oBAAoB,CAAC;OAClG,SAAS;QACNO,KAAK,CAACK,OAAO,EAAE;;IAClB;EACL;;SA3CSzB,+BAA+B;;mBAA/BA,MAA+B;AAAA;;SAA/BA,MAA+B;EAAA0B,OAAA,EAA/B1B,MAA+B,CAAA2B,IAAA;EAAAC,UAAA,EADlB;AAAM;AAgDhC,OAAO,MAAMC,uBAAuB,GAAG/B,aAAa,CAACE,+BAA+B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}