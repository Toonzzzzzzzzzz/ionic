{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreFile, CoreFileProvider } from '@services/file';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { ModalController, Translate } from '@singletons';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreCaptureError } from '@classes/errors/captureerror';\nimport { CoreCanceledError } from '@classes/errors/cancelederror';\nimport { CorePath } from '@singletons/path';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"streamVideo\"];\nconst _c1 = [\"previewVideo\"];\nconst _c2 = [\"imgCanvas\"];\nconst _c3 = [\"previewImage\"];\nfunction CoreEmulatorCaptureMediaComponent_h1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.title));\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 11);\n    i0.ɵɵlistener(\"click\", function CoreEmulatorCaptureMediaComponent_ion_button_8_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.done());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.done\"));\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_video_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"video\", 12, 13);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r3.hasCaptured);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_canvas_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"canvas\", 14, 15);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_img_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 16, 17);\n    i0.ɵɵpipe(2, \"translate\");\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"alt\", i0.ɵɵpipeBind1(2, 2, \"core.capturedimage\"));\n    i0.ɵɵproperty(\"hidden\", !ctx_r5.hasCaptured);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 25);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 26);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 27);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 2);\n    i0.ɵɵlistener(\"click\", function CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.actionClicked());\n    });\n    i0.ɵɵtemplate(1, CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_1_Template, 1, 0, \"ion-icon\", 22);\n    i0.ɵɵtemplate(2, CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_2_Template, 1, 0, \"ion-icon\", 23);\n    i0.ɵɵtemplate(3, CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_3_Template, 1, 0, \"ion-icon\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", ctx_r12.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.isCapturing && ctx_r12.isVideo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isImage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isCapturing);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 2);\n    i0.ɵɵlistener(\"click\", function CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_5_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.discard());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"core.discard\"));\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_footer_17_core_chrono_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-chrono\", 29);\n    i0.ɵɵlistener(\"onEnd\", function CoreEmulatorCaptureMediaComponent_ion_footer_17_core_chrono_7_Template_core_chrono_onEnd_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.stopCapturing());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r14.hasCaptured)(\"running\", ctx_r14.isCapturing)(\"reset\", ctx_r14.resetChrono)(\"endTime\", ctx_r14.maxTime);\n  }\n}\nfunction CoreEmulatorCaptureMediaComponent_ion_footer_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-footer\")(1, \"ion-row\");\n    i0.ɵɵelement(2, \"ion-col\");\n    i0.ɵɵelementStart(3, \"ion-col\", 18);\n    i0.ɵɵtemplate(4, CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_Template, 4, 4, \"ion-button\", 19);\n    i0.ɵɵtemplate(5, CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_5_Template, 3, 3, \"ion-button\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-col\", 20);\n    i0.ɵɵtemplate(7, CoreEmulatorCaptureMediaComponent_ion_footer_17_core_chrono_7_Template, 1, 4, \"core-chrono\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.hasCaptured);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.hasCaptured);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.isImage);\n  }\n}\n/**\n * Page to capture media in browser.\n */\nexport class CoreEmulatorCaptureMediaComponent {\n  constructor(changeDetectorRef) {\n    this.changeDetectorRef = changeDetectorRef;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.initVariables();\n    this.initHtmlCapture();\n  }\n  /**\n   * Initialize some variables based on the params.\n   */\n  initVariables() {\n    this.facingMode = this.facingMode || 'environment';\n    this.quality = this.quality || 0.92;\n    if (this.type == 'captureimage') {\n      this.isCaptureImage = true;\n      this.type = 'image';\n    }\n    // Initialize some data based on the type of media to capture.\n    if (this.type == 'video') {\n      this.isVideo = true;\n      this.title = 'core.capturevideo';\n    } else if (this.type == 'image') {\n      this.isImage = true;\n      this.title = 'core.captureimage';\n    }\n  }\n  /**\n   * Init HTML recorder for browser\n   * .\n   *\n   * @returns Promise resolved when done.\n   */\n  initHtmlCapture() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const constraints = {\n        video: {\n          facingMode: _this.facingMode\n        }\n      };\n      try {\n        const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n        let chunks = [];\n        _this.localMediaStream = stream;\n        if (!_this.isImage) {\n          if (_this.isVideo) {\n            var _this$previewVideo;\n            _this.previewMedia = (_this$previewVideo = _this.previewVideo) === null || _this$previewVideo === void 0 ? void 0 : _this$previewVideo.nativeElement;\n          }\n          _this.mediaRecorder = new MediaRecorder(_this.localMediaStream, {\n            mimeType: _this.mimetype\n          });\n          // When video is recorded, add it to the list of chunks.\n          _this.mediaRecorder.ondataavailable = e => {\n            if (e.data.size > 0) {\n              chunks.push(e.data);\n            }\n          };\n          // When recording stops, create a Blob element with the recording and set it to the video.\n          _this.mediaRecorder.onstop = () => {\n            _this.mediaBlob = new Blob(chunks);\n            chunks = [];\n            if (_this.previewMedia) {\n              _this.previewMedia.src = window.URL.createObjectURL(_this.mediaBlob);\n            }\n          };\n        }\n        if (!_this.isImage && !_this.isVideo) {\n          // It's ready to capture.\n          _this.readyToCapture = true;\n          return;\n        }\n        const streamVideo = _this.streamVideo;\n        if (!streamVideo) {\n          throw new CoreError('Video element not found.');\n        }\n        let hasLoaded = false;\n        // If stream isn't ready in a while, show error.\n        const waitTimeout = window.setTimeout(() => {\n          if (!hasLoaded) {\n            // Show error.\n            hasLoaded = true;\n            _this.dismissWithError(-1, 'Cannot connect to webcam.');\n          }\n        }, 10000);\n        // Listen for stream ready to display the stream.\n        streamVideo.nativeElement.onloadedmetadata = () => {\n          if (hasLoaded) {\n            // Already loaded or timeout triggered, stop.\n            return;\n          }\n          hasLoaded = true;\n          clearTimeout(waitTimeout);\n          _this.readyToCapture = true;\n          streamVideo.nativeElement.onloadedmetadata = null;\n          // Force change detection. Angular doesn't detect these async operations.\n          _this.changeDetectorRef.detectChanges();\n        };\n        // Set the stream as the source of the video.\n        streamVideo.nativeElement.srcObject = _this.localMediaStream;\n      } catch (error) {\n        _this.dismissWithError(-1, error.message || error);\n      }\n    })();\n  }\n  /**\n   * Main action clicked: record or stop recording.\n   */\n  actionClicked() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.isCapturing) {\n        // It's capturing, stop.\n        _this2.stopCapturing();\n        _this2.changeDetectorRef.detectChanges();\n        return;\n      }\n      if (!_this2.isImage) {\n        var _this2$mediaRecorder;\n        // Start the capture.\n        _this2.isCapturing = true;\n        _this2.resetChrono = false;\n        (_this2$mediaRecorder = _this2.mediaRecorder) === null || _this2$mediaRecorder === void 0 || _this2$mediaRecorder.start();\n        _this2.changeDetectorRef.detectChanges();\n      } else {\n        var _this2$streamVideo, _this2$streamVideo2, _this2$streamVideo3;\n        if (!_this2.imgCanvas) {\n          return;\n        }\n        // Get the image from the video and set it to the canvas, using video width/height.\n        const width = (_this2$streamVideo = _this2.streamVideo) === null || _this2$streamVideo === void 0 ? void 0 : _this2$streamVideo.nativeElement.videoWidth;\n        const height = (_this2$streamVideo2 = _this2.streamVideo) === null || _this2$streamVideo2 === void 0 ? void 0 : _this2$streamVideo2.nativeElement.videoHeight;\n        const loadingModal = yield CoreDomUtils.showModalLoading();\n        _this2.imgCanvas.nativeElement.width = width;\n        _this2.imgCanvas.nativeElement.height = height;\n        _this2.imgCanvas.nativeElement.getContext('2d').drawImage((_this2$streamVideo3 = _this2.streamVideo) === null || _this2$streamVideo3 === void 0 ? void 0 : _this2$streamVideo3.nativeElement, 0, 0, width, height);\n        // Convert the image to blob and show it in an image element.\n        _this2.imgCanvas.nativeElement.toBlob(blob => {\n          var _this2$previewImage;\n          loadingModal.dismiss();\n          _this2.mediaBlob = blob;\n          (_this2$previewImage = _this2.previewImage) === null || _this2$previewImage === void 0 || _this2$previewImage.nativeElement.setAttribute('src', window.URL.createObjectURL(_this2.mediaBlob));\n          _this2.hasCaptured = true;\n        }, _this2.mimetype, _this2.quality);\n      }\n    })();\n  }\n  /**\n   * User cancelled.\n   */\n  cancel() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.hasCaptured) {\n        try {\n          yield CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        } catch (_unused) {\n          // Canceled.\n          return;\n        }\n      }\n      // Send a \"cancelled\" error like the Cordova plugin does.\n      _this3.dismissWithCanceledError('Canceled.', 'Camera cancelled');\n    })();\n  }\n  /**\n   * Discard the captured media.\n   */\n  discard() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _this4$previewMedia, _this4$streamVideo;\n      (_this4$previewMedia = _this4.previewMedia) === null || _this4$previewMedia === void 0 || _this4$previewMedia.pause();\n      (_this4$streamVideo = _this4.streamVideo) === null || _this4$streamVideo === void 0 || _this4$streamVideo.nativeElement.play();\n      _this4.hasCaptured = false;\n      _this4.isCapturing = false;\n      _this4.resetChrono = true;\n      delete _this4.mediaBlob;\n      _this4.changeDetectorRef.detectChanges();\n    })();\n  }\n  /**\n   * Close the modal, returning some data (success).\n   *\n   * @param data Data to return.\n   */\n  dismissWithData(data) {\n    ModalController.dismiss(data, 'success');\n  }\n  /**\n   * Close the modal, returning an error.\n   *\n   * @param message Error message.\n   * @param cameraMessage A specific message to use if it's a Camera capture. If not set, message will be used.\n   */\n  dismissWithCanceledError(message, cameraMessage) {\n    const isCamera = this.isImage && !this.isCaptureImage;\n    const error = isCamera ? new CoreCanceledError(cameraMessage || message) : new CoreCaptureError(3, message);\n    ModalController.dismiss(error, 'error');\n  }\n  /**\n   * Close the modal, returning an error.\n   *\n   * @param code Error code. Will not be used if it's a Camera capture.\n   * @param message Error message.\n   * @param cameraMessage A specific message to use if it's a Camera capture. If not set, message will be used.\n   */\n  dismissWithError(code, message, cameraMessage) {\n    const isCamera = this.isImage && !this.isCaptureImage;\n    const error = isCamera ? new CoreError(cameraMessage || message) : new CoreCaptureError(code, message);\n    ModalController.dismiss(error, 'error');\n  }\n  /**\n   * Done capturing, write the file.\n   */\n  done() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (_this5.returnDataUrl) {\n        var _this5$imgCanvas;\n        // Return the image as a base64 string.\n        _this5.dismissWithData(((_this5$imgCanvas = _this5.imgCanvas) === null || _this5$imgCanvas === void 0 ? void 0 : _this5$imgCanvas.nativeElement).toDataURL(_this5.mimetype, _this5.quality));\n        return;\n      }\n      if (!_this5.mediaBlob) {\n        // Shouldn't happen.\n        CoreDomUtils.showErrorModal('Please capture the media first.');\n        return;\n      }\n      const loadingModal = yield CoreDomUtils.showModalLoading();\n      try {\n        // Capturing in browser. Write the blob in a file.\n        if (!_this5.mediaBlob) {\n          // Shouldn't happen.\n          throw new Error('Please capture the media first.');\n        }\n        const fileEntry = yield CoreFile.writeFile(_this5.getFilePath(), _this5.mediaBlob);\n        if (_this5.isImage && !_this5.isCaptureImage) {\n          _this5.dismissWithData(fileEntry.toURL());\n        } else {\n          // The capture plugin should return a MediaFile, not a FileEntry. Convert it.\n          const metadata = yield CoreFile.getMetadata(fileEntry);\n          let mimetype;\n          if (_this5.extension) {\n            mimetype = CoreMimetypeUtils.getMimeType(_this5.extension);\n          }\n          const mediaFile = {\n            name: fileEntry.name,\n            fullPath: fileEntry.nativeURL || fileEntry.fullPath,\n            type: mimetype || '',\n            lastModifiedDate: metadata.modificationTime,\n            size: metadata.size,\n            getFormatData: () => {\n              // Nothing to do.\n            }\n          };\n          _this5.dismissWithData([mediaFile]);\n        }\n      } catch (err) {\n        CoreDomUtils.showErrorModal(err);\n      } finally {\n        loadingModal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Get path to the file where the media will be stored.\n   *\n   * @returns Path.\n   */\n  getFilePath() {\n    const fileName = this.type + '_' + CoreTimeUtils.readableTimestamp() + '.' + this.extension;\n    return CorePath.concatenatePaths(CoreFileProvider.TMPFOLDER, 'media/' + fileName);\n  }\n  /**\n   * Stop capturing. Only for video.\n   */\n  stopCapturing() {\n    this.isCapturing = false;\n    this.hasCaptured = true;\n    this.streamVideo && this.streamVideo.nativeElement.pause();\n    this.mediaRecorder && this.mediaRecorder.stop();\n  }\n  /**\n   * Page destroyed.\n   */\n  ngOnDestroy() {\n    var _this$streamVideo, _this$previewMedia;\n    if (this.localMediaStream) {\n      const tracks = this.localMediaStream.getTracks();\n      tracks.forEach(track => {\n        track.stop();\n      });\n    }\n    (_this$streamVideo = this.streamVideo) === null || _this$streamVideo === void 0 || _this$streamVideo.nativeElement.pause();\n    (_this$previewMedia = this.previewMedia) === null || _this$previewMedia === void 0 || _this$previewMedia.pause();\n    delete this.mediaBlob;\n  }\n}\n_class = CoreEmulatorCaptureMediaComponent;\n_class.ɵfac = function CoreEmulatorCaptureMediaComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-emulator-capture-media\"]],\n  viewQuery: function CoreEmulatorCaptureMediaComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.streamVideo = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previewVideo = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imgCanvas = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previewImage = _t.first);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    maxTime: \"maxTime\",\n    facingMode: \"facingMode\",\n    mimetype: \"mimetype\",\n    extension: \"extension\",\n    quality: \"quality\",\n    returnDataUrl: \"returnDataUrl\"\n  },\n  decls: 18,\n  vars: 11,\n  consts: [[4, \"ngIf\"], [\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [3, \"click\", 4, \"ngIf\"], [3, \"hideUntil\"], [1, \"core-av-wrapper\"], [\"autoplay\", \"\", 1, \"core-webcam-stream\", 3, \"hidden\"], [\"streamVideo\", \"\"], [\"class\", \"core-webcam-video-captured\", \"controls\", \"\", \"controlsList\", \"nodownload\", 3, \"hidden\", 4, \"ngIf\"], [\"class\", \"core-webcam-image-canvas\", 4, \"ngIf\"], [\"class\", \"core-webcam-image\", 3, \"hidden\", \"alt\", 4, \"ngIf\"], [3, \"click\"], [\"controls\", \"\", \"controlsList\", \"nodownload\", 1, \"core-webcam-video-captured\", 3, \"hidden\"], [\"previewVideo\", \"\"], [1, \"core-webcam-image-canvas\"], [\"imgCanvas\", \"\"], [1, \"core-webcam-image\", 3, \"hidden\", \"alt\"], [\"previewImage\", \"\"], [1, \"ion-text-center\"], [\"fill\", \"clear\", 3, \"click\", 4, \"ngIf\"], [1, \"ion-padding\", \"ion-text-end\", \"chrono-container\"], [3, \"hidden\", \"running\", \"reset\", \"endTime\", \"onEnd\", 4, \"ngIf\"], [\"name\", \"fas-video\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"name\", \"fas-camera\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"name\", \"fas-square\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"name\", \"fas-video\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"name\", \"fas-camera\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"name\", \"fas-square\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"color\", \"danger\", \"name\", \"fas-trash\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"hidden\", \"running\", \"reset\", \"endTime\", \"onEnd\"]],\n  template: function CoreEmulatorCaptureMediaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtemplate(3, CoreEmulatorCaptureMediaComponent_h1_3_Template, 3, 3, \"h1\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-buttons\", 1)(5, \"ion-button\", 2);\n      i0.ɵɵlistener(\"click\", function CoreEmulatorCaptureMediaComponent_Template_ion_button_click_5_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, CoreEmulatorCaptureMediaComponent_ion_button_8_Template, 3, 3, \"ion-button\", 3);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"core-loading\", 4)(11, \"div\", 5);\n      i0.ɵɵelement(12, \"video\", 6, 7);\n      i0.ɵɵtemplate(14, CoreEmulatorCaptureMediaComponent_video_14_Template, 2, 1, \"video\", 8);\n      i0.ɵɵtemplate(15, CoreEmulatorCaptureMediaComponent_canvas_15_Template, 2, 0, \"canvas\", 9);\n      i0.ɵɵtemplate(16, CoreEmulatorCaptureMediaComponent_img_16_Template, 3, 4, \"img\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(17, CoreEmulatorCaptureMediaComponent_ion_footer_17_Template, 8, 3, \"ion-footer\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 9, \"core.cancel\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasCaptured);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.readyToCapture);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", ctx.hasCaptured);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isVideo);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isImage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isImage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.readyToCapture);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n}\\n[_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   .core-webcam-image-canvas[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n[_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   .core-audio-record-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n}\\n[_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   .core-audio-record-container[_ngcontent-%COMP%]   .core-audio-canvas[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n}\\n[_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   .core-audio-record-container[_ngcontent-%COMP%]   .core-audio-captured[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n[_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   video[_ngcontent-%COMP%], [_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  display: table-cell;\\n  text-align: center;\\n  vertical-align: middle;\\n  object-fit: contain;\\n}\\n[_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   video.core-webcam-stream[_ngcontent-%COMP%], [_nghost-%COMP%]   .core-av-wrapper[_ngcontent-%COMP%]   img.core-webcam-stream[_ngcontent-%COMP%] {\\n  transform: scaleX(-1);\\n}\\n[_nghost-%COMP%]   ion-footer[_ngcontent-%COMP%] {\\n  background-color: var(--gray-300);\\n  border-top: 1px solid var(--gray-500);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL2VtdWxhdG9yL2NvbXBvbmVudHMvY2FwdHVyZS1tZWRpYS9jYXB0dXJlLW1lZGlhLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQUFSO0FBRVE7RUFDSSxhQUFBO0FBQVo7QUFHUTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7QUFEWjtBQUdZO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFEaEI7QUFJWTtFQUNJLFdBQUE7QUFGaEI7QUFPUTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFMWjtBQU9ZO0VBRUkscUJBQUE7QUFMaEI7QUFVSTtFQUNJLGlDQUFBO0VBQ0EscUNBQUE7QUFSUiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICAuY29yZS1hdi13cmFwcGVyIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgICAuY29yZS13ZWJjYW0taW1hZ2UtY2FudmFzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAuY29yZS1hdWRpby1yZWNvcmQtY29udGFpbmVyIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICAgICAuY29yZS1hdWRpby1jYW52YXMge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLmNvcmUtYXVkaW8tY2FwdHVyZWQge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICB2aWRlbywgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb250YWluO1xuXG4gICAgICAgICAgICAmLmNvcmUtd2ViY2FtLXN0cmVhbSB7XG4gICAgICAgICAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgtMSk7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoLTEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaW9uLWZvb3RlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXktMzAwKTtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLWdyYXktNTAwKTtcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["CoreFile","CoreFileProvider","CoreDomUtils","CoreMimetypeUtils","CoreTimeUtils","ModalController","Translate","CoreError","CoreCaptureError","CoreCanceledError","CorePath","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r0","title","ɵɵlistener","CoreEmulatorCaptureMediaComponent_ion_button_8_Template_ion_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","done","ɵɵelement","ɵɵproperty","ctx_r3","hasCaptured","ɵɵpropertyInterpolate","ctx_r5","CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_Template_ion_button_click_0_listener","_r19","ctx_r18","actionClicked","ɵɵtemplate","CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_1_Template","CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_2_Template","CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_ion_icon_3_Template","ɵɵattribute","ctx_r12","isCapturing","isVideo","isImage","CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_5_Template_ion_button_click_0_listener","_r21","ctx_r20","discard","CoreEmulatorCaptureMediaComponent_ion_footer_17_core_chrono_7_Template_core_chrono_onEnd_0_listener","_r23","ctx_r22","stopCapturing","ctx_r14","resetChrono","maxTime","CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_4_Template","CoreEmulatorCaptureMediaComponent_ion_footer_17_ion_button_5_Template","CoreEmulatorCaptureMediaComponent_ion_footer_17_core_chrono_7_Template","ctx_r6","CoreEmulatorCaptureMediaComponent","constructor","changeDetectorRef","ngOnInit","initVariables","initHtmlCapture","facingMode","quality","type","isCaptureImage","_this","_asyncToGenerator","constraints","video","stream","navigator","mediaDevices","getUserMedia","chunks","localMediaStream","_this$previewVideo","previewMedia","previewVideo","nativeElement","mediaRecorder","MediaRecorder","mimeType","mimetype","ondataavailable","e","data","size","push","onstop","mediaBlob","Blob","src","window","URL","createObjectURL","readyToCapture","streamVideo","hasLoaded","waitTimeout","setTimeout","dismissWithError","onloadedmetadata","clearTimeout","detectChanges","srcObject","error","message","_this2","_this2$mediaRecorder","start","_this2$streamVideo","_this2$streamVideo2","_this2$streamVideo3","imgCanvas","width","videoWidth","height","videoHeight","loadingModal","showModalLoading","getContext","drawImage","toBlob","blob","_this2$previewImage","dismiss","previewImage","setAttribute","cancel","_this3","showConfirm","instant","_unused","dismissWithCanceledError","_this4","_this4$previewMedia","_this4$streamVideo","pause","play","dismissWithData","cameraMessage","isCamera","code","_this5","returnDataUrl","_this5$imgCanvas","toDataURL","showErrorModal","Error","fileEntry","writeFile","getFilePath","toURL","metadata","getMetadata","extension","getMimeType","mediaFile","name","fullPath","nativeURL","lastModifiedDate","modificationTime","getFormatData","err","fileName","readableTimestamp","concatenatePaths","TMPFOLDER","stop","ngOnDestroy","_this$streamVideo","_this$previewMedia","tracks","getTracks","forEach","track","ɵɵdirectiveInject","ChangeDetectorRef","selectors","viewQuery","CoreEmulatorCaptureMediaComponent_Query","rf","ctx","CoreEmulatorCaptureMediaComponent_h1_3_Template","CoreEmulatorCaptureMediaComponent_Template_ion_button_click_5_listener","CoreEmulatorCaptureMediaComponent_ion_button_8_Template","CoreEmulatorCaptureMediaComponent_video_14_Template","CoreEmulatorCaptureMediaComponent_canvas_15_Template","CoreEmulatorCaptureMediaComponent_img_16_Template","CoreEmulatorCaptureMediaComponent_ion_footer_17_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/emulator/components/capture-media/capture-media.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/emulator/components/capture-media/capture-media.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef, ChangeDetectorRef, Input } from '@angular/core';\nimport { MediaFile } from '@awesome-cordova-plugins/media-capture/ngx';\n\nimport { CoreFile, CoreFileProvider } from '@services/file';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { ModalController, Translate } from '@singletons';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreCaptureError } from '@classes/errors/captureerror';\nimport { CoreCanceledError } from '@classes/errors/cancelederror';\nimport { CorePath } from '@singletons/path';\n\n/**\n * Page to capture media in browser.\n */\n@Component({\n    selector: 'core-emulator-capture-media',\n    templateUrl: 'capture-media.html',\n    styleUrls: ['capture-media.scss'],\n})\nexport class CoreEmulatorCaptureMediaComponent implements OnInit, OnDestroy {\n\n    @Input() type?: 'video' | 'image' | 'captureimage';\n    @Input() maxTime?: number; // Max time to capture.\n    @Input() facingMode?: string; // Camera facing mode.\n    @Input() mimetype?: string;\n    @Input() extension?: string;\n    @Input() quality?: number; // Only for images.\n    @Input() returnDataUrl?: boolean; // Whether it should return a data img. Only for images.\n\n    @ViewChild('streamVideo') streamVideo?: ElementRef;\n    @ViewChild('previewVideo') previewVideo?: ElementRef;\n    @ViewChild('imgCanvas') imgCanvas?: ElementRef;\n    @ViewChild('previewImage') previewImage?: ElementRef;\n\n    title?: string; // The title of the page.\n    isVideo?: boolean; // Whether it should capture video.\n    isImage?: boolean; // Whether it should capture image.\n    readyToCapture?: boolean; // Whether it's ready to capture.\n    hasCaptured?: boolean; // Whether it has captured something.\n    isCapturing?: boolean; // Whether it's capturing.\n    resetChrono?: boolean; // Boolean to reset the chrono.\n\n    protected isCaptureImage?: boolean; // To identify if it's capturing an image using media capture plugin (instead of camera).\n    protected mediaRecorder?: MediaRecorder; // To record video.\n    protected previewMedia?: HTMLVideoElement; // The element to preview the video captured.\n    protected mediaBlob?: Blob; // A Blob where the captured data is stored.\n    protected localMediaStream?: MediaStream;\n\n    constructor(\n        protected changeDetectorRef: ChangeDetectorRef,\n    ) {}\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.initVariables();\n        this.initHtmlCapture();\n    }\n\n    /**\n     * Initialize some variables based on the params.\n     */\n    protected initVariables(): void {\n        this.facingMode = this.facingMode || 'environment';\n        this.quality = this.quality || 0.92;\n\n        if (this.type == 'captureimage') {\n            this.isCaptureImage = true;\n            this.type = 'image';\n        }\n\n        // Initialize some data based on the type of media to capture.\n        if (this.type == 'video') {\n            this.isVideo = true;\n            this.title = 'core.capturevideo';\n        } else if (this.type == 'image') {\n            this.isImage = true;\n            this.title = 'core.captureimage';\n        }\n    }\n\n    /**\n     * Init HTML recorder for browser\n     * .\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async initHtmlCapture(): Promise<void> {\n        const constraints = {\n            video: { facingMode: this.facingMode },\n        };\n\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n            let chunks: Blob[] = [];\n            this.localMediaStream = stream;\n\n            if (!this.isImage) {\n                if (this.isVideo) {\n                    this.previewMedia = this.previewVideo?.nativeElement;\n                }\n\n                this.mediaRecorder = new MediaRecorder(this.localMediaStream, { mimeType: this.mimetype });\n\n                // When video is recorded, add it to the list of chunks.\n                this.mediaRecorder.ondataavailable = (e): void => {\n                    if (e.data.size > 0) {\n                        chunks.push(e.data);\n                    }\n                };\n\n                // When recording stops, create a Blob element with the recording and set it to the video.\n                this.mediaRecorder.onstop = (): void => {\n                    this.mediaBlob = new Blob(chunks);\n                    chunks = [];\n\n                    if (this.previewMedia) {\n                        this.previewMedia.src = window.URL.createObjectURL(this.mediaBlob);\n                    }\n                };\n            }\n\n            if (!this.isImage && !this.isVideo) {\n                // It's ready to capture.\n                this.readyToCapture = true;\n\n                return;\n            }\n\n            const streamVideo = this.streamVideo;\n            if (!streamVideo) {\n                throw new CoreError('Video element not found.');\n            }\n\n            let hasLoaded = false;\n\n            // If stream isn't ready in a while, show error.\n            const waitTimeout = window.setTimeout(() => {\n                if (!hasLoaded) {\n                    // Show error.\n                    hasLoaded = true;\n                    this.dismissWithError(-1, 'Cannot connect to webcam.');\n                }\n            }, 10000);\n\n            // Listen for stream ready to display the stream.\n            streamVideo.nativeElement.onloadedmetadata = (): void => {\n                if (hasLoaded) {\n                    // Already loaded or timeout triggered, stop.\n                    return;\n                }\n\n                hasLoaded = true;\n                clearTimeout(waitTimeout);\n                this.readyToCapture = true;\n                streamVideo.nativeElement.onloadedmetadata = null;\n                // Force change detection. Angular doesn't detect these async operations.\n                this.changeDetectorRef.detectChanges();\n            };\n\n            // Set the stream as the source of the video.\n            streamVideo.nativeElement.srcObject = this.localMediaStream;\n        } catch (error) {\n            this.dismissWithError(-1, error.message || error);\n        }\n    }\n\n    /**\n     * Main action clicked: record or stop recording.\n     */\n    async actionClicked(): Promise<void> {\n        if (this.isCapturing) {\n            // It's capturing, stop.\n            this.stopCapturing();\n            this.changeDetectorRef.detectChanges();\n\n            return;\n        }\n\n        if (!this.isImage) {\n            // Start the capture.\n            this.isCapturing = true;\n            this.resetChrono = false;\n\n            this.mediaRecorder?.start();\n            this.changeDetectorRef.detectChanges();\n        } else {\n            if (!this.imgCanvas) {\n                return;\n            }\n\n            // Get the image from the video and set it to the canvas, using video width/height.\n            const width = this.streamVideo?.nativeElement.videoWidth;\n            const height = this.streamVideo?.nativeElement.videoHeight;\n            const loadingModal = await CoreDomUtils.showModalLoading();\n\n            this.imgCanvas.nativeElement.width = width;\n            this.imgCanvas.nativeElement.height = height;\n            this.imgCanvas.nativeElement.getContext('2d').drawImage(this.streamVideo?.nativeElement, 0, 0, width, height);\n\n            // Convert the image to blob and show it in an image element.\n            this.imgCanvas.nativeElement.toBlob((blob: Blob) => {\n                loadingModal.dismiss();\n\n                this.mediaBlob = blob;\n                this.previewImage?.nativeElement.setAttribute('src', window.URL.createObjectURL(this.mediaBlob));\n                this.hasCaptured = true;\n            }, this.mimetype, this.quality);\n        }\n    }\n\n    /**\n     * User cancelled.\n     */\n    async cancel(): Promise<void> {\n        if (this.hasCaptured) {\n            try {\n                await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n            } catch {\n                // Canceled.\n                return;\n            }\n        }\n\n        // Send a \"cancelled\" error like the Cordova plugin does.\n        this.dismissWithCanceledError('Canceled.', 'Camera cancelled');\n    }\n\n    /**\n     * Discard the captured media.\n     */\n    async discard(): Promise<void> {\n        this.previewMedia?.pause();\n        this.streamVideo?.nativeElement.play();\n\n        this.hasCaptured = false;\n        this.isCapturing = false;\n        this.resetChrono = true;\n        delete this.mediaBlob;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * Close the modal, returning some data (success).\n     *\n     * @param data Data to return.\n     */\n    dismissWithData(data?: [MediaFile] | string): void {\n        ModalController.dismiss(data, 'success');\n    }\n\n    /**\n     * Close the modal, returning an error.\n     *\n     * @param message Error message.\n     * @param cameraMessage A specific message to use if it's a Camera capture. If not set, message will be used.\n     */\n    dismissWithCanceledError(message: string, cameraMessage?: string): void {\n        const isCamera = this.isImage && !this.isCaptureImage;\n        const error = isCamera ? new CoreCanceledError(cameraMessage || message) : new CoreCaptureError(3, message);\n\n        ModalController.dismiss(error, 'error');\n    }\n\n    /**\n     * Close the modal, returning an error.\n     *\n     * @param code Error code. Will not be used if it's a Camera capture.\n     * @param message Error message.\n     * @param cameraMessage A specific message to use if it's a Camera capture. If not set, message will be used.\n     */\n    dismissWithError(code: number, message: string, cameraMessage?: string): void {\n        const isCamera = this.isImage && !this.isCaptureImage;\n        const error = isCamera ? new CoreError(cameraMessage || message) : new CoreCaptureError(code, message);\n\n        ModalController.dismiss(error, 'error');\n    }\n\n    /**\n     * Done capturing, write the file.\n     */\n    async done(): Promise<void> {\n        if (this.returnDataUrl) {\n            // Return the image as a base64 string.\n            this.dismissWithData((<HTMLCanvasElement> this.imgCanvas?.nativeElement).toDataURL(this.mimetype, this.quality));\n\n            return;\n        }\n\n        if (!this.mediaBlob) {\n            // Shouldn't happen.\n            CoreDomUtils.showErrorModal('Please capture the media first.');\n\n            return;\n        }\n\n        const loadingModal = await CoreDomUtils.showModalLoading();\n\n        try {\n            // Capturing in browser. Write the blob in a file.\n            if (!this.mediaBlob) {\n                // Shouldn't happen.\n                throw new Error('Please capture the media first.');\n            }\n\n            const fileEntry = await CoreFile.writeFile(this.getFilePath(), this.mediaBlob);\n\n            if (this.isImage && !this.isCaptureImage) {\n                this.dismissWithData(fileEntry.toURL());\n            } else {\n                // The capture plugin should return a MediaFile, not a FileEntry. Convert it.\n                const metadata = await CoreFile.getMetadata(fileEntry);\n\n                let mimetype: string | undefined;\n                if (this.extension) {\n                    mimetype = CoreMimetypeUtils.getMimeType(this.extension);\n                }\n\n                const mediaFile: MediaFile = {\n                    name: fileEntry.name,\n                    fullPath: fileEntry.nativeURL || fileEntry.fullPath,\n                    type: mimetype || '',\n                    lastModifiedDate: metadata.modificationTime,\n                    size: metadata.size,\n                    getFormatData: (): void => {\n                        // Nothing to do.\n                    },\n                };\n\n                this.dismissWithData([mediaFile]);\n            }\n        } catch (err) {\n            CoreDomUtils.showErrorModal(err);\n        } finally {\n            loadingModal.dismiss();\n        }\n    }\n\n    /**\n     * Get path to the file where the media will be stored.\n     *\n     * @returns Path.\n     */\n    protected getFilePath(): string {\n        const fileName = this.type + '_' + CoreTimeUtils.readableTimestamp() + '.' + this.extension;\n\n        return CorePath.concatenatePaths(CoreFileProvider.TMPFOLDER, 'media/' + fileName);\n    }\n\n    /**\n     * Stop capturing. Only for video.\n     */\n    stopCapturing(): void {\n        this.isCapturing = false;\n        this.hasCaptured = true;\n\n        this.streamVideo && this.streamVideo.nativeElement.pause();\n        this.mediaRecorder && this.mediaRecorder.stop();\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        if (this.localMediaStream) {\n            const tracks = this.localMediaStream.getTracks();\n            tracks.forEach((track) => {\n                track.stop();\n            });\n        }\n        this.streamVideo?.nativeElement.pause();\n        this.previewMedia?.pause();\n        delete this.mediaBlob;\n    }\n\n}\n\nexport type CaptureMediaComponentInputs = {\n    type: 'video' | 'image' | 'captureimage';\n    maxTime?: number; // Max time to capture.\n    facingMode?: string; // Camera facing mode.\n    mimetype?: string;\n    extension?: string;\n    quality?: number; // Only for images.\n    returnDataUrl?: boolean; // Whether it should return a data img. Only for images.\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-title>\n            <h1 *ngIf=\"title\">{{ title | translate }}</h1>\n        </ion-title>\n\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"cancel()\">{{ 'core.cancel' | translate }}</ion-button>\n            <ion-button *ngIf=\"hasCaptured\" (click)=\"done()\">{{ 'core.done' | translate }}</ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-loading [hideUntil]=\"readyToCapture\">\n        <div class=\"core-av-wrapper\">\n            <!-- Video stream for image and video. -->\n            <video [hidden]=\"hasCaptured\" class=\"core-webcam-stream\" autoplay #streamVideo></video>\n\n            <!-- For video recording, use 2 videos and show/hide them because a CSS rule caused problems with the controls. -->\n            <video *ngIf=\"isVideo\" [hidden]=\"!hasCaptured\" class=\"core-webcam-video-captured\" controls #previewVideo\n                controlsList=\"nodownload\">\n            </video>\n\n            <!-- Canvas to treat the image and an img to show the result. -->\n            <canvas *ngIf=\"isImage\" class=\"core-webcam-image-canvas\" #imgCanvas></canvas>\n            <img *ngIf=\"isImage\" [hidden]=\"!hasCaptured\" class=\"core-webcam-image\" alt=\"{{ 'core.capturedimage' | translate }}\"\n                #previewImage>\n        </div>\n    </core-loading>\n</ion-content>\n\n<ion-footer *ngIf=\"readyToCapture\">\n    <ion-row>\n        <ion-col />\n        <ion-col class=\"ion-text-center\">\n            <ion-button fill=\"clear\" *ngIf=\"!hasCaptured\" (click)=\"actionClicked()\" [attr.aria-label]=\"title\">\n                <ion-icon *ngIf=\"!isCapturing && isVideo\" name=\"fas-video\" slot=\"icon-only\" aria-hidden=\"true\" />\n                <ion-icon *ngIf=\"isImage\" name=\"fas-camera\" slot=\"icon-only\" aria-hidden=\"true\" />\n                <ion-icon *ngIf=\"isCapturing\" name=\"fas-square\" slot=\"icon-only\" aria-hidden=\"true\" />\n            </ion-button>\n            <ion-button fill=\"clear\" *ngIf=\"hasCaptured\" (click)=\"discard()\" [attr.aria-label]=\"'core.discard' | translate\">\n                <ion-icon color=\"danger\" name=\"fas-trash\" slot=\"icon-only\" aria-hidden=\"true\" />\n            </ion-button>\n        </ion-col>\n        <ion-col class=\"ion-padding ion-text-end chrono-container\">\n            <core-chrono *ngIf=\"!isImage\" [hidden]=\"hasCaptured\" [running]=\"isCapturing\" [reset]=\"resetChrono\" [endTime]=\"maxTime\"\n                (onEnd)=\"stopCapturing()\" />\n        </ion-col>\n    </ion-row>\n</ion-footer>\n"],"mappings":";;AAiBA,SAASA,QAAQ,EAAEC,gBAAgB,QAAQ,gBAAgB;AAC3D,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,eAAe,EAAEC,SAAS,QAAQ,aAAa;AACxD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,QAAQ,QAAQ,kBAAkB;;;;;;;;ICtB/BC,EAAA,CAAAC,cAAA,SAAkB;IAAAD,EAAA,CAAAE,MAAA,GAAuB;;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAA5BH,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAM,WAAA,OAAAC,MAAA,CAAAC,KAAA,EAAuB;;;;;;IAKzCR,EAAA,CAAAC,cAAA,qBAAiD;IAAjBD,EAAA,CAAAS,UAAA,mBAAAC,oFAAA;MAAAV,EAAA,CAAAW,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAb,EAAA,CAAAc,aAAA;MAAA,OAASd,EAAA,CAAAe,WAAA,CAAAF,MAAA,CAAAG,IAAA,EAAM;IAAA,EAAC;IAAChB,EAAA,CAAAE,MAAA,GAA6B;;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;IAA1CH,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAM,WAAA,oBAA6B;;;;;IAW9EN,EAAA,CAAAiB,SAAA,oBAEQ;;;;IAFejB,EAAA,CAAAkB,UAAA,YAAAC,MAAA,CAAAC,WAAA,CAAuB;;;;;IAK9CpB,EAAA,CAAAiB,SAAA,qBAA6E;;;;;IAC7EjB,EAAA,CAAAiB,SAAA,kBACkB;;;;;IADqDjB,EAAA,CAAAqB,qBAAA,QAAArB,EAAA,CAAAM,WAAA,6BAA4C;IAA9FN,EAAA,CAAAkB,UAAA,YAAAI,MAAA,CAAAF,WAAA,CAAuB;;;;;IAWxCpB,EAAA,CAAAiB,SAAA,mBAAiG;;;;;IACjGjB,EAAA,CAAAiB,SAAA,mBAAkF;;;;;IAClFjB,EAAA,CAAAiB,SAAA,mBAAsF;;;;;;IAH1FjB,EAAA,CAAAC,cAAA,oBAAkG;IAApDD,EAAA,CAAAS,UAAA,mBAAAc,kGAAA;MAAAvB,EAAA,CAAAW,aAAA,CAAAa,IAAA;MAAA,MAAAC,OAAA,GAAAzB,EAAA,CAAAc,aAAA;MAAA,OAASd,EAAA,CAAAe,WAAA,CAAAU,OAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IACnE1B,EAAA,CAAA2B,UAAA,IAAAC,gFAAA,uBAAiG;IACjG5B,EAAA,CAAA2B,UAAA,IAAAE,gFAAA,uBAAkF;IAClF7B,EAAA,CAAA2B,UAAA,IAAAG,gFAAA,uBAAsF;IAC1F9B,EAAA,CAAAG,YAAA,EAAa;;;;IAJ2DH,EAAA,CAAA+B,WAAA,eAAAC,OAAA,CAAAxB,KAAA,CAAyB;IAClFR,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAkB,UAAA,UAAAc,OAAA,CAAAC,WAAA,IAAAD,OAAA,CAAAE,OAAA,CAA6B;IAC7BlC,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAkB,UAAA,SAAAc,OAAA,CAAAG,OAAA,CAAa;IACbnC,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAkB,UAAA,SAAAc,OAAA,CAAAC,WAAA,CAAiB;;;;;;IAEhCjC,EAAA,CAAAC,cAAA,oBAAgH;IAAnED,EAAA,CAAAS,UAAA,mBAAA2B,kGAAA;MAAApC,EAAA,CAAAW,aAAA,CAAA0B,IAAA;MAAA,MAAAC,OAAA,GAAAtC,EAAA,CAAAc,aAAA;MAAA,OAASd,EAAA,CAAAe,WAAA,CAAAuB,OAAA,CAAAC,OAAA,EAAS;IAAA,EAAC;;IAC5DvC,EAAA,CAAAiB,SAAA,mBAAgF;IACpFjB,EAAA,CAAAG,YAAA,EAAa;;;IAFoDH,EAAA,CAAA+B,WAAA,eAAA/B,EAAA,CAAAM,WAAA,uBAA8C;;;;;;IAK/GN,EAAA,CAAAC,cAAA,sBACgC;IAA5BD,EAAA,CAAAS,UAAA,mBAAA+B,oGAAA;MAAAxC,EAAA,CAAAW,aAAA,CAAA8B,IAAA;MAAA,MAAAC,OAAA,GAAA1C,EAAA,CAAAc,aAAA;MAAA,OAASd,EAAA,CAAAe,WAAA,CAAA2B,OAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAD7B3C,EAAA,CAAAG,YAAA,EACgC;;;;IADFH,EAAA,CAAAkB,UAAA,WAAA0B,OAAA,CAAAxB,WAAA,CAAsB,YAAAwB,OAAA,CAAAX,WAAA,WAAAW,OAAA,CAAAC,WAAA,aAAAD,OAAA,CAAAE,OAAA;;;;;IAdhE9C,EAAA,CAAAC,cAAA,iBAAmC;IAE3BD,EAAA,CAAAiB,SAAA,cAAW;IACXjB,EAAA,CAAAC,cAAA,kBAAiC;IAC7BD,EAAA,CAAA2B,UAAA,IAAAoB,qEAAA,yBAIa;IACb/C,EAAA,CAAA2B,UAAA,IAAAqB,qEAAA,yBAEa;IACjBhD,EAAA,CAAAG,YAAA,EAAU;IACVH,EAAA,CAAAC,cAAA,kBAA2D;IACvDD,EAAA,CAAA2B,UAAA,IAAAsB,sEAAA,0BACgC;IACpCjD,EAAA,CAAAG,YAAA,EAAU;;;;IAZoBH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAkB,UAAA,UAAAgC,MAAA,CAAA9B,WAAA,CAAkB;IAKlBpB,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAkB,UAAA,SAAAgC,MAAA,CAAA9B,WAAA,CAAiB;IAK7BpB,EAAA,CAAAI,SAAA,GAAc;IAAdJ,EAAA,CAAAkB,UAAA,UAAAgC,MAAA,CAAAf,OAAA,CAAc;;;ADlBxC;;;AAQA,OAAM,MAAOgB,iCAAiC;EA6B1CC,YACcC,iBAAoC;IAApC,KAAAA,iBAAiB,GAAjBA,iBAAiB;EAC5B;EAEH;;;EAGAC,QAAQA,CAAA;IACJ,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,eAAe,EAAE;EAC1B;EAEA;;;EAGUD,aAAaA,CAAA;IACnB,IAAI,CAACE,UAAU,GAAG,IAAI,CAACA,UAAU,IAAI,aAAa;IAClD,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,IAAI;IAEnC,IAAI,IAAI,CAACC,IAAI,IAAI,cAAc,EAAE;MAC7B,IAAI,CAACC,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACD,IAAI,GAAG,OAAO;;IAGvB;IACA,IAAI,IAAI,CAACA,IAAI,IAAI,OAAO,EAAE;MACtB,IAAI,CAACzB,OAAO,GAAG,IAAI;MACnB,IAAI,CAAC1B,KAAK,GAAG,mBAAmB;KACnC,MAAM,IAAI,IAAI,CAACmD,IAAI,IAAI,OAAO,EAAE;MAC7B,IAAI,CAACxB,OAAO,GAAG,IAAI;MACnB,IAAI,CAAC3B,KAAK,GAAG,mBAAmB;;EAExC;EAEA;;;;;;EAMgBgD,eAAeA,CAAA;IAAA,IAAAK,KAAA;IAAA,OAAAC,iBAAA;MAC3B,MAAMC,WAAW,GAAG;QAChBC,KAAK,EAAE;UAAEP,UAAU,EAAEI,KAAI,CAACJ;QAAU;OACvC;MAED,IAAI;QACA,MAAMQ,MAAM,SAASC,SAAS,CAACC,YAAY,CAACC,YAAY,CAACL,WAAW,CAAC;QAErE,IAAIM,MAAM,GAAW,EAAE;QACvBR,KAAI,CAACS,gBAAgB,GAAGL,MAAM;QAE9B,IAAI,CAACJ,KAAI,CAAC1B,OAAO,EAAE;UACf,IAAI0B,KAAI,CAAC3B,OAAO,EAAE;YAAA,IAAAqC,kBAAA;YACdV,KAAI,CAACW,YAAY,IAAAD,kBAAA,GAAGV,KAAI,CAACY,YAAY,cAAAF,kBAAA,uBAAjBA,kBAAA,CAAmBG,aAAa;;UAGxDb,KAAI,CAACc,aAAa,GAAG,IAAIC,aAAa,CAACf,KAAI,CAACS,gBAAgB,EAAE;YAAEO,QAAQ,EAAEhB,KAAI,CAACiB;UAAQ,CAAE,CAAC;UAE1F;UACAjB,KAAI,CAACc,aAAa,CAACI,eAAe,GAAIC,CAAC,IAAU;YAC7C,IAAIA,CAAC,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;cACjBb,MAAM,CAACc,IAAI,CAACH,CAAC,CAACC,IAAI,CAAC;;UAE3B,CAAC;UAED;UACApB,KAAI,CAACc,aAAa,CAACS,MAAM,GAAG,MAAW;YACnCvB,KAAI,CAACwB,SAAS,GAAG,IAAIC,IAAI,CAACjB,MAAM,CAAC;YACjCA,MAAM,GAAG,EAAE;YAEX,IAAIR,KAAI,CAACW,YAAY,EAAE;cACnBX,KAAI,CAACW,YAAY,CAACe,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC7B,KAAI,CAACwB,SAAS,CAAC;;UAE1E,CAAC;;QAGL,IAAI,CAACxB,KAAI,CAAC1B,OAAO,IAAI,CAAC0B,KAAI,CAAC3B,OAAO,EAAE;UAChC;UACA2B,KAAI,CAAC8B,cAAc,GAAG,IAAI;UAE1B;;QAGJ,MAAMC,WAAW,GAAG/B,KAAI,CAAC+B,WAAW;QACpC,IAAI,CAACA,WAAW,EAAE;UACd,MAAM,IAAIhG,SAAS,CAAC,0BAA0B,CAAC;;QAGnD,IAAIiG,SAAS,GAAG,KAAK;QAErB;QACA,MAAMC,WAAW,GAAGN,MAAM,CAACO,UAAU,CAAC,MAAK;UACvC,IAAI,CAACF,SAAS,EAAE;YACZ;YACAA,SAAS,GAAG,IAAI;YAChBhC,KAAI,CAACmC,gBAAgB,CAAC,CAAC,CAAC,EAAE,2BAA2B,CAAC;;QAE9D,CAAC,EAAE,KAAK,CAAC;QAET;QACAJ,WAAW,CAAClB,aAAa,CAACuB,gBAAgB,GAAG,MAAW;UACpD,IAAIJ,SAAS,EAAE;YACX;YACA;;UAGJA,SAAS,GAAG,IAAI;UAChBK,YAAY,CAACJ,WAAW,CAAC;UACzBjC,KAAI,CAAC8B,cAAc,GAAG,IAAI;UAC1BC,WAAW,CAAClB,aAAa,CAACuB,gBAAgB,GAAG,IAAI;UACjD;UACApC,KAAI,CAACR,iBAAiB,CAAC8C,aAAa,EAAE;QAC1C,CAAC;QAED;QACAP,WAAW,CAAClB,aAAa,CAAC0B,SAAS,GAAGvC,KAAI,CAACS,gBAAgB;OAC9D,CAAC,OAAO+B,KAAK,EAAE;QACZxC,KAAI,CAACmC,gBAAgB,CAAC,CAAC,CAAC,EAAEK,KAAK,CAACC,OAAO,IAAID,KAAK,CAAC;;IACpD;EACL;EAEA;;;EAGM3E,aAAaA,CAAA;IAAA,IAAA6E,MAAA;IAAA,OAAAzC,iBAAA;MACf,IAAIyC,MAAI,CAACtE,WAAW,EAAE;QAClB;QACAsE,MAAI,CAAC5D,aAAa,EAAE;QACpB4D,MAAI,CAAClD,iBAAiB,CAAC8C,aAAa,EAAE;QAEtC;;MAGJ,IAAI,CAACI,MAAI,CAACpE,OAAO,EAAE;QAAA,IAAAqE,oBAAA;QACf;QACAD,MAAI,CAACtE,WAAW,GAAG,IAAI;QACvBsE,MAAI,CAAC1D,WAAW,GAAG,KAAK;QAExB,CAAA2D,oBAAA,GAAAD,MAAI,CAAC5B,aAAa,cAAA6B,oBAAA,eAAlBA,oBAAA,CAAoBC,KAAK,EAAE;QAC3BF,MAAI,CAAClD,iBAAiB,CAAC8C,aAAa,EAAE;OACzC,MAAM;QAAA,IAAAO,kBAAA,EAAAC,mBAAA,EAAAC,mBAAA;QACH,IAAI,CAACL,MAAI,CAACM,SAAS,EAAE;UACjB;;QAGJ;QACA,MAAMC,KAAK,IAAAJ,kBAAA,GAAGH,MAAI,CAACX,WAAW,cAAAc,kBAAA,uBAAhBA,kBAAA,CAAkBhC,aAAa,CAACqC,UAAU;QACxD,MAAMC,MAAM,IAAAL,mBAAA,GAAGJ,MAAI,CAACX,WAAW,cAAAe,mBAAA,uBAAhBA,mBAAA,CAAkBjC,aAAa,CAACuC,WAAW;QAC1D,MAAMC,YAAY,SAAS3H,YAAY,CAAC4H,gBAAgB,EAAE;QAE1DZ,MAAI,CAACM,SAAS,CAACnC,aAAa,CAACoC,KAAK,GAAGA,KAAK;QAC1CP,MAAI,CAACM,SAAS,CAACnC,aAAa,CAACsC,MAAM,GAAGA,MAAM;QAC5CT,MAAI,CAACM,SAAS,CAACnC,aAAa,CAAC0C,UAAU,CAAC,IAAI,CAAC,CAACC,SAAS,EAAAT,mBAAA,GAACL,MAAI,CAACX,WAAW,cAAAgB,mBAAA,uBAAhBA,mBAAA,CAAkBlC,aAAa,EAAE,CAAC,EAAE,CAAC,EAAEoC,KAAK,EAAEE,MAAM,CAAC;QAE7G;QACAT,MAAI,CAACM,SAAS,CAACnC,aAAa,CAAC4C,MAAM,CAAEC,IAAU,IAAI;UAAA,IAAAC,mBAAA;UAC/CN,YAAY,CAACO,OAAO,EAAE;UAEtBlB,MAAI,CAAClB,SAAS,GAAGkC,IAAI;UACrB,CAAAC,mBAAA,GAAAjB,MAAI,CAACmB,YAAY,cAAAF,mBAAA,eAAjBA,mBAAA,CAAmB9C,aAAa,CAACiD,YAAY,CAAC,KAAK,EAAEnC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACa,MAAI,CAAClB,SAAS,CAAC,CAAC;UAChGkB,MAAI,CAACnF,WAAW,GAAG,IAAI;QAC3B,CAAC,EAAEmF,MAAI,CAACzB,QAAQ,EAAEyB,MAAI,CAAC7C,OAAO,CAAC;;IAClC;EACL;EAEA;;;EAGMkE,MAAMA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAA/D,iBAAA;MACR,IAAI+D,MAAI,CAACzG,WAAW,EAAE;QAClB,IAAI;UACA,MAAM7B,YAAY,CAACuI,WAAW,CAACnI,SAAS,CAACoI,OAAO,CAAC,wBAAwB,CAAC,CAAC;SAC9E,CAAC,OAAAC,OAAA,EAAM;UACJ;UACA;;;MAIR;MACAH,MAAI,CAACI,wBAAwB,CAAC,WAAW,EAAE,kBAAkB,CAAC;IAAC;EACnE;EAEA;;;EAGM1F,OAAOA,CAAA;IAAA,IAAA2F,MAAA;IAAA,OAAApE,iBAAA;MAAA,IAAAqE,mBAAA,EAAAC,kBAAA;MACT,CAAAD,mBAAA,GAAAD,MAAI,CAAC1D,YAAY,cAAA2D,mBAAA,eAAjBA,mBAAA,CAAmBE,KAAK,EAAE;MAC1B,CAAAD,kBAAA,GAAAF,MAAI,CAACtC,WAAW,cAAAwC,kBAAA,eAAhBA,kBAAA,CAAkB1D,aAAa,CAAC4D,IAAI,EAAE;MAEtCJ,MAAI,CAAC9G,WAAW,GAAG,KAAK;MACxB8G,MAAI,CAACjG,WAAW,GAAG,KAAK;MACxBiG,MAAI,CAACrF,WAAW,GAAG,IAAI;MACvB,OAAOqF,MAAI,CAAC7C,SAAS;MACrB6C,MAAI,CAAC7E,iBAAiB,CAAC8C,aAAa,EAAE;IAAC;EAC3C;EAEA;;;;;EAKAoC,eAAeA,CAACtD,IAA2B;IACvCvF,eAAe,CAAC+H,OAAO,CAACxC,IAAI,EAAE,SAAS,CAAC;EAC5C;EAEA;;;;;;EAMAgD,wBAAwBA,CAAC3B,OAAe,EAAEkC,aAAsB;IAC5D,MAAMC,QAAQ,GAAG,IAAI,CAACtG,OAAO,IAAI,CAAC,IAAI,CAACyB,cAAc;IACrD,MAAMyC,KAAK,GAAGoC,QAAQ,GAAG,IAAI3I,iBAAiB,CAAC0I,aAAa,IAAIlC,OAAO,CAAC,GAAG,IAAIzG,gBAAgB,CAAC,CAAC,EAAEyG,OAAO,CAAC;IAE3G5G,eAAe,CAAC+H,OAAO,CAACpB,KAAK,EAAE,OAAO,CAAC;EAC3C;EAEA;;;;;;;EAOAL,gBAAgBA,CAAC0C,IAAY,EAAEpC,OAAe,EAAEkC,aAAsB;IAClE,MAAMC,QAAQ,GAAG,IAAI,CAACtG,OAAO,IAAI,CAAC,IAAI,CAACyB,cAAc;IACrD,MAAMyC,KAAK,GAAGoC,QAAQ,GAAG,IAAI7I,SAAS,CAAC4I,aAAa,IAAIlC,OAAO,CAAC,GAAG,IAAIzG,gBAAgB,CAAC6I,IAAI,EAAEpC,OAAO,CAAC;IAEtG5G,eAAe,CAAC+H,OAAO,CAACpB,KAAK,EAAE,OAAO,CAAC;EAC3C;EAEA;;;EAGMrF,IAAIA,CAAA;IAAA,IAAA2H,MAAA;IAAA,OAAA7E,iBAAA;MACN,IAAI6E,MAAI,CAACC,aAAa,EAAE;QAAA,IAAAC,gBAAA;QACpB;QACAF,MAAI,CAACJ,eAAe,CAAC,EAAAM,gBAAA,GAAqBF,MAAI,CAAC9B,SAAS,cAAAgC,gBAAA,uBAAdA,gBAAA,CAAgBnE,aAAc,EAACoE,SAAS,CAACH,MAAI,CAAC7D,QAAQ,EAAE6D,MAAI,CAACjF,OAAO,CAAC,CAAC;QAEhH;;MAGJ,IAAI,CAACiF,MAAI,CAACtD,SAAS,EAAE;QACjB;QACA9F,YAAY,CAACwJ,cAAc,CAAC,iCAAiC,CAAC;QAE9D;;MAGJ,MAAM7B,YAAY,SAAS3H,YAAY,CAAC4H,gBAAgB,EAAE;MAE1D,IAAI;QACA;QACA,IAAI,CAACwB,MAAI,CAACtD,SAAS,EAAE;UACjB;UACA,MAAM,IAAI2D,KAAK,CAAC,iCAAiC,CAAC;;QAGtD,MAAMC,SAAS,SAAS5J,QAAQ,CAAC6J,SAAS,CAACP,MAAI,CAACQ,WAAW,EAAE,EAAER,MAAI,CAACtD,SAAS,CAAC;QAE9E,IAAIsD,MAAI,CAACxG,OAAO,IAAI,CAACwG,MAAI,CAAC/E,cAAc,EAAE;UACtC+E,MAAI,CAACJ,eAAe,CAACU,SAAS,CAACG,KAAK,EAAE,CAAC;SAC1C,MAAM;UACH;UACA,MAAMC,QAAQ,SAAShK,QAAQ,CAACiK,WAAW,CAACL,SAAS,CAAC;UAEtD,IAAInE,QAA4B;UAChC,IAAI6D,MAAI,CAACY,SAAS,EAAE;YAChBzE,QAAQ,GAAGtF,iBAAiB,CAACgK,WAAW,CAACb,MAAI,CAACY,SAAS,CAAC;;UAG5D,MAAME,SAAS,GAAc;YACzBC,IAAI,EAAET,SAAS,CAACS,IAAI;YACpBC,QAAQ,EAAEV,SAAS,CAACW,SAAS,IAAIX,SAAS,CAACU,QAAQ;YACnDhG,IAAI,EAAEmB,QAAQ,IAAI,EAAE;YACpB+E,gBAAgB,EAAER,QAAQ,CAACS,gBAAgB;YAC3C5E,IAAI,EAAEmE,QAAQ,CAACnE,IAAI;YACnB6E,aAAa,EAAEA,CAAA,KAAW;cACtB;YAAA;WAEP;UAEDpB,MAAI,CAACJ,eAAe,CAAC,CAACkB,SAAS,CAAC,CAAC;;OAExC,CAAC,OAAOO,GAAG,EAAE;QACVzK,YAAY,CAACwJ,cAAc,CAACiB,GAAG,CAAC;OACnC,SAAS;QACN9C,YAAY,CAACO,OAAO,EAAE;;IACzB;EACL;EAEA;;;;;EAKU0B,WAAWA,CAAA;IACjB,MAAMc,QAAQ,GAAG,IAAI,CAACtG,IAAI,GAAG,GAAG,GAAGlE,aAAa,CAACyK,iBAAiB,EAAE,GAAG,GAAG,GAAG,IAAI,CAACX,SAAS;IAE3F,OAAOxJ,QAAQ,CAACoK,gBAAgB,CAAC7K,gBAAgB,CAAC8K,SAAS,EAAE,QAAQ,GAAGH,QAAQ,CAAC;EACrF;EAEA;;;EAGAtH,aAAaA,CAAA;IACT,IAAI,CAACV,WAAW,GAAG,KAAK;IACxB,IAAI,CAACb,WAAW,GAAG,IAAI;IAEvB,IAAI,CAACwE,WAAW,IAAI,IAAI,CAACA,WAAW,CAAClB,aAAa,CAAC2D,KAAK,EAAE;IAC1D,IAAI,CAAC1D,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC0F,IAAI,EAAE;EACnD;EAEA;;;EAGAC,WAAWA,CAAA;IAAA,IAAAC,iBAAA,EAAAC,kBAAA;IACP,IAAI,IAAI,CAAClG,gBAAgB,EAAE;MACvB,MAAMmG,MAAM,GAAG,IAAI,CAACnG,gBAAgB,CAACoG,SAAS,EAAE;MAChDD,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAI;QACrBA,KAAK,CAACP,IAAI,EAAE;MAChB,CAAC,CAAC;;IAEN,CAAAE,iBAAA,OAAI,CAAC3E,WAAW,cAAA2E,iBAAA,eAAhBA,iBAAA,CAAkB7F,aAAa,CAAC2D,KAAK,EAAE;IACvC,CAAAmC,kBAAA,OAAI,CAAChG,YAAY,cAAAgG,kBAAA,eAAjBA,kBAAA,CAAmBnC,KAAK,EAAE;IAC1B,OAAO,IAAI,CAAChD,SAAS;EACzB;;SApWSlC,iCAAiC;;mBAAjCA,MAAiC,EAAAnD,EAAA,CAAA6K,iBAAA,CAAA7K,EAAA,CAAA8K,iBAAA;AAAA;;QAAjC3H,MAAiC;EAAA4H,SAAA;EAAAC,SAAA,WAAAC,wCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnC9ClL,EAAA,CAAAC,cAAA,iBAAY;MAGAD,EAAA,CAAA2B,UAAA,IAAAyJ,+CAAA,gBAA8C;MAClDpL,EAAA,CAAAG,YAAA,EAAY;MAEZH,EAAA,CAAAC,cAAA,qBAAwB;MACKD,EAAA,CAAAS,UAAA,mBAAA4K,uEAAA;QAAA,OAASF,GAAA,CAAAvD,MAAA,EAAQ;MAAA,EAAC;MAAC5H,EAAA,CAAAE,MAAA,GAA+B;;MAAAF,EAAA,CAAAG,YAAA,EAAa;MACxFH,EAAA,CAAA2B,UAAA,IAAA2J,uDAAA,wBAA2F;MAC/FtL,EAAA,CAAAG,YAAA,EAAc;MAGtBH,EAAA,CAAAC,cAAA,kBAAa;MAIDD,EAAA,CAAAiB,SAAA,mBAAuF;MAGvFjB,EAAA,CAAA2B,UAAA,KAAA4J,mDAAA,mBAEQ;MAGRvL,EAAA,CAAA2B,UAAA,KAAA6J,oDAAA,oBAA6E;MAC7ExL,EAAA,CAAA2B,UAAA,KAAA8J,iDAAA,kBACkB;MACtBzL,EAAA,CAAAG,YAAA,EAAM;MAIdH,EAAA,CAAA2B,UAAA,KAAA+J,wDAAA,wBAkBa;;;MA9CI1L,EAAA,CAAAI,SAAA,GAAW;MAAXJ,EAAA,CAAAkB,UAAA,SAAAiK,GAAA,CAAA3K,KAAA,CAAW;MAI4BR,EAAA,CAAAI,SAAA,GAA+B;MAA/BJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAM,WAAA,sBAA+B;MAC9DN,EAAA,CAAAI,SAAA,GAAiB;MAAjBJ,EAAA,CAAAkB,UAAA,SAAAiK,GAAA,CAAA/J,WAAA,CAAiB;MAKxBpB,EAAA,CAAAI,SAAA,GAA4B;MAA5BJ,EAAA,CAAAkB,UAAA,cAAAiK,GAAA,CAAAxF,cAAA,CAA4B;MAG3B3F,EAAA,CAAAI,SAAA,GAAsB;MAAtBJ,EAAA,CAAAkB,UAAA,WAAAiK,GAAA,CAAA/J,WAAA,CAAsB;MAGrBpB,EAAA,CAAAI,SAAA,GAAa;MAAbJ,EAAA,CAAAkB,UAAA,SAAAiK,GAAA,CAAAjJ,OAAA,CAAa;MAKZlC,EAAA,CAAAI,SAAA,GAAa;MAAbJ,EAAA,CAAAkB,UAAA,SAAAiK,GAAA,CAAAhJ,OAAA,CAAa;MAChBnC,EAAA,CAAAI,SAAA,GAAa;MAAbJ,EAAA,CAAAkB,UAAA,SAAAiK,GAAA,CAAAhJ,OAAA,CAAa;MAMlBnC,EAAA,CAAAI,SAAA,GAAoB;MAApBJ,EAAA,CAAAkB,UAAA,SAAAiK,GAAA,CAAAxF,cAAA,CAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}