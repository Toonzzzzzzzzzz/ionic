{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { Translate } from '@singletons';\nimport { CoreH5PCore } from './core';\nconst ALLOWED_STYLEABLE_TAGS = ['span', 'p', 'div', 'h1', 'h2', 'h3', 'td'];\n/**\n * Equivalent to H5P's H5PContentValidator, but without some of the validations.\n * It's also used to build the dependency list.\n */\nexport class CoreH5PContentValidator {\n  constructor(siteId) {\n    this.siteId = siteId;\n    this.typeMap = {\n      text: 'validateText',\n      number: 'validateNumber',\n      boolean: 'validateBoolean',\n      list: 'validateList',\n      group: 'validateGroup',\n      file: 'validateFile',\n      image: 'validateImage',\n      video: 'validateVideo',\n      audio: 'validateAudio',\n      select: 'validateSelect',\n      library: 'validateLibrary'\n    };\n    this.nextWeight = 1;\n    this.libraries = {};\n    this.dependencies = {};\n    this.relativePathRegExp = /^((\\.\\.\\/){1,2})(.*content\\/)?(\\d+|editor)\\/(.+)$/;\n    this.allowedHtml = {};\n  }\n  /**\n   * Add Addon library.\n   *\n   * @param library The addon library to add.\n   * @returns Promise resolved when done.\n   */\n  addon(library) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const depKey = 'preloaded-' + library.machineName;\n      _this.dependencies[depKey] = {\n        library: library,\n        type: 'preloaded'\n      };\n      _this.nextWeight = yield CoreH5P.h5pCore.findLibraryDependencies(_this.dependencies, library, _this.nextWeight);\n      _this.dependencies[depKey].weight = _this.nextWeight++;\n    })();\n  }\n  /**\n   * Get the flat dependency tree.\n   *\n   * @returns Dependencies.\n   */\n  getDependencies() {\n    return this.dependencies;\n  }\n  /**\n   * Validate metadata\n   *\n   * @param metadata Metadata.\n   * @returns Promise resolved with metadata validated & filtered.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  validateMetadata(metadata) {\n    const semantics = this.getMetadataSemantics();\n    const group = CoreUtils.clone(metadata || {});\n    // Stop complaining about \"invalid selected option in select\" for old content without license chosen.\n    if (group.license === undefined) {\n      group.license = 'U';\n    }\n    return this.validateGroup(group, {\n      type: 'group',\n      fields: semantics\n    }, false);\n  }\n  /**\n   * Validate given text value against text semantics.\n   *\n   * @param text Text to validate.\n   * @param semantics Semantics.\n   * @returns Validated text.\n   */\n  validateText(text, semantics) {\n    if (typeof text != 'string') {\n      text = '';\n    }\n    if (semantics.tags) {\n      // Not testing for empty array allows us to use the 4 defaults without specifying them in semantics.\n      let tags = ['div', 'span', 'p', 'br'].concat(semantics.tags);\n      // Add related tags for table etc.\n      if (tags.indexOf('table') != -1) {\n        tags = tags.concat(['tr', 'td', 'th', 'colgroup', 'thead', 'tbody', 'tfoot']);\n      }\n      if (tags.indexOf('b') != -1) {\n        tags.push('strong');\n      }\n      if (tags.indexOf('i') != -1) {\n        tags.push('em');\n      }\n      if (tags.indexOf('ul') != -1 || tags.indexOf('ol') != -1) {\n        tags.push('li');\n      }\n      if (tags.indexOf('del') != -1 || tags.indexOf('strike') != -1) {\n        tags.push('s');\n      }\n      tags = CoreUtils.uniqueArray(tags);\n      // Determine allowed style tags\n      const stylePatterns = [];\n      // All styles must be start to end patterns (^...$)\n      if (semantics.font) {\n        if (semantics.font.size) {\n          stylePatterns.push(/^font-size: *[0-9.]+(em|px|%) *;?$/i);\n        }\n        if (semantics.font.family) {\n          stylePatterns.push(/^font-family: *[-a-z0-9,\" ]+;?$/i);\n        }\n        if (semantics.font.color) {\n          stylePatterns.push(/^color: *(#[a-f0-9]{3}[a-f0-9]{3}?|rgba?\\([0-9, ]+\\)) *;?$/i);\n        }\n        if (semantics.font.background) {\n          stylePatterns.push(/^background-color: *(#[a-f0-9]{3}[a-f0-9]{3}?|rgba?\\([0-9, ]+\\)) *;?$/i);\n        }\n        if (semantics.font.spacing) {\n          stylePatterns.push(/^letter-spacing: *[0-9.]+(em|px|%) *;?$/i);\n        }\n        if (semantics.font.height) {\n          stylePatterns.push(/^line-height: *[0-9.]+(em|px|%|) *;?$/i);\n        }\n      }\n      // Alignment is allowed for all wysiwyg texts\n      stylePatterns.push(/^text-align: *(center|left|right);?$/i);\n      // Strip invalid HTML tags.\n      text = this.filterXss(text, tags, stylePatterns);\n    } else {\n      // Filter text to plain text.\n      text = CoreTextUtils.escapeHTML(text, false);\n    }\n    // Check if string is within allowed length.\n    if (semantics.maxLength !== undefined) {\n      text = text.substring(0, semantics.maxLength);\n    }\n    return text;\n  }\n  /**\n   * Validates content files\n   *\n   * @param contentPath The path containing content files to validate.\n   * @param isLibrary Whether it's a library.\n   * @returns True if all files are valid.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validateContentFiles(contentPath, isLibrary = false) {\n    // Nothing to do, already checked by Moodle.\n    return true;\n  }\n  /**\n   * Validate given value against number semantics.\n   *\n   * @param value Number to validate.\n   * @param semantics Semantics.\n   * @returns Validated number.\n   */\n  validateNumber(value, semantics) {\n    // Validate that num is indeed a number.\n    let num = Number(value);\n    if (isNaN(num)) {\n      num = 0;\n    }\n    // Check if number is within valid bounds. Move within bounds if not.\n    if (semantics.min !== undefined && num < semantics.min) {\n      num = semantics.min;\n    }\n    if (semantics.max !== undefined && num > semantics.max) {\n      num = semantics.max;\n    }\n    // Check if number is within allowed bounds even if step value is set.\n    if (semantics.step !== undefined) {\n      const testNumber = num - (semantics.min !== undefined ? semantics.min : 0);\n      const rest = testNumber % semantics.step;\n      if (rest !== 0) {\n        num -= rest;\n      }\n    }\n    // Check if number has proper number of decimals.\n    if (semantics.decimals !== undefined) {\n      num = Number(num.toFixed(semantics.decimals));\n    }\n    return num;\n  }\n  /**\n   * Validate given value against boolean semantics.\n   *\n   * @param bool Boolean to check.\n   * @returns Validated bool.\n   */\n  validateBoolean(bool) {\n    return !!bool;\n  }\n  /**\n   * Validate select values.\n   *\n   * @param select Values to validate.\n   * @param semantics Semantics.\n   * @returns Validated select.\n   */\n  validateSelect(select, semantics) {\n    const optional = semantics.optional;\n    const options = {};\n    let strict = false;\n    if (semantics.options && semantics.options.length) {\n      // We have a strict set of options to choose from.\n      strict = true;\n      semantics.options.forEach(option => {\n        // Support optgroup - just flatten options into one.\n        if (option.type == 'optgroup') {\n          var _option$options;\n          (_option$options = option.options) === null || _option$options === void 0 || _option$options.forEach(subOption => {\n            options[subOption.value || ''] = true;\n          });\n        } else if (option.value) {\n          options[option.value] = true;\n        }\n      });\n    }\n    if (semantics.multiple && Array.isArray(select)) {\n      // Multi-choice generates array of values. Test each one against valid options, if we are strict.\n      for (const key in select) {\n        const value = select[key];\n        if (strict && !optional && !options[value]) {\n          delete select[key];\n        } else {\n          select[key] = CoreTextUtils.escapeHTML(value, false);\n        }\n      }\n    } else {\n      // Single mode. If we get an array in here, we chop off the first element and use that instead.\n      if (Array.isArray(select)) {\n        select = select[0];\n      }\n      if (strict && !optional && !options[select]) {\n        select = semantics.options[0].value || '';\n      }\n      select = CoreTextUtils.escapeHTML(select, false);\n    }\n    return select;\n  }\n  /**\n   * Validate given list value against list semantics.\n   * Will recurse into validating each item in the list according to the type.\n   *\n   * @param list List to validate.\n   * @param semantics Semantics.\n   * @returns Validated list.\n   */\n  validateList(list, semantics) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const field = semantics.field;\n      const validateFunction = _this2[_this2.typeMap[field.type || '']].bind(_this2);\n      const isArray = Array.isArray(list);\n      let keys = Object.keys(list);\n      // Check that list is not longer than allowed length.\n      if (semantics.max !== undefined) {\n        keys = keys.slice(0, semantics.max);\n      }\n      // Validate each element in list.\n      for (const i in keys) {\n        const key = keys[i];\n        const keyNumber = parseInt(key, 10);\n        if (isNaN(keyNumber)) {\n          // It's an object and the key isn't an integer. Delete it.\n          delete list[key];\n        } else {\n          const val = yield validateFunction(list[keyNumber], field);\n          if (val === null) {\n            if (isArray) {\n              list.splice(keyNumber, 1);\n            } else {\n              delete list[key];\n            }\n          } else {\n            list[keyNumber] = val;\n          }\n        }\n      }\n      if (!isArray) {\n        list = CoreUtils.objectToArray(list);\n      }\n      if (!list.length) {\n        return null;\n      }\n      return list;\n    })();\n  }\n  /**\n   * Validate a file like object, such as video, image, audio and file.\n   *\n   * @param file File to validate.\n   * @param semantics Semantics.\n   * @param typeValidKeys List of valid keys.\n   * @returns Promise resolved with the validated file.\n   */\n  validateFilelike(file, semantics, typeValidKeys = []) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // Do not allow to use files from other content folders.\n      const matches = file.path.match(_this3.relativePathRegExp);\n      if (matches && matches.length) {\n        file.path = matches[5];\n      }\n      // Remove temporary files suffix.\n      if (file.path.slice(-4) === '#tmp') {\n        file.path = file.path.substring(0, file.path.length - 4);\n      }\n      // Make sure path and mime does not have any special chars\n      file.path = CoreTextUtils.escapeHTML(file.path, false);\n      if (file.mime) {\n        file.mime = CoreTextUtils.escapeHTML(file.mime, false);\n      }\n      // Remove attributes that should not exist, they may contain JSON escape code.\n      let validKeys = ['path', 'mime', 'copyright'].concat(typeValidKeys);\n      if (semantics.extraAttributes) {\n        validKeys = validKeys.concat(semantics.extraAttributes);\n      }\n      validKeys = CoreUtils.uniqueArray(validKeys);\n      _this3.filterParams(file, validKeys);\n      if (typeof file.width == 'string') {\n        file.width = parseInt(file.width, 10);\n      }\n      if (typeof file.height == 'string') {\n        file.height = parseInt(file.height, 10);\n      }\n      if (file.codecs) {\n        file.codecs = CoreTextUtils.escapeHTML(file.codecs, false);\n      }\n      if (typeof file.bitrate == 'string') {\n        file.bitrate = parseInt(file.bitrate, 10);\n      }\n      if (file.quality !== undefined) {\n        if (file.quality === null || file.quality.level === undefined || file.quality.label === undefined) {\n          delete file.quality;\n        } else {\n          _this3.filterParams(file.quality, ['level', 'label']);\n          file.quality.level = Number(file.quality.level);\n          file.quality.label = CoreTextUtils.escapeHTML(file.quality.label, false);\n        }\n      }\n      if (file.copyright !== undefined) {\n        yield _this3.validateGroup(file.copyright, _this3.getCopyrightSemantics());\n      }\n      return file;\n    })();\n  }\n  /**\n   * Validate given file data.\n   *\n   * @param file File.\n   * @param semantics Semantics.\n   * @returns Promise resolved with the validated file.\n   */\n  validateFile(file, semantics) {\n    return this.validateFilelike(file, semantics);\n  }\n  /**\n   * Validate given image data.\n   *\n   * @param image Image.\n   * @param semantics Semantics.\n   * @returns Promise resolved with the validated file.\n   */\n  validateImage(image, semantics) {\n    return this.validateFilelike(image, semantics, ['width', 'height', 'originalImage']);\n  }\n  /**\n   * Validate given video data.\n   *\n   * @param video Video.\n   * @param semantics Semantics.\n   * @returns Promise resolved with the validated file.\n   */\n  validateVideo(video, semantics) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      for (const key in video) {\n        yield _this4.validateFilelike(video[key], semantics, ['width', 'height', 'codecs', 'quality', 'bitrate']);\n      }\n      return video;\n    })();\n  }\n  /**\n   * Validate given audio data.\n   *\n   * @param audio Audio.\n   * @param semantics Semantics.\n   * @returns Promise resolved with the validated file.\n   */\n  validateAudio(audio, semantics) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      for (const key in audio) {\n        yield _this5.validateFilelike(audio[key], semantics);\n      }\n      return audio;\n    })();\n  }\n  /**\n   * Validate given group value against group semantics.\n   * Will recurse into validating each group member.\n   *\n   * @param group Group.\n   * @param semantics Semantics.\n   * @param flatten Whether to flatten.\n   * @returns Promise resolved when done.\n   */\n  validateGroup(group, semantics, flatten = true) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!semantics.fields) {\n        return group;\n      }\n      // Groups with just one field are compressed in the editor to only output the child content.\n      const isSubContent = semantics.isSubContent === true;\n      if (semantics.fields.length == 1 && flatten && !isSubContent) {\n        const field = semantics.fields[0];\n        const validateFunction = _this6[_this6.typeMap[field.type || '']].bind(_this6);\n        return validateFunction(group, field);\n      } else {\n        const groupObject = group;\n        for (const key in groupObject) {\n          // If subContentId is set, keep value\n          if (isSubContent && key == 'subContentId') {\n            continue;\n          }\n          // Find semantics for name=key.\n          const field = semantics.fields.find(field => field.name === key);\n          let value = null;\n          if (field) {\n            if (semantics.optional) {\n              field.optional = true;\n            }\n            const validateFunction = _this6[_this6.typeMap[field.type || '']].bind(_this6);\n            if (validateFunction) {\n              value = yield validateFunction(groupObject[key], field);\n              groupObject[key] = value;\n            }\n          }\n          if (value === null) {\n            delete groupObject[key];\n          }\n        }\n        return groupObject;\n      }\n    })();\n  }\n  /**\n   * Validate given library value against library semantics.\n   * Check if provided library is within allowed options.\n   * Will recurse into validating the library's semantics too.\n   *\n   * @param value Value.\n   * @param semantics Semantics.\n   * @returns Promise resolved when done.\n   */\n  validateLibrary(value, semantics) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!value.library) {\n        return;\n      }\n      if (!_this7.libraries[value.library]) {\n        // Load the library and store it in the index of libraries.\n        const libSpec = CoreH5PCore.libraryFromString(value.library);\n        _this7.libraries[value.library] = yield CoreH5P.h5pCore.loadLibrary((libSpec === null || libSpec === void 0 ? void 0 : libSpec.machineName) || '', (libSpec === null || libSpec === void 0 ? void 0 : libSpec.majorVersion) || 0, (libSpec === null || libSpec === void 0 ? void 0 : libSpec.minorVersion) || 0, _this7.siteId);\n      }\n      const library = _this7.libraries[value.library];\n      // Validate parameters.\n      value.params = yield _this7.validateGroup(value.params, {\n        type: 'group',\n        fields: library.semantics\n      }, false);\n      // Validate subcontent's metadata\n      if (value.metadata) {\n        value.metadata = yield _this7.validateMetadata(value.metadata);\n      }\n      let validKeys = ['library', 'params', 'subContentId', 'metadata'];\n      if (semantics.extraAttributes) {\n        validKeys = CoreUtils.uniqueArray(validKeys.concat(semantics.extraAttributes));\n      }\n      _this7.filterParams(value, validKeys);\n      if (value.subContentId && !value.subContentId.match(/^\\{?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}\\}?$/)) {\n        delete value.subContentId;\n      }\n      // Find all dependencies for this library.\n      const depKey = 'preloaded-' + library.machineName;\n      if (!_this7.dependencies[depKey]) {\n        _this7.dependencies[depKey] = {\n          library: library,\n          type: 'preloaded'\n        };\n        _this7.nextWeight = yield CoreH5P.h5pCore.findLibraryDependencies(_this7.dependencies, library, _this7.nextWeight);\n        _this7.dependencies[depKey].weight = _this7.nextWeight++;\n        return value;\n      } else {\n        return value;\n      }\n    })();\n  }\n  /**\n   * Check params for a allowlist of allowed properties.\n   *\n   * @param params Object to filter.\n   * @param allowlist List of keys to keep.\n   */\n  filterParams(params, allowlist) {\n    for (const key in params) {\n      if (allowlist.indexOf(key) == -1) {\n        delete params[key];\n      }\n    }\n  }\n  /**\n   * Filters HTML to prevent cross-site-scripting (XSS) vulnerabilities.\n   * Based on kses by Ulf Harnhammar, see http://sourceforge.net/projects/kses.\n   *\n   * @param text The string with raw HTML in it.\n   * @param allowedTags An array of allowed tags.\n   * @param allowedStyles Allowed styles.\n   * @returns An XSS safe version of the string.\n   */\n  filterXss(text, allowedTags, allowedStyles) {\n    if (!text || typeof text != 'string') {\n      return text;\n    }\n    allowedTags = allowedTags || ['a', 'em', 'strong', 'cite', 'blockquote', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd'];\n    this.allowedStyles = allowedStyles;\n    // Store the text format.\n    this.filterXssSplit(allowedTags, true);\n    // Remove Netscape 4 JS entities.\n    text = text.replace(/&\\s*\\{[^}]*(\\}\\s*;?|$)/g, '');\n    // Defuse all HTML entities.\n    text = text.replace(/&/g, '&amp;');\n    // Change back only well-formed entities in our allowed list:\n    // Decimal numeric entities.\n    text = text.replace(/&amp;#([0-9]+;)/g, '&#$1');\n    // Hexadecimal numeric entities.\n    text = text.replace(/&amp;#[Xx]0*((?:[0-9A-Fa-f]{2})+;)/g, '&#x$1');\n    // Named entities.\n    text = text.replace(/&amp;([A-Za-z][A-Za-z0-9]*;)/g, '&$1');\n    const matches = text.match(/(<(?=[^a-zA-Z!/])|<!--.*?-->|<[^>]*(>|$)|>)/g);\n    if (matches && matches.length) {\n      matches.forEach(match => {\n        text = text.replace(match, this.filterXssSplit([match]));\n      });\n    }\n    return text;\n  }\n  /**\n   * Processes an HTML tag.\n   *\n   * @param tags An array with various meaning depending on the value of store.\n   *             If store is TRUE then the array contains the allowed tags.\n   *             If store is FALSE then the array has one element, the HTML tag to process.\n   * @param store Whether to store m.\n   * @returns string If the element isn't allowed, an empty string. Otherwise, the cleaned up version of the HTML element.\n   */\n  filterXssSplit(tags, store = false) {\n    if (store) {\n      this.allowedHtml = CoreUtils.arrayToObject(tags);\n      return '';\n    }\n    const tag = tags[0];\n    if (tag.substring(0, 1) != '<') {\n      // We matched a lone \">\" character.\n      return '&gt;';\n    } else if (tag.length == 1) {\n      // We matched a lone \"<\" character.\n      return '&lt;';\n    }\n    const matches = tag.match(/^<\\s*(\\/\\s*)?([a-zA-Z0-9-]+)\\s*([^>]*)>?|(<!--.*?-->)$/);\n    if (!matches) {\n      // Seriously malformed.\n      return '';\n    }\n    const slash = matches[1] ? matches[1].trim() : '';\n    const attrList = matches[3] || '';\n    const comment = matches[4] || '';\n    let elem = matches[2] || '';\n    if (comment) {\n      elem = '!--';\n    }\n    if (!this.allowedHtml[elem.toLowerCase()]) {\n      // Disallowed HTML element.\n      return '';\n    }\n    if (comment) {\n      return comment;\n    }\n    if (slash != '') {\n      return '</' + elem + '>';\n    }\n    // Is there a closing XHTML slash at the end of the attributes?\n    const newAttrList = attrList.replace(/(\\s?)\\/\\s*$/g, '$1');\n    const xhtmlSlash = attrList != newAttrList ? ' /' : '';\n    // Clean up attributes.\n    let attr2 = this.filterXssAttributes(newAttrList, ALLOWED_STYLEABLE_TAGS.indexOf(elem) != -1 ? this.allowedStyles : undefined).join(' ');\n    attr2 = attr2.replace(/[<>]/g, '');\n    attr2 = attr2.length ? ' ' + attr2 : '';\n    return '<' + elem + attr2 + xhtmlSlash + '>';\n  }\n  /**\n   * Processes a string of HTML attributes.\n   *\n   * @param attr HTML attributes.\n   * @param allowedStyles Allowed styles.\n   * @returns Cleaned up version of the HTML attributes.\n   */\n  filterXssAttributes(attr, allowedStyles) {\n    const attrArray = [];\n    let mode = 0;\n    let attrName = '';\n    let skip = false;\n    while (attr.length != 0) {\n      // Was the last operation successful?\n      let working = 0;\n      let matches = null;\n      let thisVal;\n      switch (mode) {\n        case 0:\n          // Attribute name, href for instance.\n          matches = attr.match(/^([-a-zA-Z]+)/);\n          if (matches && matches.length > 1) {\n            attrName = matches[1].toLowerCase();\n            skip = attrName == 'style' || attrName.substring(0, 2) == 'on' || attrName.substring(0, 1) == '-' || attrName.length > 96; // Ignore long attributes to avoid unnecessary processing overhead.\n            working = mode = 1;\n            attr = attr.replace(/^[-a-zA-Z]+/, '');\n          }\n          break;\n        case 1:\n          // Equals sign or valueless (\"selected\").\n          if (attr.match(/^\\s*=\\s*/)) {\n            working = 1;\n            mode = 2;\n            attr = attr.replace(/^\\s*=\\s*/, '');\n            break;\n          }\n          if (attr.match(/^\\s+/)) {\n            working = 1;\n            mode = 0;\n            if (!skip) {\n              attrArray.push(attrName);\n            }\n            attr = attr.replace(/^\\s+/, '');\n          }\n          break;\n        case 2:\n          // Attribute value, a URL after href= for instance.\n          matches = attr.match(/^\"([^\"]*)\"(\\s+|$)/);\n          if (matches && matches.length > 1) {\n            if (allowedStyles && attrName === 'style') {\n              // Allow certain styles.\n              for (const pattern of allowedStyles) {\n                if (matches[1].match(pattern)) {\n                  // All patterns are start to end patterns, and CKEditor adds one span per style.\n                  attrArray.push('style=\"' + matches[1] + '\"');\n                  break;\n                }\n              }\n              break;\n            }\n            thisVal = this.filterXssBadProtocol(matches[1]);\n            if (!skip) {\n              attrArray.push(attrName + '=\"' + thisVal + '\"');\n            }\n            working = 1;\n            mode = 0;\n            attr = attr.replace(/^\"[^\"]*\"(\\s+|$)/, '');\n            break;\n          }\n          matches = attr.match(/^'([^']*)'(\\s+|$)/);\n          if (matches && matches.length > 1) {\n            thisVal = this.filterXssBadProtocol(matches[1]);\n            if (!skip) {\n              attrArray.push(attrName + '=\"' + thisVal + '\"');\n            }\n            working = 1;\n            mode = 0;\n            attr = attr.replace(/^'[^']*'(\\s+|$)/, '');\n            break;\n          }\n          matches = attr.match(/^([^\\s\"']+)(\\s+|$)/);\n          if (matches && matches.length > 1) {\n            thisVal = this.filterXssBadProtocol(matches[1]);\n            if (!skip) {\n              attrArray.push(attrName + '=\"' + thisVal + '\"');\n            }\n            working = 1;\n            mode = 0;\n            attr = attr.replace(/^([^\\s\"']+)(\\s+|$)/, '');\n          }\n          break;\n        default:\n      }\n      if (working == 0) {\n        // Not well formed; remove and try again.\n        attr = attr.replace(/^(\"[^\"]*(\"|$)|'[^']*('|$)||\\S)*\\s*/, '');\n        mode = 0;\n      }\n    }\n    // The attribute list ends with a valueless attribute like \"selected\".\n    if (mode == 1 && !skip) {\n      attrArray.push(attrName);\n    }\n    return attrArray;\n  }\n  /**\n   * Processes an HTML attribute value and strips dangerous protocols from URLs.\n   *\n   * @param str The string with the attribute value.\n   * @param decode Whether to decode entities in the str.\n   * @returns Cleaned up and HTML-escaped version of str.\n   */\n  filterXssBadProtocol(str, decode = true) {\n    // Get the plain text representation of the attribute value (i.e. its meaning).\n    if (decode) {\n      str = CoreTextUtils.decodeHTMLEntities(str);\n    }\n    return CoreTextUtils.escapeHTML(this.stripDangerousProtocols(str), false);\n  }\n  /**\n   * Strips dangerous protocols (e.g. 'javascript:') from a URI.\n   *\n   * @param uri A plain-text URI that might contain dangerous protocols.\n   * @returns A plain-text URI stripped of dangerous protocols.\n   */\n  stripDangerousProtocols(uri) {\n    const allowedProtocols = {\n      ftp: true,\n      http: true,\n      https: true,\n      mailto: true\n    };\n    let before;\n    // Iteratively remove any invalid protocol found.\n    do {\n      before = uri;\n      const colonPos = uri.indexOf(':');\n      if (colonPos > 0) {\n        // We found a colon, possibly a protocol. Verify.\n        const protocol = uri.substring(0, colonPos);\n        // If a colon is preceded by a slash, question mark or hash, it cannot possibly be part of the URL scheme.\n        // This must be a relative URL, which inherits the (safe) protocol of the base document.\n        if (protocol.match(/[/?#]/)) {\n          break;\n        }\n        // Check if this is a disallowed protocol.\n        if (!allowedProtocols[protocol.toLowerCase()]) {\n          uri = uri.substring(colonPos + 1);\n        }\n      }\n    } while (before != uri);\n    return uri;\n  }\n  /**\n   * Get metadata semantics.\n   *\n   * @returns Semantics.\n   */\n  getMetadataSemantics() {\n    if (this.metadataSemantics) {\n      return this.metadataSemantics;\n    }\n    const ccVersions = this.getCCVersions();\n    this.metadataSemantics = [{\n      name: 'title',\n      type: 'text',\n      label: Translate.instant('core.h5p.title'),\n      placeholder: 'La Gioconda'\n    }, {\n      name: 'a11yTitle',\n      type: 'text',\n      label: Translate.instant('core.h5p.a11yTitle:label'),\n      optional: true\n    }, {\n      name: 'license',\n      type: 'select',\n      label: Translate.instant('core.h5p.license'),\n      default: 'U',\n      options: [{\n        value: 'U',\n        label: Translate.instant('core.h5p.undisclosed')\n      }, {\n        type: 'optgroup',\n        label: Translate.instant('core.h5p.creativecommons'),\n        options: [{\n          value: 'CC BY',\n          label: Translate.instant('core.h5p.ccattribution'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-SA',\n          label: Translate.instant('core.h5p.ccattributionsa'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-ND',\n          label: Translate.instant('core.h5p.ccattributionnd'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-NC',\n          label: Translate.instant('core.h5p.ccattributionnc'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-NC-SA',\n          label: Translate.instant('core.h5p.ccattributionncsa'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-NC-ND',\n          label: Translate.instant('core.h5p.ccattributionncnd'),\n          versions: ccVersions\n        }, {\n          value: 'CC0 1.0',\n          label: Translate.instant('core.h5p.ccpdd')\n        }, {\n          value: 'CC PDM',\n          label: Translate.instant('core.h5p.pdm')\n        }]\n      }, {\n        value: 'GNU GPL',\n        label: Translate.instant('core.h5p.gpl')\n      }, {\n        value: 'PD',\n        label: Translate.instant('core.h5p.pd')\n      }, {\n        value: 'ODC PDDL',\n        label: Translate.instant('core.h5p.pddl')\n      }, {\n        value: 'C',\n        label: Translate.instant('core.h5p.copyrightstring')\n      }]\n    }, {\n      name: 'licenseVersion',\n      type: 'select',\n      label: Translate.instant('core.h5p.licenseversion'),\n      options: ccVersions,\n      optional: true\n    }, {\n      name: 'yearFrom',\n      type: 'number',\n      label: Translate.instant('core.h5p.yearsfrom'),\n      placeholder: '1991',\n      min: -9999,\n      max: 9999,\n      optional: true\n    }, {\n      name: 'yearTo',\n      type: 'number',\n      label: Translate.instant('core.h5p.yearsto'),\n      placeholder: '1992',\n      min: -9999,\n      max: 9999,\n      optional: true\n    }, {\n      name: 'source',\n      type: 'text',\n      label: Translate.instant('core.h5p.source'),\n      placeholder: 'https://',\n      optional: true\n    }, {\n      name: 'authors',\n      type: 'list',\n      field: {\n        name: 'author',\n        type: 'group',\n        fields: [{\n          label: Translate.instant('core.h5p.authorname'),\n          name: 'name',\n          optional: true,\n          type: 'text'\n        }, {\n          name: 'role',\n          type: 'select',\n          label: Translate.instant('core.h5p.authorrole'),\n          default: 'Author',\n          options: [{\n            value: 'Author',\n            label: Translate.instant('core.h5p.author')\n          }, {\n            value: 'Editor',\n            label: Translate.instant('core.h5p.editor')\n          }, {\n            value: 'Licensee',\n            label: Translate.instant('core.h5p.licensee')\n          }, {\n            value: 'Originator',\n            label: Translate.instant('core.h5p.originator')\n          }]\n        }]\n      }\n    }, {\n      name: 'licenseExtras',\n      type: 'text',\n      widget: 'textarea',\n      label: Translate.instant('core.h5p.licenseextras'),\n      optional: true,\n      description: Translate.instant('core.h5p.additionallicenseinfo')\n    }, {\n      name: 'changes',\n      type: 'list',\n      field: {\n        name: 'change',\n        type: 'group',\n        label: Translate.instant('core.h5p.changelog'),\n        fields: [{\n          name: 'date',\n          type: 'text',\n          label: Translate.instant('core.h5p.date'),\n          optional: true\n        }, {\n          name: 'author',\n          type: 'text',\n          label: Translate.instant('core.h5p.changedby'),\n          optional: true\n        }, {\n          name: 'log',\n          type: 'text',\n          widget: 'textarea',\n          label: Translate.instant('core.h5p.changedescription'),\n          placeholder: Translate.instant('core.h5p.changeplaceholder'),\n          optional: true\n        }]\n      }\n    }, {\n      name: 'authorComments',\n      type: 'text',\n      widget: 'textarea',\n      label: Translate.instant('core.h5p.authorcomments'),\n      description: Translate.instant('core.h5p.authorcommentsdescription'),\n      optional: true\n    }, {\n      name: 'contentType',\n      type: 'text',\n      widget: 'none'\n    }, {\n      name: 'defaultLanguage',\n      type: 'text',\n      widget: 'none'\n    }];\n    return this.metadataSemantics;\n  }\n  /**\n   * Get copyright semantics.\n   *\n   * @returns Semantics.\n   */\n  getCopyrightSemantics() {\n    if (this.copyrightSemantics) {\n      return this.copyrightSemantics;\n    }\n    const ccVersions = this.getCCVersions();\n    this.copyrightSemantics = {\n      name: 'copyright',\n      type: 'group',\n      label: Translate.instant('core.h5p.copyrightinfo'),\n      fields: [{\n        name: 'title',\n        type: 'text',\n        label: Translate.instant('core.h5p.title'),\n        placeholder: 'La Gioconda',\n        optional: true\n      }, {\n        name: 'author',\n        type: 'text',\n        label: Translate.instant('core.h5p.author'),\n        placeholder: 'Leonardo da Vinci',\n        optional: true\n      }, {\n        name: 'year',\n        type: 'text',\n        label: Translate.instant('core.h5p.years'),\n        placeholder: '1503 - 1517',\n        optional: true\n      }, {\n        name: 'source',\n        type: 'text',\n        label: Translate.instant('core.h5p.source'),\n        placeholder: 'http://en.wikipedia.org/wiki/Mona_Lisa',\n        optional: true,\n        regexp: {\n          pattern: '^http[s]?://.+',\n          modifiers: 'i'\n        }\n      }, {\n        name: 'license',\n        type: 'select',\n        label: Translate.instant('core.h5p.license'),\n        default: 'U',\n        options: [{\n          value: 'U',\n          label: Translate.instant('core.h5p.undisclosed')\n        }, {\n          value: 'CC BY',\n          label: Translate.instant('core.h5p.ccattribution'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-SA',\n          label: Translate.instant('core.h5p.ccattributionsa'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-ND',\n          label: Translate.instant('core.h5p.ccattributionnd'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-NC',\n          label: Translate.instant('core.h5p.ccattributionnc'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-NC-SA',\n          label: Translate.instant('core.h5p.ccattributionncsa'),\n          versions: ccVersions\n        }, {\n          value: 'CC BY-NC-ND',\n          label: Translate.instant('core.h5p.ccattributionncnd'),\n          versions: ccVersions\n        }, {\n          value: 'GNU GPL',\n          label: Translate.instant('core.h5p.licenseGPL'),\n          versions: [{\n            value: 'v3',\n            label: Translate.instant('core.h5p.licenseV3')\n          }, {\n            value: 'v2',\n            label: Translate.instant('core.h5p.licenseV2')\n          }, {\n            value: 'v1',\n            label: Translate.instant('core.h5p.licenseV1')\n          }]\n        }, {\n          value: 'PD',\n          label: Translate.instant('core.h5p.pd'),\n          versions: [{\n            value: '-',\n            label: '-'\n          }, {\n            value: 'CC0 1.0',\n            label: Translate.instant('core.h5p.licenseCC010U')\n          }, {\n            value: 'CC PDM',\n            label: Translate.instant('core.h5p.pdm')\n          }]\n        }, {\n          value: 'C',\n          label: Translate.instant('core.h5p.copyrightstring')\n        }]\n      }, {\n        name: 'version',\n        type: 'select',\n        label: Translate.instant('core.h5p.licenseversion'),\n        options: []\n      }]\n    };\n    return this.copyrightSemantics;\n  }\n  /**\n   * Get CC versions for semantics.\n   *\n   * @returns CC versions.\n   */\n  getCCVersions() {\n    return [{\n      value: '4.0',\n      label: Translate.instant('core.h5p.licenseCC40')\n    }, {\n      value: '3.0',\n      label: Translate.instant('core.h5p.licenseCC30')\n    }, {\n      value: '2.5',\n      label: Translate.instant('core.h5p.licenseCC25')\n    }, {\n      value: '2.0',\n      label: Translate.instant('core.h5p.licenseCC20')\n    }, {\n      value: '1.0',\n      label: Translate.instant('core.h5p.licenseCC10')\n    }];\n  }\n}","map":{"version":3,"names":["CoreTextUtils","CoreUtils","CoreH5P","Translate","CoreH5PCore","ALLOWED_STYLEABLE_TAGS","CoreH5PContentValidator","constructor","siteId","typeMap","text","number","boolean","list","group","file","image","video","audio","select","library","nextWeight","libraries","dependencies","relativePathRegExp","allowedHtml","addon","_this","_asyncToGenerator","depKey","machineName","type","h5pCore","findLibraryDependencies","weight","getDependencies","validateMetadata","metadata","semantics","getMetadataSemantics","clone","license","undefined","validateGroup","fields","validateText","tags","concat","indexOf","push","uniqueArray","stylePatterns","font","size","family","color","background","spacing","height","filterXss","escapeHTML","maxLength","substring","validateContentFiles","contentPath","isLibrary","validateNumber","value","num","Number","isNaN","min","max","step","testNumber","rest","decimals","toFixed","validateBoolean","bool","validateSelect","optional","options","strict","length","forEach","option","_option$options","subOption","multiple","Array","isArray","key","validateList","_this2","field","validateFunction","bind","keys","Object","slice","i","keyNumber","parseInt","val","splice","objectToArray","validateFilelike","typeValidKeys","_this3","matches","path","match","mime","validKeys","extraAttributes","filterParams","width","codecs","bitrate","quality","level","label","copyright","getCopyrightSemantics","validateFile","validateImage","validateVideo","_this4","validateAudio","_this5","flatten","_this6","isSubContent","groupObject","find","name","validateLibrary","_this7","libSpec","libraryFromString","loadLibrary","majorVersion","minorVersion","params","subContentId","allowlist","allowedTags","allowedStyles","filterXssSplit","replace","store","arrayToObject","tag","slash","trim","attrList","comment","elem","toLowerCase","newAttrList","xhtmlSlash","attr2","filterXssAttributes","join","attr","attrArray","mode","attrName","skip","working","thisVal","pattern","filterXssBadProtocol","str","decode","decodeHTMLEntities","stripDangerousProtocols","uri","allowedProtocols","ftp","http","https","mailto","before","colonPos","protocol","metadataSemantics","ccVersions","getCCVersions","instant","placeholder","default","versions","widget","description","copyrightSemantics","regexp","modifiers"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/h5p/classes/content-validator.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { Translate } from '@singletons';\nimport { CoreH5PCore, CoreH5PLibraryData, CoreH5PLibraryAddonData, CoreH5PContentDepsTreeDependency } from './core';\n\nconst ALLOWED_STYLEABLE_TAGS = ['span', 'p', 'div', 'h1', 'h2', 'h3', 'td'];\n\n/**\n * Equivalent to H5P's H5PContentValidator, but without some of the validations.\n * It's also used to build the dependency list.\n */\nexport class CoreH5PContentValidator {\n\n    protected typeMap = {\n        text: 'validateText',\n        number: 'validateNumber', // eslint-disable-line id-blacklist\n        boolean: 'validateBoolean', // eslint-disable-line id-blacklist\n        list: 'validateList',\n        group: 'validateGroup',\n        file: 'validateFile',\n        image: 'validateImage',\n        video: 'validateVideo',\n        audio: 'validateAudio',\n        select: 'validateSelect',\n        library: 'validateLibrary',\n    };\n\n    protected nextWeight = 1;\n    protected libraries: {[libString: string]: CoreH5PLibraryData} = {};\n    protected dependencies: {[key: string]: CoreH5PContentDepsTreeDependency} = {};\n    protected relativePathRegExp = /^((\\.\\.\\/){1,2})(.*content\\/)?(\\d+|editor)\\/(.+)$/;\n    protected allowedHtml: {[tag: string]: string} = {};\n    protected allowedStyles?: RegExp[];\n    protected metadataSemantics?: CoreH5PSemantics[];\n    protected copyrightSemantics?: CoreH5PSemantics;\n\n    constructor(protected siteId: string) { }\n\n    /**\n     * Add Addon library.\n     *\n     * @param library The addon library to add.\n     * @returns Promise resolved when done.\n     */\n    async addon(library: CoreH5PLibraryAddonData): Promise<void> {\n        const depKey = 'preloaded-' + library.machineName;\n\n        this.dependencies[depKey] = {\n            library: library,\n            type: 'preloaded',\n        };\n\n        this.nextWeight = await CoreH5P.h5pCore.findLibraryDependencies(this.dependencies, library, this.nextWeight);\n\n        this.dependencies[depKey].weight = this.nextWeight++;\n    }\n\n    /**\n     * Get the flat dependency tree.\n     *\n     * @returns Dependencies.\n     */\n    getDependencies(): {[key: string]: CoreH5PContentDepsTreeDependency} {\n        return this.dependencies;\n    }\n\n    /**\n     * Validate metadata\n     *\n     * @param metadata Metadata.\n     * @returns Promise resolved with metadata validated & filtered.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    validateMetadata(metadata: any): Promise<unknown> {\n        const semantics = this.getMetadataSemantics();\n        const group = CoreUtils.clone(metadata || {});\n\n        // Stop complaining about \"invalid selected option in select\" for old content without license chosen.\n        if (group.license === undefined) {\n            group.license = 'U';\n        }\n\n        return this.validateGroup(group, { type: 'group', fields: semantics }, false);\n    }\n\n    /**\n     * Validate given text value against text semantics.\n     *\n     * @param text Text to validate.\n     * @param semantics Semantics.\n     * @returns Validated text.\n     */\n    validateText(text: string, semantics: CoreH5PSemantics): string {\n        if (typeof text != 'string') {\n            text = '';\n        }\n\n        if (semantics.tags) {\n            // Not testing for empty array allows us to use the 4 defaults without specifying them in semantics.\n            let tags = ['div', 'span', 'p', 'br'].concat(semantics.tags);\n\n            // Add related tags for table etc.\n            if (tags.indexOf('table') != -1) {\n                tags = tags.concat(['tr', 'td', 'th', 'colgroup', 'thead', 'tbody', 'tfoot']);\n            }\n            if (tags.indexOf('b') != -1) {\n                tags.push('strong');\n            }\n            if (tags.indexOf('i') != -1) {\n                tags.push('em');\n            }\n            if (tags.indexOf('ul') != -1 || tags.indexOf('ol') != -1) {\n                tags.push('li');\n            }\n            if (tags.indexOf('del') != -1 || tags.indexOf('strike') != -1) {\n                tags.push('s');\n            }\n\n            tags = CoreUtils.uniqueArray(tags);\n\n            // Determine allowed style tags\n            const stylePatterns: RegExp[] = [];\n            // All styles must be start to end patterns (^...$)\n            if (semantics.font) {\n                if (semantics.font.size) {\n                    stylePatterns.push(/^font-size: *[0-9.]+(em|px|%) *;?$/i);\n                }\n                if (semantics.font.family) {\n                    stylePatterns.push(/^font-family: *[-a-z0-9,\" ]+;?$/i);\n                }\n                if (semantics.font.color) {\n                    stylePatterns.push(/^color: *(#[a-f0-9]{3}[a-f0-9]{3}?|rgba?\\([0-9, ]+\\)) *;?$/i);\n                }\n                if (semantics.font.background) {\n                    stylePatterns.push(/^background-color: *(#[a-f0-9]{3}[a-f0-9]{3}?|rgba?\\([0-9, ]+\\)) *;?$/i);\n                }\n                if (semantics.font.spacing) {\n                    stylePatterns.push(/^letter-spacing: *[0-9.]+(em|px|%) *;?$/i);\n                }\n                if (semantics.font.height) {\n                    stylePatterns.push(/^line-height: *[0-9.]+(em|px|%|) *;?$/i);\n                }\n            }\n\n            // Alignment is allowed for all wysiwyg texts\n            stylePatterns.push(/^text-align: *(center|left|right);?$/i);\n\n            // Strip invalid HTML tags.\n            text = this.filterXss(text, tags, stylePatterns);\n        } else {\n            // Filter text to plain text.\n            text = CoreTextUtils.escapeHTML(text, false);\n        }\n\n        // Check if string is within allowed length.\n        if (semantics.maxLength !== undefined) {\n            text = text.substring(0, semantics.maxLength);\n        }\n\n        return text;\n    }\n\n    /**\n     * Validates content files\n     *\n     * @param contentPath The path containing content files to validate.\n     * @param isLibrary Whether it's a library.\n     * @returns True if all files are valid.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    validateContentFiles(contentPath: string, isLibrary: boolean = false): boolean {\n        // Nothing to do, already checked by Moodle.\n        return true;\n    }\n\n    /**\n     * Validate given value against number semantics.\n     *\n     * @param value Number to validate.\n     * @param semantics Semantics.\n     * @returns Validated number.\n     */\n    validateNumber(value: unknown, semantics: CoreH5PSemantics): number {\n        // Validate that num is indeed a number.\n        let num = Number(value);\n        if (isNaN(num)) {\n            num = 0;\n        }\n        // Check if number is within valid bounds. Move within bounds if not.\n        if (semantics.min !== undefined && num < semantics.min) {\n            num = semantics.min;\n        }\n        if (semantics.max !== undefined && num > semantics.max) {\n            num = semantics.max;\n        }\n        // Check if number is within allowed bounds even if step value is set.\n        if (semantics.step !== undefined) {\n            const testNumber = num - (semantics.min !== undefined ? semantics.min : 0);\n            const rest = testNumber % semantics.step;\n            if (rest !== 0) {\n                num -= rest;\n            }\n        }\n        // Check if number has proper number of decimals.\n        if (semantics.decimals !== undefined) {\n            num = Number(num.toFixed(semantics.decimals));\n        }\n\n        return num;\n    }\n\n    /**\n     * Validate given value against boolean semantics.\n     *\n     * @param bool Boolean to check.\n     * @returns Validated bool.\n     */\n    validateBoolean(bool: unknown): boolean {\n        return !!bool;\n    }\n\n    /**\n     * Validate select values.\n     *\n     * @param select Values to validate.\n     * @param semantics Semantics.\n     * @returns Validated select.\n     */\n    validateSelect(select: string | string[], semantics: CoreH5PSemantics): string | string[] {\n        const optional = semantics.optional;\n        const options: Record<string, boolean> = {};\n        let strict = false;\n\n        if (semantics.options && semantics.options.length) {\n            // We have a strict set of options to choose from.\n            strict = true;\n\n            semantics.options.forEach((option: OptionSemantics) => {\n                // Support optgroup - just flatten options into one.\n                if (option.type == 'optgroup') {\n                    option.options?.forEach((subOption) => {\n                        options[subOption.value || ''] = true;\n                    });\n                } else if (option.value) {\n                    options[option.value] = true;\n                }\n            });\n        }\n\n        if (semantics.multiple && Array.isArray(select)) {\n            // Multi-choice generates array of values. Test each one against valid options, if we are strict.\n            for (const key in select) {\n                const value = select[key];\n\n                if (strict && !optional && !options[value]) {\n                    delete select[key];\n                } else {\n                    select[key] = CoreTextUtils.escapeHTML(value, false);\n                }\n            }\n        } else {\n            // Single mode. If we get an array in here, we chop off the first element and use that instead.\n            if (Array.isArray(select)) {\n                select = select[0];\n            }\n\n            if (strict && !optional && !options[select]) {\n                select = (<OptionSemantics> semantics.options![0]).value || '';\n            }\n            select = CoreTextUtils.escapeHTML(select, false);\n        }\n\n        return select;\n    }\n\n    /**\n     * Validate given list value against list semantics.\n     * Will recurse into validating each item in the list according to the type.\n     *\n     * @param list List to validate.\n     * @param semantics Semantics.\n     * @returns Validated list.\n     */\n    async validateList(list: Record<string, unknown> | unknown[], semantics: CoreH5PSemantics): Promise<unknown[] | null> {\n        const field = semantics.field!;\n        const validateFunction = this[this.typeMap[field.type || '']].bind(this);\n        const isArray = Array.isArray(list);\n        let keys = Object.keys(list);\n\n        // Check that list is not longer than allowed length.\n        if (semantics.max !== undefined) {\n            keys = keys.slice(0, semantics.max);\n        }\n\n        // Validate each element in list.\n        for (const i in keys) {\n            const key = keys[i];\n            const keyNumber = parseInt(key, 10);\n\n            if (isNaN(keyNumber)) {\n                // It's an object and the key isn't an integer. Delete it.\n                delete list[key];\n            } else {\n                const val = await validateFunction(list[keyNumber], field);\n\n                if (val === null) {\n                    if (isArray) {\n                        (<unknown[]> list).splice(keyNumber, 1);\n                    } else {\n                        delete list[key];\n                    }\n                } else {\n                    list[keyNumber] = val;\n                }\n            }\n        }\n\n        if (!isArray) {\n            list = CoreUtils.objectToArray(<Record<string, unknown>> list);\n        }\n\n        if (!list.length) {\n            return null;\n        }\n\n        return <unknown[]> list;\n    }\n\n    /**\n     * Validate a file like object, such as video, image, audio and file.\n     *\n     * @param file File to validate.\n     * @param semantics Semantics.\n     * @param typeValidKeys List of valid keys.\n     * @returns Promise resolved with the validated file.\n     */\n    protected async validateFilelike(file: FileLike, semantics: CoreH5PSemantics, typeValidKeys: string[] = []): Promise<FileLike> {\n        // Do not allow to use files from other content folders.\n        const matches = file.path.match(this.relativePathRegExp);\n        if (matches && matches.length) {\n            file.path = matches[5];\n        }\n\n        // Remove temporary files suffix.\n        if (file.path.slice(-4) === '#tmp') {\n            file.path = file.path.substring(0, file.path.length - 4);\n        }\n\n        // Make sure path and mime does not have any special chars\n        file.path = CoreTextUtils.escapeHTML(file.path, false);\n        if (file.mime) {\n            file.mime = CoreTextUtils.escapeHTML(file.mime, false);\n        }\n\n        // Remove attributes that should not exist, they may contain JSON escape code.\n        let validKeys = ['path', 'mime', 'copyright'].concat(typeValidKeys);\n        if (semantics.extraAttributes) {\n            validKeys = validKeys.concat(semantics.extraAttributes);\n        }\n        validKeys = CoreUtils.uniqueArray(validKeys);\n\n        this.filterParams(file, validKeys);\n\n        if (typeof file.width == 'string') {\n            file.width = parseInt(file.width, 10);\n        }\n\n        if (typeof file.height == 'string') {\n            file.height = parseInt(file.height, 10);\n        }\n\n        if (file.codecs) {\n            file.codecs = CoreTextUtils.escapeHTML(file.codecs, false);\n        }\n\n        if (typeof file.bitrate == 'string') {\n            file.bitrate = parseInt(file.bitrate, 10);\n        }\n\n        if (file.quality !== undefined) {\n            if (file.quality === null || file.quality.level === undefined || file.quality.label === undefined) {\n                delete file.quality;\n            } else {\n                this.filterParams(file.quality, ['level', 'label']);\n                file.quality.level = Number(file.quality.level);\n                file.quality.label = CoreTextUtils.escapeHTML(file.quality.label, false);\n            }\n        }\n\n        if (file.copyright !== undefined) {\n            await this.validateGroup(file.copyright, this.getCopyrightSemantics());\n        }\n\n        return file;\n    }\n\n    /**\n     * Validate given file data.\n     *\n     * @param file File.\n     * @param semantics Semantics.\n     * @returns Promise resolved with the validated file.\n     */\n    validateFile(file: FileLike, semantics: CoreH5PSemantics): Promise<FileLike> {\n        return this.validateFilelike(file, semantics);\n    }\n\n    /**\n     * Validate given image data.\n     *\n     * @param image Image.\n     * @param semantics Semantics.\n     * @returns Promise resolved with the validated file.\n     */\n    validateImage(image: FileLike, semantics: CoreH5PSemantics): Promise<FileLike> {\n        return this.validateFilelike(image, semantics, ['width', 'height', 'originalImage']);\n    }\n\n    /**\n     * Validate given video data.\n     *\n     * @param video Video.\n     * @param semantics Semantics.\n     * @returns Promise resolved with the validated file.\n     */\n    async validateVideo(video: Record<string, FileLike>, semantics: CoreH5PSemantics): Promise<Record<string, FileLike>> {\n        for (const key in video) {\n            await this.validateFilelike(video[key], semantics, ['width', 'height', 'codecs', 'quality', 'bitrate']);\n        }\n\n        return video;\n    }\n\n    /**\n     * Validate given audio data.\n     *\n     * @param audio Audio.\n     * @param semantics Semantics.\n     * @returns Promise resolved with the validated file.\n     */\n    async validateAudio(audio: Record<string, FileLike>, semantics: CoreH5PSemantics): Promise<Record<string, FileLike>> {\n        for (const key in audio) {\n            await this.validateFilelike(audio[key], semantics);\n        }\n\n        return audio;\n    }\n\n    /**\n     * Validate given group value against group semantics.\n     * Will recurse into validating each group member.\n     *\n     * @param group Group.\n     * @param semantics Semantics.\n     * @param flatten Whether to flatten.\n     * @returns Promise resolved when done.\n     */\n    async validateGroup(group: unknown, semantics: CoreH5PSemantics, flatten: boolean = true): Promise<unknown> {\n        if (!semantics.fields) {\n            return group;\n        }\n\n        // Groups with just one field are compressed in the editor to only output the child content.\n        const isSubContent = semantics.isSubContent === true;\n\n        if (semantics.fields.length == 1 && flatten && !isSubContent) {\n            const field = semantics.fields[0];\n            const validateFunction = this[this.typeMap[field.type || '']].bind(this);\n\n            return validateFunction(group, field);\n        } else {\n            const groupObject = <Record<string, unknown>> group;\n\n            for (const key in groupObject) {\n                // If subContentId is set, keep value\n                if (isSubContent && key == 'subContentId') {\n                    continue;\n                }\n\n                // Find semantics for name=key.\n                const field = semantics.fields.find(field => field.name === key);\n                let value: unknown = null;\n\n                if (field) {\n                    if (semantics.optional) {\n                        field.optional = true;\n                    }\n\n                    const validateFunction = this[this.typeMap[field.type || '']].bind(this);\n                    if (validateFunction) {\n                        value = await validateFunction(groupObject[key], field);\n\n                        groupObject[key] = value;\n                    }\n                }\n\n                if (value === null) {\n                    delete groupObject[key];\n                }\n            }\n\n            return groupObject;\n        }\n    }\n\n    /**\n     * Validate given library value against library semantics.\n     * Check if provided library is within allowed options.\n     * Will recurse into validating the library's semantics too.\n     *\n     * @param value Value.\n     * @param semantics Semantics.\n     * @returns Promise resolved when done.\n     */\n    async validateLibrary(value: LibraryType, semantics: CoreH5PSemantics): Promise<LibraryType | undefined> {\n        if (!value.library) {\n            return;\n        }\n\n        if (!this.libraries[value.library]) {\n            // Load the library and store it in the index of libraries.\n            const libSpec = CoreH5PCore.libraryFromString(value.library);\n\n            this.libraries[value.library] = await CoreH5P.h5pCore.loadLibrary(\n                libSpec?.machineName || '',\n                libSpec?.majorVersion || 0,\n                libSpec?.minorVersion || 0,\n                this.siteId,\n            );\n        }\n\n        const library = this.libraries[value.library];\n\n        // Validate parameters.\n        value.params = await this.validateGroup(value.params, { type: 'group', fields: library.semantics }, false);\n\n        // Validate subcontent's metadata\n        if (value.metadata) {\n            value.metadata = await this.validateMetadata(value.metadata);\n        }\n\n        let validKeys = ['library', 'params', 'subContentId', 'metadata'];\n        if (semantics.extraAttributes) {\n            validKeys = CoreUtils.uniqueArray(validKeys.concat(semantics.extraAttributes));\n        }\n\n        this.filterParams(value, validKeys);\n\n        if (value.subContentId &&\n                !value.subContentId.match(/^\\{?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}\\}?$/)) {\n            delete value.subContentId;\n        }\n\n        // Find all dependencies for this library.\n        const depKey = 'preloaded-' + library.machineName;\n        if (!this.dependencies[depKey]) {\n            this.dependencies[depKey] = {\n                library: library,\n                type: 'preloaded',\n            };\n\n            this.nextWeight = await CoreH5P.h5pCore.findLibraryDependencies(this.dependencies, library, this.nextWeight);\n\n            this.dependencies[depKey].weight = this.nextWeight++;\n\n            return value;\n        } else {\n            return value;\n        }\n    }\n\n    /**\n     * Check params for a allowlist of allowed properties.\n     *\n     * @param params Object to filter.\n     * @param allowlist List of keys to keep.\n     */\n    filterParams(params: Record<string, unknown>, allowlist: string[]): void {\n        for (const key in params) {\n            if (allowlist.indexOf(key) == -1) {\n                delete params[key];\n            }\n        }\n    }\n\n    /**\n     * Filters HTML to prevent cross-site-scripting (XSS) vulnerabilities.\n     * Based on kses by Ulf Harnhammar, see http://sourceforge.net/projects/kses.\n     *\n     * @param text The string with raw HTML in it.\n     * @param allowedTags An array of allowed tags.\n     * @param allowedStyles Allowed styles.\n     * @returns An XSS safe version of the string.\n     */\n    protected filterXss(text: string, allowedTags?: string[], allowedStyles?: RegExp[]): string {\n        if (!text || typeof text != 'string') {\n            return text;\n        }\n\n        allowedTags = allowedTags || ['a', 'em', 'strong', 'cite', 'blockquote', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd'];\n\n        this.allowedStyles = allowedStyles;\n\n        // Store the text format.\n        this.filterXssSplit(allowedTags, true);\n\n        // Remove Netscape 4 JS entities.\n        text = text.replace(/&\\s*\\{[^}]*(\\}\\s*;?|$)/g, '');\n\n        // Defuse all HTML entities.\n        text = text.replace(/&/g, '&amp;');\n\n        // Change back only well-formed entities in our allowed list:\n        // Decimal numeric entities.\n        text = text.replace(/&amp;#([0-9]+;)/g, '&#$1');\n        // Hexadecimal numeric entities.\n        text = text.replace(/&amp;#[Xx]0*((?:[0-9A-Fa-f]{2})+;)/g, '&#x$1');\n        // Named entities.\n        text = text.replace(/&amp;([A-Za-z][A-Za-z0-9]*;)/g, '&$1');\n\n        const matches = text.match(/(<(?=[^a-zA-Z!/])|<!--.*?-->|<[^>]*(>|$)|>)/g);\n        if (matches && matches.length) {\n            matches.forEach((match) => {\n                text = text.replace(match, this.filterXssSplit([match]));\n            });\n        }\n\n        return text;\n    }\n\n    /**\n     * Processes an HTML tag.\n     *\n     * @param tags An array with various meaning depending on the value of store.\n     *             If store is TRUE then the array contains the allowed tags.\n     *             If store is FALSE then the array has one element, the HTML tag to process.\n     * @param store Whether to store m.\n     * @returns string If the element isn't allowed, an empty string. Otherwise, the cleaned up version of the HTML element.\n     */\n    protected filterXssSplit(tags: string[], store: boolean = false): string {\n        if (store) {\n            this.allowedHtml = CoreUtils.arrayToObject(tags);\n\n            return '';\n        }\n\n        const tag = tags[0];\n\n        if (tag.substring(0, 1) != '<') {\n            // We matched a lone \">\" character.\n            return '&gt;';\n        } else if (tag.length == 1) {\n            // We matched a lone \"<\" character.\n            return '&lt;';\n        }\n\n        const matches = tag.match(/^<\\s*(\\/\\s*)?([a-zA-Z0-9-]+)\\s*([^>]*)>?|(<!--.*?-->)$/);\n        if (!matches) {\n            // Seriously malformed.\n            return '';\n        }\n\n        const slash = matches[1] ? matches[1].trim() : '';\n        const attrList = matches[3] || '';\n        const comment = matches[4] || '';\n        let elem = matches[2] || '';\n\n        if (comment) {\n            elem = '!--';\n        }\n\n        if (!this.allowedHtml[elem.toLowerCase()]) {\n            // Disallowed HTML element.\n            return '';\n        }\n\n        if (comment) {\n            return comment;\n        }\n\n        if (slash != '') {\n            return '</' + elem + '>';\n        }\n\n        // Is there a closing XHTML slash at the end of the attributes?\n        const newAttrList = attrList.replace(/(\\s?)\\/\\s*$/g, '$1');\n        const xhtmlSlash = attrList != newAttrList ? ' /' : '';\n\n        // Clean up attributes.\n        let attr2 = this.filterXssAttributes(\n            newAttrList,\n            ALLOWED_STYLEABLE_TAGS.indexOf(elem) != -1 ? this.allowedStyles : undefined,\n        ).join(' ');\n        attr2 = attr2.replace(/[<>]/g, '');\n        attr2 = attr2.length ? ' ' + attr2 : '';\n\n        return '<' + elem + attr2 + xhtmlSlash + '>';\n    }\n\n    /**\n     * Processes a string of HTML attributes.\n     *\n     * @param attr HTML attributes.\n     * @param allowedStyles Allowed styles.\n     * @returns Cleaned up version of the HTML attributes.\n     */\n    protected filterXssAttributes(attr: string, allowedStyles?: RegExp[]): string[] {\n        const attrArray: string[] = [];\n        let mode = 0;\n        let attrName = '';\n        let skip = false;\n\n        while (attr.length != 0) {\n            // Was the last operation successful?\n            let working = 0;\n            let matches: RegExpMatchArray | null = null;\n            let thisVal: string | undefined;\n\n            switch (mode) {\n                case 0:\n                    // Attribute name, href for instance.\n                    matches = attr.match(/^([-a-zA-Z]+)/);\n                    if (matches && matches.length > 1) {\n                        attrName = matches[1].toLowerCase();\n                        skip = attrName == 'style' || attrName.substring(0, 2) == 'on' || attrName.substring(0, 1) == '-' ||\n                                attrName.length > 96; // Ignore long attributes to avoid unnecessary processing overhead.\n                        working = mode = 1;\n                        attr = attr.replace(/^[-a-zA-Z]+/, '');\n                    }\n                    break;\n\n                case 1:\n                    // Equals sign or valueless (\"selected\").\n                    if (attr.match(/^\\s*=\\s*/)) {\n                        working = 1;\n                        mode = 2;\n                        attr = attr.replace(/^\\s*=\\s*/, '');\n                        break;\n                    }\n\n                    if (attr.match(/^\\s+/)) {\n                        working = 1;\n                        mode = 0;\n                        if (!skip) {\n                            attrArray.push(attrName);\n                        }\n                        attr = attr.replace(/^\\s+/, '');\n                    }\n                    break;\n\n                case 2:\n                    // Attribute value, a URL after href= for instance.\n                    matches = attr.match(/^\"([^\"]*)\"(\\s+|$)/);\n                    if (matches && matches.length > 1) {\n                        if (allowedStyles && attrName === 'style') {\n                            // Allow certain styles.\n                            for (const pattern of allowedStyles) {\n                                if (matches[1].match(pattern)) {\n                                    // All patterns are start to end patterns, and CKEditor adds one span per style.\n                                    attrArray.push('style=\"' + matches[1] + '\"');\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n\n                        thisVal = this.filterXssBadProtocol(matches[1]);\n\n                        if (!skip) {\n                            attrArray.push(attrName + '=\"' + thisVal + '\"');\n                        }\n                        working = 1;\n                        mode = 0;\n                        attr = attr.replace(/^\"[^\"]*\"(\\s+|$)/, '');\n                        break;\n                    }\n\n                    matches = attr.match(/^'([^']*)'(\\s+|$)/);\n                    if (matches && matches.length > 1) {\n                        thisVal = this.filterXssBadProtocol(matches[1]);\n\n                        if (!skip) {\n                            attrArray.push(attrName + '=\"' + thisVal + '\"');\n                        }\n                        working = 1;\n                        mode = 0;\n                        attr = attr.replace(/^'[^']*'(\\s+|$)/, '');\n                        break;\n                    }\n\n                    matches = attr.match(/^([^\\s\"']+)(\\s+|$)/);\n                    if (matches && matches.length > 1) {\n                        thisVal = this.filterXssBadProtocol(matches[1]);\n\n                        if (!skip) {\n                            attrArray.push(attrName + '=\"' + thisVal + '\"');\n                        }\n                        working = 1;\n                        mode = 0;\n                        attr = attr.replace(/^([^\\s\"']+)(\\s+|$)/, '');\n                    }\n                    break;\n\n                default:\n            }\n\n            if (working == 0) {\n                // Not well formed; remove and try again.\n                attr = attr.replace(/^(\"[^\"]*(\"|$)|'[^']*('|$)||\\S)*\\s*/, '');\n                mode = 0;\n            }\n        }\n\n        // The attribute list ends with a valueless attribute like \"selected\".\n        if (mode == 1 && !skip) {\n            attrArray.push(attrName);\n        }\n\n        return attrArray;\n    }\n\n    /**\n     * Processes an HTML attribute value and strips dangerous protocols from URLs.\n     *\n     * @param str The string with the attribute value.\n     * @param decode Whether to decode entities in the str.\n     * @returns Cleaned up and HTML-escaped version of str.\n     */\n    filterXssBadProtocol(str: string, decode: boolean = true): string {\n        // Get the plain text representation of the attribute value (i.e. its meaning).\n        if (decode) {\n            str = CoreTextUtils.decodeHTMLEntities(str);\n        }\n\n        return CoreTextUtils.escapeHTML(this.stripDangerousProtocols(str), false);\n    }\n\n    /**\n     * Strips dangerous protocols (e.g. 'javascript:') from a URI.\n     *\n     * @param uri A plain-text URI that might contain dangerous protocols.\n     * @returns A plain-text URI stripped of dangerous protocols.\n     */\n    protected stripDangerousProtocols(uri: string): string {\n\n        const allowedProtocols = {\n            ftp: true,\n            http: true,\n            https: true,\n            mailto: true,\n        };\n        let before: string | undefined;\n\n        // Iteratively remove any invalid protocol found.\n        do {\n            before = uri;\n            const colonPos = uri.indexOf(':');\n\n            if (colonPos > 0) {\n                // We found a colon, possibly a protocol. Verify.\n                const protocol = uri.substring(0, colonPos);\n                // If a colon is preceded by a slash, question mark or hash, it cannot possibly be part of the URL scheme.\n                // This must be a relative URL, which inherits the (safe) protocol of the base document.\n                if (protocol.match(/[/?#]/)) {\n                    break;\n                }\n                // Check if this is a disallowed protocol.\n                if (!allowedProtocols[protocol.toLowerCase()]) {\n                    uri = uri.substring(colonPos + 1);\n                }\n            }\n        } while (before != uri);\n\n        return uri;\n    }\n\n    /**\n     * Get metadata semantics.\n     *\n     * @returns Semantics.\n     */\n    getMetadataSemantics(): CoreH5PSemantics[] {\n\n        if (this.metadataSemantics) {\n            return this.metadataSemantics;\n        }\n\n        const ccVersions = this.getCCVersions();\n\n        this.metadataSemantics = [\n            {\n                name: 'title',\n                type: 'text',\n                label: Translate.instant('core.h5p.title'),\n                placeholder: 'La Gioconda',\n            },\n            {\n                name: 'a11yTitle',\n                type: 'text',\n                label: Translate.instant('core.h5p.a11yTitle:label'),\n                optional: true,\n            },\n            {\n                name: 'license',\n                type: 'select',\n                label: Translate.instant('core.h5p.license'),\n                default: 'U',\n                options: [\n                    {\n                        value: 'U',\n                        label: Translate.instant('core.h5p.undisclosed'),\n                    },\n                    {\n                        type: 'optgroup',\n                        label: Translate.instant('core.h5p.creativecommons'),\n                        options: [\n                            {\n                                value: 'CC BY',\n                                label: Translate.instant('core.h5p.ccattribution'),\n                                versions: ccVersions,\n                            },\n                            {\n                                value: 'CC BY-SA',\n                                label: Translate.instant('core.h5p.ccattributionsa'),\n                                versions: ccVersions,\n                            },\n                            {\n                                value: 'CC BY-ND',\n                                label: Translate.instant('core.h5p.ccattributionnd'),\n                                versions: ccVersions,\n                            },\n                            {\n                                value: 'CC BY-NC',\n                                label: Translate.instant('core.h5p.ccattributionnc'),\n                                versions: ccVersions,\n                            },\n                            {\n                                value: 'CC BY-NC-SA',\n                                label: Translate.instant('core.h5p.ccattributionncsa'),\n                                versions: ccVersions,\n                            },\n                            {\n                                value: 'CC BY-NC-ND',\n                                label: Translate.instant('core.h5p.ccattributionncnd'),\n                                versions: ccVersions,\n                            },\n                            {\n                                value: 'CC0 1.0',\n                                label: Translate.instant('core.h5p.ccpdd'),\n                            },\n                            {\n                                value: 'CC PDM',\n                                label: Translate.instant('core.h5p.pdm'),\n                            },\n                        ],\n                    },\n                    {\n                        value: 'GNU GPL',\n                        label: Translate.instant('core.h5p.gpl'),\n                    },\n                    {\n                        value: 'PD',\n                        label: Translate.instant('core.h5p.pd'),\n                    },\n                    {\n                        value: 'ODC PDDL',\n                        label: Translate.instant('core.h5p.pddl'),\n                    },\n                    {\n                        value: 'C',\n                        label: Translate.instant('core.h5p.copyrightstring'),\n                    },\n                ],\n            },\n            {\n                name: 'licenseVersion',\n                type: 'select',\n                label: Translate.instant('core.h5p.licenseversion'),\n                options: ccVersions,\n                optional: true,\n            },\n            {\n                name: 'yearFrom',\n                type: 'number',\n                label: Translate.instant('core.h5p.yearsfrom'),\n                placeholder: '1991',\n                min: -9999,\n                max: 9999,\n                optional: true,\n            },\n            {\n                name: 'yearTo',\n                type: 'number',\n                label: Translate.instant('core.h5p.yearsto'),\n                placeholder: '1992',\n                min: -9999,\n                max: 9999,\n                optional: true,\n            },\n            {\n                name: 'source',\n                type: 'text',\n                label: Translate.instant('core.h5p.source'),\n                placeholder: 'https://',\n                optional: true,\n            },\n            {\n                name: 'authors',\n                type: 'list',\n                field: {\n                    name: 'author',\n                    type: 'group',\n                    fields: [\n                        {\n                            label: Translate.instant('core.h5p.authorname'),\n                            name: 'name',\n                            optional: true,\n                            type: 'text',\n                        },\n                        {\n                            name: 'role',\n                            type: 'select',\n                            label: Translate.instant('core.h5p.authorrole'),\n                            default: 'Author',\n                            options: [\n                                {\n                                    value: 'Author',\n                                    label: Translate.instant('core.h5p.author'),\n                                },\n                                {\n                                    value: 'Editor',\n                                    label: Translate.instant('core.h5p.editor'),\n                                },\n                                {\n                                    value: 'Licensee',\n                                    label: Translate.instant('core.h5p.licensee'),\n                                },\n                                {\n                                    value: 'Originator',\n                                    label: Translate.instant('core.h5p.originator'),\n                                },\n                            ],\n                        },\n                    ],\n                },\n            },\n            {\n                name: 'licenseExtras',\n                type: 'text',\n                widget: 'textarea',\n                label: Translate.instant('core.h5p.licenseextras'),\n                optional: true,\n                description: Translate.instant('core.h5p.additionallicenseinfo'),\n            },\n            {\n                name: 'changes',\n                type: 'list',\n                field: {\n                    name: 'change',\n                    type: 'group',\n                    label: Translate.instant('core.h5p.changelog'),\n                    fields: [\n                        {\n                            name: 'date',\n                            type: 'text',\n                            label: Translate.instant('core.h5p.date'),\n                            optional: true,\n                        },\n                        {\n                            name: 'author',\n                            type: 'text',\n                            label: Translate.instant('core.h5p.changedby'),\n                            optional: true,\n                        },\n                        {\n                            name: 'log',\n                            type: 'text',\n                            widget: 'textarea',\n                            label: Translate.instant('core.h5p.changedescription'),\n                            placeholder: Translate.instant('core.h5p.changeplaceholder'),\n                            optional: true,\n                        },\n                    ],\n                },\n            },\n            {\n                name: 'authorComments',\n                type: 'text',\n                widget: 'textarea',\n                label: Translate.instant('core.h5p.authorcomments'),\n                description: Translate.instant('core.h5p.authorcommentsdescription'),\n                optional: true,\n            },\n            {\n                name: 'contentType',\n                type: 'text',\n                widget: 'none',\n            },\n            {\n                name: 'defaultLanguage',\n                type: 'text',\n                widget: 'none',\n            },\n        ];\n\n        return this.metadataSemantics;\n    }\n\n    /**\n     * Get copyright semantics.\n     *\n     * @returns Semantics.\n     */\n    getCopyrightSemantics(): CoreH5PSemantics {\n\n        if (this.copyrightSemantics) {\n            return this.copyrightSemantics;\n        }\n\n        const ccVersions = this.getCCVersions();\n\n        this.copyrightSemantics = {\n            name: 'copyright',\n            type: 'group',\n            label: Translate.instant('core.h5p.copyrightinfo'),\n            fields: [\n                {\n                    name: 'title',\n                    type: 'text',\n                    label: Translate.instant('core.h5p.title'),\n                    placeholder: 'La Gioconda',\n                    optional: true,\n                },\n                {\n                    name: 'author',\n                    type: 'text',\n                    label: Translate.instant('core.h5p.author'),\n                    placeholder: 'Leonardo da Vinci',\n                    optional: true,\n                },\n                {\n                    name: 'year',\n                    type: 'text',\n                    label: Translate.instant('core.h5p.years'),\n                    placeholder: '1503 - 1517',\n                    optional: true,\n                },\n                {\n                    name: 'source',\n                    type: 'text',\n                    label: Translate.instant('core.h5p.source'),\n                    placeholder: 'http://en.wikipedia.org/wiki/Mona_Lisa',\n                    optional: true,\n                    regexp: {\n                        pattern: '^http[s]?://.+',\n                        modifiers: 'i',\n                    },\n                },\n                {\n                    name: 'license',\n                    type: 'select',\n                    label: Translate.instant('core.h5p.license'),\n                    default: 'U',\n                    options: [\n                        {\n                            value: 'U',\n                            label: Translate.instant('core.h5p.undisclosed'),\n                        },\n                        {\n                            value: 'CC BY',\n                            label: Translate.instant('core.h5p.ccattribution'),\n                            versions: ccVersions,\n                        },\n                        {\n                            value: 'CC BY-SA',\n                            label: Translate.instant('core.h5p.ccattributionsa'),\n                            versions: ccVersions,\n                        },\n                        {\n                            value: 'CC BY-ND',\n                            label: Translate.instant('core.h5p.ccattributionnd'),\n                            versions: ccVersions,\n                        },\n                        {\n                            value: 'CC BY-NC',\n                            label: Translate.instant('core.h5p.ccattributionnc'),\n                            versions: ccVersions,\n                        },\n                        {\n                            value: 'CC BY-NC-SA',\n                            label: Translate.instant('core.h5p.ccattributionncsa'),\n                            versions: ccVersions,\n                        },\n                        {\n                            value: 'CC BY-NC-ND',\n                            label: Translate.instant('core.h5p.ccattributionncnd'),\n                            versions: ccVersions,\n                        },\n                        {\n                            value: 'GNU GPL',\n                            label: Translate.instant('core.h5p.licenseGPL'),\n                            versions: [\n                                {\n                                    value: 'v3',\n                                    label: Translate.instant('core.h5p.licenseV3'),\n                                },\n                                {\n                                    value: 'v2',\n                                    label: Translate.instant('core.h5p.licenseV2'),\n                                },\n                                {\n                                    value: 'v1',\n                                    label: Translate.instant('core.h5p.licenseV1'),\n                                },\n                            ],\n                        },\n                        {\n                            value: 'PD',\n                            label: Translate.instant('core.h5p.pd'),\n                            versions: [\n                                {\n                                    value: '-',\n                                    label: '-',\n                                },\n                                {\n                                    value: 'CC0 1.0',\n                                    label: Translate.instant('core.h5p.licenseCC010U'),\n                                },\n                                {\n                                    value: 'CC PDM',\n                                    label: Translate.instant('core.h5p.pdm'),\n                                },\n                            ],\n                        },\n                        {\n                            value: 'C',\n                            label: Translate.instant('core.h5p.copyrightstring'),\n                        },\n                    ],\n                },\n                {\n                    name: 'version',\n                    type: 'select',\n                    label: Translate.instant('core.h5p.licenseversion'),\n                    options: [],\n                },\n            ],\n        };\n\n        return this.copyrightSemantics;\n    }\n\n    /**\n     * Get CC versions for semantics.\n     *\n     * @returns CC versions.\n     */\n    protected getCCVersions(): VersionSemantics[] {\n        return [\n            {\n                value: '4.0',\n                label: Translate.instant('core.h5p.licenseCC40'),\n            },\n            {\n                value: '3.0',\n                label: Translate.instant('core.h5p.licenseCC30'),\n            },\n            {\n                value: '2.5',\n                label: Translate.instant('core.h5p.licenseCC25'),\n            },\n            {\n                value: '2.0',\n                label: Translate.instant('core.h5p.licenseCC20'),\n            },\n            {\n                value: '1.0',\n                label: Translate.instant('core.h5p.licenseCC10'),\n            },\n        ];\n    }\n\n}\n\n/**\n * Semantics of each field type. More info in https://h5p.org/semantics\n */\nexport type CoreH5PSemantics = {\n    type?: string;\n    name?: string;\n    label?: string;\n    description?: string;\n    optional?: boolean;\n    default?: string;\n    importance?: 'low' | 'medium' | 'high';\n    common?: boolean;\n    widget?: string;\n    widgets?: {\n        name: string;\n        label: string;\n    }[];\n    field?: CoreH5PSemantics;\n    fields?: CoreH5PSemantics[];\n    maxLength?: number;\n    regexp?: {\n        pattern: string;\n        modifiers: string;\n    };\n    enterMode?: 'p' | 'div';\n    tags?: string[];\n    font?: {\n        size?: unknown;\n        family?: unknown;\n        color?: unknown;\n        background?: unknown;\n        spacing?: unknown;\n        height?: unknown;\n    };\n    min?: number;\n    max?: number;\n    step?: number;\n    decimals?: number;\n    entity?: string;\n    isSubContent?: boolean;\n    expanded?: boolean;\n    options?: (string | OptionSemantics)[];\n    important?: {\n        description: string;\n        example: string;\n    };\n    multiple?: boolean;\n    extraAttributes?: string[];\n    placeholder?: string;\n};\n\ntype OptionSemantics = {\n    value?: string;\n    label?: string;\n    type?: string;\n    options?: OptionSemantics[];\n    versions?: VersionSemantics[];\n};\n\ntype VersionSemantics = {\n    value: string;\n    label: string;\n};\n\n/**\n * File like object, such as video, image, audio and file.\n */\ntype FileLike = {\n    path: string;\n    mime?: string;\n    width?: number | string;\n    height?: number | string;\n    codecs?: string;\n    bitrate?: number | string;\n    quality?: {\n        level?: string | number;\n        label?: string;\n    };\n    copyright?: unknown;\n};\n\n/**\n * Library type.\n */\ntype LibraryType = {\n    library: string;\n    params: unknown;\n    metadata?: unknown;\n    subContentId?: string;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}