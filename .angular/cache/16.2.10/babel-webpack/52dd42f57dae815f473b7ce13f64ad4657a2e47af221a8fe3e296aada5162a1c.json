{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { makeSingleton } from '@singletons';\nimport { AddonModSurveySync } from '../survey-sync';\nimport * as i0 from \"@angular/core\";\n/**\n * Synchronization cron handler.\n */\nexport class AddonModSurveySyncCronHandlerService {\n  constructor() {\n    this.name = 'AddonModSurveySyncCronHandler';\n  }\n  /**\n   * @inheritdoc\n   */\n  execute(siteId, force) {\n    return _asyncToGenerator(function* () {\n      yield AddonModSurveySync.syncAllSurveys(siteId, force);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getInterval() {\n    return AddonModSurveySync.syncInterval;\n  }\n}\n_class = AddonModSurveySyncCronHandlerService;\n_class.ɵfac = function AddonModSurveySyncCronHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModSurveySyncCronHandler = makeSingleton(AddonModSurveySyncCronHandlerService);","map":{"version":3,"names":["makeSingleton","AddonModSurveySync","AddonModSurveySyncCronHandlerService","constructor","name","execute","siteId","force","_asyncToGenerator","syncAllSurveys","getInterval","syncInterval","factory","ɵfac","providedIn","AddonModSurveySyncCronHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/survey/services/handlers/sync-cron.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCronHandler } from '@services/cron';\nimport { makeSingleton } from '@singletons';\nimport { AddonModSurveySync } from '../survey-sync';\n\n/**\n * Synchronization cron handler.\n */\n@Injectable( { providedIn: 'root' })\nexport class AddonModSurveySyncCronHandlerService implements CoreCronHandler {\n\n    name = 'AddonModSurveySyncCronHandler';\n\n    /**\n     * @inheritdoc\n     */\n    async execute(siteId?: string, force?: boolean): Promise<void> {\n        await AddonModSurveySync.syncAllSurveys(siteId, force);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getInterval(): number {\n        return AddonModSurveySync.syncInterval;\n    }\n\n}\nexport const AddonModSurveySyncCronHandler = makeSingleton(AddonModSurveySyncCronHandlerService);\n"],"mappings":";;AAgBA,SAASA,aAAa,QAAQ,aAAa;AAC3C,SAASC,kBAAkB,QAAQ,gBAAgB;;AAEnD;;;AAIA,OAAM,MAAOC,oCAAoC;EADjDC,YAAA;IAGI,KAAAC,IAAI,GAAG,+BAA+B;;EAEtC;;;EAGMC,OAAOA,CAACC,MAAe,EAAEC,KAAe;IAAA,OAAAC,iBAAA;MAC1C,MAAMP,kBAAkB,CAACQ,cAAc,CAACH,MAAM,EAAEC,KAAK,CAAC;IAAC;EAC3D;EAEA;;;EAGAG,WAAWA,CAAA;IACP,OAAOT,kBAAkB,CAACU,YAAY;EAC1C;;SAhBST,oCAAoC;;mBAApCA,MAAoC;AAAA;;SAApCA,MAAoC;EAAAU,OAAA,EAApCV,MAAoC,CAAAW,IAAA;EAAAC,UAAA,EADtB;AAAM;AAoBjC,OAAO,MAAMC,6BAA6B,GAAGf,aAAa,CAACE,oCAAoC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}