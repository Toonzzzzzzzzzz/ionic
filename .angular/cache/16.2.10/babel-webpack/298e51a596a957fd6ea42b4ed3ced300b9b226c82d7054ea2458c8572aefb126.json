{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Default handler used when a feedback plugin doesn't have a specific implementation.\n */\nexport class AddonModAssignDefaultFeedbackHandler {\n  constructor() {\n    this.name = 'AddonModAssignDefaultFeedbackHandler';\n    this.type = 'default';\n  }\n  /**\n   * @inheritdoc\n   */\n  discardDraft() {\n    // Nothing to do.\n  }\n  /**\n   * @inheritdoc\n   */\n  getDraft() {\n    // Nothing to do.\n    return;\n  }\n  /**\n   * @inheritdoc\n   */\n  getPluginFiles() {\n    return [];\n  }\n  /**\n   * @inheritdoc\n   */\n  getPluginName(plugin) {\n    // Check if there's a translated string for the plugin.\n    const translationId = 'addon.mod_assign_feedback_' + plugin.type + '.pluginname';\n    const translation = Translate.instant(translationId);\n    if (translationId != translation) {\n      // Translation found, use it.\n      return translation;\n    }\n    // Fallback to WS string.\n    if (plugin.name) {\n      return plugin.name;\n    }\n    return '';\n  }\n  /**\n   * @inheritdoc\n   */\n  hasDataChanged() {\n    return false;\n  }\n  /**\n   * @inheritdoc\n   */\n  hasDraftData() {\n    return false;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  prefetch() {\n    return _asyncToGenerator(function* () {\n      return;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  prepareFeedbackData() {\n    // Nothing to do.\n  }\n  /**\n   * @inheritdoc\n   */\n  saveDraft() {\n    // Nothing to do.\n  }\n}\n_class = AddonModAssignDefaultFeedbackHandler;\n_class.ɵfac = function AddonModAssignDefaultFeedbackHandler_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Translate","AddonModAssignDefaultFeedbackHandler","constructor","name","type","discardDraft","getDraft","getPluginFiles","getPluginName","plugin","translationId","translation","instant","hasDataChanged","hasDraftData","isEnabled","_asyncToGenerator","prefetch","prepareFeedbackData","saveDraft","factory","ɵfac","providedIn"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/services/handlers/default-feedback.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreWSFile } from '@services/ws';\nimport { Translate } from '@singletons';\nimport { AddonModAssignPlugin } from '../assign';\nimport { AddonModAssignFeedbackHandler } from '../feedback-delegate';\n\n/**\n * Default handler used when a feedback plugin doesn't have a specific implementation.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModAssignDefaultFeedbackHandler implements AddonModAssignFeedbackHandler {\n\n    name = 'AddonModAssignDefaultFeedbackHandler';\n    type = 'default';\n\n    /**\n     * @inheritdoc\n     */\n    discardDraft(): void {\n        // Nothing to do.\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getDraft(): undefined {\n        // Nothing to do.\n        return;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getPluginFiles(): CoreWSFile[] {\n        return [];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getPluginName(plugin: AddonModAssignPlugin): string {\n        // Check if there's a translated string for the plugin.\n        const translationId = 'addon.mod_assign_feedback_' + plugin.type + '.pluginname';\n        const translation = Translate.instant(translationId);\n\n        if (translationId != translation) {\n            // Translation found, use it.\n            return translation;\n        }\n\n        // Fallback to WS string.\n        if (plugin.name) {\n            return plugin.name;\n        }\n\n        return '';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    hasDataChanged(): boolean {\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    hasDraftData(): boolean {\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async prefetch(): Promise<void> {\n        return;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    prepareFeedbackData(): void {\n        // Nothing to do.\n    }\n\n    /**\n     * @inheritdoc\n     */\n    saveDraft(): void {\n        // Nothing to do.\n    }\n\n}\n"],"mappings":";;AAgBA,SAASA,SAAS,QAAQ,aAAa;;AAIvC;;;AAIA,OAAM,MAAOC,oCAAoC;EADjDC,YAAA;IAGI,KAAAC,IAAI,GAAG,sCAAsC;IAC7C,KAAAC,IAAI,GAAG,SAAS;;EAEhB;;;EAGAC,YAAYA,CAAA;IACR;EAAA;EAGJ;;;EAGAC,QAAQA,CAAA;IACJ;IACA;EACJ;EAEA;;;EAGAC,cAAcA,CAAA;IACV,OAAO,EAAE;EACb;EAEA;;;EAGAC,aAAaA,CAACC,MAA4B;IACtC;IACA,MAAMC,aAAa,GAAG,4BAA4B,GAAGD,MAAM,CAACL,IAAI,GAAG,aAAa;IAChF,MAAMO,WAAW,GAAGX,SAAS,CAACY,OAAO,CAACF,aAAa,CAAC;IAEpD,IAAIA,aAAa,IAAIC,WAAW,EAAE;MAC9B;MACA,OAAOA,WAAW;;IAGtB;IACA,IAAIF,MAAM,CAACN,IAAI,EAAE;MACb,OAAOM,MAAM,CAACN,IAAI;;IAGtB,OAAO,EAAE;EACb;EAEA;;;EAGAU,cAAcA,CAAA;IACV,OAAO,KAAK;EAChB;EAEA;;;EAGAC,YAAYA,CAAA;IACR,OAAO,KAAK;EAChB;EAEA;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGMC,QAAQA,CAAA;IAAA,OAAAD,iBAAA;MACV;IAAO;EACX;EAEA;;;EAGAE,mBAAmBA,CAAA;IACf;EAAA;EAGJ;;;EAGAC,SAASA,CAAA;IACL;EAAA;;SAvFKlB,oCAAoC;;mBAApCA,MAAoC;AAAA;;SAApCA,MAAoC;EAAAmB,OAAA,EAApCnB,MAAoC,CAAAoB,IAAA;EAAAC,UAAA,EADvB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}