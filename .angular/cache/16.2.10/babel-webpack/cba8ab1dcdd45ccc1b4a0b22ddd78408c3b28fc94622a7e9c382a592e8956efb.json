{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { CoreSites } from '@services/sites';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { CoreH5PFileStorage } from './file-storage';\nimport { CoreH5PContentValidator } from './content-validator';\nimport { Translate } from '@singletons';\nimport { CorePath } from '@singletons/path';\n/**\n * Equivalent to H5P's H5PCore class.\n */\nexport class CoreH5PCore {\n  constructor(h5pFramework) {\n    this.h5pFramework = h5pFramework;\n    this.aggregateAssets = true;\n    this.h5pFS = new CoreH5PFileStorage();\n  }\n  /**\n   * Determine the correct embed type to use.\n   *\n   * @param contentEmbedType Type of the content.\n   * @param libraryEmbedTypes Type of the main library.\n   * @returns Either 'div' or 'iframe'.\n   */\n  static determineEmbedType(contentEmbedType, libraryEmbedTypes) {\n    // Detect content embed type.\n    let embedType = contentEmbedType.toLowerCase().indexOf('div') != -1 ? 'div' : 'iframe';\n    if (libraryEmbedTypes) {\n      // Check that embed type is available for library\n      const embedTypes = libraryEmbedTypes.toLowerCase();\n      if (embedTypes.indexOf(embedType) == -1) {\n        // Not available, pick default.\n        embedType = embedTypes.indexOf('div') != -1 ? 'div' : 'iframe';\n      }\n    }\n    return embedType;\n  }\n  /**\n   * Get the hash of a list of dependencies.\n   *\n   * @param dependencies Dependencies.\n   * @returns Hash.\n   */\n  static getDependenciesHash(dependencies) {\n    // Build hash of dependencies.\n    const toHash = [];\n    // Use unique identifier for each library version.\n    for (const name in dependencies) {\n      const dep = dependencies[name];\n      toHash.push(dep.machineName + '-' + dep.majorVersion + '.' + dep.minorVersion + '.' + dep.patchVersion);\n    }\n    // Sort in case the same dependencies comes in a different order.\n    toHash.sort((a, b) => a.localeCompare(b));\n    // Calculate hash.\n    return Md5.hashAsciiStr(toHash.join(''));\n  }\n  /**\n   * Get core JavaScript files.\n   *\n   * @returns array The array containg urls of the core JavaScript files:\n   */\n  static getScripts() {\n    const libUrl = CoreH5P.h5pCore.h5pFS.getCoreH5PPath();\n    const urls = [];\n    CoreH5PCore.SCRIPTS.forEach(script => {\n      urls.push(libUrl + script);\n    });\n    urls.push(CorePath.concatenatePaths(libUrl, 'moodle/js/h5p_overrides.js'));\n    return urls;\n  }\n  /**\n   * Parses library data from a string on the form {machineName} {majorVersion}.{minorVersion}.\n   *\n   * @param libraryString On the form {machineName} {majorVersion}.{minorVersion}\n   * @returns Object with keys machineName, majorVersion and minorVersion. Null if string is not parsable.\n   */\n  static libraryFromString(libraryString) {\n    const matches = libraryString.match(/^([\\w0-9\\-.]{1,255})[- ]([0-9]{1,5})\\.([0-9]{1,5})$/i);\n    if (matches && matches.length >= 4) {\n      return {\n        machineName: matches[1],\n        majorVersion: Number(matches[2]),\n        minorVersion: Number(matches[3])\n      };\n    }\n    return null;\n  }\n  /**\n   * Writes library data as string on the form {machineName} {majorVersion}.{minorVersion}.\n   *\n   * @param library Library data.\n   * @returns String on the form {machineName} {majorVersion}.{minorVersion}.\n   */\n  static libraryToString(library) {\n    const name = 'machineName' in library ? library.machineName : library.name;\n    return `${name} ${library.majorVersion}.${library.minorVersion}`;\n  }\n  /**\n   * Get the name of a library's folder name\n   *\n   * @param library Library data.\n   * @returns Folder name.\n   */\n  static libraryToFolderName(library) {\n    const name = 'machineName' in library ? library.machineName : library.name;\n    // In LMS, a property named patchVersionInFolderName is checked here. This property is only used to retrieve some icons when\n    // using the editor, and it isn't stored in DB. The check wasn't included here because the app will never have that prop.\n    return `${name}-${library.majorVersion}.${library.minorVersion}`;\n  }\n  /**\n   * Convert strings of text into simple kebab case slugs. Based on H5PCore::slugify.\n   *\n   * @param input The string to slugify.\n   * @returns Slugified text.\n   */\n  static slugify(input) {\n    input = input || '';\n    input = input.toLowerCase();\n    // Replace common chars.\n    let newInput = '';\n    for (let i = 0; i < input.length; i++) {\n      const char = input[i];\n      newInput += CoreH5PCore.SLUGIFY_MAP[char] || char;\n    }\n    // Replace everything else.\n    newInput = newInput.replace(/[^a-z0-9]/g, '-');\n    // Prevent double hyphen\n    newInput = newInput.replace(/-{2,}/g, '-');\n    // Prevent hyphen in beginning or end.\n    newInput = newInput.replace(/(^-+|-+$)/g, '');\n    // Prevent too long slug.\n    if (newInput.length > 91) {\n      newInput = newInput.substring(0, 92);\n    }\n    // Prevent empty slug\n    if (newInput === '') {\n      newInput = 'interactive';\n    }\n    return newInput;\n  }\n  /**\n   * Filter content run parameters and rebuild content dependency cache.\n   *\n   * @param content Content data.\n   * @param siteId Site ID. If not defined, current site.\n   * @returns Promise resolved with the filtered params, resolved with null if error.\n   */\n  filterParameters(content, siteId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      siteId = siteId || CoreSites.getCurrentSiteId();\n      if (content.filtered) {\n        return content.filtered;\n      }\n      if (content.library === undefined || content.params === undefined) {\n        return null;\n      }\n      const params = {\n        library: CoreH5PCore.libraryToString(content.library),\n        params: CoreTextUtils.parseJSON(content.params, false)\n      };\n      if (!params.params) {\n        return null;\n      }\n      try {\n        const validator = new CoreH5PContentValidator(siteId);\n        // Validate the main library and its dependencies.\n        yield validator.validateLibrary(params, {\n          options: [params.library]\n        });\n        // Handle addons.\n        const addons = yield _this.h5pFramework.loadAddons(siteId);\n        // Validate addons.\n        for (const i in addons) {\n          var _addon$addTo;\n          const addon = addons[i];\n          if ((_addon$addTo = addon.addTo) !== null && _addon$addTo !== void 0 && (_addon$addTo = _addon$addTo.content) !== null && _addon$addTo !== void 0 && (_addon$addTo = _addon$addTo.types) !== null && _addon$addTo !== void 0 && _addon$addTo.length) {\n            for (let i = 0; i < addon.addTo.content.types.length; i++) {\n              var _type$text;\n              const type = addon.addTo.content.types[i];\n              let regex = type === null || type === void 0 || (_type$text = type.text) === null || _type$text === void 0 ? void 0 : _type$text.regex;\n              if (regex && regex[0] === '/' && regex.slice(-1) === '/') {\n                // Regex designed for PHP. Remove the starting and ending slashes to convert them to JS format.\n                regex = regex.substring(1, regex.length - 1);\n              }\n              if (regex && _this.textAddonMatches(params.params, regex)) {\n                yield validator.addon(addon);\n                // An addon shall only be added once.\n                break;\n              }\n            }\n          }\n        }\n        // Update content dependencies.\n        content.dependencies = validator.getDependencies();\n        const paramsStr = JSON.stringify(params.params);\n        // Sometimes the parameters are filtered before content has been created\n        if (content.id) {\n          // Update library usage.\n          try {\n            yield _this.h5pFramework.deleteLibraryUsage(content.id, siteId);\n          } catch (_unused) {\n            // Ignore errors.\n          }\n          yield _this.h5pFramework.saveLibraryUsage(content.id, content.dependencies, siteId);\n          if (!content.slug) {\n            content.slug = _this.generateContentSlug(content);\n          }\n          // Cache.\n          yield _this.h5pFramework.updateContentFields(content.id, {\n            filtered: paramsStr\n          }, siteId);\n        }\n        return paramsStr;\n      } catch (error) {\n        return null;\n      }\n    })();\n  }\n  /**\n   * Recursive. Goes through the dependency tree for the given library and\n   * adds all the dependencies to the given array in a flat format.\n   *\n   * @param dependencies Object where to save the dependencies.\n   * @param library The library to find all dependencies for.\n   * @param nextWeight An integer determining the order of the libraries when they are loaded.\n   * @param editor Used internally to force all preloaded sub dependencies of an editor dependency to be editor dependencies.\n   * @param siteId Site ID. If not defined, current site.\n   * @returns Promise resolved with the next weight.\n   */\n  findLibraryDependencies(dependencies, library, nextWeight = 1, editor = false, siteId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      siteId = siteId || CoreSites.getCurrentSiteId();\n      const types = ['dynamic', 'preloaded', 'editor'];\n      for (const i in types) {\n        let type = types[i];\n        const property = type + 'Dependencies';\n        if (!library[property]) {\n          continue; // Skip, no such dependencies.\n        }\n\n        if (type === 'preloaded' && editor) {\n          // All preloaded dependencies of an editor library is set to editor.\n          type = 'editor';\n        }\n        for (const j in library[property]) {\n          const dependency = library[property][j];\n          const dependencyKey = type + '-' + dependency.machineName;\n          if (dependencies[dependencyKey]) {\n            continue; // Skip, already have this.\n          }\n          // Get the dependency library data and its subdependencies.\n          const dependencyLibrary = yield _this2.loadLibrary(dependency.machineName, dependency.majorVersion, dependency.minorVersion, siteId);\n          dependencies[dependencyKey] = {\n            library: dependencyLibrary,\n            type: type\n          };\n          // Get all its subdependencies.\n          const weight = yield _this2.findLibraryDependencies(dependencies, dependencyLibrary, nextWeight, type === 'editor', siteId);\n          nextWeight = weight;\n          dependencies[dependencyKey].weight = nextWeight++;\n        }\n      }\n      return nextWeight;\n    })();\n  }\n  /**\n   * Validate and fix display options, updating them if needed.\n   *\n   * @param displayOptions The display options to validate.\n   * @param id Package ID.\n   * @returns Display Options.\n   */\n  fixDisplayOptions(displayOptions, id) {\n    displayOptions = displayOptions || {};\n    // Never allow downloading in the app.\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_DOWNLOAD] = false;\n    // Never show the embed option in the app.\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_EMBED] = false;\n    if (!this.h5pFramework.getOption(CoreH5PCore.DISPLAY_OPTION_FRAME, true)) {\n      displayOptions[CoreH5PCore.DISPLAY_OPTION_FRAME] = false;\n    } else if (this.h5pFramework.getOption(CoreH5PCore.DISPLAY_OPTION_COPYRIGHT, true) == false) {\n      displayOptions[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT] = false;\n    }\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_COPY] = this.h5pFramework.hasPermission(CoreH5PPermission.COPY_H5P, id);\n    return displayOptions;\n  }\n  /**\n   * Parses library data from a string on the form {machineName} {majorVersion}.{minorVersion}.\n   *\n   * @param content On the form {machineName} {majorVersion}.{minorVersion}\n   * @returns Object with keys machineName, majorVersion and minorVersion. Null if string is not parsable.\n   */\n  generateContentSlug(content) {\n    let slug = CoreH5PCore.slugify(content.title);\n    let available = null;\n    while (!available) {\n      if (available === false) {\n        // If not available, add number suffix.\n        const matches = slug.match(/(.+-)([0-9]+)$/);\n        if (matches) {\n          slug = matches[1] + (Number(matches[2]) + 1);\n        } else {\n          slug += '-2';\n        }\n      }\n      available = this.h5pFramework.isContentSlugAvailable(slug);\n    }\n    return slug;\n  }\n  /**\n   * Combines path with version.\n   *\n   * @param assets List of assets to get their URLs.\n   * @param assetsFolderPath The path of the folder where the assets are.\n   * @returns List of urls.\n   */\n  getAssetsUrls(assets, assetsFolderPath = '') {\n    const urls = [];\n    assets.forEach(asset => {\n      let url = asset.path;\n      // Add URL prefix if not external.\n      if (asset.path.indexOf('://') == -1 && assetsFolderPath) {\n        url = CorePath.concatenatePaths(assetsFolderPath, url);\n      }\n      // Add version if set.\n      if (asset.version) {\n        url += asset.version;\n      }\n      urls.push(url);\n    });\n    return urls;\n  }\n  /**\n   * Return file paths for all dependencies files.\n   *\n   * @param dependencies The dependencies to get the files.\n   * @param folderName Name of the folder of the content.\n   * @param prefix Make paths relative to another dir.\n   * @param siteId The site ID. If not defined, current site.\n   * @returns Promise resolved with the files.\n   */\n  getDependenciesFiles(dependencies, folderName, prefix = '', siteId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      siteId = siteId || CoreSites.getCurrentSiteId();\n      // Build files list for assets.\n      const files = {\n        scripts: [],\n        styles: []\n      };\n      // Avoid caching empty files.\n      if (!Object.keys(dependencies).length) {\n        return files;\n      }\n      let cachedAssetsHash = '';\n      if (_this3.aggregateAssets) {\n        // Get aggregated files for assets.\n        cachedAssetsHash = CoreH5PCore.getDependenciesHash(dependencies);\n        const cachedAssets = yield _this3.h5pFS.getCachedAssets(cachedAssetsHash);\n        if (cachedAssets) {\n          // Cached assets found, return them.\n          return Object.assign(files, cachedAssets);\n        }\n      }\n      // No cached assets, use content dependencies.\n      for (const key in dependencies) {\n        const dependency = dependencies[key];\n        if (!dependency.path) {\n          dependency.path = _this3.h5pFS.getDependencyPath(dependency);\n          dependency.preloadedJs = dependency.preloadedJs.split(',');\n          dependency.preloadedCss = dependency.preloadedCss.split(',');\n        }\n        dependency.version = '?ver=' + dependency.majorVersion + '.' + dependency.minorVersion + '.' + dependency.patchVersion;\n        _this3.getDependencyAssets(dependency, 'preloadedJs', files.scripts, prefix);\n        _this3.getDependencyAssets(dependency, 'preloadedCss', files.styles, prefix);\n      }\n      if (_this3.aggregateAssets) {\n        // Aggregate and store assets.\n        yield _this3.h5pFS.cacheAssets(files, cachedAssetsHash, folderName, siteId);\n        // Keep track of which libraries have been cached in case they are updated.\n        yield _this3.h5pFramework.saveCachedAssets(cachedAssetsHash, dependencies, folderName, siteId);\n      }\n      return files;\n    })();\n  }\n  /**\n   * Get the paths to the content dependencies.\n   *\n   * @param id The H5P content ID.\n   * @param siteId The site ID. If not defined, current site.\n   * @returns Promise resolved with an object containing the path of each content dependency.\n   */\n  getDependencyRoots(id, siteId) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      siteId = siteId || CoreSites.getCurrentSiteId();\n      const roots = {};\n      const dependencies = yield _this4.h5pFramework.loadContentDependencies(id, undefined, siteId);\n      for (const machineName in dependencies) {\n        const dependency = dependencies[machineName];\n        const folderName = CoreH5PCore.libraryToFolderName(dependency);\n        roots[folderName] = _this4.h5pFS.getLibraryFolderPath(dependency, siteId, folderName);\n      }\n      return roots;\n    })();\n  }\n  /**\n   * Get all dependency assets of the given type.\n   *\n   * @param dependency The dependency.\n   * @param type Type of assets to get.\n   * @param assets Array where to store the assets.\n   * @param prefix Make paths relative to another dir.\n   */\n  getDependencyAssets(dependency, type, assets, prefix = '') {\n    // Check if dependency has any files of this type\n    if (!dependency[type] || dependency[type][0] === '') {\n      return;\n    }\n    // Check if we should skip CSS.\n    if (type === 'preloadedCss' && CoreUtils.isTrueOrOne(dependency.dropCss)) {\n      return;\n    }\n    for (const key in dependency[type]) {\n      const file = dependency[type][key];\n      assets.push({\n        path: prefix + '/' + dependency.path + '/' + (typeof file != 'string' ? file.path : file).trim(),\n        version: dependency.version || ''\n      });\n    }\n  }\n  /**\n   * Convert display options to an object.\n   *\n   * @param disable Display options as a number.\n   * @returns Display options as object.\n   */\n  getDisplayOptionsAsObject(disable) {\n    const displayOptions = {};\n    // eslint-disable-next-line no-bitwise\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_FRAME] = !(disable & CoreH5PCore.DISABLE_FRAME);\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_DOWNLOAD] = false; // Never allow downloading in the app.\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_EMBED] = false; // Never show the embed option in the app.\n    // eslint-disable-next-line no-bitwise\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT] = !(disable & CoreH5PCore.DISABLE_COPYRIGHT);\n    displayOptions[CoreH5PCore.DISPLAY_OPTION_ABOUT] = !!this.h5pFramework.getOption(CoreH5PCore.DISPLAY_OPTION_ABOUT, true);\n    return displayOptions;\n  }\n  /**\n   * Determine display option visibility when viewing H5P\n   *\n   * @param disable The display options as a number.\n   * @param id Package ID.\n   * @returns Display options as object.\n   */\n  getDisplayOptionsForView(disable, id) {\n    return this.fixDisplayOptions(this.getDisplayOptionsAsObject(disable), id);\n  }\n  /**\n   * Provide localization for the Core JS.\n   *\n   * @returns Object with the translations.\n   */\n  getLocalization() {\n    // Some strings weren't included in the app because they were strictly related to the H5P Content Hub.\n    return {\n      fullscreen: Translate.instant('core.h5p.fullscreen'),\n      disableFullscreen: Translate.instant('core.h5p.disablefullscreen'),\n      download: Translate.instant('core.h5p.download'),\n      copyrights: Translate.instant('core.h5p.copyright'),\n      embed: Translate.instant('core.h5p.embed'),\n      size: Translate.instant('core.h5p.size'),\n      showAdvanced: Translate.instant('core.h5p.showadvanced'),\n      hideAdvanced: Translate.instant('core.h5p.hideadvanced'),\n      advancedHelp: Translate.instant('core.h5p.resizescript'),\n      copyrightInformation: Translate.instant('core.h5p.copyright'),\n      close: Translate.instant('core.h5p.close'),\n      title: Translate.instant('core.h5p.title'),\n      author: Translate.instant('core.h5p.author'),\n      year: Translate.instant('core.h5p.year'),\n      source: Translate.instant('core.h5p.source'),\n      license: Translate.instant('core.h5p.license'),\n      thumbnail: Translate.instant('core.h5p.thumbnail'),\n      noCopyrights: Translate.instant('core.h5p.nocopyright'),\n      reuse: Translate.instant('core.h5p.reuse'),\n      reuseContent: Translate.instant('core.h5p.reuseContent'),\n      reuseDescription: Translate.instant('core.h5p.reuseDescription'),\n      downloadDescription: Translate.instant('core.h5p.downloadtitle'),\n      copyrightsDescription: Translate.instant('core.h5p.copyrighttitle'),\n      embedDescription: Translate.instant('core.h5p.embedtitle'),\n      h5pDescription: Translate.instant('core.h5p.h5ptitle'),\n      contentChanged: Translate.instant('core.h5p.contentchanged'),\n      startingOver: Translate.instant('core.h5p.startingover'),\n      by: Translate.instant('core.h5p.by'),\n      showMore: Translate.instant('core.h5p.showmore'),\n      showLess: Translate.instant('core.h5p.showless'),\n      subLevel: Translate.instant('core.h5p.sublevel'),\n      confirmDialogHeader: Translate.instant('core.h5p.confirmdialogheader'),\n      confirmDialogBody: Translate.instant('core.h5p.confirmdialogbody'),\n      cancelLabel: Translate.instant('core.h5p.cancellabel'),\n      confirmLabel: Translate.instant('core.h5p.confirmlabel'),\n      licenseU: Translate.instant('core.h5p.undisclosed'),\n      licenseCCBY: Translate.instant('core.h5p.ccattribution'),\n      licenseCCBYSA: Translate.instant('core.h5p.ccattributionsa'),\n      licenseCCBYND: Translate.instant('core.h5p.ccattributionnd'),\n      licenseCCBYNC: Translate.instant('core.h5p.ccattributionnc'),\n      licenseCCBYNCSA: Translate.instant('core.h5p.ccattributionncsa'),\n      licenseCCBYNCND: Translate.instant('core.h5p.ccattributionncnd'),\n      licenseCC40: Translate.instant('core.h5p.licenseCC40'),\n      licenseCC30: Translate.instant('core.h5p.licenseCC30'),\n      licenseCC25: Translate.instant('core.h5p.licenseCC25'),\n      licenseCC20: Translate.instant('core.h5p.licenseCC20'),\n      licenseCC10: Translate.instant('core.h5p.licenseCC10'),\n      licenseGPL: Translate.instant('core.h5p.licenseGPL'),\n      licenseV3: Translate.instant('core.h5p.licenseV3'),\n      licenseV2: Translate.instant('core.h5p.licenseV2'),\n      licenseV1: Translate.instant('core.h5p.licenseV1'),\n      licensePD: Translate.instant('core.h5p.pd'),\n      licenseCC010: Translate.instant('core.h5p.licenseCC010'),\n      licensePDM: Translate.instant('core.h5p.pdm'),\n      licenseC: Translate.instant('core.h5p.copyrightstring'),\n      contentType: Translate.instant('core.h5p.contenttype'),\n      licenseExtras: Translate.instant('core.h5p.licenseextras'),\n      changes: Translate.instant('core.h5p.changelog'),\n      contentCopied: Translate.instant('core.h5p.contentCopied'),\n      connectionLost: Translate.instant('core.h5p.connectionLost'),\n      connectionReestablished: Translate.instant('core.h5p.connectionReestablished'),\n      resubmitScores: Translate.instant('core.h5p.resubmitScores'),\n      offlineDialogHeader: Translate.instant('core.h5p.offlineDialogHeader'),\n      offlineDialogBody: Translate.instant('core.h5p.offlineDialogBody'),\n      offlineDialogRetryMessage: Translate.instant('core.h5p.offlineDialogRetryMessage'),\n      offlineDialogRetryButtonLabel: Translate.instant('core.h5p.offlineDialogRetryButtonLabel'),\n      offlineSuccessfulSubmit: Translate.instant('core.h5p.offlineSuccessfulSubmit'),\n      mainTitle: Translate.instant('core.h5p.mainTitle'),\n      editInfoTitle: Translate.instant('core.h5p.editInfoTitle'),\n      cancel: Translate.instant('core.h5p.cancellabel'),\n      back: Translate.instant('core.h5p.back'),\n      next: Translate.instant('core.h5p.next'),\n      reviewInfo: Translate.instant('core.h5p.reviewInfo'),\n      share: Translate.instant('core.h5p.share'),\n      saveChanges: Translate.instant('core.h5p.saveChanges'),\n      requiredInfo: Translate.instant('core.h5p.requiredInfo'),\n      optionalInfo: Translate.instant('core.h5p.optionalInfo'),\n      reviewAndShare: Translate.instant('core.h5p.reviewAndShare'),\n      reviewAndSave: Translate.instant('core.h5p.reviewAndSave'),\n      shared: Translate.instant('core.h5p.shared'),\n      currentStep: Translate.instant('core.h5p.currentStep'),\n      sharingNote: Translate.instant('core.h5p.sharingNote'),\n      licenseDescription: Translate.instant('core.h5p.licenseDescription'),\n      licenseVersion: Translate.instant('core.h5p.licenseversion'),\n      licenseVersionDescription: Translate.instant('core.h5p.licenseVersionDescription'),\n      disciplineLabel: Translate.instant('core.h5p.disciplineLabel'),\n      disciplineDescription: Translate.instant('core.h5p.disciplineDescription'),\n      disciplineLimitReachedMessage: Translate.instant('core.h5p.disciplineLimitReachedMessage'),\n      discipline: {\n        searchPlaceholder: Translate.instant('core.h5p.discipline:searchPlaceholder'),\n        in: Translate.instant('core.h5p.discipline:in'),\n        dropdownButton: Translate.instant('core.h5p.discipline:dropdownButton')\n      },\n      removeChip: Translate.instant('core.h5p.removeChip'),\n      keywordsPlaceholder: Translate.instant('core.h5p.keywordsPlaceholder'),\n      keywords: Translate.instant('core.h5p.keywords'),\n      keywordsDescription: Translate.instant('core.h5p.keywordsDescription'),\n      altText: Translate.instant('core.h5p.altText'),\n      reviewMessage: Translate.instant('core.h5p.reviewMessage'),\n      subContentWarning: Translate.instant('core.h5p.subContentWarning'),\n      disciplines: Translate.instant('core.h5p.disciplines'),\n      shortDescription: Translate.instant('core.h5p.shortDescription'),\n      longDescription: Translate.instant('core.h5p.longDescription'),\n      icon: Translate.instant('core.h5p.icon'),\n      screenshots: Translate.instant('core.h5p.screenshots'),\n      helpChoosingLicense: Translate.instant('core.h5p.helpChoosingLicense'),\n      shareFailed: Translate.instant('core.h5p.shareFailed'),\n      editingFailed: Translate.instant('core.h5p.editingFailed'),\n      shareTryAgain: Translate.instant('core.h5p.shareTryAgain'),\n      pleaseWait: Translate.instant('core.h5p.pleaseWait'),\n      language: Translate.instant('core.h5p.language'),\n      level: Translate.instant('core.h5p.level'),\n      shortDescriptionPlaceholder: Translate.instant('core.h5p.shortDescriptionPlaceholder'),\n      longDescriptionPlaceholder: Translate.instant('core.h5p.longDescriptionPlaceholder'),\n      description: Translate.instant('core.h5p.description'),\n      iconDescription: Translate.instant('core.h5p.iconDescription'),\n      screenshotsDescription: Translate.instant('core.h5p.screenshotsDescription'),\n      submitted: Translate.instant('core.h5p.submitted'),\n      contentLicenseTitle: Translate.instant('core.h5p.contentLicenseTitle'),\n      licenseDialogDescription: Translate.instant('core.h5p.licenseDialogDescription'),\n      publisherFieldTitle: Translate.instant('core.h5p.publisherFieldTitle'),\n      publisherFieldDescription: Translate.instant('core.h5p.publisherFieldDescription'),\n      emailAddress: Translate.instant('core.h5p.emailAddress'),\n      publisherDescription: Translate.instant('core.h5p.publisherDescription'),\n      publisherDescriptionText: Translate.instant('core.h5p.publisherDescriptionText'),\n      contactPerson: Translate.instant('core.h5p.contactPerson'),\n      phone: Translate.instant('core.h5p.phone'),\n      address: Translate.instant('core.h5p.address'),\n      city: Translate.instant('core.h5p.city'),\n      zip: Translate.instant('core.h5p.zip'),\n      country: Translate.instant('core.h5p.country'),\n      logoUploadText: Translate.instant('core.h5p.logoUploadText'),\n      acceptTerms: Translate.instant('core.h5p.acceptTerms'),\n      accountDetailsLinkText: Translate.instant('core.h5p.accountDetailsLinkText'),\n      maxLength: Translate.instant('core.h5p.maxLength'),\n      keywordExists: Translate.instant('core.h5p.keywordExists'),\n      licenseDetails: Translate.instant('core.h5p.licenseDetails'),\n      remove: Translate.instant('core.h5p.remove'),\n      removeImage: Translate.instant('core.h5p.removeImage'),\n      cancelPublishConfirmationDialogTitle: Translate.instant('core.h5p.removeImage'),\n      cancelPublishConfirmationDialogDescription: Translate.instant('core.h5p.removeImage'),\n      cancelPublishConfirmationDialogCancelButtonText: Translate.instant('core.h5p.removeImage'),\n      cancelPublishConfirmationDialogConfirmButtonText: Translate.instant('core.h5p.removeImage'),\n      add: Translate.instant('core.h5p.add'),\n      age: Translate.instant('core.h5p.age'),\n      ageDescription: Translate.instant('core.h5p.ageDescription'),\n      invalidAge: Translate.instant('core.h5p.invalidAge'),\n      keywordsExits: Translate.instant('core.h5p.keywordsExits'),\n      someKeywordsExits: Translate.instant('core.h5p.someKeywordsExits'),\n      width: Translate.instant('core.h5p.width'),\n      height: Translate.instant('core.h5p.height')\n    };\n  }\n  /**\n   * Load content data from DB.\n   *\n   * @param id Content ID.\n   * @param fileUrl H5P file URL. Required if id is not provided.\n   * @param siteId Site ID. If not defined, current site.\n   * @returns Promise resolved with the content data.\n   */\n  loadContent(id, fileUrl, siteId) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      siteId = siteId || CoreSites.getCurrentSiteId();\n      const content = yield _this5.h5pFramework.loadContent(id, fileUrl, siteId);\n      // Validate metadata.\n      const validator = new CoreH5PContentValidator(siteId);\n      content.metadata = yield validator.validateMetadata(content.metadata);\n      return {\n        id: content.id,\n        params: content.params,\n        embedType: content.embedType,\n        disable: content.disable,\n        folderName: content.folderName,\n        title: content.title,\n        slug: content.slug,\n        filtered: content.filtered,\n        libraryMajorVersion: content.libraryMajorVersion,\n        libraryMinorVersion: content.libraryMinorVersion,\n        metadata: content.metadata,\n        library: {\n          id: content.libraryId,\n          name: content.libraryName,\n          majorVersion: content.libraryMajorVersion,\n          minorVersion: content.libraryMinorVersion,\n          embedTypes: content.libraryEmbedTypes,\n          fullscreen: content.libraryFullscreen\n        }\n      };\n    })();\n  }\n  /**\n   * Load dependencies for the given content of the given type.\n   *\n   * @param id Content ID.\n   * @param type The dependency type.\n   * @returns Content dependencies, indexed by machine name.\n   */\n  loadContentDependencies(id, type, siteId) {\n    return this.h5pFramework.loadContentDependencies(id, type, siteId);\n  }\n  /**\n   * Loads a library and its dependencies.\n   *\n   * @param machineName The library's machine name.\n   * @param majorVersion The library's major version.\n   * @param minorVersion The library's minor version.\n   * @param siteId The site ID. If not defined, current site.\n   * @returns Promise resolved with the library data.\n   */\n  loadLibrary(machineName, majorVersion, minorVersion, siteId) {\n    return this.h5pFramework.loadLibrary(machineName, majorVersion, minorVersion, siteId);\n  }\n  /**\n   * Check if the current user has permission to update and install new libraries.\n   *\n   * @returns Whether has permissions.\n   */\n  mayUpdateLibraries() {\n    // In the app the installation only affects current user, so the user always has permissions.\n    return true;\n  }\n  /**\n   * Save content data in DB and clear cache.\n   *\n   * @param content Content to save.\n   * @param folderName The name of the folder that contains the H5P.\n   * @param fileUrl The online URL of the package.\n   * @param siteId Site ID. If not defined, current site.\n   * @returns Promise resolved with content ID.\n   */\n  saveContent(content, folderName, fileUrl, siteId) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      content.id = yield _this6.h5pFramework.updateContent(content, folderName, fileUrl, siteId);\n      // Some user data for content has to be reset when the content changes.\n      yield _this6.h5pFramework.resetContentUserData(content.id, siteId);\n      return content.id;\n    })();\n  }\n  /**\n   * Helper function used to figure out embed and download behaviour.\n   *\n   * @param optionName The option name.\n   * @param permission The permission.\n   * @param id The package ID.\n   * @param value Default value.\n   * @returns The value to use.\n   */\n  setDisplayOptionOverrides(optionName, permission, id, value) {\n    const behaviour = this.h5pFramework.getOption(optionName, CoreH5PDisplayOptionBehaviour.ALWAYS_SHOW);\n    // If never show globally, force hide\n    if (behaviour == CoreH5PDisplayOptionBehaviour.NEVER_SHOW) {\n      value = false;\n    } else if (behaviour == CoreH5PDisplayOptionBehaviour.ALWAYS_SHOW) {\n      // If always show or permissions say so, force show\n      value = true;\n    } else if (behaviour == CoreH5PDisplayOptionBehaviour.CONTROLLED_BY_PERMISSIONS) {\n      value = this.h5pFramework.hasPermission(permission, id);\n    }\n    return value;\n  }\n  /**\n   * Determine if params contain any match.\n   *\n   * @param params Parameters.\n   * @param pattern Regular expression to identify pattern.\n   * @returns True if params matches pattern.\n   */\n  textAddonMatches(params, pattern) {\n    if (typeof params == 'string') {\n      if (params.match(pattern)) {\n        return true;\n      }\n    } else if (typeof params == 'object') {\n      for (const key in params) {\n        const value = params[key];\n        if (this.textAddonMatches(value, pattern)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n/**\n * Display options behaviour constants.\n */\n_class = CoreH5PCore;\n_class.STYLES = ['styles/h5p.css', 'styles/h5p-confirmation-dialog.css', 'styles/h5p-core-button.css', 'styles/h5p-tooltip.css'];\n_class.SCRIPTS = ['js/jquery.js', 'js/h5p.js', 'js/h5p-event-dispatcher.js', 'js/h5p-x-api-event.js', 'js/h5p-x-api.js', 'js/h5p-content-type.js', 'js/h5p-confirmation-dialog.js', 'js/h5p-action-bar.js', 'js/request-queue.js', 'js/h5p-tooltip.js'];\n_class.ADMIN_SCRIPTS = ['js/jquery.js', 'js/h5p-utils.js'];\n// Disable flags\n_class.DISABLE_NONE = 0;\n_class.DISABLE_FRAME = 1;\n_class.DISABLE_DOWNLOAD = 2;\n_class.DISABLE_EMBED = 4;\n_class.DISABLE_COPYRIGHT = 8;\n_class.DISABLE_ABOUT = 16;\n_class.DISPLAY_OPTION_FRAME = 'frame';\n_class.DISPLAY_OPTION_DOWNLOAD = 'export';\n_class.DISPLAY_OPTION_EMBED = 'embed';\n_class.DISPLAY_OPTION_COPYRIGHT = 'copyright';\n_class.DISPLAY_OPTION_ABOUT = 'icon';\n_class.DISPLAY_OPTION_COPY = 'copy';\n// Map to slugify characters.\n_class.SLUGIFY_MAP = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  æ: 'ae',\n  ø: 'oe',\n  ö: 'o',\n  ó: 'o',\n  ô: 'o',\n  Ò: 'oe',\n  Õ: 'o',\n  Ý: 'o',\n  ý: 'y',\n  ÿ: 'y',\n  ā: 'y',\n  ă: 'a',\n  ą: 'a',\n  œ: 'a',\n  å: 'a',\n  ä: 'a',\n  á: 'a',\n  à: 'a',\n  â: 'a',\n  ã: 'a',\n  ç: 'c',\n  ć: 'c',\n  ĉ: 'c',\n  ċ: 'c',\n  č: 'c',\n  é: 'e',\n  è: 'e',\n  ê: 'e',\n  ë: 'e',\n  í: 'i',\n  ì: 'i',\n  î: 'i',\n  ï: 'i',\n  ú: 'u',\n  ñ: 'n',\n  ü: 'u',\n  ù: 'u',\n  û: 'u',\n  ß: 'es',\n  ď: 'd',\n  đ: 'd',\n  ē: 'e',\n  ĕ: 'e',\n  ė: 'e',\n  ę: 'e',\n  ě: 'e',\n  ĝ: 'g',\n  ğ: 'g',\n  ġ: 'g',\n  ģ: 'g',\n  ĥ: 'h',\n  ħ: 'h',\n  ĩ: 'i',\n  ī: 'i',\n  ĭ: 'i',\n  į: 'i',\n  ı: 'i',\n  ĳ: 'ij',\n  ĵ: 'j',\n  ķ: 'k',\n  ĺ: 'l',\n  ļ: 'l',\n  ľ: 'l',\n  ŀ: 'l',\n  ł: 'l',\n  ń: 'n',\n  ņ: 'n',\n  ň: 'n',\n  ŉ: 'n',\n  ō: 'o',\n  ŏ: 'o',\n  ő: 'o',\n  ŕ: 'r',\n  ŗ: 'r',\n  ř: 'r',\n  ś: 's',\n  ŝ: 's',\n  ş: 's',\n  š: 's',\n  ţ: 't',\n  ť: 't',\n  ŧ: 't',\n  ũ: 'u',\n  ū: 'u',\n  ŭ: 'u',\n  ů: 'u',\n  ű: 'u',\n  ų: 'u',\n  ŵ: 'w',\n  ŷ: 'y',\n  ź: 'z',\n  ż: 'z',\n  ž: 'z',\n  ſ: 's',\n  ƒ: 'f',\n  ơ: 'o',\n  ư: 'u',\n  ǎ: 'a',\n  ǐ: 'i',\n  ǒ: 'o',\n  ǔ: 'u',\n  ǖ: 'u',\n  ǘ: 'u',\n  ǚ: 'u',\n  ǜ: 'u',\n  ǻ: 'a',\n  ǽ: 'ae',\n  ǿ: 'oe'\n};\nexport var CoreH5PDisplayOptionBehaviour;\n(function (CoreH5PDisplayOptionBehaviour) {\n  CoreH5PDisplayOptionBehaviour[CoreH5PDisplayOptionBehaviour[\"NEVER_SHOW\"] = 0] = \"NEVER_SHOW\";\n  CoreH5PDisplayOptionBehaviour[CoreH5PDisplayOptionBehaviour[\"CONTROLLED_BY_AUTHOR_DEFAULT_ON\"] = 1] = \"CONTROLLED_BY_AUTHOR_DEFAULT_ON\";\n  CoreH5PDisplayOptionBehaviour[CoreH5PDisplayOptionBehaviour[\"CONTROLLED_BY_AUTHOR_DEFAULT_OFF\"] = 2] = \"CONTROLLED_BY_AUTHOR_DEFAULT_OFF\";\n  CoreH5PDisplayOptionBehaviour[CoreH5PDisplayOptionBehaviour[\"ALWAYS_SHOW\"] = 3] = \"ALWAYS_SHOW\";\n  CoreH5PDisplayOptionBehaviour[CoreH5PDisplayOptionBehaviour[\"CONTROLLED_BY_PERMISSIONS\"] = 4] = \"CONTROLLED_BY_PERMISSIONS\";\n})(CoreH5PDisplayOptionBehaviour || (CoreH5PDisplayOptionBehaviour = {}));\n/**\n * Permission constants.\n */\nexport var CoreH5PPermission;\n(function (CoreH5PPermission) {\n  CoreH5PPermission[CoreH5PPermission[\"DOWNLOAD_H5P\"] = 0] = \"DOWNLOAD_H5P\";\n  CoreH5PPermission[CoreH5PPermission[\"EMBED_H5P\"] = 1] = \"EMBED_H5P\";\n  CoreH5PPermission[CoreH5PPermission[\"CREATE_RESTRICTED\"] = 2] = \"CREATE_RESTRICTED\";\n  CoreH5PPermission[CoreH5PPermission[\"UPDATE_LIBRARIES\"] = 3] = \"UPDATE_LIBRARIES\";\n  CoreH5PPermission[CoreH5PPermission[\"INSTALL_RECOMMENDED\"] = 4] = \"INSTALL_RECOMMENDED\";\n  CoreH5PPermission[CoreH5PPermission[\"COPY_H5P\"] = 8] = \"COPY_H5P\";\n})(CoreH5PPermission || (CoreH5PPermission = {}));","map":{"version":3,"names":["Md5","CoreSites","CoreTextUtils","CoreUtils","CoreH5P","CoreH5PFileStorage","CoreH5PContentValidator","Translate","CorePath","CoreH5PCore","constructor","h5pFramework","aggregateAssets","h5pFS","determineEmbedType","contentEmbedType","libraryEmbedTypes","embedType","toLowerCase","indexOf","embedTypes","getDependenciesHash","dependencies","toHash","name","dep","push","machineName","majorVersion","minorVersion","patchVersion","sort","a","b","localeCompare","hashAsciiStr","join","getScripts","libUrl","h5pCore","getCoreH5PPath","urls","SCRIPTS","forEach","script","concatenatePaths","libraryFromString","libraryString","matches","match","length","Number","libraryToString","library","libraryToFolderName","slugify","input","newInput","i","char","SLUGIFY_MAP","replace","substring","filterParameters","content","siteId","_this","_asyncToGenerator","getCurrentSiteId","filtered","undefined","params","parseJSON","validator","validateLibrary","options","addons","loadAddons","_addon$addTo","addon","addTo","types","_type$text","type","regex","text","slice","textAddonMatches","getDependencies","paramsStr","JSON","stringify","id","deleteLibraryUsage","_unused","saveLibraryUsage","slug","generateContentSlug","updateContentFields","error","findLibraryDependencies","nextWeight","editor","_this2","property","j","dependency","dependencyKey","dependencyLibrary","loadLibrary","weight","fixDisplayOptions","displayOptions","DISPLAY_OPTION_DOWNLOAD","DISPLAY_OPTION_EMBED","getOption","DISPLAY_OPTION_FRAME","DISPLAY_OPTION_COPYRIGHT","DISPLAY_OPTION_COPY","hasPermission","CoreH5PPermission","COPY_H5P","title","available","isContentSlugAvailable","getAssetsUrls","assets","assetsFolderPath","asset","url","path","version","getDependenciesFiles","folderName","prefix","_this3","files","scripts","styles","Object","keys","cachedAssetsHash","cachedAssets","getCachedAssets","assign","key","getDependencyPath","preloadedJs","split","preloadedCss","getDependencyAssets","cacheAssets","saveCachedAssets","getDependencyRoots","_this4","roots","loadContentDependencies","getLibraryFolderPath","isTrueOrOne","dropCss","file","trim","getDisplayOptionsAsObject","disable","DISABLE_FRAME","DISABLE_COPYRIGHT","DISPLAY_OPTION_ABOUT","getDisplayOptionsForView","getLocalization","fullscreen","instant","disableFullscreen","download","copyrights","embed","size","showAdvanced","hideAdvanced","advancedHelp","copyrightInformation","close","author","year","source","license","thumbnail","noCopyrights","reuse","reuseContent","reuseDescription","downloadDescription","copyrightsDescription","embedDescription","h5pDescription","contentChanged","startingOver","by","showMore","showLess","subLevel","confirmDialogHeader","confirmDialogBody","cancelLabel","confirmLabel","licenseU","licenseCCBY","licenseCCBYSA","licenseCCBYND","licenseCCBYNC","licenseCCBYNCSA","licenseCCBYNCND","licenseCC40","licenseCC30","licenseCC25","licenseCC20","licenseCC10","licenseGPL","licenseV3","licenseV2","licenseV1","licensePD","licenseCC010","licensePDM","licenseC","contentType","licenseExtras","changes","contentCopied","connectionLost","connectionReestablished","resubmitScores","offlineDialogHeader","offlineDialogBody","offlineDialogRetryMessage","offlineDialogRetryButtonLabel","offlineSuccessfulSubmit","mainTitle","editInfoTitle","cancel","back","next","reviewInfo","share","saveChanges","requiredInfo","optionalInfo","reviewAndShare","reviewAndSave","shared","currentStep","sharingNote","licenseDescription","licenseVersion","licenseVersionDescription","disciplineLabel","disciplineDescription","disciplineLimitReachedMessage","discipline","searchPlaceholder","in","dropdownButton","removeChip","keywordsPlaceholder","keywords","keywordsDescription","altText","reviewMessage","subContentWarning","disciplines","shortDescription","longDescription","icon","screenshots","helpChoosingLicense","shareFailed","editingFailed","shareTryAgain","pleaseWait","language","level","shortDescriptionPlaceholder","longDescriptionPlaceholder","description","iconDescription","screenshotsDescription","submitted","contentLicenseTitle","licenseDialogDescription","publisherFieldTitle","publisherFieldDescription","emailAddress","publisherDescription","publisherDescriptionText","contactPerson","phone","address","city","zip","country","logoUploadText","acceptTerms","accountDetailsLinkText","maxLength","keywordExists","licenseDetails","remove","removeImage","cancelPublishConfirmationDialogTitle","cancelPublishConfirmationDialogDescription","cancelPublishConfirmationDialogCancelButtonText","cancelPublishConfirmationDialogConfirmButtonText","add","age","ageDescription","invalidAge","keywordsExits","someKeywordsExits","width","height","loadContent","fileUrl","_this5","metadata","validateMetadata","libraryMajorVersion","libraryMinorVersion","libraryId","libraryName","libraryFullscreen","mayUpdateLibraries","saveContent","_this6","updateContent","resetContentUserData","setDisplayOptionOverrides","optionName","permission","value","behaviour","CoreH5PDisplayOptionBehaviour","ALWAYS_SHOW","NEVER_SHOW","CONTROLLED_BY_PERMISSIONS","pattern","_class","STYLES","ADMIN_SCRIPTS","DISABLE_NONE","DISABLE_DOWNLOAD","DISABLE_EMBED","DISABLE_ABOUT","æ","ø","ö","ó","ô","Ò","Õ","Ý","ý","ÿ","ā","ă","ą","œ","å","ä","á","à","â","ã","ç","ć","ĉ","ċ","č","é","è","ê","ë","í","ì","î","ï","ú","ñ","ü","ù","û","ß","ď","đ","ē","ĕ","ė","ę","ě","ĝ","ğ","ġ","ģ","ĥ","ħ","ĩ","ī","ĭ","į","ı","ĳ","ĵ","ķ","ĺ","ļ","ľ","ŀ","ł","ń","ņ","ň","ŉ","ō","ŏ","ő","ŕ","ŗ","ř","ś","ŝ","ş","š","ţ","ť","ŧ","ũ","ū","ŭ","ů","ű","ų","ŵ","ŷ","ź","ż","ž","ſ","ƒ","ơ","ư","ǎ","ǐ","ǒ","ǔ","ǖ","ǘ","ǚ","ǜ","ǻ","ǽ","ǿ"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/h5p/classes/core.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { CoreH5PFileStorage } from './file-storage';\nimport { CoreH5PFramework } from './framework';\nimport { CoreH5PContentValidator, CoreH5PSemantics } from './content-validator';\nimport { Translate } from '@singletons';\nimport { CoreH5PContentBeingSaved } from './storage';\nimport { CoreH5PLibraryAddTo } from './validator';\nimport { CorePath } from '@singletons/path';\n\n/**\n * Equivalent to H5P's H5PCore class.\n */\nexport class CoreH5PCore {\n\n    static readonly STYLES = [\n        'styles/h5p.css',\n        'styles/h5p-confirmation-dialog.css',\n        'styles/h5p-core-button.css',\n        'styles/h5p-tooltip.css',\n    ];\n\n    static readonly SCRIPTS = [\n        'js/jquery.js',\n        'js/h5p.js',\n        'js/h5p-event-dispatcher.js',\n        'js/h5p-x-api-event.js',\n        'js/h5p-x-api.js',\n        'js/h5p-content-type.js',\n        'js/h5p-confirmation-dialog.js',\n        'js/h5p-action-bar.js',\n        'js/request-queue.js',\n        'js/h5p-tooltip.js',\n    ];\n\n    static readonly ADMIN_SCRIPTS = [\n        'js/jquery.js',\n        'js/h5p-utils.js',\n    ];\n\n    // Disable flags\n    static readonly DISABLE_NONE = 0;\n    static readonly DISABLE_FRAME = 1;\n    static readonly DISABLE_DOWNLOAD = 2;\n    static readonly DISABLE_EMBED = 4;\n    static readonly DISABLE_COPYRIGHT = 8;\n    static readonly DISABLE_ABOUT = 16;\n\n    static readonly DISPLAY_OPTION_FRAME = 'frame';\n    static readonly DISPLAY_OPTION_DOWNLOAD = 'export';\n    static readonly DISPLAY_OPTION_EMBED = 'embed';\n    static readonly DISPLAY_OPTION_COPYRIGHT = 'copyright';\n    static readonly DISPLAY_OPTION_ABOUT = 'icon';\n    static readonly DISPLAY_OPTION_COPY = 'copy';\n\n    // Map to slugify characters.\n    static readonly SLUGIFY_MAP = {\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        æ: 'ae', ø: 'oe', ö: 'o', ó: 'o', ô: 'o', Ò: 'oe', Õ: 'o', Ý: 'o', ý: 'y', ÿ: 'y', ā: 'y', ă: 'a', ą: 'a', œ: 'a', å: 'a',\n        ä: 'a', á: 'a', à: 'a', â: 'a', ã: 'a', ç: 'c', ć: 'c', ĉ: 'c', ċ: 'c', č: 'c', é: 'e', è: 'e', ê: 'e', ë: 'e', í: 'i',\n        ì: 'i', î: 'i', ï: 'i', ú: 'u', ñ: 'n', ü: 'u', ù: 'u', û: 'u', ß: 'es', ď: 'd', đ: 'd', ē: 'e', ĕ: 'e', ė: 'e', ę: 'e',\n        ě: 'e', ĝ: 'g', ğ: 'g', ġ: 'g', ģ: 'g', ĥ: 'h', ħ: 'h', ĩ: 'i', ī: 'i', ĭ: 'i', į: 'i', ı: 'i', ĳ: 'ij', ĵ: 'j', ķ: 'k',\n        ĺ: 'l', ļ: 'l', ľ: 'l', ŀ: 'l', ł: 'l', ń: 'n', ņ: 'n', ň: 'n', ŉ: 'n', ō: 'o', ŏ: 'o', ő: 'o', ŕ: 'r', ŗ: 'r', ř: 'r',\n        ś: 's', ŝ: 's', ş: 's', š: 's', ţ: 't', ť: 't', ŧ: 't', ũ: 'u', ū: 'u', ŭ: 'u', ů: 'u', ű: 'u', ų: 'u', ŵ: 'w', ŷ: 'y',\n        ź: 'z', ż: 'z', ž: 'z', ſ: 's', ƒ: 'f', ơ: 'o', ư: 'u', ǎ: 'a', ǐ: 'i', ǒ: 'o', ǔ: 'u', ǖ: 'u', ǘ: 'u', ǚ: 'u', ǜ: 'u',\n        ǻ: 'a', ǽ: 'ae', ǿ: 'oe',\n    };\n\n    aggregateAssets = true;\n    h5pFS: CoreH5PFileStorage;\n\n    constructor(public h5pFramework: CoreH5PFramework) {\n        this.h5pFS = new CoreH5PFileStorage();\n    }\n\n    /**\n     * Determine the correct embed type to use.\n     *\n     * @param contentEmbedType Type of the content.\n     * @param libraryEmbedTypes Type of the main library.\n     * @returns Either 'div' or 'iframe'.\n     */\n    static determineEmbedType(contentEmbedType: string, libraryEmbedTypes: string): string {\n        // Detect content embed type.\n        let embedType = contentEmbedType.toLowerCase().indexOf('div') != -1 ? 'div' : 'iframe';\n\n        if (libraryEmbedTypes) {\n            // Check that embed type is available for library\n            const embedTypes = libraryEmbedTypes.toLowerCase();\n\n            if (embedTypes.indexOf(embedType) == -1) {\n                // Not available, pick default.\n                embedType = embedTypes.indexOf('div') != -1 ? 'div' : 'iframe';\n            }\n        }\n\n        return embedType;\n    }\n\n    /**\n     * Get the hash of a list of dependencies.\n     *\n     * @param dependencies Dependencies.\n     * @returns Hash.\n     */\n    static getDependenciesHash(dependencies: {[machineName: string]: CoreH5PContentDependencyData}): string {\n        // Build hash of dependencies.\n        const toHash: string[] = [];\n\n        // Use unique identifier for each library version.\n        for (const name in dependencies) {\n            const dep = dependencies[name];\n            toHash.push(dep.machineName + '-' + dep.majorVersion + '.' + dep.minorVersion + '.' + dep.patchVersion);\n        }\n\n        // Sort in case the same dependencies comes in a different order.\n        toHash.sort((a, b) => a.localeCompare(b));\n\n        // Calculate hash.\n        return <string> Md5.hashAsciiStr(toHash.join(''));\n    }\n\n    /**\n     * Get core JavaScript files.\n     *\n     * @returns array The array containg urls of the core JavaScript files:\n     */\n    static getScripts(): string[] {\n        const libUrl = CoreH5P.h5pCore.h5pFS.getCoreH5PPath();\n        const urls: string[] = [];\n\n        CoreH5PCore.SCRIPTS.forEach((script) => {\n            urls.push(libUrl + script);\n        });\n\n        urls.push(CorePath.concatenatePaths(libUrl, 'moodle/js/h5p_overrides.js'));\n\n        return urls;\n    }\n\n    /**\n     * Parses library data from a string on the form {machineName} {majorVersion}.{minorVersion}.\n     *\n     * @param libraryString On the form {machineName} {majorVersion}.{minorVersion}\n     * @returns Object with keys machineName, majorVersion and minorVersion. Null if string is not parsable.\n     */\n    static libraryFromString(libraryString: string): CoreH5PLibraryBasicData | null {\n\n        const matches = libraryString.match(/^([\\w0-9\\-.]{1,255})[- ]([0-9]{1,5})\\.([0-9]{1,5})$/i);\n\n        if (matches && matches.length >= 4) {\n            return {\n                machineName: matches[1],\n                majorVersion: Number(matches[2]),\n                minorVersion: Number(matches[3]),\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * Writes library data as string on the form {machineName} {majorVersion}.{minorVersion}.\n     *\n     * @param library Library data.\n     * @returns String on the form {machineName} {majorVersion}.{minorVersion}.\n     */\n    static libraryToString(library: CoreH5PLibraryBasicData | CoreH5PContentMainLibraryData): string {\n        const name = 'machineName' in library ? library.machineName : library.name;\n\n        return `${name} ${library.majorVersion}.${library.minorVersion}`;\n    }\n\n    /**\n     * Get the name of a library's folder name\n     *\n     * @param library Library data.\n     * @returns Folder name.\n     */\n    static libraryToFolderName(library: CoreH5PLibraryBasicData | CoreH5PContentMainLibraryData): string {\n        const name = 'machineName' in library ? library.machineName : library.name;\n\n        // In LMS, a property named patchVersionInFolderName is checked here. This property is only used to retrieve some icons when\n        // using the editor, and it isn't stored in DB. The check wasn't included here because the app will never have that prop.\n\n        return `${name}-${library.majorVersion}.${library.minorVersion}`;\n    }\n\n    /**\n     * Convert strings of text into simple kebab case slugs. Based on H5PCore::slugify.\n     *\n     * @param input The string to slugify.\n     * @returns Slugified text.\n     */\n    static slugify(input: string): string {\n        input = input || '';\n\n        input = input.toLowerCase();\n\n        // Replace common chars.\n        let newInput = '';\n        for (let i = 0; i < input.length; i++) {\n            const char = input[i];\n\n            newInput += CoreH5PCore.SLUGIFY_MAP[char] || char;\n        }\n\n        // Replace everything else.\n        newInput = newInput.replace(/[^a-z0-9]/g, '-');\n\n        // Prevent double hyphen\n        newInput = newInput.replace(/-{2,}/g, '-');\n\n        // Prevent hyphen in beginning or end.\n        newInput = newInput.replace(/(^-+|-+$)/g, '');\n\n        // Prevent too long slug.\n        if (newInput.length > 91) {\n            newInput = newInput.substring(0, 92);\n        }\n\n        // Prevent empty slug\n        if (newInput === '') {\n            newInput = 'interactive';\n        }\n\n        return newInput;\n    }\n\n    /**\n     * Filter content run parameters and rebuild content dependency cache.\n     *\n     * @param content Content data.\n     * @param siteId Site ID. If not defined, current site.\n     * @returns Promise resolved with the filtered params, resolved with null if error.\n     */\n    async filterParameters(content: CoreH5PContentData, siteId?: string): Promise<string | null> {\n        siteId = siteId || CoreSites.getCurrentSiteId();\n\n        if (content.filtered) {\n            return content.filtered;\n        }\n\n        if (content.library === undefined || content.params === undefined) {\n            return null;\n        }\n\n        const params = {\n            library: CoreH5PCore.libraryToString(content.library),\n            params: CoreTextUtils.parseJSON(content.params, false),\n        };\n\n        if (!params.params) {\n            return null;\n        }\n\n        try {\n            const validator = new CoreH5PContentValidator(siteId);\n\n            // Validate the main library and its dependencies.\n            await validator.validateLibrary(params, { options: [params.library] });\n\n            // Handle addons.\n            const addons = await this.h5pFramework.loadAddons(siteId);\n\n            // Validate addons.\n            for (const i in addons) {\n                const addon = addons[i];\n\n                if (addon.addTo?.content?.types?.length) {\n                    for (let i = 0; i < addon.addTo.content.types.length; i++) {\n                        const type = addon.addTo.content.types[i];\n                        let regex = type?.text?.regex;\n                        if (regex && regex[0] === '/' && regex.slice(-1) === '/') {\n                            // Regex designed for PHP. Remove the starting and ending slashes to convert them to JS format.\n                            regex = regex.substring(1, regex.length - 1);\n                        }\n\n                        if (regex && this.textAddonMatches(params.params, regex)) {\n                            await validator.addon(addon);\n\n                            // An addon shall only be added once.\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // Update content dependencies.\n            content.dependencies = validator.getDependencies();\n\n            const paramsStr = JSON.stringify(params.params);\n\n            // Sometimes the parameters are filtered before content has been created\n            if (content.id) {\n                // Update library usage.\n                try {\n                    await this.h5pFramework.deleteLibraryUsage(content.id, siteId);\n                } catch {\n                    // Ignore errors.\n                }\n\n                await this.h5pFramework.saveLibraryUsage(content.id, content.dependencies, siteId);\n\n                if (!content.slug) {\n                    content.slug = this.generateContentSlug(content);\n                }\n\n                // Cache.\n                await this.h5pFramework.updateContentFields(content.id, {\n                    filtered: paramsStr,\n                }, siteId);\n            }\n\n            return paramsStr;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * Recursive. Goes through the dependency tree for the given library and\n     * adds all the dependencies to the given array in a flat format.\n     *\n     * @param dependencies Object where to save the dependencies.\n     * @param library The library to find all dependencies for.\n     * @param nextWeight An integer determining the order of the libraries when they are loaded.\n     * @param editor Used internally to force all preloaded sub dependencies of an editor dependency to be editor dependencies.\n     * @param siteId Site ID. If not defined, current site.\n     * @returns Promise resolved with the next weight.\n     */\n    async findLibraryDependencies(\n        dependencies: {[key: string]: CoreH5PContentDepsTreeDependency},\n        library: CoreH5PLibraryData | CoreH5PLibraryAddonData,\n        nextWeight: number = 1,\n        editor: boolean = false,\n        siteId?: string,\n    ): Promise<number> {\n\n        siteId = siteId || CoreSites.getCurrentSiteId();\n\n        const types = ['dynamic', 'preloaded', 'editor'];\n\n        for (const i in types) {\n            let type = types[i];\n            const property = type + 'Dependencies';\n\n            if (!library[property]) {\n                continue; // Skip, no such dependencies.\n            }\n\n            if (type === 'preloaded' && editor) {\n                // All preloaded dependencies of an editor library is set to editor.\n                type = 'editor';\n            }\n\n            for (const j in library[property]) {\n                const dependency: CoreH5PLibraryBasicData = library[property][j];\n\n                const dependencyKey = type + '-' + dependency.machineName;\n                if (dependencies[dependencyKey]) {\n                    continue; // Skip, already have this.\n                }\n\n                // Get the dependency library data and its subdependencies.\n                const dependencyLibrary = await this.loadLibrary(\n                    dependency.machineName,\n                    dependency.majorVersion,\n                    dependency.minorVersion,\n                    siteId,\n                );\n\n                dependencies[dependencyKey] = {\n                    library: dependencyLibrary,\n                    type: type,\n                };\n\n                // Get all its subdependencies.\n                const weight = await this.findLibraryDependencies(\n                    dependencies,\n                    dependencyLibrary,\n                    nextWeight,\n                    type === 'editor',\n                    siteId,\n                );\n\n                nextWeight = weight;\n                dependencies[dependencyKey].weight = nextWeight++;\n            }\n        }\n\n        return nextWeight;\n    }\n\n    /**\n     * Validate and fix display options, updating them if needed.\n     *\n     * @param displayOptions The display options to validate.\n     * @param id Package ID.\n     * @returns Display Options.\n     */\n    fixDisplayOptions(displayOptions: CoreH5PDisplayOptions, id: number): CoreH5PDisplayOptions {\n        displayOptions = displayOptions || {};\n\n        // Never allow downloading in the app.\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_DOWNLOAD] = false;\n\n        // Never show the embed option in the app.\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_EMBED] = false;\n\n        if (!this.h5pFramework.getOption(CoreH5PCore.DISPLAY_OPTION_FRAME, true)) {\n            displayOptions[CoreH5PCore.DISPLAY_OPTION_FRAME] = false;\n        } else if (this.h5pFramework.getOption(CoreH5PCore.DISPLAY_OPTION_COPYRIGHT, true) == false) {\n            displayOptions[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT] = false;\n        }\n\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_COPY] = this.h5pFramework.hasPermission(CoreH5PPermission.COPY_H5P, id);\n\n        return displayOptions;\n    }\n\n    /**\n     * Parses library data from a string on the form {machineName} {majorVersion}.{minorVersion}.\n     *\n     * @param content On the form {machineName} {majorVersion}.{minorVersion}\n     * @returns Object with keys machineName, majorVersion and minorVersion. Null if string is not parsable.\n     */\n    generateContentSlug(content: CoreH5PContentData): string {\n\n        let slug = CoreH5PCore.slugify(content.title);\n        let available: boolean | null = null;\n\n        while (!available) {\n            if (available === false) {\n                // If not available, add number suffix.\n                const matches = slug.match(/(.+-)([0-9]+)$/);\n                if (matches) {\n                    slug = matches[1] + (Number(matches[2]) + 1);\n                } else {\n                    slug += '-2';\n                }\n            }\n\n            available = this.h5pFramework.isContentSlugAvailable(slug);\n        }\n\n        return slug;\n    }\n\n    /**\n     * Combines path with version.\n     *\n     * @param assets List of assets to get their URLs.\n     * @param assetsFolderPath The path of the folder where the assets are.\n     * @returns List of urls.\n     */\n    getAssetsUrls(assets: CoreH5PDependencyAsset[], assetsFolderPath: string = ''): string[] {\n        const urls: string[] = [];\n\n        assets.forEach((asset) => {\n            let url = asset.path;\n\n            // Add URL prefix if not external.\n            if (asset.path.indexOf('://') == -1 && assetsFolderPath) {\n                url = CorePath.concatenatePaths(assetsFolderPath, url);\n            }\n\n            // Add version if set.\n            if (asset.version) {\n                url += asset.version;\n            }\n\n            urls.push(url);\n        });\n\n        return urls;\n    }\n\n    /**\n     * Return file paths for all dependencies files.\n     *\n     * @param dependencies The dependencies to get the files.\n     * @param folderName Name of the folder of the content.\n     * @param prefix Make paths relative to another dir.\n     * @param siteId The site ID. If not defined, current site.\n     * @returns Promise resolved with the files.\n     */\n    async getDependenciesFiles(\n        dependencies: {[machineName: string]: CoreH5PContentDependencyData},\n        folderName: string,\n        prefix: string = '',\n        siteId?: string,\n    ): Promise<CoreH5PDependenciesFiles> {\n        siteId = siteId || CoreSites.getCurrentSiteId();\n\n        // Build files list for assets.\n        const files: CoreH5PDependenciesFiles = {\n            scripts: [],\n            styles: [],\n        };\n\n        // Avoid caching empty files.\n        if (!Object.keys(dependencies).length) {\n            return files;\n        }\n\n        let cachedAssetsHash = '';\n\n        if (this.aggregateAssets) {\n            // Get aggregated files for assets.\n            cachedAssetsHash = CoreH5PCore.getDependenciesHash(dependencies);\n\n            const cachedAssets = await this.h5pFS.getCachedAssets(cachedAssetsHash);\n\n            if (cachedAssets) {\n                // Cached assets found, return them.\n                return Object.assign(files, cachedAssets);\n            }\n        }\n\n        // No cached assets, use content dependencies.\n        for (const key in dependencies) {\n            const dependency = dependencies[key];\n\n            if (!dependency.path) {\n                dependency.path = this.h5pFS.getDependencyPath(dependency);\n                dependency.preloadedJs = (<string> dependency.preloadedJs).split(',');\n                dependency.preloadedCss = (<string> dependency.preloadedCss).split(',');\n            }\n\n            dependency.version = '?ver=' + dependency.majorVersion + '.' + dependency.minorVersion + '.' + dependency.patchVersion;\n\n            this.getDependencyAssets(dependency, 'preloadedJs', files.scripts, prefix);\n            this.getDependencyAssets(dependency, 'preloadedCss', files.styles, prefix);\n        }\n\n        if (this.aggregateAssets) {\n            // Aggregate and store assets.\n            await this.h5pFS.cacheAssets(files, cachedAssetsHash, folderName, siteId);\n\n            // Keep track of which libraries have been cached in case they are updated.\n            await this.h5pFramework.saveCachedAssets(cachedAssetsHash, dependencies, folderName, siteId);\n        }\n\n        return files;\n    }\n\n    /**\n     * Get the paths to the content dependencies.\n     *\n     * @param id The H5P content ID.\n     * @param siteId The site ID. If not defined, current site.\n     * @returns Promise resolved with an object containing the path of each content dependency.\n     */\n    async getDependencyRoots(id: number, siteId?: string): Promise<{[libString: string]: string}> {\n        siteId = siteId || CoreSites.getCurrentSiteId();\n\n        const roots = {};\n\n        const dependencies = await this.h5pFramework.loadContentDependencies(id, undefined, siteId);\n\n        for (const machineName in dependencies) {\n            const dependency = dependencies[machineName];\n            const folderName = CoreH5PCore.libraryToFolderName(dependency);\n\n            roots[folderName] = this.h5pFS.getLibraryFolderPath(dependency, siteId, folderName);\n        }\n\n        return roots;\n    }\n\n    /**\n     * Get all dependency assets of the given type.\n     *\n     * @param dependency The dependency.\n     * @param type Type of assets to get.\n     * @param assets Array where to store the assets.\n     * @param prefix Make paths relative to another dir.\n     */\n    protected getDependencyAssets(\n        dependency: CoreH5PContentDependencyData,\n        type: string,\n        assets: CoreH5PDependencyAsset[],\n        prefix: string = '',\n    ): void {\n\n        // Check if dependency has any files of this type\n        if (!dependency[type] || dependency[type][0] === '') {\n            return;\n        }\n\n        // Check if we should skip CSS.\n        if (type === 'preloadedCss' && CoreUtils.isTrueOrOne(dependency.dropCss)) {\n            return;\n        }\n\n        for (const key in dependency[type]) {\n            const file = dependency[type][key];\n\n            assets.push({\n                path: prefix + '/' + dependency.path + '/' + (typeof file != 'string' ? file.path : file).trim(),\n                version: dependency.version || '',\n            });\n        }\n    }\n\n    /**\n     * Convert display options to an object.\n     *\n     * @param disable Display options as a number.\n     * @returns Display options as object.\n     */\n    getDisplayOptionsAsObject(disable: number): CoreH5PDisplayOptions {\n        const displayOptions: CoreH5PDisplayOptions = {};\n\n        // eslint-disable-next-line no-bitwise\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_FRAME] = !(disable & CoreH5PCore.DISABLE_FRAME);\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_DOWNLOAD] = false; // Never allow downloading in the app.\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_EMBED] = false; // Never show the embed option in the app.\n        // eslint-disable-next-line no-bitwise\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT] = !(disable & CoreH5PCore.DISABLE_COPYRIGHT);\n        displayOptions[CoreH5PCore.DISPLAY_OPTION_ABOUT] = !!this.h5pFramework.getOption(CoreH5PCore.DISPLAY_OPTION_ABOUT, true);\n\n        return displayOptions;\n    }\n\n    /**\n     * Determine display option visibility when viewing H5P\n     *\n     * @param disable The display options as a number.\n     * @param id Package ID.\n     * @returns Display options as object.\n     */\n    getDisplayOptionsForView(disable: number, id: number): CoreH5PDisplayOptions {\n        return this.fixDisplayOptions(this.getDisplayOptionsAsObject(disable), id);\n    }\n\n    /**\n     * Provide localization for the Core JS.\n     *\n     * @returns Object with the translations.\n     */\n    getLocalization(): CoreH5PLocalization {\n        // Some strings weren't included in the app because they were strictly related to the H5P Content Hub.\n        return {\n            fullscreen: Translate.instant('core.h5p.fullscreen'),\n            disableFullscreen: Translate.instant('core.h5p.disablefullscreen'),\n            download: Translate.instant('core.h5p.download'),\n            copyrights: Translate.instant('core.h5p.copyright'),\n            embed: Translate.instant('core.h5p.embed'),\n            size: Translate.instant('core.h5p.size'),\n            showAdvanced: Translate.instant('core.h5p.showadvanced'),\n            hideAdvanced: Translate.instant('core.h5p.hideadvanced'),\n            advancedHelp: Translate.instant('core.h5p.resizescript'),\n            copyrightInformation: Translate.instant('core.h5p.copyright'),\n            close: Translate.instant('core.h5p.close'),\n            title: Translate.instant('core.h5p.title'),\n            author: Translate.instant('core.h5p.author'),\n            year: Translate.instant('core.h5p.year'),\n            source: Translate.instant('core.h5p.source'),\n            license: Translate.instant('core.h5p.license'),\n            thumbnail: Translate.instant('core.h5p.thumbnail'),\n            noCopyrights: Translate.instant('core.h5p.nocopyright'),\n            reuse: Translate.instant('core.h5p.reuse'),\n            reuseContent: Translate.instant('core.h5p.reuseContent'),\n            reuseDescription: Translate.instant('core.h5p.reuseDescription'),\n            downloadDescription: Translate.instant('core.h5p.downloadtitle'),\n            copyrightsDescription: Translate.instant('core.h5p.copyrighttitle'),\n            embedDescription: Translate.instant('core.h5p.embedtitle'),\n            h5pDescription: Translate.instant('core.h5p.h5ptitle'),\n            contentChanged: Translate.instant('core.h5p.contentchanged'),\n            startingOver: Translate.instant('core.h5p.startingover'),\n            by: Translate.instant('core.h5p.by'),\n            showMore: Translate.instant('core.h5p.showmore'),\n            showLess: Translate.instant('core.h5p.showless'),\n            subLevel: Translate.instant('core.h5p.sublevel'),\n            confirmDialogHeader: Translate.instant('core.h5p.confirmdialogheader'),\n            confirmDialogBody: Translate.instant('core.h5p.confirmdialogbody'),\n            cancelLabel: Translate.instant('core.h5p.cancellabel'),\n            confirmLabel: Translate.instant('core.h5p.confirmlabel'),\n            licenseU: Translate.instant('core.h5p.undisclosed'),\n            licenseCCBY: Translate.instant('core.h5p.ccattribution'),\n            licenseCCBYSA: Translate.instant('core.h5p.ccattributionsa'),\n            licenseCCBYND: Translate.instant('core.h5p.ccattributionnd'),\n            licenseCCBYNC: Translate.instant('core.h5p.ccattributionnc'),\n            licenseCCBYNCSA: Translate.instant('core.h5p.ccattributionncsa'),\n            licenseCCBYNCND: Translate.instant('core.h5p.ccattributionncnd'),\n            licenseCC40: Translate.instant('core.h5p.licenseCC40'),\n            licenseCC30: Translate.instant('core.h5p.licenseCC30'),\n            licenseCC25: Translate.instant('core.h5p.licenseCC25'),\n            licenseCC20: Translate.instant('core.h5p.licenseCC20'),\n            licenseCC10: Translate.instant('core.h5p.licenseCC10'),\n            licenseGPL: Translate.instant('core.h5p.licenseGPL'),\n            licenseV3: Translate.instant('core.h5p.licenseV3'),\n            licenseV2: Translate.instant('core.h5p.licenseV2'),\n            licenseV1: Translate.instant('core.h5p.licenseV1'),\n            licensePD: Translate.instant('core.h5p.pd'),\n            licenseCC010: Translate.instant('core.h5p.licenseCC010'),\n            licensePDM: Translate.instant('core.h5p.pdm'),\n            licenseC: Translate.instant('core.h5p.copyrightstring'),\n            contentType: Translate.instant('core.h5p.contenttype'),\n            licenseExtras: Translate.instant('core.h5p.licenseextras'),\n            changes: Translate.instant('core.h5p.changelog'),\n            contentCopied: Translate.instant('core.h5p.contentCopied'),\n            connectionLost: Translate.instant('core.h5p.connectionLost'),\n            connectionReestablished: Translate.instant('core.h5p.connectionReestablished'),\n            resubmitScores: Translate.instant('core.h5p.resubmitScores'),\n            offlineDialogHeader: Translate.instant('core.h5p.offlineDialogHeader'),\n            offlineDialogBody: Translate.instant('core.h5p.offlineDialogBody'),\n            offlineDialogRetryMessage: Translate.instant('core.h5p.offlineDialogRetryMessage'),\n            offlineDialogRetryButtonLabel: Translate.instant('core.h5p.offlineDialogRetryButtonLabel'),\n            offlineSuccessfulSubmit: Translate.instant('core.h5p.offlineSuccessfulSubmit'),\n            mainTitle: Translate.instant('core.h5p.mainTitle'),\n            editInfoTitle: Translate.instant('core.h5p.editInfoTitle'),\n            cancel: Translate.instant('core.h5p.cancellabel'),\n            back: Translate.instant('core.h5p.back'),\n            next: Translate.instant('core.h5p.next'),\n            reviewInfo: Translate.instant('core.h5p.reviewInfo'),\n            share: Translate.instant('core.h5p.share'),\n            saveChanges: Translate.instant('core.h5p.saveChanges'),\n            requiredInfo: Translate.instant('core.h5p.requiredInfo'),\n            optionalInfo: Translate.instant('core.h5p.optionalInfo'),\n            reviewAndShare: Translate.instant('core.h5p.reviewAndShare'),\n            reviewAndSave: Translate.instant('core.h5p.reviewAndSave'),\n            shared: Translate.instant('core.h5p.shared'),\n            currentStep: Translate.instant('core.h5p.currentStep'),\n            sharingNote: Translate.instant('core.h5p.sharingNote'),\n            licenseDescription: Translate.instant('core.h5p.licenseDescription'),\n            licenseVersion: Translate.instant('core.h5p.licenseversion'),\n            licenseVersionDescription: Translate.instant('core.h5p.licenseVersionDescription'),\n            disciplineLabel: Translate.instant('core.h5p.disciplineLabel'),\n            disciplineDescription: Translate.instant('core.h5p.disciplineDescription'),\n            disciplineLimitReachedMessage: Translate.instant('core.h5p.disciplineLimitReachedMessage'),\n            discipline: {\n                searchPlaceholder: Translate.instant('core.h5p.discipline:searchPlaceholder'),\n                in: Translate.instant('core.h5p.discipline:in'),\n                dropdownButton: Translate.instant('core.h5p.discipline:dropdownButton'),\n            },\n            removeChip: Translate.instant('core.h5p.removeChip'),\n            keywordsPlaceholder: Translate.instant('core.h5p.keywordsPlaceholder'),\n            keywords: Translate.instant('core.h5p.keywords'),\n            keywordsDescription: Translate.instant('core.h5p.keywordsDescription'),\n            altText: Translate.instant('core.h5p.altText'),\n            reviewMessage: Translate.instant('core.h5p.reviewMessage'),\n            subContentWarning: Translate.instant('core.h5p.subContentWarning'),\n            disciplines: Translate.instant('core.h5p.disciplines'),\n            shortDescription: Translate.instant('core.h5p.shortDescription'),\n            longDescription: Translate.instant('core.h5p.longDescription'),\n            icon: Translate.instant('core.h5p.icon'),\n            screenshots: Translate.instant('core.h5p.screenshots'),\n            helpChoosingLicense: Translate.instant('core.h5p.helpChoosingLicense'),\n            shareFailed: Translate.instant('core.h5p.shareFailed'),\n            editingFailed: Translate.instant('core.h5p.editingFailed'),\n            shareTryAgain: Translate.instant('core.h5p.shareTryAgain'),\n            pleaseWait: Translate.instant('core.h5p.pleaseWait'),\n            language: Translate.instant('core.h5p.language'),\n            level: Translate.instant('core.h5p.level'),\n            shortDescriptionPlaceholder: Translate.instant('core.h5p.shortDescriptionPlaceholder'),\n            longDescriptionPlaceholder: Translate.instant('core.h5p.longDescriptionPlaceholder'),\n            description: Translate.instant('core.h5p.description'),\n            iconDescription: Translate.instant('core.h5p.iconDescription'),\n            screenshotsDescription: Translate.instant('core.h5p.screenshotsDescription'),\n            submitted: Translate.instant('core.h5p.submitted'),\n            contentLicenseTitle: Translate.instant('core.h5p.contentLicenseTitle'),\n            licenseDialogDescription: Translate.instant('core.h5p.licenseDialogDescription'),\n            publisherFieldTitle: Translate.instant('core.h5p.publisherFieldTitle'),\n            publisherFieldDescription: Translate.instant('core.h5p.publisherFieldDescription'),\n            emailAddress: Translate.instant('core.h5p.emailAddress'),\n            publisherDescription: Translate.instant('core.h5p.publisherDescription'),\n            publisherDescriptionText: Translate.instant('core.h5p.publisherDescriptionText'),\n            contactPerson: Translate.instant('core.h5p.contactPerson'),\n            phone: Translate.instant('core.h5p.phone'),\n            address: Translate.instant('core.h5p.address'),\n            city: Translate.instant('core.h5p.city'),\n            zip: Translate.instant('core.h5p.zip'),\n            country: Translate.instant('core.h5p.country'),\n            logoUploadText: Translate.instant('core.h5p.logoUploadText'),\n            acceptTerms: Translate.instant('core.h5p.acceptTerms'),\n            accountDetailsLinkText: Translate.instant('core.h5p.accountDetailsLinkText'),\n            maxLength: Translate.instant('core.h5p.maxLength'),\n            keywordExists: Translate.instant('core.h5p.keywordExists'),\n            licenseDetails: Translate.instant('core.h5p.licenseDetails'),\n            remove: Translate.instant('core.h5p.remove'),\n            removeImage: Translate.instant('core.h5p.removeImage'),\n            cancelPublishConfirmationDialogTitle: Translate.instant('core.h5p.removeImage'),\n            cancelPublishConfirmationDialogDescription: Translate.instant('core.h5p.removeImage'),\n            cancelPublishConfirmationDialogCancelButtonText: Translate.instant('core.h5p.removeImage'),\n            cancelPublishConfirmationDialogConfirmButtonText: Translate.instant('core.h5p.removeImage'),\n            add: Translate.instant('core.h5p.add'),\n            age: Translate.instant('core.h5p.age'),\n            ageDescription: Translate.instant('core.h5p.ageDescription'),\n            invalidAge: Translate.instant('core.h5p.invalidAge'),\n            keywordsExits: Translate.instant('core.h5p.keywordsExits'),\n            someKeywordsExits: Translate.instant('core.h5p.someKeywordsExits'),\n            width: Translate.instant('core.h5p.width'),\n            height: Translate.instant('core.h5p.height'),\n        };\n    }\n\n    /**\n     * Load content data from DB.\n     *\n     * @param id Content ID.\n     * @param fileUrl H5P file URL. Required if id is not provided.\n     * @param siteId Site ID. If not defined, current site.\n     * @returns Promise resolved with the content data.\n     */\n    async loadContent(id?: number, fileUrl?: string, siteId?: string): Promise<CoreH5PContentData> {\n        siteId = siteId || CoreSites.getCurrentSiteId();\n\n        const content = await this.h5pFramework.loadContent(id, fileUrl, siteId);\n\n        // Validate metadata.\n        const validator = new CoreH5PContentValidator(siteId);\n\n        content.metadata = await validator.validateMetadata(content.metadata);\n\n        return {\n            id: content.id,\n            params: content.params,\n            embedType: content.embedType,\n            disable: content.disable,\n            folderName: content.folderName,\n            title: content.title,\n            slug: content.slug,\n            filtered: content.filtered,\n            libraryMajorVersion: content.libraryMajorVersion,\n            libraryMinorVersion: content.libraryMinorVersion,\n            metadata: content.metadata,\n            library: {\n                id: content.libraryId,\n                name: content.libraryName,\n                majorVersion: content.libraryMajorVersion,\n                minorVersion: content.libraryMinorVersion,\n                embedTypes: content.libraryEmbedTypes,\n                fullscreen: content.libraryFullscreen,\n            },\n        };\n    }\n\n    /**\n     * Load dependencies for the given content of the given type.\n     *\n     * @param id Content ID.\n     * @param type The dependency type.\n     * @returns Content dependencies, indexed by machine name.\n     */\n    loadContentDependencies(\n        id: number,\n        type?: string,\n        siteId?: string,\n    ): Promise<{[machineName: string]: CoreH5PContentDependencyData}> {\n        return this.h5pFramework.loadContentDependencies(id, type, siteId);\n    }\n\n    /**\n     * Loads a library and its dependencies.\n     *\n     * @param machineName The library's machine name.\n     * @param majorVersion The library's major version.\n     * @param minorVersion The library's minor version.\n     * @param siteId The site ID. If not defined, current site.\n     * @returns Promise resolved with the library data.\n     */\n    loadLibrary(machineName: string, majorVersion: number, minorVersion: number, siteId?: string): Promise<CoreH5PLibraryData> {\n        return this.h5pFramework.loadLibrary(machineName, majorVersion, minorVersion, siteId);\n    }\n\n    /**\n     * Check if the current user has permission to update and install new libraries.\n     *\n     * @returns Whether has permissions.\n     */\n    mayUpdateLibraries(): boolean {\n        // In the app the installation only affects current user, so the user always has permissions.\n        return true;\n    }\n\n    /**\n     * Save content data in DB and clear cache.\n     *\n     * @param content Content to save.\n     * @param folderName The name of the folder that contains the H5P.\n     * @param fileUrl The online URL of the package.\n     * @param siteId Site ID. If not defined, current site.\n     * @returns Promise resolved with content ID.\n     */\n    async saveContent(content: CoreH5PContentBeingSaved, folderName: string, fileUrl: string, siteId?: string): Promise<number> {\n        content.id = await this.h5pFramework.updateContent(content, folderName, fileUrl, siteId);\n\n        // Some user data for content has to be reset when the content changes.\n        await this.h5pFramework.resetContentUserData(content.id, siteId);\n\n        return content.id;\n    }\n\n    /**\n     * Helper function used to figure out embed and download behaviour.\n     *\n     * @param optionName The option name.\n     * @param permission The permission.\n     * @param id The package ID.\n     * @param value Default value.\n     * @returns The value to use.\n     */\n    setDisplayOptionOverrides(optionName: string, permission: number, id: number, value: boolean): boolean {\n        const behaviour = this.h5pFramework.getOption(optionName, CoreH5PDisplayOptionBehaviour.ALWAYS_SHOW);\n\n        // If never show globally, force hide\n        if (behaviour == CoreH5PDisplayOptionBehaviour.NEVER_SHOW) {\n            value = false;\n        } else if (behaviour == CoreH5PDisplayOptionBehaviour.ALWAYS_SHOW) {\n            // If always show or permissions say so, force show\n            value = true;\n        } else if (behaviour == CoreH5PDisplayOptionBehaviour.CONTROLLED_BY_PERMISSIONS) {\n            value = this.h5pFramework.hasPermission(permission, id);\n        }\n\n        return value;\n    }\n\n    /**\n     * Determine if params contain any match.\n     *\n     * @param params Parameters.\n     * @param pattern Regular expression to identify pattern.\n     * @returns True if params matches pattern.\n     */\n    protected textAddonMatches(params: unknown, pattern: string): boolean {\n\n        if (typeof params == 'string') {\n            if (params.match(pattern)) {\n                return true;\n            }\n        } else if (typeof params == 'object') {\n            for (const key in params) {\n                const value = params[key];\n\n                if (this.textAddonMatches(value, pattern)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n}\n\n/**\n * Display options behaviour constants.\n */\nexport enum CoreH5PDisplayOptionBehaviour {\n    NEVER_SHOW = 0,\n    CONTROLLED_BY_AUTHOR_DEFAULT_ON = 1,\n    CONTROLLED_BY_AUTHOR_DEFAULT_OFF = 2,\n    ALWAYS_SHOW = 3,\n    CONTROLLED_BY_PERMISSIONS = 4,\n}\n\n/**\n * Permission constants.\n */\nexport enum CoreH5PPermission {\n    DOWNLOAD_H5P = 0,\n    EMBED_H5P = 1,\n    CREATE_RESTRICTED = 2,\n    UPDATE_LIBRARIES = 3,\n    INSTALL_RECOMMENDED = 4,\n    COPY_H5P = 8,\n}\n\n/**\n * Display options as object.\n */\nexport type CoreH5PDisplayOptions = {\n    frame?: boolean;\n    export?: boolean;\n    embed?: boolean;\n    copyright?: boolean;\n    icon?: boolean;\n    copy?: boolean;\n};\n\n/**\n * Dependency asset.\n */\nexport type CoreH5PDependencyAsset = {\n    path: string; // Path to the asset.\n    version: string; // Dependency version.\n};\n\n/**\n * Dependencies files.\n */\nexport type CoreH5PDependenciesFiles = {\n    scripts: CoreH5PDependencyAsset[]; // JS scripts.\n    styles: CoreH5PDependencyAsset[]; // CSS files.\n};\n\n/**\n * Content data, including main library data.\n */\nexport type CoreH5PContentData = {\n    id: number; // The id of the content.\n    params: string; // The content in json format.\n    embedType: string; // Embed type to use.\n    disable: number | null; // H5P Button display options.\n    folderName: string; // Name of the folder that contains the contents.\n    title: string; // Main library's title.\n    slug: string; // Lib title and ID slugified.\n    filtered: string | null; // Filtered version of json_content.\n    libraryMajorVersion: number; // Main library's major version.\n    libraryMinorVersion: number; // Main library's minor version.\n    metadata: unknown; // Content metadata.\n    library: CoreH5PContentMainLibraryData; // Main library data.\n    dependencies?: {[key: string]: CoreH5PContentDepsTreeDependency}; // Dependencies. Calculated in filterParameters.\n};\n\n/**\n * Data about main library of a content.\n */\nexport type CoreH5PContentMainLibraryData = {\n    id: number; // The id of the library.\n    name: string; // The library machine name.\n    majorVersion: number; // Major version.\n    minorVersion: number; // Minor version.\n    embedTypes: string; // List of supported embed types.\n    fullscreen: number; // Display fullscreen button.\n};\n\n/**\n * Content dependency data.\n */\nexport type CoreH5PContentDependencyData = CoreH5PLibraryBasicDataWithPatch & {\n    libraryId: number; // The id of the library if it is an existing library.\n    preloadedJs?: string | string[]; // Comma separated string with js file paths. If already parsed, list of paths.\n    preloadedCss?: string | string[]; // Comma separated string with css file paths. If already parsed, list of paths.\n    dropCss?: string; // CSV of machine names.\n    dependencyType: string; // The dependency type.\n    path?: string; // Path to the dependency. Calculated in getDependenciesFiles.\n    version?: string; // Version of the dependency. Calculated in getDependenciesFiles.\n};\n\n/**\n * Data for each content dependency in the dependency tree.\n */\nexport type CoreH5PContentDepsTreeDependency = {\n    library: CoreH5PLibraryData | CoreH5PLibraryAddonData; // Library data.\n    type: string; // Dependency type.\n    weight?: number; // An integer determining the order of the libraries when they are loaded.\n};\n\n/**\n * Library data.\n */\nexport type CoreH5PLibraryData = CoreH5PLibraryBasicDataWithPatch & {\n    libraryId: number; // The id of the library.\n    title: string; // The human readable name of this library.\n    runnable: number; // Can this library be started by the module? I.e. not a dependency.\n    fullscreen: number; // Display fullscreen button.\n    embedTypes: string; // List of supported embed types.\n    preloadedJs?: string; // Comma separated list of scripts to load.\n    preloadedCss?: string; // Comma separated list of stylesheets to load.\n    dropLibraryCss?: string; // List of libraries that should not have CSS included if this library is used. Comma separated list.\n    semantics?: CoreH5PSemantics[]; // The semantics definition. If it's a string, it's in json format.\n    preloadedDependencies: CoreH5PLibraryBasicData[]; // Dependencies.\n    dynamicDependencies: CoreH5PLibraryBasicData[]; // Dependencies.\n    editorDependencies: CoreH5PLibraryBasicData[]; // Dependencies.\n};\n\n/**\n * Library basic data.\n */\nexport type CoreH5PLibraryBasicData = {\n    machineName: string; // The library machine name.\n    majorVersion: number; // Major version.\n    minorVersion: number; // Minor version.\n};\n\n/**\n * Data about a missing library.\n */\nexport type CoreH5PMissingLibrary = CoreH5PLibraryBasicData & {\n    libString: string; // Library that has the dependency.\n};\n\n/**\n * Library basic data including patch version.\n */\nexport type CoreH5PLibraryBasicDataWithPatch = CoreH5PLibraryBasicData & {\n    patchVersion: number; // Patch version.\n};\n\n/**\n * \"Addon\" data (library).\n */\nexport type CoreH5PLibraryAddonData = CoreH5PLibraryBasicDataWithPatch & {\n    libraryId: number; // The id of the library.\n    preloadedJs?: string; // Comma separated list of scripts to load.\n    preloadedCss?: string; // Comma separated list of stylesheets to load.\n    addTo?: CoreH5PLibraryAddTo | null; // Plugin configuration data.\n};\n\nexport type CoreH5PLocalization = Record<string, string | Record<string, string>>;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAG,QAAQ,iBAAiB;AAErC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,kBAAkB,QAAQ,gBAAgB;AAEnD,SAASC,uBAAuB,QAA0B,qBAAqB;AAC/E,SAASC,SAAS,QAAQ,aAAa;AAGvC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C;;;AAGA,OAAM,MAAOC,WAAW;EA0DpBC,YAAmBC,YAA8B;IAA9B,KAAAA,YAAY,GAAZA,YAAY;IAH/B,KAAAC,eAAe,GAAG,IAAI;IAIlB,IAAI,CAACC,KAAK,GAAG,IAAIR,kBAAkB,EAAE;EACzC;EAEA;;;;;;;EAOA,OAAOS,kBAAkBA,CAACC,gBAAwB,EAAEC,iBAAyB;IACzE;IACA,IAAIC,SAAS,GAAGF,gBAAgB,CAACG,WAAW,EAAE,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,QAAQ;IAEtF,IAAIH,iBAAiB,EAAE;MACnB;MACA,MAAMI,UAAU,GAAGJ,iBAAiB,CAACE,WAAW,EAAE;MAElD,IAAIE,UAAU,CAACD,OAAO,CAACF,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE;QACrC;QACAA,SAAS,GAAGG,UAAU,CAACD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,QAAQ;;;IAItE,OAAOF,SAAS;EACpB;EAEA;;;;;;EAMA,OAAOI,mBAAmBA,CAACC,YAAmE;IAC1F;IACA,MAAMC,MAAM,GAAa,EAAE;IAE3B;IACA,KAAK,MAAMC,IAAI,IAAIF,YAAY,EAAE;MAC7B,MAAMG,GAAG,GAAGH,YAAY,CAACE,IAAI,CAAC;MAC9BD,MAAM,CAACG,IAAI,CAACD,GAAG,CAACE,WAAW,GAAG,GAAG,GAAGF,GAAG,CAACG,YAAY,GAAG,GAAG,GAAGH,GAAG,CAACI,YAAY,GAAG,GAAG,GAAGJ,GAAG,CAACK,YAAY,CAAC;;IAG3G;IACAP,MAAM,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;IAEzC;IACA,OAAgBjC,GAAG,CAACmC,YAAY,CAACZ,MAAM,CAACa,IAAI,CAAC,EAAE,CAAC,CAAC;EACrD;EAEA;;;;;EAKA,OAAOC,UAAUA,CAAA;IACb,MAAMC,MAAM,GAAGlC,OAAO,CAACmC,OAAO,CAAC1B,KAAK,CAAC2B,cAAc,EAAE;IACrD,MAAMC,IAAI,GAAa,EAAE;IAEzBhC,WAAW,CAACiC,OAAO,CAACC,OAAO,CAAEC,MAAM,IAAI;MACnCH,IAAI,CAACf,IAAI,CAACY,MAAM,GAAGM,MAAM,CAAC;IAC9B,CAAC,CAAC;IAEFH,IAAI,CAACf,IAAI,CAAClB,QAAQ,CAACqC,gBAAgB,CAACP,MAAM,EAAE,4BAA4B,CAAC,CAAC;IAE1E,OAAOG,IAAI;EACf;EAEA;;;;;;EAMA,OAAOK,iBAAiBA,CAACC,aAAqB;IAE1C,MAAMC,OAAO,GAAGD,aAAa,CAACE,KAAK,CAAC,sDAAsD,CAAC;IAE3F,IAAID,OAAO,IAAIA,OAAO,CAACE,MAAM,IAAI,CAAC,EAAE;MAChC,OAAO;QACHvB,WAAW,EAAEqB,OAAO,CAAC,CAAC,CAAC;QACvBpB,YAAY,EAAEuB,MAAM,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC;QAChCnB,YAAY,EAAEsB,MAAM,CAACH,OAAO,CAAC,CAAC,CAAC;OAClC;;IAGL,OAAO,IAAI;EACf;EAEA;;;;;;EAMA,OAAOI,eAAeA,CAACC,OAAgE;IACnF,MAAM7B,IAAI,GAAG,aAAa,IAAI6B,OAAO,GAAGA,OAAO,CAAC1B,WAAW,GAAG0B,OAAO,CAAC7B,IAAI;IAE1E,OAAO,GAAGA,IAAI,IAAI6B,OAAO,CAACzB,YAAY,IAAIyB,OAAO,CAACxB,YAAY,EAAE;EACpE;EAEA;;;;;;EAMA,OAAOyB,mBAAmBA,CAACD,OAAgE;IACvF,MAAM7B,IAAI,GAAG,aAAa,IAAI6B,OAAO,GAAGA,OAAO,CAAC1B,WAAW,GAAG0B,OAAO,CAAC7B,IAAI;IAE1E;IACA;IAEA,OAAO,GAAGA,IAAI,IAAI6B,OAAO,CAACzB,YAAY,IAAIyB,OAAO,CAACxB,YAAY,EAAE;EACpE;EAEA;;;;;;EAMA,OAAO0B,OAAOA,CAACC,KAAa;IACxBA,KAAK,GAAGA,KAAK,IAAI,EAAE;IAEnBA,KAAK,GAAGA,KAAK,CAACtC,WAAW,EAAE;IAE3B;IACA,IAAIuC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACN,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACnC,MAAMC,IAAI,GAAGH,KAAK,CAACE,CAAC,CAAC;MAErBD,QAAQ,IAAIhD,WAAW,CAACmD,WAAW,CAACD,IAAI,CAAC,IAAIA,IAAI;;IAGrD;IACAF,QAAQ,GAAGA,QAAQ,CAACI,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IAE9C;IACAJ,QAAQ,GAAGA,QAAQ,CAACI,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;IAE1C;IACAJ,QAAQ,GAAGA,QAAQ,CAACI,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;IAE7C;IACA,IAAIJ,QAAQ,CAACP,MAAM,GAAG,EAAE,EAAE;MACtBO,QAAQ,GAAGA,QAAQ,CAACK,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;;IAGxC;IACA,IAAIL,QAAQ,KAAK,EAAE,EAAE;MACjBA,QAAQ,GAAG,aAAa;;IAG5B,OAAOA,QAAQ;EACnB;EAEA;;;;;;;EAOMM,gBAAgBA,CAACC,OAA2B,EAAEC,MAAe;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC/DF,MAAM,GAAGA,MAAM,IAAIhE,SAAS,CAACmE,gBAAgB,EAAE;MAE/C,IAAIJ,OAAO,CAACK,QAAQ,EAAE;QAClB,OAAOL,OAAO,CAACK,QAAQ;;MAG3B,IAAIL,OAAO,CAACX,OAAO,KAAKiB,SAAS,IAAIN,OAAO,CAACO,MAAM,KAAKD,SAAS,EAAE;QAC/D,OAAO,IAAI;;MAGf,MAAMC,MAAM,GAAG;QACXlB,OAAO,EAAE5C,WAAW,CAAC2C,eAAe,CAACY,OAAO,CAACX,OAAO,CAAC;QACrDkB,MAAM,EAAErE,aAAa,CAACsE,SAAS,CAACR,OAAO,CAACO,MAAM,EAAE,KAAK;OACxD;MAED,IAAI,CAACA,MAAM,CAACA,MAAM,EAAE;QAChB,OAAO,IAAI;;MAGf,IAAI;QACA,MAAME,SAAS,GAAG,IAAInE,uBAAuB,CAAC2D,MAAM,CAAC;QAErD;QACA,MAAMQ,SAAS,CAACC,eAAe,CAACH,MAAM,EAAE;UAAEI,OAAO,EAAE,CAACJ,MAAM,CAAClB,OAAO;QAAC,CAAE,CAAC;QAEtE;QACA,MAAMuB,MAAM,SAASV,KAAI,CAACvD,YAAY,CAACkE,UAAU,CAACZ,MAAM,CAAC;QAEzD;QACA,KAAK,MAAMP,CAAC,IAAIkB,MAAM,EAAE;UAAA,IAAAE,YAAA;UACpB,MAAMC,KAAK,GAAGH,MAAM,CAAClB,CAAC,CAAC;UAEvB,KAAAoB,YAAA,GAAIC,KAAK,CAACC,KAAK,cAAAF,YAAA,gBAAAA,YAAA,GAAXA,YAAA,CAAad,OAAO,cAAAc,YAAA,gBAAAA,YAAA,GAApBA,YAAA,CAAsBG,KAAK,cAAAH,YAAA,eAA3BA,YAAA,CAA6B5B,MAAM,EAAE;YACrC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqB,KAAK,CAACC,KAAK,CAAChB,OAAO,CAACiB,KAAK,CAAC/B,MAAM,EAAEQ,CAAC,EAAE,EAAE;cAAA,IAAAwB,UAAA;cACvD,MAAMC,IAAI,GAAGJ,KAAK,CAACC,KAAK,CAAChB,OAAO,CAACiB,KAAK,CAACvB,CAAC,CAAC;cACzC,IAAI0B,KAAK,GAAGD,IAAI,aAAJA,IAAI,gBAAAD,UAAA,GAAJC,IAAI,CAAEE,IAAI,cAAAH,UAAA,uBAAVA,UAAA,CAAYE,KAAK;cAC7B,IAAIA,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBACtD;gBACAF,KAAK,GAAGA,KAAK,CAACtB,SAAS,CAAC,CAAC,EAAEsB,KAAK,CAAClC,MAAM,GAAG,CAAC,CAAC;;cAGhD,IAAIkC,KAAK,IAAIlB,KAAI,CAACqB,gBAAgB,CAAChB,MAAM,CAACA,MAAM,EAAEa,KAAK,CAAC,EAAE;gBACtD,MAAMX,SAAS,CAACM,KAAK,CAACA,KAAK,CAAC;gBAE5B;gBACA;;;;;QAMhB;QACAf,OAAO,CAAC1C,YAAY,GAAGmD,SAAS,CAACe,eAAe,EAAE;QAElD,MAAMC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACpB,MAAM,CAACA,MAAM,CAAC;QAE/C;QACA,IAAIP,OAAO,CAAC4B,EAAE,EAAE;UACZ;UACA,IAAI;YACA,MAAM1B,KAAI,CAACvD,YAAY,CAACkF,kBAAkB,CAAC7B,OAAO,CAAC4B,EAAE,EAAE3B,MAAM,CAAC;WACjE,CAAC,OAAA6B,OAAA,EAAM;YACJ;UAAA;UAGJ,MAAM5B,KAAI,CAACvD,YAAY,CAACoF,gBAAgB,CAAC/B,OAAO,CAAC4B,EAAE,EAAE5B,OAAO,CAAC1C,YAAY,EAAE2C,MAAM,CAAC;UAElF,IAAI,CAACD,OAAO,CAACgC,IAAI,EAAE;YACfhC,OAAO,CAACgC,IAAI,GAAG9B,KAAI,CAAC+B,mBAAmB,CAACjC,OAAO,CAAC;;UAGpD;UACA,MAAME,KAAI,CAACvD,YAAY,CAACuF,mBAAmB,CAAClC,OAAO,CAAC4B,EAAE,EAAE;YACpDvB,QAAQ,EAAEoB;WACb,EAAExB,MAAM,CAAC;;QAGd,OAAOwB,SAAS;OACnB,CAAC,OAAOU,KAAK,EAAE;QACZ,OAAO,IAAI;;IACd;EACL;EAEA;;;;;;;;;;;EAWMC,uBAAuBA,CACzB9E,YAA+D,EAC/D+B,OAAqD,EACrDgD,UAAA,GAAqB,CAAC,EACtBC,MAAA,GAAkB,KAAK,EACvBrC,MAAe;IAAA,IAAAsC,MAAA;IAAA,OAAApC,iBAAA;MAGfF,MAAM,GAAGA,MAAM,IAAIhE,SAAS,CAACmE,gBAAgB,EAAE;MAE/C,MAAMa,KAAK,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,CAAC;MAEhD,KAAK,MAAMvB,CAAC,IAAIuB,KAAK,EAAE;QACnB,IAAIE,IAAI,GAAGF,KAAK,CAACvB,CAAC,CAAC;QACnB,MAAM8C,QAAQ,GAAGrB,IAAI,GAAG,cAAc;QAEtC,IAAI,CAAC9B,OAAO,CAACmD,QAAQ,CAAC,EAAE;UACpB,SAAS,CAAC;;;QAGd,IAAIrB,IAAI,KAAK,WAAW,IAAImB,MAAM,EAAE;UAChC;UACAnB,IAAI,GAAG,QAAQ;;QAGnB,KAAK,MAAMsB,CAAC,IAAIpD,OAAO,CAACmD,QAAQ,CAAC,EAAE;UAC/B,MAAME,UAAU,GAA4BrD,OAAO,CAACmD,QAAQ,CAAC,CAACC,CAAC,CAAC;UAEhE,MAAME,aAAa,GAAGxB,IAAI,GAAG,GAAG,GAAGuB,UAAU,CAAC/E,WAAW;UACzD,IAAIL,YAAY,CAACqF,aAAa,CAAC,EAAE;YAC7B,SAAS,CAAC;;UAGd;UACA,MAAMC,iBAAiB,SAASL,MAAI,CAACM,WAAW,CAC5CH,UAAU,CAAC/E,WAAW,EACtB+E,UAAU,CAAC9E,YAAY,EACvB8E,UAAU,CAAC7E,YAAY,EACvBoC,MAAM,CACT;UAED3C,YAAY,CAACqF,aAAa,CAAC,GAAG;YAC1BtD,OAAO,EAAEuD,iBAAiB;YAC1BzB,IAAI,EAAEA;WACT;UAED;UACA,MAAM2B,MAAM,SAASP,MAAI,CAACH,uBAAuB,CAC7C9E,YAAY,EACZsF,iBAAiB,EACjBP,UAAU,EACVlB,IAAI,KAAK,QAAQ,EACjBlB,MAAM,CACT;UAEDoC,UAAU,GAAGS,MAAM;UACnBxF,YAAY,CAACqF,aAAa,CAAC,CAACG,MAAM,GAAGT,UAAU,EAAE;;;MAIzD,OAAOA,UAAU;IAAC;EACtB;EAEA;;;;;;;EAOAU,iBAAiBA,CAACC,cAAqC,EAAEpB,EAAU;IAC/DoB,cAAc,GAAGA,cAAc,IAAI,EAAE;IAErC;IACAA,cAAc,CAACvG,WAAW,CAACwG,uBAAuB,CAAC,GAAG,KAAK;IAE3D;IACAD,cAAc,CAACvG,WAAW,CAACyG,oBAAoB,CAAC,GAAG,KAAK;IAExD,IAAI,CAAC,IAAI,CAACvG,YAAY,CAACwG,SAAS,CAAC1G,WAAW,CAAC2G,oBAAoB,EAAE,IAAI,CAAC,EAAE;MACtEJ,cAAc,CAACvG,WAAW,CAAC2G,oBAAoB,CAAC,GAAG,KAAK;KAC3D,MAAM,IAAI,IAAI,CAACzG,YAAY,CAACwG,SAAS,CAAC1G,WAAW,CAAC4G,wBAAwB,EAAE,IAAI,CAAC,IAAI,KAAK,EAAE;MACzFL,cAAc,CAACvG,WAAW,CAAC4G,wBAAwB,CAAC,GAAG,KAAK;;IAGhEL,cAAc,CAACvG,WAAW,CAAC6G,mBAAmB,CAAC,GAAG,IAAI,CAAC3G,YAAY,CAAC4G,aAAa,CAACC,iBAAiB,CAACC,QAAQ,EAAE7B,EAAE,CAAC;IAEjH,OAAOoB,cAAc;EACzB;EAEA;;;;;;EAMAf,mBAAmBA,CAACjC,OAA2B;IAE3C,IAAIgC,IAAI,GAAGvF,WAAW,CAAC8C,OAAO,CAACS,OAAO,CAAC0D,KAAK,CAAC;IAC7C,IAAIC,SAAS,GAAmB,IAAI;IAEpC,OAAO,CAACA,SAAS,EAAE;MACf,IAAIA,SAAS,KAAK,KAAK,EAAE;QACrB;QACA,MAAM3E,OAAO,GAAGgD,IAAI,CAAC/C,KAAK,CAAC,gBAAgB,CAAC;QAC5C,IAAID,OAAO,EAAE;UACTgD,IAAI,GAAGhD,OAAO,CAAC,CAAC,CAAC,IAAIG,MAAM,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/C,MAAM;UACHgD,IAAI,IAAI,IAAI;;;MAIpB2B,SAAS,GAAG,IAAI,CAAChH,YAAY,CAACiH,sBAAsB,CAAC5B,IAAI,CAAC;;IAG9D,OAAOA,IAAI;EACf;EAEA;;;;;;;EAOA6B,aAAaA,CAACC,MAAgC,EAAEC,gBAAA,GAA2B,EAAE;IACzE,MAAMtF,IAAI,GAAa,EAAE;IAEzBqF,MAAM,CAACnF,OAAO,CAAEqF,KAAK,IAAI;MACrB,IAAIC,GAAG,GAAGD,KAAK,CAACE,IAAI;MAEpB;MACA,IAAIF,KAAK,CAACE,IAAI,CAAC/G,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI4G,gBAAgB,EAAE;QACrDE,GAAG,GAAGzH,QAAQ,CAACqC,gBAAgB,CAACkF,gBAAgB,EAAEE,GAAG,CAAC;;MAG1D;MACA,IAAID,KAAK,CAACG,OAAO,EAAE;QACfF,GAAG,IAAID,KAAK,CAACG,OAAO;;MAGxB1F,IAAI,CAACf,IAAI,CAACuG,GAAG,CAAC;IAClB,CAAC,CAAC;IAEF,OAAOxF,IAAI;EACf;EAEA;;;;;;;;;EASM2F,oBAAoBA,CACtB9G,YAAmE,EACnE+G,UAAkB,EAClBC,MAAA,GAAiB,EAAE,EACnBrE,MAAe;IAAA,IAAAsE,MAAA;IAAA,OAAApE,iBAAA;MAEfF,MAAM,GAAGA,MAAM,IAAIhE,SAAS,CAACmE,gBAAgB,EAAE;MAE/C;MACA,MAAMoE,KAAK,GAA6B;QACpCC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE;OACX;MAED;MACA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACtH,YAAY,CAAC,CAAC4B,MAAM,EAAE;QACnC,OAAOsF,KAAK;;MAGhB,IAAIK,gBAAgB,GAAG,EAAE;MAEzB,IAAIN,MAAI,CAAC3H,eAAe,EAAE;QACtB;QACAiI,gBAAgB,GAAGpI,WAAW,CAACY,mBAAmB,CAACC,YAAY,CAAC;QAEhE,MAAMwH,YAAY,SAASP,MAAI,CAAC1H,KAAK,CAACkI,eAAe,CAACF,gBAAgB,CAAC;QAEvE,IAAIC,YAAY,EAAE;UACd;UACA,OAAOH,MAAM,CAACK,MAAM,CAACR,KAAK,EAAEM,YAAY,CAAC;;;MAIjD;MACA,KAAK,MAAMG,GAAG,IAAI3H,YAAY,EAAE;QAC5B,MAAMoF,UAAU,GAAGpF,YAAY,CAAC2H,GAAG,CAAC;QAEpC,IAAI,CAACvC,UAAU,CAACwB,IAAI,EAAE;UAClBxB,UAAU,CAACwB,IAAI,GAAGK,MAAI,CAAC1H,KAAK,CAACqI,iBAAiB,CAACxC,UAAU,CAAC;UAC1DA,UAAU,CAACyC,WAAW,GAAazC,UAAU,CAACyC,WAAY,CAACC,KAAK,CAAC,GAAG,CAAC;UACrE1C,UAAU,CAAC2C,YAAY,GAAa3C,UAAU,CAAC2C,YAAa,CAACD,KAAK,CAAC,GAAG,CAAC;;QAG3E1C,UAAU,CAACyB,OAAO,GAAG,OAAO,GAAGzB,UAAU,CAAC9E,YAAY,GAAG,GAAG,GAAG8E,UAAU,CAAC7E,YAAY,GAAG,GAAG,GAAG6E,UAAU,CAAC5E,YAAY;QAEtHyG,MAAI,CAACe,mBAAmB,CAAC5C,UAAU,EAAE,aAAa,EAAE8B,KAAK,CAACC,OAAO,EAAEH,MAAM,CAAC;QAC1EC,MAAI,CAACe,mBAAmB,CAAC5C,UAAU,EAAE,cAAc,EAAE8B,KAAK,CAACE,MAAM,EAAEJ,MAAM,CAAC;;MAG9E,IAAIC,MAAI,CAAC3H,eAAe,EAAE;QACtB;QACA,MAAM2H,MAAI,CAAC1H,KAAK,CAAC0I,WAAW,CAACf,KAAK,EAAEK,gBAAgB,EAAER,UAAU,EAAEpE,MAAM,CAAC;QAEzE;QACA,MAAMsE,MAAI,CAAC5H,YAAY,CAAC6I,gBAAgB,CAACX,gBAAgB,EAAEvH,YAAY,EAAE+G,UAAU,EAAEpE,MAAM,CAAC;;MAGhG,OAAOuE,KAAK;IAAC;EACjB;EAEA;;;;;;;EAOMiB,kBAAkBA,CAAC7D,EAAU,EAAE3B,MAAe;IAAA,IAAAyF,MAAA;IAAA,OAAAvF,iBAAA;MAChDF,MAAM,GAAGA,MAAM,IAAIhE,SAAS,CAACmE,gBAAgB,EAAE;MAE/C,MAAMuF,KAAK,GAAG,EAAE;MAEhB,MAAMrI,YAAY,SAASoI,MAAI,CAAC/I,YAAY,CAACiJ,uBAAuB,CAAChE,EAAE,EAAEtB,SAAS,EAAEL,MAAM,CAAC;MAE3F,KAAK,MAAMtC,WAAW,IAAIL,YAAY,EAAE;QACpC,MAAMoF,UAAU,GAAGpF,YAAY,CAACK,WAAW,CAAC;QAC5C,MAAM0G,UAAU,GAAG5H,WAAW,CAAC6C,mBAAmB,CAACoD,UAAU,CAAC;QAE9DiD,KAAK,CAACtB,UAAU,CAAC,GAAGqB,MAAI,CAAC7I,KAAK,CAACgJ,oBAAoB,CAACnD,UAAU,EAAEzC,MAAM,EAAEoE,UAAU,CAAC;;MAGvF,OAAOsB,KAAK;IAAC;EACjB;EAEA;;;;;;;;EAQUL,mBAAmBA,CACzB5C,UAAwC,EACxCvB,IAAY,EACZ2C,MAAgC,EAChCQ,MAAA,GAAiB,EAAE;IAGnB;IACA,IAAI,CAAC5B,UAAU,CAACvB,IAAI,CAAC,IAAIuB,UAAU,CAACvB,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;MACjD;;IAGJ;IACA,IAAIA,IAAI,KAAK,cAAc,IAAIhF,SAAS,CAAC2J,WAAW,CAACpD,UAAU,CAACqD,OAAO,CAAC,EAAE;MACtE;;IAGJ,KAAK,MAAMd,GAAG,IAAIvC,UAAU,CAACvB,IAAI,CAAC,EAAE;MAChC,MAAM6E,IAAI,GAAGtD,UAAU,CAACvB,IAAI,CAAC,CAAC8D,GAAG,CAAC;MAElCnB,MAAM,CAACpG,IAAI,CAAC;QACRwG,IAAI,EAAEI,MAAM,GAAG,GAAG,GAAG5B,UAAU,CAACwB,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO8B,IAAI,IAAI,QAAQ,GAAGA,IAAI,CAAC9B,IAAI,GAAG8B,IAAI,EAAEC,IAAI,EAAE;QAChG9B,OAAO,EAAEzB,UAAU,CAACyB,OAAO,IAAI;OAClC,CAAC;;EAEV;EAEA;;;;;;EAMA+B,yBAAyBA,CAACC,OAAe;IACrC,MAAMnD,cAAc,GAA0B,EAAE;IAEhD;IACAA,cAAc,CAACvG,WAAW,CAAC2G,oBAAoB,CAAC,GAAG,EAAE+C,OAAO,GAAG1J,WAAW,CAAC2J,aAAa,CAAC;IACzFpD,cAAc,CAACvG,WAAW,CAACwG,uBAAuB,CAAC,GAAG,KAAK,CAAC,CAAC;IAC7DD,cAAc,CAACvG,WAAW,CAACyG,oBAAoB,CAAC,GAAG,KAAK,CAAC,CAAC;IAC1D;IACAF,cAAc,CAACvG,WAAW,CAAC4G,wBAAwB,CAAC,GAAG,EAAE8C,OAAO,GAAG1J,WAAW,CAAC4J,iBAAiB,CAAC;IACjGrD,cAAc,CAACvG,WAAW,CAAC6J,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC3J,YAAY,CAACwG,SAAS,CAAC1G,WAAW,CAAC6J,oBAAoB,EAAE,IAAI,CAAC;IAExH,OAAOtD,cAAc;EACzB;EAEA;;;;;;;EAOAuD,wBAAwBA,CAACJ,OAAe,EAAEvE,EAAU;IAChD,OAAO,IAAI,CAACmB,iBAAiB,CAAC,IAAI,CAACmD,yBAAyB,CAACC,OAAO,CAAC,EAAEvE,EAAE,CAAC;EAC9E;EAEA;;;;;EAKA4E,eAAeA,CAAA;IACX;IACA,OAAO;MACHC,UAAU,EAAElK,SAAS,CAACmK,OAAO,CAAC,qBAAqB,CAAC;MACpDC,iBAAiB,EAAEpK,SAAS,CAACmK,OAAO,CAAC,4BAA4B,CAAC;MAClEE,QAAQ,EAAErK,SAAS,CAACmK,OAAO,CAAC,mBAAmB,CAAC;MAChDG,UAAU,EAAEtK,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MACnDI,KAAK,EAAEvK,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1CK,IAAI,EAAExK,SAAS,CAACmK,OAAO,CAAC,eAAe,CAAC;MACxCM,YAAY,EAAEzK,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxDO,YAAY,EAAE1K,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxDQ,YAAY,EAAE3K,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxDS,oBAAoB,EAAE5K,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAC7DU,KAAK,EAAE7K,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1ChD,KAAK,EAAEnH,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1CW,MAAM,EAAE9K,SAAS,CAACmK,OAAO,CAAC,iBAAiB,CAAC;MAC5CY,IAAI,EAAE/K,SAAS,CAACmK,OAAO,CAAC,eAAe,CAAC;MACxCa,MAAM,EAAEhL,SAAS,CAACmK,OAAO,CAAC,iBAAiB,CAAC;MAC5Cc,OAAO,EAAEjL,SAAS,CAACmK,OAAO,CAAC,kBAAkB,CAAC;MAC9Ce,SAAS,EAAElL,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAClDgB,YAAY,EAAEnL,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACvDiB,KAAK,EAAEpL,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1CkB,YAAY,EAAErL,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxDmB,gBAAgB,EAAEtL,SAAS,CAACmK,OAAO,CAAC,2BAA2B,CAAC;MAChEoB,mBAAmB,EAAEvL,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAChEqB,qBAAqB,EAAExL,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MACnEsB,gBAAgB,EAAEzL,SAAS,CAACmK,OAAO,CAAC,qBAAqB,CAAC;MAC1DuB,cAAc,EAAE1L,SAAS,CAACmK,OAAO,CAAC,mBAAmB,CAAC;MACtDwB,cAAc,EAAE3L,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5DyB,YAAY,EAAE5L,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxD0B,EAAE,EAAE7L,SAAS,CAACmK,OAAO,CAAC,aAAa,CAAC;MACpC2B,QAAQ,EAAE9L,SAAS,CAACmK,OAAO,CAAC,mBAAmB,CAAC;MAChD4B,QAAQ,EAAE/L,SAAS,CAACmK,OAAO,CAAC,mBAAmB,CAAC;MAChD6B,QAAQ,EAAEhM,SAAS,CAACmK,OAAO,CAAC,mBAAmB,CAAC;MAChD8B,mBAAmB,EAAEjM,SAAS,CAACmK,OAAO,CAAC,8BAA8B,CAAC;MACtE+B,iBAAiB,EAAElM,SAAS,CAACmK,OAAO,CAAC,4BAA4B,CAAC;MAClEgC,WAAW,EAAEnM,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDiC,YAAY,EAAEpM,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxDkC,QAAQ,EAAErM,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACnDmC,WAAW,EAAEtM,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MACxDoC,aAAa,EAAEvM,SAAS,CAACmK,OAAO,CAAC,0BAA0B,CAAC;MAC5DqC,aAAa,EAAExM,SAAS,CAACmK,OAAO,CAAC,0BAA0B,CAAC;MAC5DsC,aAAa,EAAEzM,SAAS,CAACmK,OAAO,CAAC,0BAA0B,CAAC;MAC5DuC,eAAe,EAAE1M,SAAS,CAACmK,OAAO,CAAC,4BAA4B,CAAC;MAChEwC,eAAe,EAAE3M,SAAS,CAACmK,OAAO,CAAC,4BAA4B,CAAC;MAChEyC,WAAW,EAAE5M,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtD0C,WAAW,EAAE7M,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtD2C,WAAW,EAAE9M,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtD4C,WAAW,EAAE/M,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtD6C,WAAW,EAAEhN,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtD8C,UAAU,EAAEjN,SAAS,CAACmK,OAAO,CAAC,qBAAqB,CAAC;MACpD+C,SAAS,EAAElN,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAClDgD,SAAS,EAAEnN,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAClDiD,SAAS,EAAEpN,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAClDkD,SAAS,EAAErN,SAAS,CAACmK,OAAO,CAAC,aAAa,CAAC;MAC3CmD,YAAY,EAAEtN,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxDoD,UAAU,EAAEvN,SAAS,CAACmK,OAAO,CAAC,cAAc,CAAC;MAC7CqD,QAAQ,EAAExN,SAAS,CAACmK,OAAO,CAAC,0BAA0B,CAAC;MACvDsD,WAAW,EAAEzN,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDuD,aAAa,EAAE1N,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1DwD,OAAO,EAAE3N,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAChDyD,aAAa,EAAE5N,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1D0D,cAAc,EAAE7N,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5D2D,uBAAuB,EAAE9N,SAAS,CAACmK,OAAO,CAAC,kCAAkC,CAAC;MAC9E4D,cAAc,EAAE/N,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5D6D,mBAAmB,EAAEhO,SAAS,CAACmK,OAAO,CAAC,8BAA8B,CAAC;MACtE8D,iBAAiB,EAAEjO,SAAS,CAACmK,OAAO,CAAC,4BAA4B,CAAC;MAClE+D,yBAAyB,EAAElO,SAAS,CAACmK,OAAO,CAAC,oCAAoC,CAAC;MAClFgE,6BAA6B,EAAEnO,SAAS,CAACmK,OAAO,CAAC,wCAAwC,CAAC;MAC1FiE,uBAAuB,EAAEpO,SAAS,CAACmK,OAAO,CAAC,kCAAkC,CAAC;MAC9EkE,SAAS,EAAErO,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAClDmE,aAAa,EAAEtO,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1DoE,MAAM,EAAEvO,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACjDqE,IAAI,EAAExO,SAAS,CAACmK,OAAO,CAAC,eAAe,CAAC;MACxCsE,IAAI,EAAEzO,SAAS,CAACmK,OAAO,CAAC,eAAe,CAAC;MACxCuE,UAAU,EAAE1O,SAAS,CAACmK,OAAO,CAAC,qBAAqB,CAAC;MACpDwE,KAAK,EAAE3O,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1CyE,WAAW,EAAE5O,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtD0E,YAAY,EAAE7O,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxD2E,YAAY,EAAE9O,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxD4E,cAAc,EAAE/O,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5D6E,aAAa,EAAEhP,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1D8E,MAAM,EAAEjP,SAAS,CAACmK,OAAO,CAAC,iBAAiB,CAAC;MAC5C+E,WAAW,EAAElP,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDgF,WAAW,EAAEnP,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDiF,kBAAkB,EAAEpP,SAAS,CAACmK,OAAO,CAAC,6BAA6B,CAAC;MACpEkF,cAAc,EAAErP,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5DmF,yBAAyB,EAAEtP,SAAS,CAACmK,OAAO,CAAC,oCAAoC,CAAC;MAClFoF,eAAe,EAAEvP,SAAS,CAACmK,OAAO,CAAC,0BAA0B,CAAC;MAC9DqF,qBAAqB,EAAExP,SAAS,CAACmK,OAAO,CAAC,gCAAgC,CAAC;MAC1EsF,6BAA6B,EAAEzP,SAAS,CAACmK,OAAO,CAAC,wCAAwC,CAAC;MAC1FuF,UAAU,EAAE;QACRC,iBAAiB,EAAE3P,SAAS,CAACmK,OAAO,CAAC,uCAAuC,CAAC;QAC7EyF,EAAE,EAAE5P,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;QAC/C0F,cAAc,EAAE7P,SAAS,CAACmK,OAAO,CAAC,oCAAoC;OACzE;MACD2F,UAAU,EAAE9P,SAAS,CAACmK,OAAO,CAAC,qBAAqB,CAAC;MACpD4F,mBAAmB,EAAE/P,SAAS,CAACmK,OAAO,CAAC,8BAA8B,CAAC;MACtE6F,QAAQ,EAAEhQ,SAAS,CAACmK,OAAO,CAAC,mBAAmB,CAAC;MAChD8F,mBAAmB,EAAEjQ,SAAS,CAACmK,OAAO,CAAC,8BAA8B,CAAC;MACtE+F,OAAO,EAAElQ,SAAS,CAACmK,OAAO,CAAC,kBAAkB,CAAC;MAC9CgG,aAAa,EAAEnQ,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1DiG,iBAAiB,EAAEpQ,SAAS,CAACmK,OAAO,CAAC,4BAA4B,CAAC;MAClEkG,WAAW,EAAErQ,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDmG,gBAAgB,EAAEtQ,SAAS,CAACmK,OAAO,CAAC,2BAA2B,CAAC;MAChEoG,eAAe,EAAEvQ,SAAS,CAACmK,OAAO,CAAC,0BAA0B,CAAC;MAC9DqG,IAAI,EAAExQ,SAAS,CAACmK,OAAO,CAAC,eAAe,CAAC;MACxCsG,WAAW,EAAEzQ,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDuG,mBAAmB,EAAE1Q,SAAS,CAACmK,OAAO,CAAC,8BAA8B,CAAC;MACtEwG,WAAW,EAAE3Q,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDyG,aAAa,EAAE5Q,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1D0G,aAAa,EAAE7Q,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1D2G,UAAU,EAAE9Q,SAAS,CAACmK,OAAO,CAAC,qBAAqB,CAAC;MACpD4G,QAAQ,EAAE/Q,SAAS,CAACmK,OAAO,CAAC,mBAAmB,CAAC;MAChD6G,KAAK,EAAEhR,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1C8G,2BAA2B,EAAEjR,SAAS,CAACmK,OAAO,CAAC,sCAAsC,CAAC;MACtF+G,0BAA0B,EAAElR,SAAS,CAACmK,OAAO,CAAC,qCAAqC,CAAC;MACpFgH,WAAW,EAAEnR,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDiH,eAAe,EAAEpR,SAAS,CAACmK,OAAO,CAAC,0BAA0B,CAAC;MAC9DkH,sBAAsB,EAAErR,SAAS,CAACmK,OAAO,CAAC,iCAAiC,CAAC;MAC5EmH,SAAS,EAAEtR,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAClDoH,mBAAmB,EAAEvR,SAAS,CAACmK,OAAO,CAAC,8BAA8B,CAAC;MACtEqH,wBAAwB,EAAExR,SAAS,CAACmK,OAAO,CAAC,mCAAmC,CAAC;MAChFsH,mBAAmB,EAAEzR,SAAS,CAACmK,OAAO,CAAC,8BAA8B,CAAC;MACtEuH,yBAAyB,EAAE1R,SAAS,CAACmK,OAAO,CAAC,oCAAoC,CAAC;MAClFwH,YAAY,EAAE3R,SAAS,CAACmK,OAAO,CAAC,uBAAuB,CAAC;MACxDyH,oBAAoB,EAAE5R,SAAS,CAACmK,OAAO,CAAC,+BAA+B,CAAC;MACxE0H,wBAAwB,EAAE7R,SAAS,CAACmK,OAAO,CAAC,mCAAmC,CAAC;MAChF2H,aAAa,EAAE9R,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1D4H,KAAK,EAAE/R,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1C6H,OAAO,EAAEhS,SAAS,CAACmK,OAAO,CAAC,kBAAkB,CAAC;MAC9C8H,IAAI,EAAEjS,SAAS,CAACmK,OAAO,CAAC,eAAe,CAAC;MACxC+H,GAAG,EAAElS,SAAS,CAACmK,OAAO,CAAC,cAAc,CAAC;MACtCgI,OAAO,EAAEnS,SAAS,CAACmK,OAAO,CAAC,kBAAkB,CAAC;MAC9CiI,cAAc,EAAEpS,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5DkI,WAAW,EAAErS,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDmI,sBAAsB,EAAEtS,SAAS,CAACmK,OAAO,CAAC,iCAAiC,CAAC;MAC5EoI,SAAS,EAAEvS,SAAS,CAACmK,OAAO,CAAC,oBAAoB,CAAC;MAClDqI,aAAa,EAAExS,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1DsI,cAAc,EAAEzS,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5DuI,MAAM,EAAE1S,SAAS,CAACmK,OAAO,CAAC,iBAAiB,CAAC;MAC5CwI,WAAW,EAAE3S,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACtDyI,oCAAoC,EAAE5S,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MAC/E0I,0CAA0C,EAAE7S,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MACrF2I,+CAA+C,EAAE9S,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MAC1F4I,gDAAgD,EAAE/S,SAAS,CAACmK,OAAO,CAAC,sBAAsB,CAAC;MAC3F6I,GAAG,EAAEhT,SAAS,CAACmK,OAAO,CAAC,cAAc,CAAC;MACtC8I,GAAG,EAAEjT,SAAS,CAACmK,OAAO,CAAC,cAAc,CAAC;MACtC+I,cAAc,EAAElT,SAAS,CAACmK,OAAO,CAAC,yBAAyB,CAAC;MAC5DgJ,UAAU,EAAEnT,SAAS,CAACmK,OAAO,CAAC,qBAAqB,CAAC;MACpDiJ,aAAa,EAAEpT,SAAS,CAACmK,OAAO,CAAC,wBAAwB,CAAC;MAC1DkJ,iBAAiB,EAAErT,SAAS,CAACmK,OAAO,CAAC,4BAA4B,CAAC;MAClEmJ,KAAK,EAAEtT,SAAS,CAACmK,OAAO,CAAC,gBAAgB,CAAC;MAC1CoJ,MAAM,EAAEvT,SAAS,CAACmK,OAAO,CAAC,iBAAiB;KAC9C;EACL;EAEA;;;;;;;;EAQMqJ,WAAWA,CAACnO,EAAW,EAAEoO,OAAgB,EAAE/P,MAAe;IAAA,IAAAgQ,MAAA;IAAA,OAAA9P,iBAAA;MAC5DF,MAAM,GAAGA,MAAM,IAAIhE,SAAS,CAACmE,gBAAgB,EAAE;MAE/C,MAAMJ,OAAO,SAASiQ,MAAI,CAACtT,YAAY,CAACoT,WAAW,CAACnO,EAAE,EAAEoO,OAAO,EAAE/P,MAAM,CAAC;MAExE;MACA,MAAMQ,SAAS,GAAG,IAAInE,uBAAuB,CAAC2D,MAAM,CAAC;MAErDD,OAAO,CAACkQ,QAAQ,SAASzP,SAAS,CAAC0P,gBAAgB,CAACnQ,OAAO,CAACkQ,QAAQ,CAAC;MAErE,OAAO;QACHtO,EAAE,EAAE5B,OAAO,CAAC4B,EAAE;QACdrB,MAAM,EAAEP,OAAO,CAACO,MAAM;QACtBtD,SAAS,EAAE+C,OAAO,CAAC/C,SAAS;QAC5BkJ,OAAO,EAAEnG,OAAO,CAACmG,OAAO;QACxB9B,UAAU,EAAErE,OAAO,CAACqE,UAAU;QAC9BX,KAAK,EAAE1D,OAAO,CAAC0D,KAAK;QACpB1B,IAAI,EAAEhC,OAAO,CAACgC,IAAI;QAClB3B,QAAQ,EAAEL,OAAO,CAACK,QAAQ;QAC1B+P,mBAAmB,EAAEpQ,OAAO,CAACoQ,mBAAmB;QAChDC,mBAAmB,EAAErQ,OAAO,CAACqQ,mBAAmB;QAChDH,QAAQ,EAAElQ,OAAO,CAACkQ,QAAQ;QAC1B7Q,OAAO,EAAE;UACLuC,EAAE,EAAE5B,OAAO,CAACsQ,SAAS;UACrB9S,IAAI,EAAEwC,OAAO,CAACuQ,WAAW;UACzB3S,YAAY,EAAEoC,OAAO,CAACoQ,mBAAmB;UACzCvS,YAAY,EAAEmC,OAAO,CAACqQ,mBAAmB;UACzCjT,UAAU,EAAE4C,OAAO,CAAChD,iBAAiB;UACrCyJ,UAAU,EAAEzG,OAAO,CAACwQ;;OAE3B;IAAC;EACN;EAEA;;;;;;;EAOA5K,uBAAuBA,CACnBhE,EAAU,EACVT,IAAa,EACblB,MAAe;IAEf,OAAO,IAAI,CAACtD,YAAY,CAACiJ,uBAAuB,CAAChE,EAAE,EAAET,IAAI,EAAElB,MAAM,CAAC;EACtE;EAEA;;;;;;;;;EASA4C,WAAWA,CAAClF,WAAmB,EAAEC,YAAoB,EAAEC,YAAoB,EAAEoC,MAAe;IACxF,OAAO,IAAI,CAACtD,YAAY,CAACkG,WAAW,CAAClF,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAEoC,MAAM,CAAC;EACzF;EAEA;;;;;EAKAwQ,kBAAkBA,CAAA;IACd;IACA,OAAO,IAAI;EACf;EAEA;;;;;;;;;EASMC,WAAWA,CAAC1Q,OAAiC,EAAEqE,UAAkB,EAAE2L,OAAe,EAAE/P,MAAe;IAAA,IAAA0Q,MAAA;IAAA,OAAAxQ,iBAAA;MACrGH,OAAO,CAAC4B,EAAE,SAAS+O,MAAI,CAAChU,YAAY,CAACiU,aAAa,CAAC5Q,OAAO,EAAEqE,UAAU,EAAE2L,OAAO,EAAE/P,MAAM,CAAC;MAExF;MACA,MAAM0Q,MAAI,CAAChU,YAAY,CAACkU,oBAAoB,CAAC7Q,OAAO,CAAC4B,EAAE,EAAE3B,MAAM,CAAC;MAEhE,OAAOD,OAAO,CAAC4B,EAAE;IAAC;EACtB;EAEA;;;;;;;;;EASAkP,yBAAyBA,CAACC,UAAkB,EAAEC,UAAkB,EAAEpP,EAAU,EAAEqP,KAAc;IACxF,MAAMC,SAAS,GAAG,IAAI,CAACvU,YAAY,CAACwG,SAAS,CAAC4N,UAAU,EAAEI,6BAA6B,CAACC,WAAW,CAAC;IAEpG;IACA,IAAIF,SAAS,IAAIC,6BAA6B,CAACE,UAAU,EAAE;MACvDJ,KAAK,GAAG,KAAK;KAChB,MAAM,IAAIC,SAAS,IAAIC,6BAA6B,CAACC,WAAW,EAAE;MAC/D;MACAH,KAAK,GAAG,IAAI;KACf,MAAM,IAAIC,SAAS,IAAIC,6BAA6B,CAACG,yBAAyB,EAAE;MAC7EL,KAAK,GAAG,IAAI,CAACtU,YAAY,CAAC4G,aAAa,CAACyN,UAAU,EAAEpP,EAAE,CAAC;;IAG3D,OAAOqP,KAAK;EAChB;EAEA;;;;;;;EAOU1P,gBAAgBA,CAAChB,MAAe,EAAEgR,OAAe;IAEvD,IAAI,OAAOhR,MAAM,IAAI,QAAQ,EAAE;MAC3B,IAAIA,MAAM,CAACtB,KAAK,CAACsS,OAAO,CAAC,EAAE;QACvB,OAAO,IAAI;;KAElB,MAAM,IAAI,OAAOhR,MAAM,IAAI,QAAQ,EAAE;MAClC,KAAK,MAAM0E,GAAG,IAAI1E,MAAM,EAAE;QACtB,MAAM0Q,KAAK,GAAG1Q,MAAM,CAAC0E,GAAG,CAAC;QAEzB,IAAI,IAAI,CAAC1D,gBAAgB,CAAC0P,KAAK,EAAEM,OAAO,CAAC,EAAE;UACvC,OAAO,IAAI;;;;IAKvB,OAAO,KAAK;EAChB;;AAIJ;;;AAAAC,MAAA,GAx6Ba/U,WAAW;AAEJ+U,MAAA,CAAAC,MAAM,GAAG,CACrB,gBAAgB,EAChB,oCAAoC,EACpC,4BAA4B,EAC5B,wBAAwB,CAC3B;AAEeD,MAAA,CAAA9S,OAAO,GAAG,CACtB,cAAc,EACd,WAAW,EACX,4BAA4B,EAC5B,uBAAuB,EACvB,iBAAiB,EACjB,wBAAwB,EACxB,+BAA+B,EAC/B,sBAAsB,EACtB,qBAAqB,EACrB,mBAAmB,CACtB;AAEe8S,MAAA,CAAAE,aAAa,GAAG,CAC5B,cAAc,EACd,iBAAiB,CACpB;AAED;AACgBF,MAAA,CAAAG,YAAY,GAAG,CAAC;AAChBH,MAAA,CAAApL,aAAa,GAAG,CAAC;AACjBoL,MAAA,CAAAI,gBAAgB,GAAG,CAAC;AACpBJ,MAAA,CAAAK,aAAa,GAAG,CAAC;AACjBL,MAAA,CAAAnL,iBAAiB,GAAG,CAAC;AACrBmL,MAAA,CAAAM,aAAa,GAAG,EAAE;AAElBN,MAAA,CAAApO,oBAAoB,GAAG,OAAO;AAC9BoO,MAAA,CAAAvO,uBAAuB,GAAG,QAAQ;AAClCuO,MAAA,CAAAtO,oBAAoB,GAAG,OAAO;AAC9BsO,MAAA,CAAAnO,wBAAwB,GAAG,WAAW;AACtCmO,MAAA,CAAAlL,oBAAoB,GAAG,MAAM;AAC7BkL,MAAA,CAAAlO,mBAAmB,GAAG,MAAM;AAE5C;AACgBkO,MAAA,CAAA5R,WAAW,GAAG;EAC1B;EACAmS,CAAC,EAAE,IAAI;EAAEC,CAAC,EAAE,IAAI;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,IAAI;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EACzHC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EACtHC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,IAAI;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EACvHC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,IAAI;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EACvHC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EACtHC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EACtHC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EACtHC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,IAAI;EAAEC,CAAC,EAAE;CACvB;AAs3BL,WAAYvH,6BAMX;AAND,WAAYA,6BAA6B;EACrCA,6BAAA,CAAAA,6BAAA,kCAAc;EACdA,6BAAA,CAAAA,6BAAA,4EAAmC;EACnCA,6BAAA,CAAAA,6BAAA,8EAAoC;EACpCA,6BAAA,CAAAA,6BAAA,oCAAe;EACfA,6BAAA,CAAAA,6BAAA,gEAA6B;AACjC,CAAC,EANWA,6BAA6B,KAA7BA,6BAA6B;AAQzC;;;AAGA,WAAY3N,iBAOX;AAPD,WAAYA,iBAAiB;EACzBA,iBAAA,CAAAA,iBAAA,sCAAgB;EAChBA,iBAAA,CAAAA,iBAAA,gCAAa;EACbA,iBAAA,CAAAA,iBAAA,gDAAqB;EACrBA,iBAAA,CAAAA,iBAAA,8CAAoB;EACpBA,iBAAA,CAAAA,iBAAA,oDAAuB;EACvBA,iBAAA,CAAAA,iBAAA,8BAAY;AAChB,CAAC,EAPWA,iBAAiB,KAAjBA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}