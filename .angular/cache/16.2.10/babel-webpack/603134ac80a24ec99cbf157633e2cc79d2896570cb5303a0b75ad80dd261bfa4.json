{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreTag } from '../tag';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to inject an option into main menu.\n */\nexport class CoreTagMainMenuHandlerService {\n  constructor() {\n    this.name = 'CoreTag';\n    this.priority = 400;\n  }\n  /**\n   * Check if the handler is enabled on a site level.\n   *\n   * @returns Whether or not the handler is enabled on a site level.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      const available = yield CoreTag.areTagsAvailable();\n      if (!available) {\n        return false;\n      }\n      // The only way to check whether tags are enabled on web is to perform a WS call.\n      return CoreUtils.promiseWorks(CoreTag.getTagCollections());\n    })();\n  }\n  /**\n   * Returns the data needed to render the handler.\n   *\n   * @returns Data needed to render the handler.\n   */\n  getDisplayData() {\n    return {\n      icon: 'fas-tags',\n      title: 'core.tag.tags',\n      page: CoreTagMainMenuHandlerService.PAGE_NAME,\n      class: 'core-tag-search-handler'\n    };\n  }\n}\n_class = CoreTagMainMenuHandlerService;\n_class.PAGE_NAME = 'tag';\n_class.ɵfac = function CoreTagMainMenuHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreTagMainMenuHandler = makeSingleton(CoreTagMainMenuHandlerService);","map":{"version":3,"names":["CoreTag","CoreUtils","makeSingleton","CoreTagMainMenuHandlerService","constructor","name","priority","isEnabled","_asyncToGenerator","available","areTagsAvailable","promiseWorks","getTagCollections","getDisplayData","icon","title","page","PAGE_NAME","class","_class","factory","ɵfac","providedIn","CoreTagMainMenuHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/tag/services/handlers/mainmenu.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreTag } from '../tag';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@features/mainmenu/services/mainmenu-delegate';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to inject an option into main menu.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreTagMainMenuHandlerService implements CoreMainMenuHandler {\n\n    static readonly PAGE_NAME = 'tag';\n\n    name = 'CoreTag';\n    priority = 400;\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @returns Whether or not the handler is enabled on a site level.\n     */\n    async isEnabled(): Promise<boolean> {\n        const available = await CoreTag.areTagsAvailable();\n        if (!available) {\n            return false;\n        }\n\n        // The only way to check whether tags are enabled on web is to perform a WS call.\n        return CoreUtils.promiseWorks(CoreTag.getTagCollections());\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @returns Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        return {\n            icon: 'fas-tags',\n            title: 'core.tag.tags',\n            page: CoreTagMainMenuHandlerService.PAGE_NAME,\n            class: 'core-tag-search-handler',\n        };\n    }\n\n}\n\nexport const CoreTagMainMenuHandler = makeSingleton(CoreTagMainMenuHandlerService);\n"],"mappings":";;AAeA,SAASA,OAAO,QAAQ,QAAQ;AAEhC,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,6BAA6B;EAD1CC,YAAA;IAKI,KAAAC,IAAI,GAAG,SAAS;IAChB,KAAAC,QAAQ,GAAG,GAAG;;EAEd;;;;;EAKMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,MAAMC,SAAS,SAAST,OAAO,CAACU,gBAAgB,EAAE;MAClD,IAAI,CAACD,SAAS,EAAE;QACZ,OAAO,KAAK;;MAGhB;MACA,OAAOR,SAAS,CAACU,YAAY,CAACX,OAAO,CAACY,iBAAiB,EAAE,CAAC;IAAC;EAC/D;EAEA;;;;;EAKAC,cAAcA,CAAA;IACV,OAAO;MACHC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAEb,6BAA6B,CAACc,SAAS;MAC7CC,KAAK,EAAE;KACV;EACL;;SAlCSf,6BAA6B;AAEtBgB,MAAA,CAAAF,SAAS,GAAG,KAAK;;mBAFxBd,MAA6B;AAAA;;SAA7BA,MAA6B;EAAAiB,OAAA,EAA7BjB,MAA6B,CAAAkB,IAAA;EAAAC,UAAA,EADhB;AAAM;AAuChC,OAAO,MAAMC,sBAAsB,GAAGrB,aAAa,CAACC,6BAA6B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}