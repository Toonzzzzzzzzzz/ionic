{"ast":null,"code":"import _objectSpread from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreError } from '@classes/errors/error';\nimport { CoreInMemoryDatabaseTable } from './inmemory-database-table';\n/**\n * Wrapper used to improve performance by caching all the records for faster read operations.\n *\n * This implementation works best for tables that don't have a lot of records and are read often; for tables with too many\n * records use CoreLazyDatabaseTable instead.\n */\nexport class CoreEagerDatabaseTable extends CoreInMemoryDatabaseTable {\n  constructor() {\n    super(...arguments);\n    this.records = {};\n  }\n  /**\n   * @inheritdoc\n   */\n  initialize() {\n    var _superprop_getInitialize = () => super.initialize,\n      _superprop_getGetMany = () => super.getMany,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getInitialize().call(_this);\n      const records = yield _superprop_getGetMany().call(_this);\n      _this.records = records.reduce((data, record) => {\n        const primaryKey = _this.serializePrimaryKey(_this.getPrimaryKeyFromRecord(record));\n        data[primaryKey] = record;\n        return data;\n      }, {});\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getMany(conditions, options) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _options$offset;\n      const records = Object.values(_this2.records);\n      const filteredRecords = conditions ? records.filter(record => _this2.recordMatches(record, conditions)) : records;\n      if (options !== null && options !== void 0 && options.sorting) {\n        _this2.sortRecords(filteredRecords, options.sorting);\n      }\n      return filteredRecords.slice((_options$offset = options === null || options === void 0 ? void 0 : options.offset) !== null && _options$offset !== void 0 ? _options$offset : 0, options === null || options === void 0 ? void 0 : options.limit);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getManyWhere(conditions) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return Object.values(_this3.records).filter(record => conditions.js(record));\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getOne(conditions, options) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      let record;\n      if (options !== null && options !== void 0 && options.sorting) {\n        record = _this4.getMany(conditions, _objectSpread(_objectSpread({}, options), {}, {\n          limit: 1\n        }))[0];\n      } else if (conditions) {\n        record = Object.values(_this4.records).find(record => _this4.recordMatches(record, conditions));\n      } else {\n        record = Object.values(_this4.records)[0];\n      }\n      if (!record) {\n        throw new CoreError('No records found.');\n      }\n      return record;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getOneByPrimaryKey(primaryKey) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      var _this5$records$_this;\n      const record = (_this5$records$_this = _this5.records[_this5.serializePrimaryKey(primaryKey)]) !== null && _this5$records$_this !== void 0 ? _this5$records$_this : null;\n      if (record === null) {\n        throw new CoreError('No records found.');\n      }\n      return record;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  reduce(reducer, conditions) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return Object.values(_this6.records).reduce((result, record) => !conditions || conditions.js(record) ? reducer.js(result, record) : result, reducer.jsInitialValue);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  hasAny(conditions) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      return conditions ? Object.values(_this7.records).some(record => _this7.recordMatches(record, conditions)) : Object.values(_this7.records).length > 0;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  hasAnyByPrimaryKey(primaryKey) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return _this8.serializePrimaryKey(primaryKey) in _this8.records;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  count(conditions) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      return conditions ? Object.values(_this9.records).filter(record => _this9.recordMatches(record, conditions)).length : Object.values(_this9.records).length;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  insert(record) {\n    var _superprop_getInsert = () => super.insert,\n      _this10 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getInsert().call(_this10, record);\n      const primaryKey = _this10.serializePrimaryKey(_this10.getPrimaryKeyFromRecord(record));\n      _this10.records[primaryKey] = record;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  update(updates, conditions) {\n    var _superprop_getUpdate = () => super.update,\n      _this11 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getUpdate().call(_this11, updates, conditions);\n      for (const record of Object.values(_this11.records)) {\n        if (conditions && !_this11.recordMatches(record, conditions)) {\n          continue;\n        }\n        Object.assign(record, updates);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  updateWhere(updates, conditions) {\n    var _superprop_getUpdateWhere = () => super.updateWhere,\n      _this12 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getUpdateWhere().call(_this12, updates, conditions);\n      for (const record of Object.values(_this12.records)) {\n        if (!conditions.js(record)) {\n          continue;\n        }\n        Object.assign(record, updates);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  delete(conditions) {\n    var _superprop_getDelete = () => super.delete,\n      _this13 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getDelete().call(_this13, conditions);\n      if (!conditions) {\n        _this13.records = {};\n        return;\n      }\n      Object.entries(_this13.records).forEach(([id, record]) => {\n        if (!_this13.recordMatches(record, conditions)) {\n          return;\n        }\n        delete _this13.records[id];\n      });\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  deleteByPrimaryKey(primaryKey) {\n    var _superprop_getDeleteByPrimaryKey = () => super.deleteByPrimaryKey,\n      _this14 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getDeleteByPrimaryKey().call(_this14, primaryKey);\n      delete _this14.records[_this14.serializePrimaryKey(primaryKey)];\n    })();\n  }\n}","map":{"version":3,"names":["CoreError","CoreInMemoryDatabaseTable","CoreEagerDatabaseTable","constructor","records","initialize","_superprop_getInitialize","_superprop_getGetMany","getMany","_this","_asyncToGenerator","call","reduce","data","record","primaryKey","serializePrimaryKey","getPrimaryKeyFromRecord","conditions","options","_this2","_options$offset","Object","values","filteredRecords","filter","recordMatches","sorting","sortRecords","slice","offset","limit","getManyWhere","_this3","js","getOne","_this4","_objectSpread","find","getOneByPrimaryKey","_this5","_this5$records$_this","reducer","_this6","result","jsInitialValue","hasAny","_this7","some","length","hasAnyByPrimaryKey","_this8","count","_this9","insert","_superprop_getInsert","_this10","update","updates","_superprop_getUpdate","_this11","assign","updateWhere","_superprop_getUpdateWhere","_this12","delete","_superprop_getDelete","_this13","entries","forEach","id","deleteByPrimaryKey","_superprop_getDeleteByPrimaryKey","_this14"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/classes/database/eager-database-table.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreError } from '@classes/errors/error';\nimport { SQLiteDBRecordValues } from '@classes/sqlitedb';\nimport { CoreInMemoryDatabaseTable } from './inmemory-database-table';\nimport {\n    CoreDatabaseConditions,\n    GetDBRecordPrimaryKey,\n    CoreDatabaseReducer,\n    CoreDatabaseQueryOptions,\n} from './database-table';\n\n/**\n * Wrapper used to improve performance by caching all the records for faster read operations.\n *\n * This implementation works best for tables that don't have a lot of records and are read often; for tables with too many\n * records use CoreLazyDatabaseTable instead.\n */\nexport class CoreEagerDatabaseTable<\n    DBRecord extends SQLiteDBRecordValues = SQLiteDBRecordValues,\n    PrimaryKeyColumn extends keyof DBRecord = 'id',\n    PrimaryKey extends GetDBRecordPrimaryKey<DBRecord, PrimaryKeyColumn> = GetDBRecordPrimaryKey<DBRecord, PrimaryKeyColumn>\n> extends CoreInMemoryDatabaseTable<DBRecord, PrimaryKeyColumn, PrimaryKey> {\n\n    protected records: Record<string, DBRecord> = {};\n\n    /**\n     * @inheritdoc\n     */\n    async initialize(): Promise<void> {\n        await super.initialize();\n\n        const records = await super.getMany();\n\n        this.records = records.reduce((data, record) => {\n            const primaryKey = this.serializePrimaryKey(this.getPrimaryKeyFromRecord(record));\n\n            data[primaryKey] = record;\n\n            return data;\n        }, {});\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getMany(conditions?: Partial<DBRecord>, options?: Partial<CoreDatabaseQueryOptions<DBRecord>>): Promise<DBRecord[]> {\n        const records = Object.values(this.records);\n        const filteredRecords = conditions\n            ? records.filter(record => this.recordMatches(record, conditions))\n            : records;\n\n        if (options?.sorting) {\n            this.sortRecords(filteredRecords, options.sorting);\n        }\n\n        return filteredRecords.slice(options?.offset ?? 0, options?.limit);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getManyWhere(conditions: CoreDatabaseConditions<DBRecord>): Promise<DBRecord[]> {\n        return Object.values(this.records).filter(record => conditions.js(record));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getOne(\n        conditions?: Partial<DBRecord>,\n        options?: Partial<Omit<CoreDatabaseQueryOptions<DBRecord>, 'offset' | 'limit'>>,\n    ): Promise<DBRecord> {\n        let record: DBRecord | undefined;\n\n        if (options?.sorting) {\n            record = this.getMany(conditions, { ...options, limit: 1 })[0];\n        } else if (conditions) {\n            record = Object.values(this.records).find(record => this.recordMatches(record, conditions));\n        } else {\n            record = Object.values(this.records)[0];\n        }\n\n        if (!record) {\n            throw new CoreError('No records found.');\n        }\n\n        return record;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getOneByPrimaryKey(primaryKey: PrimaryKey): Promise<DBRecord> {\n        const record = this.records[this.serializePrimaryKey(primaryKey)] ?? null;\n\n        if (record === null) {\n            throw new CoreError('No records found.');\n        }\n\n        return record;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async reduce<T>(reducer: CoreDatabaseReducer<DBRecord, T>, conditions?: CoreDatabaseConditions<DBRecord>): Promise<T> {\n        return Object\n            .values(this.records)\n            .reduce(\n                (result, record) => (!conditions || conditions.js(record)) ? reducer.js(result, record) : result,\n                reducer.jsInitialValue,\n            );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async hasAny(conditions?: Partial<DBRecord>): Promise<boolean> {\n        return conditions\n            ? Object.values(this.records).some(record => this.recordMatches(record, conditions))\n            : Object.values(this.records).length > 0;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async hasAnyByPrimaryKey(primaryKey: PrimaryKey): Promise<boolean> {\n        return this.serializePrimaryKey(primaryKey) in this.records;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async count(conditions?: Partial<DBRecord>): Promise<number> {\n        return conditions\n            ? Object.values(this.records).filter(record => this.recordMatches(record, conditions)).length\n            : Object.values(this.records).length;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async insert(record: DBRecord): Promise<void> {\n        await super.insert(record);\n\n        const primaryKey = this.serializePrimaryKey(this.getPrimaryKeyFromRecord(record));\n\n        this.records[primaryKey] = record;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async update(updates: Partial<DBRecord>, conditions?: Partial<DBRecord>): Promise<void> {\n        await super.update(updates, conditions);\n\n        for (const record of Object.values(this.records)) {\n            if (conditions && !this.recordMatches(record, conditions)) {\n                continue;\n            }\n\n            Object.assign(record, updates);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async updateWhere(updates: Partial<DBRecord>, conditions: CoreDatabaseConditions<DBRecord>): Promise<void> {\n        await super.updateWhere(updates, conditions);\n\n        for (const record of Object.values(this.records)) {\n            if (!conditions.js(record)) {\n                continue;\n            }\n\n            Object.assign(record, updates);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async delete(conditions?: Partial<DBRecord>): Promise<void> {\n        await super.delete(conditions);\n\n        if (!conditions) {\n            this.records = {};\n\n            return;\n        }\n\n        Object.entries(this.records).forEach(([id, record]) => {\n            if (!this.recordMatches(record, conditions)) {\n                return;\n            }\n\n            delete this.records[id];\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async deleteByPrimaryKey(primaryKey: PrimaryKey): Promise<void> {\n        await super.deleteByPrimaryKey(primaryKey);\n\n        delete this.records[this.serializePrimaryKey(primaryKey)];\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}