{"ast":null,"code":"var _class;\nimport { Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ngx-translate/core\";\nfunction CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.errorMessages[error_r4]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"core.login.invalidvaluemax\", i0.ɵɵpureFunction1(4, _c0, ctx_r7.control.errors.max.max)), \" \");\n  }\n}\nfunction CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"core.login.invalidvaluemin\", i0.ɵɵpureFunction1(4, _c0, ctx_r8.control.errors.min.min)), \" \");\n  }\n}\nfunction CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_1_Template, 2, 1, \"span\", 2);\n    i0.ɵɵtemplate(2, CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_2_Template, 3, 6, \"span\", 2);\n    i0.ɵɵtemplate(3, CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_3_Template, 3, 6, \"span\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.errorMessages && ctx_r5.errorMessages[error_r4]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (!ctx_r5.errorMessages || !ctx_r5.errorMessages[error_r4]) && error_r4 === \"max\" && (ctx_r5.control.errors == null ? null : ctx_r5.control.errors.max));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (!ctx_r5.errorMessages || !ctx_r5.errorMessages[error_r4]) && error_r4 === \"min\" && (ctx_r5.control.errors == null ? null : ctx_r5.control.errors.min));\n  }\n}\nfunction CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_Template, 4, 3, \"div\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const error_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.control.hasError(error_r4));\n  }\n}\nfunction CoreInputErrorsComponent_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.errorKeys);\n  }\n}\nfunction CoreInputErrorsComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.errorText);\n  }\n}\nfunction CoreInputErrorsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, CoreInputErrorsComponent_div_0_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, CoreInputErrorsComponent_div_0_div_2_Template, 2, 1, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.control && ctx_r0.control.dirty && !ctx_r0.control.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorText);\n  }\n}\n/**\n * Component to show errors if an input isn't valid.\n *\n * @description\n * The purpose of this component is to make easier and consistent the validation of forms.\n *\n * It should be applied next to the input element (ion-input, ion-select, ...). In case of ion-checkbox, it should be in another\n * item, placing it in the same item as the checkbox will cause problems.\n *\n * Please notice that the inputs need to have a FormControl to make it work. That FormControl needs to be passed to this component.\n *\n * Example usage:\n *\n * <ion-item class=\"ion-text-wrap\">\n *     <ion-label stacked core-mark-required=\"true\">{{ 'core.login.username' | translate }}</ion-label>\n *     <ion-input type=\"text\" name=\"username\" formControlName=\"username\"></ion-input>\n *     <core-input-errors [control]=\"myForm.controls.username\" [errorMessages]=\"usernameErrors\"></core-input-errors>\n * </ion-item>\n */\nexport class CoreInputErrorsComponent {\n  constructor() {\n    this.errorKeys = [];\n  }\n  /**\n   * Initialize some common errors if they aren't set.\n   */\n  initErrorMessages() {\n    this.errorMessages = this.errorMessages || {};\n    this.errorMessages.required = this.errorMessages.required || Translate.instant('core.required');\n    this.errorMessages.email = this.errorMessages.email || Translate.instant('core.login.invalidemail');\n    this.errorMessages.date = this.errorMessages.date || Translate.instant('core.login.invaliddate');\n    this.errorMessages.datetime = this.errorMessages.datetime || Translate.instant('core.login.invaliddate');\n    this.errorMessages.datetimelocal = this.errorMessages.datetimelocal || Translate.instant('core.login.invaliddate');\n    this.errorMessages.time = this.errorMessages.time || Translate.instant('core.login.invalidtime');\n    this.errorMessages.url = this.errorMessages.url || Translate.instant('core.login.invalidurl');\n    // Set empty values by default, the default error messages will be built in the template when needed.\n    this.errorMessages.max = this.errorMessages.max || '';\n    this.errorMessages.min = this.errorMessages.min || '';\n  }\n  /**\n   * Component being changed.\n   */\n  ngOnChanges(changes) {\n    if ((changes.control || changes.errorMessages) && this.control) {\n      this.initErrorMessages();\n      this.errorKeys = this.errorMessages ? Object.keys(this.errorMessages) : [];\n    }\n    if (changes.errorText) {\n      this.errorText = changes.errorText.currentValue;\n    }\n  }\n}\n_class = CoreInputErrorsComponent;\n_class.ɵfac = function CoreInputErrorsComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-input-errors\"]],\n  inputs: {\n    control: \"control\",\n    errorMessages: \"errorMessages\",\n    errorText: \"errorText\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"core-input-error-container\", \"role\", \"alert\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"core-input-error-container\"], [4, \"ngIf\"], [\"class\", \"core-input-error\", \"aria-live\", \"assertive\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"core-input-error\", 4, \"ngIf\"], [1, \"core-input-error\"], [\"aria-live\", \"assertive\", 1, \"core-input-error\"]],\n  template: function CoreInputErrorsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoreInputErrorsComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.control && ctx.control.dirty && !ctx.control.valid || ctx.errorText);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.TranslatePipe],\n  styles: [\"[_nghost-%COMP%] {\\n  display: contents;\\n}\\n[_nghost-%COMP%]   .core-input-error-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n[_nghost-%COMP%]   .core-input-error-container[_ngcontent-%COMP%]   .core-input-error[_ngcontent-%COMP%] {\\n  padding: 4px;\\n  color: var(--danger);\\n  font-size: 12px;\\n  display: none;\\n}\\n[_nghost-%COMP%]   .core-input-error-container[_ngcontent-%COMP%]   .core-input-error[_ngcontent-%COMP%]:first-child {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2NvbXBvbmVudHMvaW5wdXQtZXJyb3JzL2lucHV0LWVycm9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7QUFDSjtBQUFJO0VBQ0ksV0FBQTtBQUVSO0FBQVE7RUFDSSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtBQUVaO0FBQVk7RUFDSSxjQUFBO0FBRWhCIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIGRpc3BsYXk6IGNvbnRlbnRzO1xuICAgIC5jb3JlLWlucHV0LWVycm9yLWNvbnRhaW5lciB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgIC5jb3JlLWlucHV0LWVycm9yIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDRweDtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1kYW5nZXIpO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcblxuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Translate","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r6","errorMessages","error_r4","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r7","control","errors","max","ctx_r8","min","ɵɵtemplate","CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_1_Template","CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_2_Template","CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_span_3_Template","ɵɵproperty","ctx_r5","ɵɵelementContainerStart","CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_div_1_Template","ɵɵelementContainerEnd","ctx_r3","hasError","CoreInputErrorsComponent_div_0_ng_container_1_ng_container_1_Template","ctx_r1","errorKeys","ctx_r2","errorText","CoreInputErrorsComponent_div_0_ng_container_1_Template","CoreInputErrorsComponent_div_0_div_2_Template","ctx_r0","dirty","valid","CoreInputErrorsComponent","constructor","initErrorMessages","required","instant","email","date","datetime","datetimelocal","time","url","ngOnChanges","changes","Object","keys","currentValue","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","CoreInputErrorsComponent_Template","rf","ctx","CoreInputErrorsComponent_div_0_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/input-errors/input-errors.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/input-errors/core-input-errors.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnChanges, SimpleChange } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Translate } from '@singletons';\n\n/**\n * Component to show errors if an input isn't valid.\n *\n * @description\n * The purpose of this component is to make easier and consistent the validation of forms.\n *\n * It should be applied next to the input element (ion-input, ion-select, ...). In case of ion-checkbox, it should be in another\n * item, placing it in the same item as the checkbox will cause problems.\n *\n * Please notice that the inputs need to have a FormControl to make it work. That FormControl needs to be passed to this component.\n *\n * Example usage:\n *\n * <ion-item class=\"ion-text-wrap\">\n *     <ion-label stacked core-mark-required=\"true\">{{ 'core.login.username' | translate }}</ion-label>\n *     <ion-input type=\"text\" name=\"username\" formControlName=\"username\"></ion-input>\n *     <core-input-errors [control]=\"myForm.controls.username\" [errorMessages]=\"usernameErrors\"></core-input-errors>\n * </ion-item>\n */\n@Component({\n    selector: 'core-input-errors',\n    templateUrl: 'core-input-errors.html',\n    styleUrls: ['input-errors.scss'],\n})\nexport class CoreInputErrorsComponent implements OnChanges {\n\n    @Input() control?: FormControl;\n    @Input() errorMessages?: Record<string, string>;\n    @Input() errorText?: string; // Set other non automatic errors.\n    errorKeys: string[] = [];\n\n    /**\n     * Initialize some common errors if they aren't set.\n     */\n    protected initErrorMessages(): void {\n        this.errorMessages = this.errorMessages || {};\n\n        this.errorMessages.required = this.errorMessages.required || Translate.instant('core.required');\n        this.errorMessages.email = this.errorMessages.email || Translate.instant('core.login.invalidemail');\n        this.errorMessages.date = this.errorMessages.date || Translate.instant('core.login.invaliddate');\n        this.errorMessages.datetime = this.errorMessages.datetime || Translate.instant('core.login.invaliddate');\n        this.errorMessages.datetimelocal = this.errorMessages.datetimelocal || Translate.instant('core.login.invaliddate');\n        this.errorMessages.time = this.errorMessages.time || Translate.instant('core.login.invalidtime');\n        this.errorMessages.url = this.errorMessages.url || Translate.instant('core.login.invalidurl');\n\n        // Set empty values by default, the default error messages will be built in the template when needed.\n        this.errorMessages.max = this.errorMessages.max || '';\n        this.errorMessages.min = this.errorMessages.min || '';\n    }\n\n    /**\n     * Component being changed.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if ((changes.control || changes.errorMessages) && this.control) {\n            this.initErrorMessages();\n\n            this.errorKeys = this.errorMessages ? Object.keys(this.errorMessages) : [];\n        }\n        if (changes.errorText) {\n            this.errorText = changes.errorText.currentValue;\n        }\n    }\n\n}\n","<div class=\"core-input-error-container\" role=\"alert\" *ngIf=\"(control && control.dirty && !control.valid) || errorText\">\n    <ng-container *ngIf=\"control && control.dirty && !control.valid\">\n        <ng-container *ngFor=\"let error of errorKeys\">\n            <div *ngIf=\"control.hasError(error)\" class=\"core-input-error\">\n                <span *ngIf=\"errorMessages && errorMessages[error]\">{{errorMessages[error]}}</span>\n                <span *ngIf=\"(!errorMessages || !errorMessages[error]) && error === 'max' && control.errors?.max\">\n                    {{ 'core.login.invalidvaluemax' | translate:{$a: control.errors!.max.max} }}\n                </span>\n                <span *ngIf=\"(!errorMessages || !errorMessages[error]) && error === 'min' && control.errors?.min\">\n                    {{ 'core.login.invalidvaluemin' | translate:{$a: control.errors!.min.min} }}\n                </span>\n            </div>\n        </ng-container>\n    </ng-container>\n    <div *ngIf=\"errorText\" class=\"core-input-error\" aria-live=\"assertive\">{{ errorText }}</div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}