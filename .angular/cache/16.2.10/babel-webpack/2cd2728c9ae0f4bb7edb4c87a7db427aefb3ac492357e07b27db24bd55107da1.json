{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreForms } from '@singletons/form';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { AddonModAssignFeedbackDelegate } from '../../services/feedback-delegate';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"editFeedbackForm\"];\nfunction AddonModAssignEditFeedbackModalComponent_form_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4, 5);\n    i0.ɵɵelement(2, \"addon-mod-assign-feedback-plugin\", 6);\n    i0.ɵɵelementStart(3, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function AddonModAssignEditFeedbackModalComponent_form_10_Template_ion_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.done($event));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"assign\", ctx_r0.assign)(\"submission\", ctx_r0.submission)(\"userId\", ctx_r0.userId)(\"plugin\", ctx_r0.plugin)(\"edit\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 6, \"core.done\"));\n  }\n}\n/**\n * Modal that allows editing a feedback plugin.\n */\nexport class AddonModAssignEditFeedbackModalComponent {\n  /**\n   * Close modal checking if there are changes first.\n   */\n  closeModal() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const changed = yield _this.hasDataChanged();\n      if (changed) {\n        yield CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n      }\n      CoreForms.triggerFormCancelledEvent(_this.formElement, CoreSites.getCurrentSiteId());\n      ModalController.dismiss();\n    })();\n  }\n  /**\n   * Done editing.\n   *\n   * @param e Click event.\n   */\n  done(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    CoreForms.triggerFormSubmittedEvent(this.formElement, false, CoreSites.getCurrentSiteId());\n    // Close the modal, sending the input data.\n    ModalController.dismiss(this.getInputData());\n  }\n  /**\n   * Get the input data.\n   *\n   * @returns Object with the data.\n   */\n  getInputData() {\n    return CoreForms.getDataFromForm(document.forms['addon-mod_assign-edit-feedback-form']);\n  }\n  /**\n   * Check if data has changed.\n   *\n   * @returns Promise resolved with boolean: whether the data has changed.\n   */\n  hasDataChanged() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const changed = yield CoreUtils.ignoreErrors(AddonModAssignFeedbackDelegate.hasPluginDataChanged(_this2.assign, _this2.submission, _this2.plugin, _this2.getInputData(), _this2.userId), true);\n      return !!changed;\n    })();\n  }\n}\n_class = AddonModAssignEditFeedbackModalComponent;\n_class.ɵfac = function AddonModAssignEditFeedbackModalComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-assign-edit-feedback-modal\"]],\n  viewQuery: function AddonModAssignEditFeedbackModalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formElement = _t.first);\n    }\n  },\n  inputs: {\n    assign: \"assign\",\n    submission: \"submission\",\n    plugin: \"plugin\",\n    userId: \"userId\"\n  },\n  decls: 11,\n  vars: 5,\n  consts: [[\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"fas-xmark\", \"aria-hidden\", \"true\"], [\"name\", \"addon-mod_assign-edit-feedback-form\", 4, \"ngIf\"], [\"name\", \"addon-mod_assign-edit-feedback-form\"], [\"editFeedbackForm\", \"\"], [3, \"assign\", \"submission\", \"userId\", \"plugin\", \"edit\"], [\"expand\", \"block\", 3, \"click\"]],\n  template: function AddonModAssignEditFeedbackModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\")(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ion-buttons\", 0)(6, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function AddonModAssignEditFeedbackModalComponent_Template_ion_button_click_6_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵpipe(7, \"translate\");\n      i0.ɵɵelement(8, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"ion-content\");\n      i0.ɵɵtemplate(10, AddonModAssignEditFeedbackModalComponent_form_10_Template, 6, 8, \"form\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.plugin.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(7, 3, \"core.close\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.userId && ctx.plugin);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreSites","CoreDomUtils","CoreForms","CoreUtils","ModalController","Translate","AddonModAssignFeedbackDelegate","i0","ɵɵelementStart","ɵɵelement","ɵɵlistener","AddonModAssignEditFeedbackModalComponent_form_10_Template_ion_button_click_3_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","done","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","assign","submission","userId","plugin","ɵɵtextInterpolate","ɵɵpipeBind1","AddonModAssignEditFeedbackModalComponent","closeModal","_this","_asyncToGenerator","changed","hasDataChanged","showConfirm","instant","triggerFormCancelledEvent","formElement","getCurrentSiteId","dismiss","e","preventDefault","stopPropagation","triggerFormSubmittedEvent","getInputData","getDataFromForm","document","forms","_this2","ignoreErrors","hasPluginDataChanged","selectors","viewQuery","AddonModAssignEditFeedbackModalComponent_Query","rf","ctx","AddonModAssignEditFeedbackModalComponent_Template_ion_button_click_6_listener","ɵɵtemplate","AddonModAssignEditFeedbackModalComponent_form_10_Template","name","ɵɵattribute"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/components/edit-feedback-modal/edit-feedback-modal.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/components/edit-feedback-modal/edit-feedback-modal.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreFormFields, CoreForms } from '@singletons/form';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { AddonModAssignAssign, AddonModAssignPlugin, AddonModAssignSubmission } from '../../services/assign';\nimport { AddonModAssignFeedbackDelegate } from '../../services/feedback-delegate';\n\n/**\n * Modal that allows editing a feedback plugin.\n */\n@Component({\n    selector: 'addon-mod-assign-edit-feedback-modal',\n    templateUrl: 'edit-feedback-modal.html',\n})\nexport class AddonModAssignEditFeedbackModalComponent {\n\n    @Input() assign!: AddonModAssignAssign; // The assignment.\n    @Input() submission!: AddonModAssignSubmission; // The submission.\n    @Input() plugin!: AddonModAssignPlugin; // The plugin object.\n    @Input() userId!: number; // The user ID of the submission.\n\n    @ViewChild('editFeedbackForm') formElement?: ElementRef;\n\n    /**\n     * Close modal checking if there are changes first.\n     */\n    async closeModal(): Promise<void> {\n        const changed = await this.hasDataChanged();\n        if (changed) {\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n\n        ModalController.dismiss();\n    }\n\n    /**\n     * Done editing.\n     *\n     * @param e Click event.\n     */\n    done(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        CoreForms.triggerFormSubmittedEvent(this.formElement, false, CoreSites.getCurrentSiteId());\n\n        // Close the modal, sending the input data.\n        ModalController.dismiss(this.getInputData());\n    }\n\n    /**\n     * Get the input data.\n     *\n     * @returns Object with the data.\n     */\n    protected getInputData(): CoreFormFields {\n        return CoreForms.getDataFromForm(document.forms['addon-mod_assign-edit-feedback-form']);\n    }\n\n    /**\n     * Check if data has changed.\n     *\n     * @returns Promise resolved with boolean: whether the data has changed.\n     */\n    protected async hasDataChanged(): Promise<boolean> {\n        const changed = await CoreUtils.ignoreErrors(\n            AddonModAssignFeedbackDelegate.hasPluginDataChanged(\n                this.assign,\n                this.submission,\n                this.plugin,\n                this.getInputData(),\n                this.userId,\n            ),\n            true,\n        );\n\n        return !!changed;\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-title>\n            <h1>{{ plugin.name }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"closeModal()\" [attr.aria-label]=\"'core.close' | translate\">\n                <ion-icon slot=\"icon-only\" name=\"fas-xmark\" aria-hidden=\"true\" />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <form name=\"addon-mod_assign-edit-feedback-form\" *ngIf=\"userId && plugin\" #editFeedbackForm>\n        <addon-mod-assign-feedback-plugin [assign]=\"assign\" [submission]=\"submission\" [userId]=\"userId\" [plugin]=\"plugin\" [edit]=\"true\" />\n        <ion-button expand=\"block\" (click)=\"done($event)\">{{ 'core.done' | translate }}</ion-button>\n    </form>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}