{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonModForum, AddonModForumProvider } from '../forum';\nimport { makeSingleton, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreModuleHandlerBase } from '@features/course/classes/module-base-handler';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support forum modules.\n */\nexport class AddonModForumModuleHandlerService extends CoreModuleHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModForum';\n    this.modName = 'forum';\n    this.pageName = AddonModForumModuleHandlerService.PAGE_NAME;\n    this.supportedFeatures = {\n      [CoreConstants.FEATURE_GROUPS]: true,\n      [CoreConstants.FEATURE_GROUPINGS]: true,\n      [CoreConstants.FEATURE_MOD_INTRO]: true,\n      [CoreConstants.FEATURE_COMPLETION_TRACKS_VIEWS]: true,\n      [CoreConstants.FEATURE_COMPLETION_HAS_RULES]: true,\n      [CoreConstants.FEATURE_GRADE_HAS_GRADE]: true,\n      [CoreConstants.FEATURE_GRADE_OUTCOMES]: true,\n      [CoreConstants.FEATURE_BACKUP_MOODLE2]: true,\n      [CoreConstants.FEATURE_SHOW_DESCRIPTION]: true,\n      [CoreConstants.FEATURE_RATE]: true,\n      [CoreConstants.FEATURE_PLAGIARISM]: true,\n      [CoreConstants.FEATURE_MOD_PURPOSE]: \"collaboration\" /* ModPurpose.MOD_PURPOSE_COLLABORATION */\n    };\n  }\n\n  /**\n   * @inheritdoc\n   */\n  getData(module, courseId) {\n    var _superprop_getGetData = () => super.getData,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      const data = yield _superprop_getGetData().call(_this, module, courseId);\n      if ('afterlink' in module && !!module.afterlink) {\n        const match = />(\\d+)[^<]+/.exec(module.afterlink);\n        data.extraBadge = match ? Translate.instant('addon.mod_forum.unreadpostsnumber', {\n          $a: match[1]\n        }) : '';\n      } else {\n        _this.updateExtraBadge(data, courseId, module.id);\n      }\n      const event = CoreEvents.on(AddonModForumProvider.MARK_READ_EVENT, eventData => {\n        if (eventData.courseId !== courseId || eventData.moduleId !== module.id) {\n          return;\n        }\n        _this.updateExtraBadge(data, eventData.courseId, eventData.moduleId, eventData.siteId);\n      }, CoreSites.getCurrentSiteId());\n      data.onDestroy = () => event.off();\n      return data;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getMainComponent() {\n    return _asyncToGenerator(function* () {\n      const {\n        AddonModForumIndexComponent\n      } = yield import('../../components/index');\n      return AddonModForumIndexComponent;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  displayRefresherInSingleActivity() {\n    return false;\n  }\n  /**\n   * Triggers an update for the extra badge text.\n   *\n   * @param data Course Module Handler data.\n   * @param courseId Course ID.\n   * @param moduleId Course module ID.\n   * @param siteId Site ID. If not defined, current site.\n   */\n  updateExtraBadge(data, courseId, moduleId, siteId) {\n    return _asyncToGenerator(function* () {\n      siteId = siteId || CoreSites.getCurrentSiteId();\n      if (!siteId) {\n        return;\n      }\n      data.extraBadge = Translate.instant('core.loading');\n      try {\n        // Handle unread posts.\n        const forum = yield AddonModForum.getForum(courseId, moduleId, {\n          readingStrategy: 3 /* CoreSitesReadingStrategy.PREFER_NETWORK */,\n          siteId\n        });\n        data.extraBadge = forum.unreadpostscount ? Translate.instant('addon.mod_forum.unreadpostsnumber', {\n          $a: forum.unreadpostscount\n        }) : '';\n      } catch (_unused) {\n        // Ignore errors.\n        data.extraBadge = '';\n      }\n    })();\n  }\n}\n_class = AddonModForumModuleHandlerService;\n_class.PAGE_NAME = 'mod_forum';\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModForumModuleHandlerService_BaseFactory;\n  return function AddonModForumModuleHandlerService_Factory(t) {\n    return (ɵAddonModForumModuleHandlerService_BaseFactory || (ɵAddonModForumModuleHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModForumModuleHandler = makeSingleton(AddonModForumModuleHandlerService);","map":{"version":3,"names":["AddonModForum","AddonModForumProvider","makeSingleton","Translate","CoreEvents","CoreSites","CoreConstants","CoreModuleHandlerBase","AddonModForumModuleHandlerService","constructor","name","modName","pageName","PAGE_NAME","supportedFeatures","FEATURE_GROUPS","FEATURE_GROUPINGS","FEATURE_MOD_INTRO","FEATURE_COMPLETION_TRACKS_VIEWS","FEATURE_COMPLETION_HAS_RULES","FEATURE_GRADE_HAS_GRADE","FEATURE_GRADE_OUTCOMES","FEATURE_BACKUP_MOODLE2","FEATURE_SHOW_DESCRIPTION","FEATURE_RATE","FEATURE_PLAGIARISM","FEATURE_MOD_PURPOSE","getData","module","courseId","_superprop_getGetData","_this","_asyncToGenerator","data","call","afterlink","match","exec","extraBadge","instant","$a","updateExtraBadge","id","event","on","MARK_READ_EVENT","eventData","moduleId","siteId","getCurrentSiteId","onDestroy","off","getMainComponent","AddonModForumIndexComponent","displayRefresherInSingleActivity","forum","getForum","readingStrategy","unreadpostscount","_unused","_class","t","factory","ɵfac","providedIn","AddonModForumModuleHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/forum/services/handlers/module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\nimport { AddonModForum, AddonModForumProvider } from '../forum';\nimport { makeSingleton, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@features/course/services/module-delegate';\nimport { CoreConstants, ModPurpose } from '@/core/constants';\nimport { CoreModuleHandlerBase } from '@features/course/classes/module-base-handler';\nimport { CoreCourseModuleData } from '@features/course/services/course-helper';\n\n/**\n * Handler to support forum modules.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModForumModuleHandlerService extends CoreModuleHandlerBase implements CoreCourseModuleHandler {\n\n    static readonly PAGE_NAME = 'mod_forum';\n\n    name = 'AddonModForum';\n    modName = 'forum';\n    protected pageName = AddonModForumModuleHandlerService.PAGE_NAME;\n\n    supportedFeatures = {\n        [CoreConstants.FEATURE_GROUPS]: true,\n        [CoreConstants.FEATURE_GROUPINGS]: true,\n        [CoreConstants.FEATURE_MOD_INTRO]: true,\n        [CoreConstants.FEATURE_COMPLETION_TRACKS_VIEWS]: true,\n        [CoreConstants.FEATURE_COMPLETION_HAS_RULES]: true,\n        [CoreConstants.FEATURE_GRADE_HAS_GRADE]: true,\n        [CoreConstants.FEATURE_GRADE_OUTCOMES]: true,\n        [CoreConstants.FEATURE_BACKUP_MOODLE2]: true,\n        [CoreConstants.FEATURE_SHOW_DESCRIPTION]: true,\n        [CoreConstants.FEATURE_RATE]: true,\n        [CoreConstants.FEATURE_PLAGIARISM]: true,\n        [CoreConstants.FEATURE_MOD_PURPOSE]: ModPurpose.MOD_PURPOSE_COLLABORATION,\n    };\n\n    /**\n     * @inheritdoc\n     */\n    async getData(module: CoreCourseModuleData, courseId: number): Promise<CoreCourseModuleHandlerData> {\n        const data = await super.getData(module, courseId);\n\n        if ('afterlink' in module && !!module.afterlink) {\n            const match = />(\\d+)[^<]+/.exec(module.afterlink);\n            data.extraBadge = match ? Translate.instant('addon.mod_forum.unreadpostsnumber', { $a : match[1] }) : '';\n        } else {\n            this.updateExtraBadge(data, courseId, module.id);\n        }\n\n        const event = CoreEvents.on(\n            AddonModForumProvider.MARK_READ_EVENT,\n            eventData => {\n                if (eventData.courseId !== courseId || eventData.moduleId !== module.id) {\n                    return;\n                }\n\n                this.updateExtraBadge(data, eventData.courseId, eventData.moduleId, eventData.siteId);\n            },\n            CoreSites.getCurrentSiteId(),\n        );\n\n        data.onDestroy = () => event.off();\n\n        return data;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getMainComponent(): Promise<Type<unknown> | undefined> {\n        const { AddonModForumIndexComponent } = await import('../../components/index');\n\n        return AddonModForumIndexComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    displayRefresherInSingleActivity(): boolean {\n        return false;\n    }\n\n    /**\n     * Triggers an update for the extra badge text.\n     *\n     * @param data Course Module Handler data.\n     * @param courseId Course ID.\n     * @param moduleId Course module ID.\n     * @param siteId Site ID. If not defined, current site.\n     */\n    async updateExtraBadge(data: CoreCourseModuleHandlerData, courseId: number, moduleId: number, siteId?: string): Promise<void> {\n        siteId = siteId || CoreSites.getCurrentSiteId();\n\n        if (!siteId) {\n            return;\n        }\n\n        data.extraBadge = Translate.instant('core.loading');\n\n        try {\n            // Handle unread posts.\n            const forum = await AddonModForum.getForum(courseId, moduleId, {\n                readingStrategy: CoreSitesReadingStrategy.PREFER_NETWORK,\n                siteId,\n            });\n\n            data.extraBadge = forum.unreadpostscount\n                ? Translate.instant(\n                    'addon.mod_forum.unreadpostsnumber',\n                    { $a : forum.unreadpostscount },\n                )\n                : '';\n        } catch {\n            // Ignore errors.\n            data.extraBadge = '';\n        }\n    }\n\n}\n\nexport const AddonModForumModuleHandler = makeSingleton(AddonModForumModuleHandlerService);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}