{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { makeSingleton } from '@singletons';\nimport { AddonNotificationsSettingsHandlerService } from './settings';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to treat links to notification preferences.\n */\nexport class AddonNotificationsPreferencesLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonNotificationsPreferencesLinkHandler';\n    this.pattern = /\\/message\\/notificationpreferences\\.php/;\n    this.checkAllUsers = true;\n    this.featureName = 'CoreMainMenuDelegate_AddonNotifications';\n  }\n  /**\n   * @inheritdoc\n   */\n  getActions() {\n    return [{\n      action: siteId => {\n        CoreNavigator.navigateToSitePath(`preferences/${AddonNotificationsSettingsHandlerService.PAGE_NAME}`, {\n          siteId\n        });\n      }\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled(siteId, url, params) {\n    return _asyncToGenerator(function* () {\n      if (params.userid) {\n        // Check it's current user ID.\n        const site = yield CoreSites.getSite(siteId);\n        if (Number(params.userid) !== site.getUserId()) {\n          return false;\n        }\n      }\n      return true;\n    })();\n  }\n}\n_class = AddonNotificationsPreferencesLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonNotificationsPreferencesLinkHandlerService_BaseFactory;\n  return function AddonNotificationsPreferencesLinkHandlerService_Factory(t) {\n    return (ɵAddonNotificationsPreferencesLinkHandlerService_BaseFactory || (ɵAddonNotificationsPreferencesLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonNotificationsPreferencesLinkHandler = makeSingleton(AddonNotificationsPreferencesLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreNavigator","CoreSites","makeSingleton","AddonNotificationsSettingsHandlerService","AddonNotificationsPreferencesLinkHandlerService","constructor","name","pattern","checkAllUsers","featureName","getActions","action","siteId","navigateToSitePath","PAGE_NAME","isEnabled","url","params","_asyncToGenerator","userid","site","getSite","Number","getUserId","t","factory","ɵfac","providedIn","AddonNotificationsPreferencesLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/notifications/services/handlers/preferences-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { makeSingleton } from '@singletons';\nimport { AddonNotificationsSettingsHandlerService } from './settings';\n\n/**\n * Handler to treat links to notification preferences.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonNotificationsPreferencesLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'AddonNotificationsPreferencesLinkHandler';\n    pattern = /\\/message\\/notificationpreferences\\.php/;\n    checkAllUsers = true;\n    featureName = 'CoreMainMenuDelegate_AddonNotifications';\n\n    /**\n     * @inheritdoc\n     */\n    getActions(): CoreContentLinksAction[] {\n        return [{\n            action: (siteId: string): void => {\n                CoreNavigator.navigateToSitePath(`preferences/${AddonNotificationsSettingsHandlerService.PAGE_NAME}`, { siteId });\n            },\n        }];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(siteId: string, url: string, params: Record<string, string>): Promise<boolean> {\n        if (params.userid) {\n            // Check it's current user ID.\n            const site = await CoreSites.getSite(siteId);\n\n            if (Number(params.userid) !== site.getUserId()) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n}\n\nexport const AddonNotificationsPreferencesLinkHandler = makeSingleton(AddonNotificationsPreferencesLinkHandlerService);\n"],"mappings":";;AAgBA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,wCAAwC,QAAQ,YAAY;;AAErE;;;AAIA,OAAM,MAAOC,+CAAgD,SAAQL,2BAA2B;EADhGM,YAAA;;IAGI,KAAAC,IAAI,GAAG,0CAA0C;IACjD,KAAAC,OAAO,GAAG,yCAAyC;IACnD,KAAAC,aAAa,GAAG,IAAI;IACpB,KAAAC,WAAW,GAAG,yCAAyC;;EAEvD;;;EAGAC,UAAUA,CAAA;IACN,OAAO,CAAC;MACJC,MAAM,EAAGC,MAAc,IAAU;QAC7BZ,aAAa,CAACa,kBAAkB,CAAC,eAAeV,wCAAwC,CAACW,SAAS,EAAE,EAAE;UAAEF;QAAM,CAAE,CAAC;MACrH;KACH,CAAC;EACN;EAEA;;;EAGMG,SAASA,CAACH,MAAc,EAAEI,GAAW,EAAEC,MAA8B;IAAA,OAAAC,iBAAA;MACvE,IAAID,MAAM,CAACE,MAAM,EAAE;QACf;QACA,MAAMC,IAAI,SAASnB,SAAS,CAACoB,OAAO,CAACT,MAAM,CAAC;QAE5C,IAAIU,MAAM,CAACL,MAAM,CAACE,MAAM,CAAC,KAAKC,IAAI,CAACG,SAAS,EAAE,EAAE;UAC5C,OAAO,KAAK;;;MAIpB,OAAO,IAAI;IAAC;EAChB;;SAhCSnB,+CAAgD;;;;qKAAhDA,MAA+C,IAAAoB,CAAA,IAA/CpB,MAA+C;EAAA;AAAA;;SAA/CA,MAA+C;EAAAqB,OAAA,EAA/CrB,MAA+C,CAAAsB,IAAA;EAAAC,UAAA,EADlC;AAAM;AAqChC,OAAO,MAAMC,wCAAwC,GAAG1B,aAAa,CAACE,+CAA+C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}