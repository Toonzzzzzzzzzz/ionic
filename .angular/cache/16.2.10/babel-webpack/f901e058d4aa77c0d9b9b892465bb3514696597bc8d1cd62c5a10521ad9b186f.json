{"ast":null,"code":"var _class;\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreUtils } from '@services/utils/utils';\nimport * as i0 from \"@angular/core\";\nfunction CoreFilesComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"core-format-text\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", ctx_r0.contentText)(\"filter\", false);\n  }\n}\nfunction CoreFilesComponent_ng_container_1_core_file_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-file\", 6);\n  }\n  if (rf & 2) {\n    const file_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"file\", file_r2)(\"component\", ctx_r4.component)(\"componentId\", ctx_r4.componentId)(\"alwaysDownload\", ctx_r4.alwaysDownload)(\"canDownload\", ctx_r4.canDownload)(\"showSize\", ctx_r4.showSize)(\"showTime\", ctx_r4.showTime);\n  }\n}\nfunction CoreFilesComponent_ng_container_1_core_local_file_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-local-file\", 7);\n  }\n  if (rf & 2) {\n    const file_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"file\", file_r2);\n  }\n}\nfunction CoreFilesComponent_ng_container_1_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 8)(1, \"ion-label\");\n    i0.ɵɵelement(2, \"core-format-text\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r3 = i0.ɵɵnextContext().index;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"component\", ctx_r6.component)(\"componentId\", ctx_r6.componentId)(\"text\", ctx_r6.extraHtml[i_r3]);\n  }\n}\nfunction CoreFilesComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreFilesComponent_ng_container_1_core_file_1_Template, 1, 7, \"core-file\", 3);\n    i0.ɵɵtemplate(2, CoreFilesComponent_ng_container_1_core_local_file_2_Template, 1, 1, \"core-local-file\", 4);\n    i0.ɵɵtemplate(3, CoreFilesComponent_ng_container_1_ion_item_3_Template, 3, 3, \"ion-item\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const file_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !file_r2.name && !file_r2.embedType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", file_r2.name && !file_r2.embedType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.extraHtml && ctx_r1.extraHtml[i_r3]);\n  }\n}\n/**\n * Component to render a file list.\n *\n * <core-files [files]=\"files\" [component]=\"component\" [componentId]=\"assign.cmid\">\n * </core-files>\n */\nexport class CoreFilesComponent {\n  constructor(differs) {\n    this.files = []; // List of files.\n    this.canDownload = true; // Whether file can be downloaded.\n    this.showSize = true; // Whether show filesize.\n    this.showTime = true; // Whether show file time modified.\n    this.showInline = false; // If true, it will reorder and try to show inline files first.\n    this.differ = differs.find([]).create();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    if (CoreUtils.isTrueOrOne(this.showInline) && this.files) {\n      this.renderInlineFiles();\n    }\n  }\n  /**\n   * Detect and act upon changes that Angular can’t or won’t detect on its own (objects and arrays).\n   */\n  ngDoCheck() {\n    if (CoreUtils.isTrueOrOne(this.showInline) && this.files) {\n      // Check if there's any change in the files array.\n      const changes = this.differ.diff(this.files);\n      if (changes) {\n        this.renderInlineFiles();\n      }\n    }\n  }\n  /**\n   * Calculate contentText based on fils that can be rendered inline.\n   */\n  renderInlineFiles() {\n    this.contentText = this.files.reduce((previous, file) => {\n      const text = CoreMimetypeUtils.getEmbeddedHtml(file);\n      return text ? previous + '<br>' + text : previous;\n    }, '');\n  }\n}\n_class = CoreFilesComponent;\n_class.ɵfac = function CoreFilesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.KeyValueDiffers));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-files\"]],\n  inputs: {\n    files: \"files\",\n    component: \"component\",\n    componentId: \"componentId\",\n    alwaysDownload: \"alwaysDownload\",\n    canDownload: \"canDownload\",\n    showSize: \"showSize\",\n    showTime: \"showTime\",\n    showInline: \"showInline\",\n    extraHtml: \"extraHtml\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"text\", \"filter\"], [3, \"file\", \"component\", \"componentId\", \"alwaysDownload\", \"canDownload\", \"showSize\", \"showTime\", 4, \"ngIf\"], [3, \"file\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [3, \"file\", \"component\", \"componentId\", \"alwaysDownload\", \"canDownload\", \"showSize\", \"showTime\"], [3, \"file\"], [1, \"ion-text-wrap\"], [3, \"component\", \"componentId\", \"text\"]],\n  template: function CoreFilesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoreFilesComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, CoreFilesComponent_ng_container_1_Template, 4, 3, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.showInline && ctx.contentText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.files);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreMimetypeUtils","CoreUtils","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","contentText","file_r2","ctx_r4","component","componentId","alwaysDownload","canDownload","showSize","showTime","ɵɵelementStart","ɵɵelementEnd","ctx_r6","extraHtml","i_r3","ɵɵtemplate","CoreFilesComponent_ng_container_1_core_file_1_Template","CoreFilesComponent_ng_container_1_core_local_file_2_Template","CoreFilesComponent_ng_container_1_ion_item_3_Template","name","embedType","ctx_r1","CoreFilesComponent","constructor","differs","files","showInline","differ","find","create","ngOnInit","isTrueOrOne","renderInlineFiles","ngDoCheck","changes","diff","reduce","previous","file","text","getEmbeddedHtml","ɵɵdirectiveInject","KeyValueDiffers","selectors","inputs","decls","vars","consts","template","CoreFilesComponent_Template","rf","ctx","CoreFilesComponent_ng_container_0_Template","CoreFilesComponent_ng_container_1_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/files/files.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/files/core-files.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, DoCheck, KeyValueDiffers } from '@angular/core';\nimport { CoreFileEntry } from '@services/file-helper';\n\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreUtils } from '@services/utils/utils';\n\n/**\n * Component to render a file list.\n *\n * <core-files [files]=\"files\" [component]=\"component\" [componentId]=\"assign.cmid\">\n * </core-files>\n */\n@Component({\n    selector: 'core-files',\n    templateUrl: 'core-files.html',\n})\nexport class CoreFilesComponent implements OnInit, DoCheck {\n\n    @Input() files: CoreFileEntry[] = []; // List of files.\n    @Input() component?: string; // Component the downloaded files will be linked to.\n    @Input() componentId?: string | number; // Component ID.\n    @Input() alwaysDownload?: boolean | string; // Whether it should always display the refresh button when the file is downloaded.\n    @Input() canDownload?: boolean | string = true; // Whether file can be downloaded.\n    @Input() showSize?: boolean | string = true; // Whether show filesize.\n    @Input() showTime?: boolean | string = true; // Whether show file time modified.\n    @Input() showInline = false; // If true, it will reorder and try to show inline files first.\n    @Input() extraHtml?: string[]; // Extra HTML for each attachment. Each HTML should be at the same position as the attachment.\n\n    contentText?: string;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected differ: any; // To detect changes in the data input.\n\n    constructor(differs: KeyValueDiffers) {\n        this.differ = differs.find([]).create();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        if (CoreUtils.isTrueOrOne(this.showInline) && this.files) {\n            this.renderInlineFiles();\n        }\n    }\n\n    /**\n     * Detect and act upon changes that Angular can’t or won’t detect on its own (objects and arrays).\n     */\n    ngDoCheck(): void {\n        if (CoreUtils.isTrueOrOne(this.showInline) && this.files) {\n            // Check if there's any change in the files array.\n            const changes = this.differ.diff(this.files);\n            if (changes) {\n                this.renderInlineFiles();\n            }\n        }\n    }\n\n    /**\n     * Calculate contentText based on fils that can be rendered inline.\n     */\n    protected renderInlineFiles(): void {\n        this.contentText = this.files.reduce((previous, file) => {\n            const text = CoreMimetypeUtils.getEmbeddedHtml(file);\n\n            return text ? previous + '<br>' + text : previous;\n        }, '');\n    }\n\n}\n","<ng-container *ngIf=\"showInline && contentText\">\n    <core-format-text [text]=\"contentText\" [filter]=\"false\" />\n</ng-container>\n<ng-container *ngFor=\"let file of files; let i = index\">\n    <!-- Files already attached to the filearea. -->\n    <core-file *ngIf=\"!file.name && !file.embedType\" [file]=\"file\" [component]=\"component\" [componentId]=\"componentId\"\n        [alwaysDownload]=\"alwaysDownload\" [canDownload]=\"canDownload\" [showSize]=\"showSize\" [showTime]=\"showTime\" />\n\n    <!-- Files stored in offline to be sent later. -->\n    <core-local-file *ngIf=\"file.name && !file.embedType\" [file]=\"file\" />\n\n    <ion-item class=\"ion-text-wrap\" *ngIf=\"extraHtml && extraHtml[i]\">\n        <ion-label>\n            <core-format-text [component]=\"component\" [componentId]=\"componentId\" [text]=\"extraHtml[i]\" />\n        </ion-label>\n    </ion-item>\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}