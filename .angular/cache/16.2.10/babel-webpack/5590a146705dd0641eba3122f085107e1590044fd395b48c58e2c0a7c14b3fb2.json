{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreGradesHelper } from '@features/grades/services/grades-helper';\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModWorkshopAssessmentStrategyAccumulativeComponent } from '../component/accumulative';\nimport { AddonModWorkshopAssessmentStrategyAccumulativeHandlerService } from './handler';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for accumulative assessment strategy plugin.\n */\nexport class AddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService extends AddonModWorkshopAssessmentStrategyAccumulativeHandlerService {\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return AddonModWorkshopAssessmentStrategyAccumulativeComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  getOriginalValues(form) {\n    return _asyncToGenerator(function* () {\n      const defaultGrade = Translate.instant('core.choosedots');\n      const originalValues = [];\n      const promises = [];\n      form.fields.forEach((field, n) => {\n        field.dimtitle = Translate.instant('addon.mod_workshop_assessment_accumulative.dimensionnumber', {\n          $a: field.number\n        });\n        if (!form.current[n]) {\n          form.current[n] = {};\n        }\n        originalValues[n] = {};\n        originalValues[n].peercomment = form.current[n].peercomment || '';\n        originalValues[n].number = field.number; // eslint-disable-line id-blacklist\n        form.current[n].grade = form.current[n].grade ? parseInt(String(form.current[n].grade), 10) : -1;\n        const gradingType = parseInt(String(field.grade), 10);\n        const dimension = form.dimensionsinfo.find(dimension => dimension.id == parseInt(field.dimensionid, 10));\n        const scale = dimension && gradingType < 0 ? dimension.scale : undefined;\n        promises.push(CoreGradesHelper.makeGradesMenu(gradingType, undefined, defaultGrade, -1, scale).then(grades => {\n          field.grades = grades;\n          originalValues[n].grade = form.current[n].grade;\n          return;\n        }));\n      });\n      yield Promise.all(promises);\n      return originalValues;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  hasDataChanged(originalValues, currentValues) {\n    for (const x in originalValues) {\n      if (originalValues[x].grade != currentValues[x].grade) {\n        return true;\n      }\n      if (originalValues[x].peercomment != currentValues[x].peercomment) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * @inheritdoc\n   */\n  prepareAssessmentData(currentValues, form) {\n    return _asyncToGenerator(function* () {\n      const data = {};\n      const errors = {};\n      let hasErrors = false;\n      form.fields.forEach((field, idx) => {\n        if (idx < form.dimenssionscount) {\n          var _currentValues$idx$pe;\n          const grade = parseInt(String(currentValues[idx].grade), 10);\n          if (!isNaN(grade) && grade >= 0) {\n            data['grade__idx_' + idx] = grade;\n          } else {\n            errors['grade_' + idx] = Translate.instant('addon.mod_workshop_assessment_accumulative.mustchoosegrade');\n            hasErrors = true;\n          }\n          data['peercomment__idx_' + idx] = (_currentValues$idx$pe = currentValues[idx].peercomment) !== null && _currentValues$idx$pe !== void 0 ? _currentValues$idx$pe : '';\n          data['gradeid__idx_' + idx] = parseInt(form.current[idx].gradeid, 10) || 0;\n          data['dimensionid__idx_' + idx] = parseInt(field.dimensionid, 10);\n          data['weight__idx_' + idx] = parseInt(field.weight, 10) || 0;\n        }\n      });\n      if (hasErrors) {\n        throw errors;\n      }\n      return data;\n    })();\n  }\n}\n_class = AddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService_BaseFactory;\n  return function AddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService_Factory(t) {\n    return (ɵAddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService_BaseFactory || (ɵAddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModWorkshopAssessmentStrategyAccumulativeHandler = makeSingleton(AddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService);","map":{"version":3,"names":["CoreGradesHelper","makeSingleton","Translate","AddonModWorkshopAssessmentStrategyAccumulativeComponent","AddonModWorkshopAssessmentStrategyAccumulativeHandlerService","AddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService","isEnabled","_asyncToGenerator","getComponent","getOriginalValues","form","defaultGrade","instant","originalValues","promises","fields","forEach","field","n","dimtitle","$a","number","current","peercomment","grade","parseInt","String","gradingType","dimension","dimensionsinfo","find","id","dimensionid","scale","undefined","push","makeGradesMenu","then","grades","Promise","all","hasDataChanged","currentValues","x","prepareAssessmentData","data","errors","hasErrors","idx","dimenssionscount","_currentValues$idx$pe","isNaN","gradeid","weight","t","factory","ɵfac","providedIn","AddonModWorkshopAssessmentStrategyAccumulativeHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/workshop/assessment/accumulative/services/handler-lazy.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    AddonModWorkshopAssessmentStrategyFieldErrors,\n} from '@addons/mod/workshop/components/assessment-strategy/assessment-strategy';\nimport {\n    AddonModWorkshopGetAssessmentFormDefinitionData,\n    AddonModWorkshopGetAssessmentFormFieldsParsedData,\n} from '@addons/mod/workshop/services/workshop';\nimport { Injectable, Type } from '@angular/core';\nimport { CoreGradesHelper } from '@features/grades/services/grades-helper';\nimport { makeSingleton, Translate } from '@singletons';\nimport { CoreFormFields } from '@singletons/form';\nimport { AddonWorkshopAssessmentStrategyHandler } from '../../../services/assessment-strategy-delegate';\nimport { AddonModWorkshopAssessmentStrategyAccumulativeComponent } from '../component/accumulative';\nimport { AddonModWorkshopAssessmentStrategyAccumulativeHandlerService } from './handler';\n\n/**\n * Handler for accumulative assessment strategy plugin.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService\n    extends AddonModWorkshopAssessmentStrategyAccumulativeHandlerService\n    implements AddonWorkshopAssessmentStrategyHandler {\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<unknown> {\n        return AddonModWorkshopAssessmentStrategyAccumulativeComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getOriginalValues(\n        form: AddonModWorkshopGetAssessmentFormDefinitionData,\n    ): Promise<AddonModWorkshopGetAssessmentFormFieldsParsedData[]> {\n        const defaultGrade = Translate.instant('core.choosedots');\n        const originalValues: AddonModWorkshopGetAssessmentFormFieldsParsedData[] = [];\n        const promises: Promise<void>[] = [];\n\n        form.fields.forEach((field, n) => {\n            field.dimtitle = Translate.instant('addon.mod_workshop_assessment_accumulative.dimensionnumber', { $a: field.number });\n\n            if (!form.current[n]) {\n                form.current[n] = {};\n            }\n\n            originalValues[n] = {};\n            originalValues[n].peercomment = form.current[n].peercomment || '';\n            originalValues[n].number = field.number; // eslint-disable-line id-blacklist\n\n            form.current[n].grade = form.current[n].grade ? parseInt(String(form.current[n].grade), 10) : -1;\n\n            const gradingType = parseInt(String(field.grade), 10);\n            const dimension = form.dimensionsinfo.find((dimension) => dimension.id == parseInt(field.dimensionid, 10));\n            const scale = dimension && gradingType < 0 ? dimension.scale : undefined;\n\n            promises.push(CoreGradesHelper.makeGradesMenu(gradingType, undefined, defaultGrade, -1, scale).then((grades) => {\n                field.grades = grades;\n                originalValues[n].grade = form.current[n].grade;\n\n                return;\n            }));\n        });\n\n        await Promise.all(promises);\n\n        return originalValues;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    hasDataChanged(\n        originalValues: AddonModWorkshopGetAssessmentFormFieldsParsedData[],\n        currentValues: AddonModWorkshopGetAssessmentFormFieldsParsedData[],\n    ): boolean {\n        for (const x in originalValues) {\n            if (originalValues[x].grade != currentValues[x].grade) {\n                return true;\n            }\n            if (originalValues[x].peercomment != currentValues[x].peercomment) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async prepareAssessmentData(\n        currentValues: AddonModWorkshopGetAssessmentFormFieldsParsedData[],\n        form: AddonModWorkshopGetAssessmentFormDefinitionData,\n    ): Promise<CoreFormFields> {\n        const data: CoreFormFields = {};\n        const errors: AddonModWorkshopAssessmentStrategyFieldErrors = {};\n        let hasErrors = false;\n\n        form.fields.forEach((field, idx) => {\n            if (idx < form.dimenssionscount) {\n                const grade = parseInt(String(currentValues[idx].grade), 10);\n                if (!isNaN(grade) && grade >= 0) {\n                    data['grade__idx_' + idx] = grade;\n                } else {\n                    errors['grade_' + idx] = Translate.instant('addon.mod_workshop_assessment_accumulative.mustchoosegrade');\n                    hasErrors = true;\n                }\n\n                data['peercomment__idx_' + idx] = currentValues[idx].peercomment ?? '';\n\n                data['gradeid__idx_' + idx] = parseInt(form.current[idx].gradeid, 10) || 0;\n                data['dimensionid__idx_' + idx] = parseInt(field.dimensionid, 10);\n                data['weight__idx_' + idx] = parseInt(field.weight, 10) || 0;\n            }\n        });\n\n        if (hasErrors) {\n            throw errors;\n        }\n\n        return data;\n    }\n\n}\nexport const AddonModWorkshopAssessmentStrategyAccumulativeHandler =\n    makeSingleton(AddonModWorkshopAssessmentStrategyAccumulativeHandlerLazyService);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}