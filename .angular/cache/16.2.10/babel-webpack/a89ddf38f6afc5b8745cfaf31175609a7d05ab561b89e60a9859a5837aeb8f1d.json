{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Validators } from '@angular/forms';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreForms } from '@singletons/form';\nimport { CorePlatform } from '@services/platform';\nimport { CoreUserGuestSupportConfig } from '@features/user/classes/support/guest-support-config';\nimport { CoreSitesFactory } from '@services/sites-factory';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../directives/auto-focus\";\nimport * as i4 from \"../../../../directives/content\";\nimport * as i5 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@features/login/components/exceeded-attempts/exceeded-attempts\";\nimport * as i8 from \"@ngx-translate/core\";\nconst _c0 = [\"resetPasswordForm\"];\nfunction CoreLoginForgottenPasswordPage_core_login_exceeded_attempts_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"core-login-exceeded-attempts\", 14);\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"supportConfig\", ctx_r0.supportConfig)(\"supportSubject\", i0.ɵɵpipeBind1(1, 3, \"core.login.exceededpasswordresetattemptssupportsubject\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 5, \"core.login.exceededpasswordresetattempts\"), \" \");\n  }\n}\n/**\n * Page to recover a forgotten password.\n */\nexport class CoreLoginForgottenPasswordPage {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.wasPasswordResetRequestedRecently = false;\n  }\n  /**\n   * Initialize the component.\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$supportConfig;\n      const siteUrl = CoreNavigator.getRouteParam('siteUrl');\n      if (!siteUrl) {\n        CoreDomUtils.showErrorModal('Site URL not supplied.');\n        CoreNavigator.back();\n        return;\n      }\n      const siteConfig = CoreNavigator.getRouteParam('siteConfig');\n      _this.site = CoreSitesFactory.makeUnauthenticatedSite(siteUrl, siteConfig);\n      _this.autoFocus = CorePlatform.is('tablet');\n      _this.myForm = _this.formBuilder.group({\n        field: ['username', Validators.required],\n        value: [CoreNavigator.getRouteParam('username') || '', Validators.required]\n      });\n      _this.supportConfig = siteConfig && new CoreUserGuestSupportConfig(_this.site, siteConfig);\n      _this.canContactSupport = (_this$supportConfig = _this.supportConfig) === null || _this$supportConfig === void 0 ? void 0 : _this$supportConfig.canContactSupport();\n      _this.wasPasswordResetRequestedRecently = yield CoreLoginHelper.wasPasswordResetRequestedRecently(siteUrl);\n    })();\n  }\n  /**\n   * Request to reset the password.\n   *\n   * @param e Event.\n   */\n  resetPassword(e) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      e.preventDefault();\n      e.stopPropagation();\n      const field = _this2.myForm.value.field;\n      const value = _this2.myForm.value.value;\n      if (!value) {\n        CoreDomUtils.showErrorModal('core.login.usernameoremail', true);\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      const isMail = field === 'email';\n      try {\n        const response = yield CoreLoginHelper.requestPasswordReset(_this2.site.getURL(), isMail ? '' : value, isMail ? value : '');\n        if (response.status === 'dataerror') {\n          var _response$warnings;\n          // Show an error from the warnings.\n          const warning = (_response$warnings = response.warnings) === null || _response$warnings === void 0 ? void 0 : _response$warnings.find(warning => warning.item === 'email' && isMail || warning.item === 'username' && !isMail);\n          if (warning) {\n            CoreDomUtils.showErrorModal(warning.message);\n          }\n        } else if (response.status === 'emailpasswordconfirmnotsent' || response.status === 'emailpasswordconfirmnoemail') {\n          // Error, not found.\n          CoreDomUtils.showErrorModal(response.notice);\n        } else {\n          // Success.\n          CoreForms.triggerFormSubmittedEvent(_this2.formElement, true);\n          yield CoreDomUtils.showAlert(Translate.instant('core.success'), response.notice);\n          yield CoreNavigator.back();\n          yield CoreLoginHelper.passwordResetRequested(_this2.site.getURL());\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n}\n_class = CoreLoginForgottenPasswordPage;\n_class.ɵfac = function CoreLoginForgottenPasswordPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-login-forgotten-password\"]],\n  viewQuery: function CoreLoginForgottenPasswordPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formElement = _t.first);\n    }\n  },\n  decls: 45,\n  vars: 31,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [1, \"list-item-limited-width\"], [3, \"supportConfig\", \"supportSubject\", 4, \"ngIf\"], [1, \"ion-text-wrap\"], [3, \"formGroup\", \"ngSubmit\"], [\"resetPasswordForm\", \"\"], [1, \"item-heading\"], [\"formControlName\", \"field\"], [\"slot\", \"end\", \"value\", \"username\"], [\"slot\", \"end\", \"value\", \"email\"], [1, \"sr-only\"], [\"type\", \"text\", \"name\", \"value\", \"formControlName\", \"value\", \"autocapitalize\", \"none\", \"autocorrect\", \"off\", 3, \"placeholder\", \"core-auto-focus\"], [\"type\", \"submit\", \"expand\", \"block\", 1, \"ion-margin\", 3, \"disabled\"], [3, \"supportConfig\", \"supportSubject\"]],\n  template: function CoreLoginForgottenPasswordPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"div\", 2);\n      i0.ɵɵtemplate(11, CoreLoginForgottenPasswordPage_core_login_exceeded_attempts_11_Template, 4, 7, \"core-login-exceeded-attempts\", 3);\n      i0.ɵɵelementStart(12, \"ion-list\")(13, \"ion-item\", 4)(14, \"ion-label\");\n      i0.ɵɵtext(15);\n      i0.ɵɵpipe(16, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"ion-card\")(18, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function CoreLoginForgottenPasswordPage_Template_form_ngSubmit_18_listener($event) {\n        return ctx.resetPassword($event);\n      });\n      i0.ɵɵelementStart(20, \"ion-item-divider\", 4)(21, \"ion-label\")(22, \"p\", 7);\n      i0.ɵɵtext(23);\n      i0.ɵɵpipe(24, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"ion-radio-group\", 8)(26, \"ion-item\")(27, \"ion-label\");\n      i0.ɵɵtext(28);\n      i0.ɵɵpipe(29, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"ion-radio\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"ion-item\")(32, \"ion-label\");\n      i0.ɵɵtext(33);\n      i0.ɵɵpipe(34, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"ion-radio\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"ion-item\")(37, \"ion-label\", 11);\n      i0.ɵɵtext(38);\n      i0.ɵɵpipe(39, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"ion-input\", 12);\n      i0.ɵɵpipe(41, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"ion-button\", 13);\n      i0.ɵɵtext(43);\n      i0.ɵɵpipe(44, \"translate\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 13, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 15, \"core.login.passwordforgotten\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.canContactSupport && ctx.wasPasswordResetRequestedRecently);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 17, \"core.login.passwordforgotteninstructions2\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 19, \"core.login.searchby\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(29, 21, \"core.login.username\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(34, 23, \"core.user.email\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 25, \"core.login.usernameoremail\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(41, 27, \"core.login.usernameoremail\"));\n      i0.ɵɵproperty(\"core-auto-focus\", ctx.autoFocus);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.myForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(44, 29, \"core.courses.search\"), \" \");\n    }\n  },\n  dependencies: [i2.NgIf, i3.CoreAutoFocusDirective, i4.CoreContentDirective, i5.CoreUpdateNonReactiveAttributesDirective, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i6.IonButton, i6.IonButtons, i6.IonCard, i6.IonContent, i6.IonHeader, i6.IonInput, i6.IonItem, i6.IonItemDivider, i6.IonLabel, i6.IonList, i6.IonRadio, i6.IonRadioGroup, i6.IonTitle, i6.IonToolbar, i6.RadioValueAccessor, i6.SelectValueAccessor, i6.TextValueAccessor, i6.IonBackButton, i1.FormGroupDirective, i1.FormControlName, i7.CoreLoginExceededAttemptsComponent, i8.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["Validators","CoreDomUtils","CoreLoginHelper","Translate","CoreNavigator","CoreForms","CorePlatform","CoreUserGuestSupportConfig","CoreSitesFactory","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","supportConfig","ɵɵpipeBind1","ɵɵadvance","ɵɵtextInterpolate1","CoreLoginForgottenPasswordPage","constructor","formBuilder","wasPasswordResetRequestedRecently","ngOnInit","_this","_asyncToGenerator","_this$supportConfig","siteUrl","getRouteParam","showErrorModal","back","siteConfig","site","makeUnauthenticatedSite","autoFocus","is","myForm","group","field","required","value","canContactSupport","resetPassword","e","_this2","preventDefault","stopPropagation","modal","showModalLoading","isMail","response","requestPasswordReset","getURL","status","_response$warnings","warning","warnings","find","item","message","notice","triggerFormSubmittedEvent","formElement","showAlert","instant","passwordResetRequested","error","dismiss","ɵɵdirectiveInject","i1","FormBuilder","selectors","viewQuery","CoreLoginForgottenPasswordPage_Query","rf","ctx","ɵɵelement","ɵɵtemplate","CoreLoginForgottenPasswordPage_core_login_exceeded_attempts_11_Template","ɵɵlistener","CoreLoginForgottenPasswordPage_Template_form_ngSubmit_18_listener","$event","ɵɵtextInterpolate","ɵɵpropertyInterpolate","valid"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/login/pages/forgotten-password/forgotten-password.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/login/pages/forgotten-password/forgotten-password.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreForms } from '@singletons/form';\nimport { CorePlatform } from '@services/platform';\nimport { CoreSitePublicConfigResponse, CoreUnauthenticatedSite } from '@classes/sites/unauthenticated-site';\nimport { CoreUserSupportConfig } from '@features/user/classes/support/support-config';\nimport { CoreUserGuestSupportConfig } from '@features/user/classes/support/guest-support-config';\nimport { CoreSitesFactory } from '@services/sites-factory';\n\n/**\n * Page to recover a forgotten password.\n */\n@Component({\n    selector: 'page-core-login-forgotten-password',\n    templateUrl: 'forgotten-password.html',\n})\nexport class CoreLoginForgottenPasswordPage implements OnInit {\n\n    @ViewChild('resetPasswordForm') formElement?: ElementRef;\n\n    myForm!: FormGroup;\n    site!: CoreUnauthenticatedSite;\n    autoFocus!: boolean;\n    supportConfig?: CoreUserSupportConfig;\n    canContactSupport?: boolean;\n    wasPasswordResetRequestedRecently = false;\n\n    constructor(protected formBuilder: FormBuilder) {}\n\n    /**\n     * Initialize the component.\n     */\n    async ngOnInit(): Promise<void> {\n        const siteUrl = CoreNavigator.getRouteParam<string>('siteUrl');\n        if (!siteUrl) {\n            CoreDomUtils.showErrorModal('Site URL not supplied.');\n            CoreNavigator.back();\n\n            return;\n        }\n\n        const siteConfig = CoreNavigator.getRouteParam<CoreSitePublicConfigResponse>('siteConfig');\n\n        this.site = CoreSitesFactory.makeUnauthenticatedSite(siteUrl, siteConfig);\n        this.autoFocus = CorePlatform.is('tablet');\n        this.myForm = this.formBuilder.group({\n            field: ['username', Validators.required],\n            value: [CoreNavigator.getRouteParam<string>('username') || '', Validators.required],\n        });\n\n        this.supportConfig = siteConfig && new CoreUserGuestSupportConfig(this.site, siteConfig);\n        this.canContactSupport = this.supportConfig?.canContactSupport();\n        this.wasPasswordResetRequestedRecently = await CoreLoginHelper.wasPasswordResetRequestedRecently(siteUrl);\n    }\n\n    /**\n     * Request to reset the password.\n     *\n     * @param e Event.\n     */\n    async resetPassword(e: Event): Promise<void> {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const field = this.myForm.value.field;\n        const value = this.myForm.value.value;\n\n        if (!value) {\n            CoreDomUtils.showErrorModal('core.login.usernameoremail', true);\n\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n        const isMail = field === 'email';\n\n        try {\n            const response = await CoreLoginHelper.requestPasswordReset(\n                this.site.getURL(),\n                isMail ? '' : value,\n                isMail ? value : '',\n            );\n\n            if (response.status === 'dataerror') {\n                // Show an error from the warnings.\n                const warning = response.warnings?.find((warning) =>\n                    (warning.item === 'email' && isMail) || (warning.item === 'username' && !isMail));\n                if (warning) {\n                    CoreDomUtils.showErrorModal(warning.message);\n                }\n            } else if (response.status === 'emailpasswordconfirmnotsent' || response.status === 'emailpasswordconfirmnoemail') {\n                // Error, not found.\n                CoreDomUtils.showErrorModal(response.notice);\n            } else {\n                // Success.\n                CoreForms.triggerFormSubmittedEvent(this.formElement, true);\n\n                await CoreDomUtils.showAlert(Translate.instant('core.success'), response.notice);\n                await CoreNavigator.back();\n                await CoreLoginHelper.passwordResetRequested(this.site.getURL());\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n\n        <ion-title>\n            <h1>{{ 'core.login.passwordforgotten' | translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <div class=\"list-item-limited-width\">\n        <core-login-exceeded-attempts *ngIf=\"canContactSupport && wasPasswordResetRequestedRecently\" [supportConfig]=\"supportConfig\"\n            [supportSubject]=\"'core.login.exceededpasswordresetattemptssupportsubject' | translate\">\n            {{ 'core.login.exceededpasswordresetattempts' | translate }}\n        </core-login-exceeded-attempts>\n\n        <ion-list>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>{{ 'core.login.passwordforgotteninstructions2' | translate }}</ion-label>\n            </ion-item>\n        </ion-list>\n        <ion-card>\n            <form [formGroup]=\"myForm\" (ngSubmit)=\"resetPassword($event)\" #resetPasswordForm>\n                <ion-item-divider class=\"ion-text-wrap\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'core.login.searchby' | translate }}</p>\n                    </ion-label>\n                </ion-item-divider>\n                <ion-radio-group formControlName=\"field\">\n                    <ion-item>\n                        <ion-label>{{ 'core.login.username' | translate }}</ion-label>\n                        <ion-radio slot=\"end\" value=\"username\" />\n                    </ion-item>\n                    <ion-item>\n                        <ion-label>{{ 'core.user.email' | translate }}</ion-label>\n                        <ion-radio slot=\"end\" value=\"email\" />\n                    </ion-item>\n                </ion-radio-group>\n                <ion-item>\n                    <ion-label class=\"sr-only\">{{ 'core.login.usernameoremail' | translate }}</ion-label>\n                    <ion-input type=\"text\" name=\"value\" placeholder=\"{{ 'core.login.usernameoremail' | translate }}\" formControlName=\"value\"\n                        autocapitalize=\"none\" autocorrect=\"off\" [core-auto-focus]=\"autoFocus\" />\n                </ion-item>\n                <ion-button type=\"submit\" class=\"ion-margin\" expand=\"block\" [disabled]=\"!myForm.valid\">\n                    {{ 'core.courses.search' | translate }}\n                </ion-button>\n            </form>\n        </ion-card>\n    </div>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}