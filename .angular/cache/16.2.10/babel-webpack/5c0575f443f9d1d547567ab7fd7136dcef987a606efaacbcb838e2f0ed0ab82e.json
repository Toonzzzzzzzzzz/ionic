{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreUtils } from '@services/utils/utils';\n/**\n * Check if a component implements the canLeave interface.\n *\n * @param component Component instance to check.\n * @returns Whether it implements CanLeave interface.\n */\nconst isCanLeave = component => component !== null && 'canLeave' in component;\n/**\n * Guard to check if the user can leave a page.\n *\n * @returns True if user has sites, redirect route otherwise.\n */\nexport const canLeaveGuard = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (component) {\n    if (!isCanLeave(component)) {\n      return true;\n    }\n    return CoreUtils.ignoreErrors(component.canLeave(), false);\n  });\n  return function canLeaveGuard(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["CoreUtils","isCanLeave","component","canLeaveGuard","_ref","_asyncToGenerator","ignoreErrors","canLeave","_x","apply","arguments"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/guards/can-leave.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CanDeactivateFn } from '@angular/router';\nimport { CoreUtils } from '@services/utils/utils';\n\n/**\n * Check if a component implements the canLeave interface.\n *\n * @param component Component instance to check.\n * @returns Whether it implements CanLeave interface.\n */\nconst isCanLeave = (component: unknown | null): component is CanLeave =>\n    component !== null && 'canLeave' in <CanLeave> component;\n\n/**\n * Guard to check if the user can leave a page.\n *\n * @returns True if user has sites, redirect route otherwise.\n */\nexport const canLeaveGuard: CanDeactivateFn<unknown> = async (component: unknown) => {\n    if (!isCanLeave(component)) {\n        return true;\n    }\n\n    return CoreUtils.ignoreErrors(component.canLeave(), false);\n};\n\nexport interface CanLeave {\n    /**\n     * Check whether the user can leave the current route.\n     *\n     * @returns Promise resolved with true if can leave, resolved with false or rejected if cannot leave.\n     */\n    canLeave: () => Promise<boolean>;\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,SAAS,QAAQ,uBAAuB;AAEjD;;;;;;AAMA,MAAMC,UAAU,GAAIC,SAAyB,IACzCA,SAAS,KAAK,IAAI,IAAI,UAAU,IAAeA,SAAS;AAE5D;;;;;AAKA,OAAO,MAAMC,aAAa;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAA6B,WAAOH,SAAkB,EAAI;IAChF,IAAI,CAACD,UAAU,CAACC,SAAS,CAAC,EAAE;MACxB,OAAO,IAAI;;IAGf,OAAOF,SAAS,CAACM,YAAY,CAACJ,SAAS,CAACK,QAAQ,EAAE,EAAE,KAAK,CAAC;EAC9D,CAAC;EAAA,gBANYJ,aAAaA,CAAAK,EAAA;IAAA,OAAAJ,IAAA,CAAAK,KAAA,OAAAC,SAAA;EAAA;AAAA,GAMzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}