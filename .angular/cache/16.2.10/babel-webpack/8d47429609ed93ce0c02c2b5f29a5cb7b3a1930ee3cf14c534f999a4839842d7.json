{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { renderInlineStyles } from '@/core/utils/style-helpers';\nimport { CorePlatform } from '@services/platform';\nconst ARROW_HEIGHT = 22;\nconst ARROW_WIDTH = 35;\nconst BORDER_RADIUS = 8;\nconst MARGIN = 16;\n/**\n * Helper class to calculate layout styles for the popover wrapper in a User Tour.\n */\nexport class CoreUserToursPopoverLayout {\n  constructor(target, side, alignment) {\n    this.targetBoundingBox = target.getBoundingClientRect();\n    this.side = side;\n    this.alignment = alignment;\n    this.wrapperArrowStyles = {};\n    this.wrapperStyles = {};\n    this.calculateStyles();\n  }\n  /**\n   * Calculate styles.\n   */\n  calculateStyles() {\n    const sideHandlers = {\n      [\"top\" /* CoreUserToursSide.Top */]: this.calculateWrapperTopSideStyles,\n      [\"bottom\" /* CoreUserToursSide.Bottom */]: this.calculateWrapperBottomSideStyles,\n      [\"right\" /* CoreUserToursSide.Right */]: this.calculateWrapperRightSideStyles,\n      [\"left\" /* CoreUserToursSide.Left */]: this.calculateWrapperLeftSideStyles,\n      [\"start\" /* CoreUserToursSide.Start */]: CorePlatform.isRTL ? this.calculateWrapperRightSideStyles : this.calculateWrapperLeftSideStyles,\n      [\"end\" /* CoreUserToursSide.End */]: CorePlatform.isRTL ? this.calculateWrapperLeftSideStyles : this.calculateWrapperRightSideStyles\n    };\n    sideHandlers[this.side].call(this);\n    this.wrapperInlineStyles = renderInlineStyles(this.wrapperStyles);\n    this.wrapperArrowInlineStyles = renderInlineStyles(this.wrapperArrowStyles);\n  }\n  /**\n   * Calculate wrapper styles for an horizontal alignment.\n   */\n  calculateWrapperHorizontalAlignmentStyles() {\n    const horizontalAlignmentHandlers = {\n      [\"start\" /* CoreUserToursAlignment.Start */]: CorePlatform.isRTL ? this.calculateWrapperRightAlignmentStyles : this.calculateWrapperLeftAlignmentStyles,\n      [\"center\" /* CoreUserToursAlignment.Center */]: this.calculateWrapperCenterHorizontalAlignmentStyles,\n      [\"end\" /* CoreUserToursAlignment.End */]: CorePlatform.isRTL ? this.calculateWrapperLeftAlignmentStyles : this.calculateWrapperRightAlignmentStyles\n    };\n    horizontalAlignmentHandlers[this.alignment].call(this);\n  }\n  /**\n   * Calculate wrapper styles for a vertical alignment.\n   */\n  calculateWrapperVerticalAlignmentStyles() {\n    const verticalAlignmentHandlers = {\n      [\"start\" /* CoreUserToursAlignment.Start */]: this.calculateWrapperTopAlignmentStyles,\n      [\"center\" /* CoreUserToursAlignment.Center */]: this.calculateWrapperCenterVerticalAlignmentStyles,\n      [\"end\" /* CoreUserToursAlignment.End */]: this.calculateWrapperBottomAlignmentStyles\n    };\n    verticalAlignmentHandlers[this.alignment].call(this);\n  }\n  /**\n   * Calculate wrapper arrow styles for an horizontal orientation.\n   */\n  calculateWrapperArrowHorizontalStyles() {\n    this.wrapperArrowStyles['border-width'] = `${ARROW_WIDTH / 2}px ${ARROW_HEIGHT}px`;\n  }\n  /**\n   * Calculate wrapper arrow styles for a vertical orientation.\n   */\n  calculateWrapperArrowVerticalStyles() {\n    this.wrapperArrowStyles['border-width'] = `${ARROW_HEIGHT}px ${ARROW_WIDTH / 2}px`;\n  }\n  /**\n   * Calculate wrapper styles for a top side placement.\n   */\n  calculateWrapperTopSideStyles() {\n    this.wrapperStyles.bottom = window.innerHeight - this.targetBoundingBox.y + ARROW_HEIGHT + MARGIN;\n    this.wrapperArrowStyles.bottom = -ARROW_HEIGHT * 2;\n    this.wrapperArrowStyles['border-top-color'] = 'var(--popover-background)';\n    this.calculateWrapperArrowVerticalStyles();\n    this.calculateWrapperHorizontalAlignmentStyles();\n  }\n  /**\n   * Calculate wrapper styles for a bottom side placement.\n   */\n  calculateWrapperBottomSideStyles() {\n    this.wrapperStyles.top = this.targetBoundingBox.y + this.targetBoundingBox.height + ARROW_HEIGHT + MARGIN;\n    this.wrapperArrowStyles.top = -ARROW_HEIGHT * 2;\n    this.wrapperArrowStyles['border-bottom-color'] = 'var(--popover-background)';\n    this.calculateWrapperArrowVerticalStyles();\n    this.calculateWrapperHorizontalAlignmentStyles();\n  }\n  /**\n   * Calculate wrapper styles for a right side placement.\n   */\n  calculateWrapperRightSideStyles() {\n    this.wrapperStyles.left = this.targetBoundingBox.x + this.targetBoundingBox.width + ARROW_HEIGHT + MARGIN;\n    this.wrapperArrowStyles.left = -ARROW_HEIGHT * 2;\n    this.wrapperArrowStyles['border-right-color'] = 'var(--popover-background)';\n    this.calculateWrapperArrowHorizontalStyles();\n    this.calculateWrapperVerticalAlignmentStyles();\n  }\n  /**\n   * Calculate wrapper styles for a left side placement.\n   */\n  calculateWrapperLeftSideStyles() {\n    this.wrapperStyles.right = window.innerWidth - this.targetBoundingBox.x + ARROW_HEIGHT + MARGIN;\n    this.wrapperArrowStyles.right = -ARROW_HEIGHT * 2;\n    this.wrapperArrowStyles['border-left-color'] = 'var(--popover-background)';\n    this.calculateWrapperArrowHorizontalStyles();\n    this.calculateWrapperVerticalAlignmentStyles();\n  }\n  /**\n   * Calculate wrapper styles for top alignment.\n   */\n  calculateWrapperTopAlignmentStyles() {\n    this.wrapperStyles.top = this.targetBoundingBox.y;\n    this.wrapperArrowStyles.top = BORDER_RADIUS;\n  }\n  /**\n   * Calculate wrapper styles for bottom alignment.\n   */\n  calculateWrapperBottomAlignmentStyles() {\n    this.wrapperStyles.bottom = window.innerHeight - this.targetBoundingBox.y - this.targetBoundingBox.height;\n    this.wrapperArrowStyles.bottom = BORDER_RADIUS;\n  }\n  /**\n   * Calculate wrapper styles for right alignment.\n   */\n  calculateWrapperRightAlignmentStyles() {\n    this.wrapperStyles.right = window.innerWidth - this.targetBoundingBox.x - this.targetBoundingBox.width;\n    this.wrapperArrowStyles.right = BORDER_RADIUS;\n  }\n  /**\n   * Calculate wrapper styles for left alignment.\n   */\n  calculateWrapperLeftAlignmentStyles() {\n    this.wrapperStyles.left = this.targetBoundingBox.x;\n    this.wrapperArrowStyles.left = BORDER_RADIUS;\n  }\n  /**\n   * Calculate wrapper styles for center horizontal alignment.\n   */\n  calculateWrapperCenterHorizontalAlignmentStyles() {\n    this.wrapperStyles.left = this.targetBoundingBox.x + this.targetBoundingBox.width / 2;\n    this.wrapperStyles.transform = 'translateX(-50%)';\n    this.wrapperStyles['transform-origin'] = '0 50%';\n    this.wrapperArrowStyles.left = '50%';\n    this.wrapperArrowStyles.transform = 'translateX(-50%)';\n  }\n  /**\n   * Calculate wrapper styles for center vertical alignment.\n   */\n  calculateWrapperCenterVerticalAlignmentStyles() {\n    this.wrapperStyles.top = this.targetBoundingBox.y + this.targetBoundingBox.height / 2;\n    this.wrapperStyles.transform = 'translateY(-50%)';\n    this.wrapperStyles['transform-origin'] = '50% 0';\n    this.wrapperArrowStyles.top = '50%';\n    this.wrapperArrowStyles.transform = 'translateY(-50%)';\n  }\n}","map":{"version":3,"names":["renderInlineStyles","CorePlatform","ARROW_HEIGHT","ARROW_WIDTH","BORDER_RADIUS","MARGIN","CoreUserToursPopoverLayout","constructor","target","side","alignment","targetBoundingBox","getBoundingClientRect","wrapperArrowStyles","wrapperStyles","calculateStyles","sideHandlers","calculateWrapperTopSideStyles","calculateWrapperBottomSideStyles","calculateWrapperRightSideStyles","calculateWrapperLeftSideStyles","isRTL","call","wrapperInlineStyles","wrapperArrowInlineStyles","calculateWrapperHorizontalAlignmentStyles","horizontalAlignmentHandlers","calculateWrapperRightAlignmentStyles","calculateWrapperLeftAlignmentStyles","calculateWrapperCenterHorizontalAlignmentStyles","calculateWrapperVerticalAlignmentStyles","verticalAlignmentHandlers","calculateWrapperTopAlignmentStyles","calculateWrapperCenterVerticalAlignmentStyles","calculateWrapperBottomAlignmentStyles","calculateWrapperArrowHorizontalStyles","calculateWrapperArrowVerticalStyles","bottom","window","innerHeight","y","top","height","left","x","width","right","innerWidth","transform"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/usertours/classes/popover-layout.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreStyles, renderInlineStyles } from '@/core/utils/style-helpers';\nimport { CorePlatform } from '@services/platform';\nimport { CoreUserToursAlignment, CoreUserToursSide } from '../services/user-tours';\n\nconst ARROW_HEIGHT = 22;\nconst ARROW_WIDTH = 35;\nconst BORDER_RADIUS = 8;\nconst MARGIN = 16;\n\n/**\n * Helper class to calculate layout styles for the popover wrapper in a User Tour.\n */\nexport class CoreUserToursPopoverLayout {\n\n    wrapperStyles: CoreStyles;\n    wrapperInlineStyles!: string;\n    wrapperArrowStyles: CoreStyles;\n    wrapperArrowInlineStyles!: string;\n\n    private targetBoundingBox: DOMRect;\n    private side: CoreUserToursSide;\n    private alignment: CoreUserToursAlignment;\n\n    constructor(target: HTMLElement, side: CoreUserToursSide, alignment: CoreUserToursAlignment) {\n        this.targetBoundingBox = target.getBoundingClientRect();\n        this.side = side;\n        this.alignment = alignment;\n        this.wrapperArrowStyles = {};\n        this.wrapperStyles = {};\n\n        this.calculateStyles();\n    }\n\n    /**\n     * Calculate styles.\n     */\n    private calculateStyles(): void {\n        const sideHandlers: Record<CoreUserToursSide, () => void> = {\n            [CoreUserToursSide.Top]: this.calculateWrapperTopSideStyles,\n            [CoreUserToursSide.Bottom]: this.calculateWrapperBottomSideStyles,\n            [CoreUserToursSide.Right]: this.calculateWrapperRightSideStyles,\n            [CoreUserToursSide.Left]: this.calculateWrapperLeftSideStyles,\n            [CoreUserToursSide.Start]: CorePlatform.isRTL\n                ? this.calculateWrapperRightSideStyles\n                : this.calculateWrapperLeftSideStyles,\n            [CoreUserToursSide.End]: CorePlatform.isRTL\n                ? this.calculateWrapperLeftSideStyles\n                : this.calculateWrapperRightSideStyles,\n        };\n\n        sideHandlers[this.side].call(this);\n\n        this.wrapperInlineStyles = renderInlineStyles(this.wrapperStyles);\n        this.wrapperArrowInlineStyles = renderInlineStyles(this.wrapperArrowStyles);\n    }\n\n    /**\n     * Calculate wrapper styles for an horizontal alignment.\n     */\n    private calculateWrapperHorizontalAlignmentStyles(): void {\n        const horizontalAlignmentHandlers: Record<CoreUserToursAlignment, () => void> ={\n            [CoreUserToursAlignment.Start]: CorePlatform.isRTL\n                ? this.calculateWrapperRightAlignmentStyles\n                : this.calculateWrapperLeftAlignmentStyles,\n            [CoreUserToursAlignment.Center]: this.calculateWrapperCenterHorizontalAlignmentStyles,\n            [CoreUserToursAlignment.End]: CorePlatform.isRTL\n                ? this.calculateWrapperLeftAlignmentStyles\n                : this.calculateWrapperRightAlignmentStyles,\n        };\n\n        horizontalAlignmentHandlers[this.alignment].call(this);\n    }\n\n    /**\n     * Calculate wrapper styles for a vertical alignment.\n     */\n    private calculateWrapperVerticalAlignmentStyles(): void {\n        const verticalAlignmentHandlers: Record<CoreUserToursAlignment, () => void> ={\n            [CoreUserToursAlignment.Start]: this.calculateWrapperTopAlignmentStyles,\n            [CoreUserToursAlignment.Center]: this.calculateWrapperCenterVerticalAlignmentStyles,\n            [CoreUserToursAlignment.End]: this.calculateWrapperBottomAlignmentStyles,\n        };\n\n        verticalAlignmentHandlers[this.alignment].call(this);\n    }\n\n    /**\n     * Calculate wrapper arrow styles for an horizontal orientation.\n     */\n    private calculateWrapperArrowHorizontalStyles(): void {\n        this.wrapperArrowStyles['border-width'] = `${ARROW_WIDTH / 2}px ${ARROW_HEIGHT}px`;\n    }\n\n    /**\n     * Calculate wrapper arrow styles for a vertical orientation.\n     */\n    private calculateWrapperArrowVerticalStyles(): void {\n        this.wrapperArrowStyles['border-width'] = `${ARROW_HEIGHT}px ${ARROW_WIDTH / 2}px`;\n    }\n\n    /**\n     * Calculate wrapper styles for a top side placement.\n     */\n    private calculateWrapperTopSideStyles(): void {\n        this.wrapperStyles.bottom = window.innerHeight - this.targetBoundingBox.y + ARROW_HEIGHT + MARGIN;\n        this.wrapperArrowStyles.bottom = -ARROW_HEIGHT*2;\n        this.wrapperArrowStyles['border-top-color'] = 'var(--popover-background)';\n\n        this.calculateWrapperArrowVerticalStyles();\n        this.calculateWrapperHorizontalAlignmentStyles();\n    }\n\n    /**\n     * Calculate wrapper styles for a bottom side placement.\n     */\n    private calculateWrapperBottomSideStyles(): void {\n        this.wrapperStyles.top = this.targetBoundingBox.y + this.targetBoundingBox.height + ARROW_HEIGHT + MARGIN;\n        this.wrapperArrowStyles.top = -ARROW_HEIGHT*2;\n        this.wrapperArrowStyles['border-bottom-color'] = 'var(--popover-background)';\n\n        this.calculateWrapperArrowVerticalStyles();\n        this.calculateWrapperHorizontalAlignmentStyles();\n    }\n\n    /**\n     * Calculate wrapper styles for a right side placement.\n     */\n    private calculateWrapperRightSideStyles(): void {\n        this.wrapperStyles.left = this.targetBoundingBox.x + this.targetBoundingBox.width + ARROW_HEIGHT + MARGIN;\n        this.wrapperArrowStyles.left = -ARROW_HEIGHT*2;\n        this.wrapperArrowStyles['border-right-color'] = 'var(--popover-background)';\n\n        this.calculateWrapperArrowHorizontalStyles();\n        this.calculateWrapperVerticalAlignmentStyles();\n    }\n\n    /**\n     * Calculate wrapper styles for a left side placement.\n     */\n    private calculateWrapperLeftSideStyles(): void {\n        this.wrapperStyles.right = window.innerWidth - this.targetBoundingBox.x + ARROW_HEIGHT + MARGIN;\n        this.wrapperArrowStyles.right = -ARROW_HEIGHT*2;\n        this.wrapperArrowStyles['border-left-color'] = 'var(--popover-background)';\n\n        this.calculateWrapperArrowHorizontalStyles();\n        this.calculateWrapperVerticalAlignmentStyles();\n    }\n\n    /**\n     * Calculate wrapper styles for top alignment.\n     */\n    private calculateWrapperTopAlignmentStyles() {\n        this.wrapperStyles.top = this.targetBoundingBox.y;\n        this.wrapperArrowStyles.top = BORDER_RADIUS;\n    }\n\n    /**\n     * Calculate wrapper styles for bottom alignment.\n     */\n    private calculateWrapperBottomAlignmentStyles(): void {\n        this.wrapperStyles.bottom = window.innerHeight - this.targetBoundingBox.y - this.targetBoundingBox.height;\n        this.wrapperArrowStyles.bottom = BORDER_RADIUS;\n    }\n\n    /**\n     * Calculate wrapper styles for right alignment.\n     */\n    private calculateWrapperRightAlignmentStyles() {\n        this.wrapperStyles.right = window.innerWidth - this.targetBoundingBox.x - this.targetBoundingBox.width;\n        this.wrapperArrowStyles.right = BORDER_RADIUS;\n    }\n\n    /**\n     * Calculate wrapper styles for left alignment.\n     */\n    private calculateWrapperLeftAlignmentStyles() {\n        this.wrapperStyles.left = this.targetBoundingBox.x;\n        this.wrapperArrowStyles.left = BORDER_RADIUS;\n    }\n\n    /**\n     * Calculate wrapper styles for center horizontal alignment.\n     */\n    private calculateWrapperCenterHorizontalAlignmentStyles() {\n        this.wrapperStyles.left = this.targetBoundingBox.x + this.targetBoundingBox.width / 2;\n        this.wrapperStyles.transform = 'translateX(-50%)';\n        this.wrapperStyles['transform-origin'] = '0 50%';\n        this.wrapperArrowStyles.left = '50%';\n        this.wrapperArrowStyles.transform = 'translateX(-50%)';\n    }\n\n    /**\n     * Calculate wrapper styles for center vertical alignment.\n     */\n    private calculateWrapperCenterVerticalAlignmentStyles() {\n        this.wrapperStyles.top = this.targetBoundingBox.y + this.targetBoundingBox.height / 2;\n        this.wrapperStyles.transform = 'translateY(-50%)';\n        this.wrapperStyles['transform-origin'] = '50% 0';\n        this.wrapperArrowStyles.top = '50%';\n        this.wrapperArrowStyles.transform = 'translateY(-50%)';\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}