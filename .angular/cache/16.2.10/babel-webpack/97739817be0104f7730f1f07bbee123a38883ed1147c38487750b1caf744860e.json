{"ast":null,"code":"var _class;\nimport { RouterModule } from '@angular/router';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSettingsIndexPage } from './pages/index';\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\nimport { CoreSettingsSynchronizationPage } from '@features/settings/pages/synchronization/synchronization';\nimport { CoreSettingsGeneralPage } from '@features/settings/pages/general/general';\nimport { CoreSettingsSpaceUsagePage } from '@features/settings/pages/space-usage/space-usage';\nimport { CoreSettingsAboutPage } from '@features/settings/pages/about/about';\nimport { CoreSettingsLicensesPage } from '@features/settings/pages/licenses/licenses';\nimport { CoreSettingsDeviceInfoPage } from '@features/settings/pages/deviceinfo/deviceinfo';\nimport { CoreSettingsDevPage } from '@features/settings/pages/dev/dev';\nimport { CoreSettingsErrorLogPage } from '@features/settings/pages/error-log/error-log';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst sectionRoutes = [{\n  path: 'general',\n  component: CoreSettingsGeneralPage\n}, {\n  path: 'spaceusage',\n  component: CoreSettingsSpaceUsagePage\n}, {\n  path: 'sync',\n  component: CoreSettingsSynchronizationPage\n}, {\n  path: SHAREDFILES_PAGE_NAME,\n  loadChildren: () => import('@features/sharedfiles/sharedfiles-lazy.module').then(m => m.CoreSharedFilesLazyModule)\n}, {\n  path: 'about',\n  component: CoreSettingsAboutPage\n}];\nconst mobileRoutes = [{\n  path: '',\n  component: CoreSettingsIndexPage\n}, ...sectionRoutes];\nconst tabletRoutes = [{\n  path: '',\n  component: CoreSettingsIndexPage,\n  children: [{\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'general'\n  }, ...sectionRoutes]\n}];\nconst routes = [...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile), ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet), {\n  path: 'about/deviceinfo',\n  component: CoreSettingsDeviceInfoPage\n}, {\n  path: 'about/deviceinfo/dev',\n  component: CoreSettingsDevPage\n}, {\n  path: 'about/deviceinfo/dev/error-log',\n  component: CoreSettingsErrorLogPage\n}, {\n  path: 'about/licenses',\n  component: CoreSettingsLicensesPage\n}];\nexport class CoreSettingsLazyModule {}\n_class = CoreSettingsLazyModule;\n_class.ɵfac = function CoreSettingsLazyModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forChild(routes), CoreSharedModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CoreSettingsLazyModule, {\n    declarations: [CoreSettingsIndexPage, CoreSettingsSynchronizationPage, CoreSettingsGeneralPage, CoreSettingsSpaceUsagePage, CoreSettingsAboutPage, CoreSettingsLicensesPage, CoreSettingsDeviceInfoPage, CoreSettingsDevPage, CoreSettingsErrorLogPage],\n    imports: [i1.RouterModule, CoreSharedModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","conditionalRoutes","CoreSharedModule","CoreScreen","CoreSettingsIndexPage","SHAREDFILES_PAGE_NAME","CoreSettingsSynchronizationPage","CoreSettingsGeneralPage","CoreSettingsSpaceUsagePage","CoreSettingsAboutPage","CoreSettingsLicensesPage","CoreSettingsDeviceInfoPage","CoreSettingsDevPage","CoreSettingsErrorLogPage","sectionRoutes","path","component","loadChildren","then","m","CoreSharedFilesLazyModule","mobileRoutes","tabletRoutes","children","pathMatch","redirectTo","routes","isMobile","isTablet","CoreSettingsLazyModule","forChild","declarations","imports","i1"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/settings-lazy.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreScreen } from '@services/screen';\n\nimport { CoreSettingsIndexPage } from './pages/index';\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\nimport { CoreSettingsSynchronizationPage } from '@features/settings/pages/synchronization/synchronization';\nimport { CoreSettingsGeneralPage } from '@features/settings/pages/general/general';\nimport { CoreSettingsSpaceUsagePage } from '@features/settings/pages/space-usage/space-usage';\nimport { CoreSettingsAboutPage } from '@features/settings/pages/about/about';\nimport { CoreSettingsLicensesPage } from '@features/settings/pages/licenses/licenses';\nimport { CoreSettingsDeviceInfoPage } from '@features/settings/pages/deviceinfo/deviceinfo';\nimport { CoreSettingsDevPage } from '@features/settings/pages/dev/dev';\nimport { CoreSettingsErrorLogPage } from '@features/settings/pages/error-log/error-log';\n\nconst sectionRoutes: Routes = [\n    {\n        path: 'general',\n        component: CoreSettingsGeneralPage,\n    },\n    {\n        path: 'spaceusage',\n        component: CoreSettingsSpaceUsagePage,\n    },\n    {\n        path: 'sync',\n        component: CoreSettingsSynchronizationPage,\n    },\n    {\n        path: SHAREDFILES_PAGE_NAME,\n        loadChildren: () => import('@features/sharedfiles/sharedfiles-lazy.module').then(m => m.CoreSharedFilesLazyModule),\n    },\n    {\n        path: 'about',\n        component: CoreSettingsAboutPage,\n    },\n];\n\nconst mobileRoutes: Routes = [\n    {\n        path: '',\n        component: CoreSettingsIndexPage,\n    },\n    ...sectionRoutes,\n];\n\nconst tabletRoutes: Routes = [\n    {\n        path: '',\n        component: CoreSettingsIndexPage,\n        children: [\n            {\n                path: '',\n                pathMatch: 'full',\n                redirectTo: 'general',\n            },\n            ...sectionRoutes,\n        ],\n    },\n];\n\nconst routes: Routes = [\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n    {\n        path: 'about/deviceinfo',\n        component: CoreSettingsDeviceInfoPage,\n    },\n    {\n        path: 'about/deviceinfo/dev',\n        component: CoreSettingsDevPage,\n    },\n    {\n        path: 'about/deviceinfo/dev/error-log',\n        component: CoreSettingsErrorLogPage,\n    },\n    {\n        path: 'about/licenses',\n        component: CoreSettingsLicensesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreSettingsIndexPage,\n        CoreSettingsSynchronizationPage,\n        CoreSettingsGeneralPage,\n        CoreSettingsSpaceUsagePage,\n        CoreSettingsAboutPage,\n        CoreSettingsLicensesPage,\n        CoreSettingsDeviceInfoPage,\n        CoreSettingsDevPage,\n        CoreSettingsErrorLogPage,\n    ],\n})\nexport class CoreSettingsLazyModule {}\n"],"mappings":";AAeA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,qBAAqB,QAAQ,eAAe;AACrD,SAASC,qBAAqB,QAAQ,0CAA0C;AAChF,SAASC,+BAA+B,QAAQ,0DAA0D;AAC1G,SAASC,uBAAuB,QAAQ,0CAA0C;AAClF,SAASC,0BAA0B,QAAQ,kDAAkD;AAC7F,SAASC,qBAAqB,QAAQ,sCAAsC;AAC5E,SAASC,wBAAwB,QAAQ,4CAA4C;AACrF,SAASC,0BAA0B,QAAQ,gDAAgD;AAC3F,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,wBAAwB,QAAQ,8CAA8C;;;AAEvF,MAAMC,aAAa,GAAW,CAC1B;EACIC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAET;CACd,EACD;EACIQ,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAER;CACd,EACD;EACIO,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEV;CACd,EACD;EACIS,IAAI,EAAEV,qBAAqB;EAC3BY,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,+CAA+C,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,yBAAyB;CACpH,EACD;EACIL,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;CACd,CACJ;AAED,MAAMY,YAAY,GAAW,CACzB;EACIN,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEZ;CACd,EACD,GAAGU,aAAa,CACnB;AAED,MAAMQ,YAAY,GAAW,CACzB;EACIP,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEZ,qBAAqB;EAChCmB,QAAQ,EAAE,CACN;IACIR,IAAI,EAAE,EAAE;IACRS,SAAS,EAAE,MAAM;IACjBC,UAAU,EAAE;GACf,EACD,GAAGX,aAAa;CAEvB,CACJ;AAED,MAAMY,MAAM,GAAW,CACnB,GAAGzB,iBAAiB,CAACoB,YAAY,EAAE,MAAMlB,UAAU,CAACwB,QAAQ,CAAC,EAC7D,GAAG1B,iBAAiB,CAACqB,YAAY,EAAE,MAAMnB,UAAU,CAACyB,QAAQ,CAAC,EAC7D;EACIb,IAAI,EAAE,kBAAkB;EACxBC,SAAS,EAAEL;CACd,EACD;EACII,IAAI,EAAE,sBAAsB;EAC5BC,SAAS,EAAEJ;CACd,EACD;EACIG,IAAI,EAAE,gCAAgC;EACtCC,SAAS,EAAEH;CACd,EACD;EACIE,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEN;CACd,CACJ;AAmBD,OAAM,MAAOmB,sBAAsB;SAAtBA,sBAAsB;;mBAAtBA,MAAsB;AAAA;;QAAtBA;AAAsB;;YAf3B7B,YAAY,CAAC8B,QAAQ,CAACJ,MAAM,CAAC,EAC7BxB,gBAAgB;AAAA;;2EAcX2B,sBAAsB;IAAAE,YAAA,GAX3B3B,qBAAqB,EACrBE,+BAA+B,EAC/BC,uBAAuB,EACvBC,0BAA0B,EAC1BC,qBAAqB,EACrBC,wBAAwB,EACxBC,0BAA0B,EAC1BC,mBAAmB,EACnBC,wBAAwB;IAAAmB,OAAA,GAAAC,EAAA,CAAAjC,YAAA,EAXxBE,gBAAgB;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}