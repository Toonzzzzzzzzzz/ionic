{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { APP_INITIALIZER } from '@angular/core';\nimport { CoreEmulatorHelper } from './services/emulator-helper';\nimport { CoreEmulatorComponentsModule } from './components/components.module';\n// Ionic Native services.\nimport { Camera } from '@awesome-cordova-plugins/camera/ngx';\nimport { Clipboard } from '@awesome-cordova-plugins/clipboard/ngx';\nimport { File } from '@awesome-cordova-plugins/file/ngx';\nimport { FileOpener } from '@awesome-cordova-plugins/file-opener/ngx';\nimport { FileTransfer } from '@awesome-cordova-plugins/file-transfer/ngx';\nimport { Geolocation } from '@awesome-cordova-plugins/geolocation/ngx';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport { LocalNotifications } from '@awesome-cordova-plugins/local-notifications/ngx';\nimport { MediaCapture } from '@awesome-cordova-plugins/media-capture/ngx';\nimport { Zip } from '@features/native/plugins/zip';\n// Mock services.\nimport { CameraMock } from './services/camera';\nimport { ClipboardMock } from './services/clipboard';\nimport { FileMock } from './services/file';\nimport { FileOpenerMock } from './services/file-opener';\nimport { FileTransferMock } from './services/file-transfer';\nimport { GeolocationMock } from './services/geolocation';\nimport { InAppBrowserMock } from './services/inappbrowser';\nimport { LocalNotificationsMock } from './services/local-notifications';\nimport { MediaCaptureMock } from './services/media-capture';\nimport { ZipMock } from './services/zip';\nimport { CorePlatform } from '@services/platform';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreNative } from '@features/native/services/native';\nimport { SecureStorageMock } from '@features/emulator/classes/SecureStorage';\nimport * as i0 from \"@angular/core\";\n/**\n * This module handles the emulation of Cordova plugins in browser and desktop.\n *\n * It includes the \"mock\" of all the Ionic Native services that should be supported in browser and desktop,\n * otherwise those features would only work in a Cordova environment.\n *\n * This module also determines if the app should use the original service or the mock. In each of the \"useFactory\"\n * functions we check if the app is running in mobile or not, and then provide the right service to use.\n */\nexport class CoreEmulatorModule {}\n_class = CoreEmulatorModule;\n_class.ɵfac = function CoreEmulatorModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: Camera,\n    useFactory: () => CorePlatform.is('cordova') ? new Camera() : new CameraMock()\n  }, {\n    provide: Clipboard,\n    useFactory: () => CorePlatform.is('cordova') ? new Clipboard() : new ClipboardMock()\n  }, {\n    provide: File,\n    useFactory: () => CorePlatform.is('cordova') ? new File() : new FileMock()\n  }, {\n    provide: FileOpener,\n    useFactory: () => CorePlatform.is('cordova') ? new FileOpener() : new FileOpenerMock()\n  }, {\n    provide: FileTransfer,\n    useFactory: () => CorePlatform.is('cordova') ? new FileTransfer() : new FileTransferMock()\n  }, {\n    provide: Geolocation,\n    useFactory: () => CorePlatform.is('cordova') ? new Geolocation() : new GeolocationMock()\n  }, {\n    provide: InAppBrowser,\n    useFactory: () => CorePlatform.is('cordova') ? new InAppBrowser() : new InAppBrowserMock()\n  }, {\n    provide: MediaCapture,\n    useFactory: () => CorePlatform.is('cordova') ? new MediaCapture() : new MediaCaptureMock()\n  }, {\n    provide: Zip,\n    useFactory: () => CorePlatform.is('cordova') ? new Zip() : new ZipMock()\n  }, {\n    provide: LocalNotifications,\n    useFactory: () => CoreLocalNotifications.isPluginAvailable() ? new LocalNotifications() : new LocalNotificationsMock()\n  }, {\n    provide: APP_INITIALIZER,\n    useValue: function () {\n      var _ref = _asyncToGenerator(function* () {\n        if (CorePlatform.is('cordova')) {\n          return;\n        }\n        CoreNative.registerBrowserMock('secureStorage', new SecureStorageMock());\n        yield CoreEmulatorHelper.load();\n      });\n      return function useValue() {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    multi: true\n  }],\n  imports: [CoreEmulatorComponentsModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CoreEmulatorModule, {\n    imports: [CoreEmulatorComponentsModule]\n  });\n})();","map":{"version":3,"names":["APP_INITIALIZER","CoreEmulatorHelper","CoreEmulatorComponentsModule","Camera","Clipboard","File","FileOpener","FileTransfer","Geolocation","InAppBrowser","LocalNotifications","MediaCapture","Zip","CameraMock","ClipboardMock","FileMock","FileOpenerMock","FileTransferMock","GeolocationMock","InAppBrowserMock","LocalNotificationsMock","MediaCaptureMock","ZipMock","CorePlatform","CoreLocalNotifications","CoreNative","SecureStorageMock","CoreEmulatorModule","provide","useFactory","is","isPluginAvailable","useValue","_ref","_asyncToGenerator","registerBrowserMock","load","apply","arguments","multi","imports"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/emulator/emulator.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\n\nimport { CoreEmulatorHelper } from './services/emulator-helper';\nimport { CoreEmulatorComponentsModule } from './components/components.module';\n\n// Ionic Native services.\nimport { Camera } from '@awesome-cordova-plugins/camera/ngx';\nimport { Clipboard } from '@awesome-cordova-plugins/clipboard/ngx';\nimport { File } from '@awesome-cordova-plugins/file/ngx';\nimport { FileOpener } from '@awesome-cordova-plugins/file-opener/ngx';\nimport { FileTransfer } from '@awesome-cordova-plugins/file-transfer/ngx';\nimport { Geolocation } from '@awesome-cordova-plugins/geolocation/ngx';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport { LocalNotifications } from '@awesome-cordova-plugins/local-notifications/ngx';\nimport { MediaCapture } from '@awesome-cordova-plugins/media-capture/ngx';\nimport { Zip } from '@features/native/plugins/zip';\n\n// Mock services.\nimport { CameraMock } from './services/camera';\nimport { ClipboardMock } from './services/clipboard';\nimport { FileMock } from './services/file';\nimport { FileOpenerMock } from './services/file-opener';\nimport { FileTransferMock } from './services/file-transfer';\nimport { GeolocationMock } from './services/geolocation';\nimport { InAppBrowserMock } from './services/inappbrowser';\nimport { LocalNotificationsMock } from './services/local-notifications';\nimport { MediaCaptureMock } from './services/media-capture';\nimport { ZipMock } from './services/zip';\nimport { CorePlatform } from '@services/platform';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreNative } from '@features/native/services/native';\nimport { SecureStorageMock } from '@features/emulator/classes/SecureStorage';\n\n/**\n * This module handles the emulation of Cordova plugins in browser and desktop.\n *\n * It includes the \"mock\" of all the Ionic Native services that should be supported in browser and desktop,\n * otherwise those features would only work in a Cordova environment.\n *\n * This module also determines if the app should use the original service or the mock. In each of the \"useFactory\"\n * functions we check if the app is running in mobile or not, and then provide the right service to use.\n */\n@NgModule({\n    imports: [\n        CoreEmulatorComponentsModule,\n    ],\n    providers: [\n        {\n            provide: Camera,\n            useFactory: (): Camera => CorePlatform.is('cordova') ? new Camera() : new CameraMock(),\n        },\n        {\n            provide: Clipboard,\n            useFactory: (): Clipboard => CorePlatform.is('cordova') ? new Clipboard() : new ClipboardMock(),\n        },\n        {\n            provide: File,\n            useFactory: (): File => CorePlatform.is('cordova') ? new File() : new FileMock(),\n        },\n        {\n            provide: FileOpener,\n            useFactory: (): FileOpener => CorePlatform.is('cordova') ? new FileOpener() : new FileOpenerMock(),\n        },\n        {\n            provide: FileTransfer,\n            useFactory: (): FileTransfer => CorePlatform.is('cordova') ? new FileTransfer() : new FileTransferMock(),\n        },\n        {\n            provide: Geolocation,\n            useFactory: (): Geolocation => CorePlatform.is('cordova') ? new Geolocation() : new GeolocationMock(),\n        },\n        {\n            provide: InAppBrowser,\n            useFactory: (): InAppBrowser => CorePlatform.is('cordova') ? new InAppBrowser() : new InAppBrowserMock(),\n        },\n        {\n            provide: MediaCapture,\n            useFactory: (): MediaCapture => CorePlatform.is('cordova') ? new MediaCapture() : new MediaCaptureMock(),\n        },\n        {\n            provide: Zip,\n            useFactory: (): Zip => CorePlatform.is('cordova') ? new Zip() : new ZipMock(),\n        },\n        {\n            provide: LocalNotifications,\n            useFactory: (): LocalNotifications => CoreLocalNotifications.isPluginAvailable()\n                ? new LocalNotifications()\n                : new LocalNotificationsMock(),\n        },\n        {\n            provide: APP_INITIALIZER,\n            useValue: async () => {\n                if (CorePlatform.is('cordova')) {\n                    return;\n                }\n\n                CoreNative.registerBrowserMock('secureStorage', new SecureStorageMock());\n\n                await CoreEmulatorHelper.load();\n            },\n            multi: true,\n        },\n    ],\n})\nexport class CoreEmulatorModule {}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}