{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _class;\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { FAQ_QRCODE_IMAGE_HTML, FAQ_URL_IMAGE_HTML, GET_STARTED_URL } from '@features/login/constants';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../directives/fa-icon\";\nimport * as i3 from \"../../../../directives/format-text\";\nimport * as i4 from \"../../../../directives/content\";\nimport * as i5 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@ngx-translate/core\";\nfunction CoreLoginSiteHelpComponent_ng_container_12_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r1.answer.text);\n  }\n}\nfunction CoreLoginSiteHelpComponent_ng_container_12_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 4);\n  }\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", question_r1.answer.text, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction CoreLoginSiteHelpComponent_ng_container_12_core_format_text_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-format-text\", 11);\n  }\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"text\", question_r1.answer.text)(\"filter\", false);\n  }\n}\nfunction CoreLoginSiteHelpComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 5);\n    i0.ɵɵlistener(\"click\", function CoreLoginSiteHelpComponent_ng_container_12_Template_ion_item_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const question_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.toggle(question_r1));\n    });\n    i0.ɵɵelement(2, \"ion-icon\", 6);\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"h2\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"ion-item\", 7)(7, \"ion-label\");\n    i0.ɵɵtemplate(8, CoreLoginSiteHelpComponent_ng_container_12_p_8_Template, 2, 1, \"p\", 8);\n    i0.ɵɵtemplate(9, CoreLoginSiteHelpComponent_ng_container_12_p_9_Template, 1, 1, \"p\", 9);\n    i0.ɵɵtemplate(10, CoreLoginSiteHelpComponent_ng_container_12_core_format_text_10_Template, 1, 2, \"core-format-text\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"detail\", false);\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r0.isOpen(question_r1))(\"aria-controls\", \"question-\" + question_r1.id + \"-answer\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"expandable-status-icon-expanded\", ctx_r0.isOpen(question_r1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r1.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(question_r1.answer.class + \" ion-text-wrap core-login-site-help--answer\");\n    i0.ɵɵclassProp(\"open\", ctx_r0.isOpen(question_r1));\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r1.id + \"-answer\")(\"tabindex\", ctx_r0.isOpen(question_r1) ? null : -1);\n    i0.ɵɵattribute(\"inert\", ctx_r0.isOpen(question_r1) ? null : \"true\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", question_r1.answer.format === \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.answer.format === \"safe-html\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.answer.format === \"unsafe-html\");\n  }\n}\n/**\n * Component that displays help to connect to a site.\n */\nexport class CoreLoginSiteHelpComponent {\n  constructor(el) {\n    this.el = el;\n    this.questions = [];\n    this.hydrated = false;\n    this.promises = [];\n    const getStartedTitle = Translate.instant('core.login.faqsetupsitelinktitle');\n    const canScanQR = CoreUtils.canScanQR();\n    const urlImageHtml = FAQ_URL_IMAGE_HTML;\n    const qrCodeImageHtml = FAQ_QRCODE_IMAGE_HTML;\n    const setupLinkHtml = `<a href=\"${GET_STARTED_URL}\" title=\"${getStartedTitle}\">${GET_STARTED_URL}</a>`;\n    const questions = [{\n      text: Translate.instant('core.login.faqwhatisurlquestion'),\n      answer: {\n        text: Translate.instant('core.login.faqwhatisurlanswer', {\n          $image: urlImageHtml\n        }),\n        format: AnswerFormat.SafeHTML,\n        class: 'core-login-faqwhatisurlanswer'\n      }\n    }, {\n      text: Translate.instant('core.login.faqcannotfindmysitequestion'),\n      answer: {\n        text: Translate.instant('core.login.faqcannotfindmysiteanswer'),\n        format: AnswerFormat.Text\n      }\n    }, {\n      text: Translate.instant('core.login.faqcantloginquestion'),\n      answer: {\n        text: Translate.instant('core.login.faqcantloginanswer'),\n        format: AnswerFormat.SafeHTML\n      }\n    }, canScanQR && {\n      text: Translate.instant('core.login.faqwhereisqrcode'),\n      answer: {\n        text: Translate.instant('core.login.faqwhereisqrcodeanswer', {\n          $image: qrCodeImageHtml\n        }),\n        format: AnswerFormat.SafeHTML,\n        class: 'core-login-faqwhereisqrcodeanswer'\n      }\n    }, {\n      text: Translate.instant('core.login.faqsetupsitequestion'),\n      answer: {\n        text: Translate.instant('core.login.faqsetupsiteanswer', {\n          $link: setupLinkHtml\n        }),\n        format: AnswerFormat.UnsafeHTML\n      }\n    }, {\n      text: Translate.instant('core.login.faqtestappquestion'),\n      answer: {\n        text: Translate.instant('core.login.faqtestappanswer'),\n        format: AnswerFormat.SafeHTML\n      }\n    }];\n    for (const question of questions) {\n      var _question$answer$clas;\n      if (!question) {\n        continue;\n      }\n      this.questions.push(_objectSpread(_objectSpread({}, question), {}, {\n        id: this.questions.length + 1,\n        answer: _objectSpread(_objectSpread({}, question.answer), {}, {\n          class: (_question$answer$clas = question.answer.class) !== null && _question$answer$clas !== void 0 ? _question$answer$clas : ''\n        })\n      }));\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const answers = Array.from(_this.el.nativeElement.querySelectorAll('.core-login-site-help--answer'));\n      yield Promise.all(answers.map( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (answer) {\n          yield _this.track(CoreUtils.waitFor(() => answer.clientHeight !== 0));\n          yield _this.track(CoreDomUtils.waitForImages(answer));\n          answer.style.setProperty('--height', `${answer.clientHeight}px`);\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n      _this.hydrated = true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.promises.forEach(promise => promise.cancel());\n  }\n  /**\n   * Check whether the given question is open or not.\n   *\n   * @param question Question.\n   * @returns Whether the given question is open.\n   */\n  isOpen(question) {\n    return this.openQuestion === question.id;\n  }\n  /**\n   * Toggle question.\n   *\n   * @param question Question to toggle.\n   */\n  toggle(question) {\n    if (question.id === this.openQuestion) {\n      delete this.openQuestion;\n      return;\n    }\n    this.openQuestion = question.id;\n  }\n  /**\n   * Close help modal.\n   */\n  close() {\n    ModalController.dismiss();\n  }\n  /**\n   * Track a promise for cleanup.\n   *\n   * @param promise Cancellable promise.\n   * @returns The promise.\n   */\n  track(promise) {\n    const remove = () => {\n      const index = this.promises.indexOf(promise);\n      if (index === -1) {\n        return;\n      }\n      this.promises.splice(index, 1);\n    };\n    this.promises.push(promise);\n    promise.then(remove).catch(remove);\n    return promise;\n  }\n}\n/**\n * Question answer format.\n */\n_class = CoreLoginSiteHelpComponent;\n_class.ɵfac = function CoreLoginSiteHelpComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-login-site-help\"]],\n  hostVars: 2,\n  hostBindings: function CoreLoginSiteHelpComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"hydrated\", ctx.hydrated);\n    }\n  },\n  decls: 17,\n  vars: 10,\n  consts: [[\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"fas-xmark\", \"aria-hidden\", \"true\"], [4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\"], [\"button\", \"\", \"role\", \"heading\", 1, \"ion-text-wrap\", \"divider\", 3, \"detail\", \"click\"], [\"name\", \"fas-chevron-right\", \"flip-rtl\", \"\", \"slot\", \"start\", \"aria-hidden\", \"true\", 1, \"expandable-status-icon\"], [3, \"id\", \"tabindex\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"text\", \"filter\", 4, \"ngIf\"], [3, \"text\", \"filter\"]],\n  template: function CoreLoginSiteHelpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\")(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"ion-buttons\", 0)(7, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function CoreLoginSiteHelpComponent_Template_ion_button_click_7_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelement(9, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"ion-content\")(11, \"ion-list\");\n      i0.ɵɵtemplate(12, CoreLoginSiteHelpComponent_ng_container_12_Template, 11, 16, \"ng-container\", 3);\n      i0.ɵɵelementStart(13, \"ion-item\")(14, \"ion-label\");\n      i0.ɵɵelement(15, \"p\", 4);\n      i0.ɵɵpipe(16, \"translate\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, \"core.login.help\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(8, 6, \"core.close\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(16, 8, \"core.login.faqmore\"), i0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreFaIconDirective, i3.CoreFormatTextDirective, i4.CoreContentDirective, i5.CoreUpdateNonReactiveAttributesDirective, i6.IonButton, i6.IonButtons, i6.IonContent, i6.IonHeader, i6.IonIcon, i6.IonItem, i6.IonLabel, i6.IonList, i6.IonTitle, i6.IonToolbar, i7.TranslatePipe],\n  styles: [\"[_nghost-%COMP%]   .core-login-faqwhatisurlanswer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-height: 50px;\\n}\\n[_nghost-%COMP%]   .core-login-faqwhereisqrcodeanswer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-height: 220px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n}\\n[_nghost-%COMP%]:not(.hydrated)   .core-login-site-help--answer[_ngcontent-%COMP%] {\\n  opacity: 0;\\n  max-width: 100%;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n.hydrated[_nghost-%COMP%]   .core-login-site-help--answer[_ngcontent-%COMP%] {\\n  height: 0;\\n  transition: height 200ms ease-in-out;\\n}\\n.hydrated[_nghost-%COMP%]   .core-login-site-help--answer.open[_ngcontent-%COMP%] {\\n  height: var(--height);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL2xvZ2luL2NvbXBvbmVudHMvc2l0ZS1oZWxwL3NpdGUtaGVscC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksZ0JBQUE7QUFEUjtBQUlJO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7QUFGUjtBQU9RO0VBQ0ksVUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0FBTFo7QUFZUTtFQUNJLFNBQUE7RUFDQSxvQ0FBQTtBQVZaO0FBWVk7RUFDSSxxQkFBQTtBQVZoQiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcblxuICAgIC5jb3JlLWxvZ2luLWZhcXdoYXRpc3VybGFuc3dlciBpbWcge1xuICAgICAgICBtYXgtaGVpZ2h0OiA1MHB4O1xuICAgIH1cblxuICAgIC5jb3JlLWxvZ2luLWZhcXdoZXJlaXNxcmNvZGVhbnN3ZXIgaW1nIHtcbiAgICAgICAgbWF4LWhlaWdodDogMjIwcHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgIH1cblxuICAgICY6bm90KC5oeWRyYXRlZCkge1xuXG4gICAgICAgIC5jb3JlLWxvZ2luLXNpdGUtaGVscC0tYW5zd2VyIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgJi5oeWRyYXRlZCB7XG5cbiAgICAgICAgLmNvcmUtbG9naW4tc2l0ZS1oZWxwLS1hbnN3ZXIge1xuICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IDIwMG1zIGVhc2UtaW4tb3V0O1xuXG4gICAgICAgICAgICAmLm9wZW4ge1xuICAgICAgICAgICAgICAgIGhlaWdodDogdmFyKC0taGVpZ2h0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nvar AnswerFormat;\n(function (AnswerFormat) {\n  AnswerFormat[\"Text\"] = \"text\";\n  AnswerFormat[\"SafeHTML\"] = \"safe-html\";\n  AnswerFormat[\"UnsafeHTML\"] = \"unsafe-html\";\n})(AnswerFormat || (AnswerFormat = {}));","map":{"version":3,"names":["CoreUtils","ModalController","Translate","FAQ_QRCODE_IMAGE_HTML","FAQ_URL_IMAGE_HTML","GET_STARTED_URL","CoreDomUtils","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","question_r1","answer","text","ɵɵelement","ɵɵproperty","ɵɵsanitizeHtml","ɵɵelementContainerStart","ɵɵlistener","CoreLoginSiteHelpComponent_ng_container_12_Template_ion_item_click_1_listener","restoredCtx","ɵɵrestoreView","_r9","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","toggle","ɵɵtemplate","CoreLoginSiteHelpComponent_ng_container_12_p_8_Template","CoreLoginSiteHelpComponent_ng_container_12_p_9_Template","CoreLoginSiteHelpComponent_ng_container_12_core_format_text_10_Template","ɵɵelementContainerEnd","ɵɵattribute","ctx_r0","isOpen","id","ɵɵclassProp","ɵɵclassMap","class","format","CoreLoginSiteHelpComponent","constructor","el","questions","hydrated","promises","getStartedTitle","instant","canScanQR","urlImageHtml","qrCodeImageHtml","setupLinkHtml","$image","AnswerFormat","SafeHTML","Text","$link","UnsafeHTML","question","_question$answer$clas","push","_objectSpread","length","ngAfterViewInit","_this","_asyncToGenerator","answers","Array","from","nativeElement","querySelectorAll","Promise","all","map","_ref","track","waitFor","clientHeight","waitForImages","style","setProperty","_x","apply","arguments","ngOnDestroy","forEach","promise","cancel","openQuestion","close","dismiss","remove","index","indexOf","splice","then","catch","_class","ɵɵdirectiveInject","ElementRef","selectors","hostVars","hostBindings","CoreLoginSiteHelpComponent_HostBindings","rf","ctx","CoreLoginSiteHelpComponent_Template_ion_button_click_7_listener","CoreLoginSiteHelpComponent_ng_container_12_Template","ɵɵpipeBind1"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/login/components/site-help/site-help.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/login/components/site-help/site-help.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\n\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { FAQ_QRCODE_IMAGE_HTML, FAQ_URL_IMAGE_HTML, GET_STARTED_URL } from '@features/login/constants';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCancellablePromise } from '@classes/cancellable-promise';\n\n/**\n * Component that displays help to connect to a site.\n */\n@Component({\n    selector: 'core-login-site-help',\n    templateUrl: 'site-help.html',\n    styleUrls: ['site-help.scss'],\n})\nexport class CoreLoginSiteHelpComponent implements AfterViewInit, OnDestroy {\n\n    openQuestion?: number;\n    questions: Question[] = [];\n    @HostBinding('class.hydrated') hydrated = false;\n\n    private promises: CoreCancellablePromise[] = [];\n\n    constructor(protected el: ElementRef<HTMLElement>) {\n        const getStartedTitle = Translate.instant('core.login.faqsetupsitelinktitle');\n        const canScanQR = CoreUtils.canScanQR();\n        const urlImageHtml = FAQ_URL_IMAGE_HTML;\n        const qrCodeImageHtml = FAQ_QRCODE_IMAGE_HTML;\n        const setupLinkHtml = `<a href=\"${GET_STARTED_URL}\" title=\"${getStartedTitle}\">${GET_STARTED_URL}</a>`;\n        const questions: Array<QuestionDefinition | false> = [\n            {\n                text: Translate.instant('core.login.faqwhatisurlquestion'),\n                answer: {\n                    text: Translate.instant('core.login.faqwhatisurlanswer', { $image: urlImageHtml }),\n                    format: AnswerFormat.SafeHTML,\n                    class: 'core-login-faqwhatisurlanswer',\n                },\n            },\n            {\n                text: Translate.instant('core.login.faqcannotfindmysitequestion'),\n                answer: {\n                    text: Translate.instant('core.login.faqcannotfindmysiteanswer'),\n                    format: AnswerFormat.Text,\n                },\n            },\n            {\n                text: Translate.instant('core.login.faqcantloginquestion'),\n                answer: {\n                    text: Translate.instant('core.login.faqcantloginanswer'),\n                    format: AnswerFormat.SafeHTML,\n                },\n            },\n            canScanQR && {\n                text: Translate.instant('core.login.faqwhereisqrcode'),\n                answer: {\n                    text: Translate.instant('core.login.faqwhereisqrcodeanswer', { $image: qrCodeImageHtml }),\n                    format: AnswerFormat.SafeHTML,\n                    class: 'core-login-faqwhereisqrcodeanswer',\n                },\n            },\n            {\n                text: Translate.instant('core.login.faqsetupsitequestion'),\n                answer: {\n                    text: Translate.instant('core.login.faqsetupsiteanswer', { $link: setupLinkHtml }),\n                    format: AnswerFormat.UnsafeHTML,\n                },\n            },\n            {\n                text: Translate.instant('core.login.faqtestappquestion'),\n                answer: {\n                    text: Translate.instant('core.login.faqtestappanswer'),\n                    format: AnswerFormat.SafeHTML,\n                },\n            },\n        ];\n\n        for (const question of questions) {\n            if (!question) {\n                continue;\n            }\n\n            this.questions.push({\n                ...question,\n                id: this.questions.length + 1,\n                answer: {\n                    ...question.answer,\n                    class: question.answer.class ?? '',\n                },\n            });\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        const answers = Array.from(this.el.nativeElement.querySelectorAll<HTMLElement>('.core-login-site-help--answer'));\n\n        await Promise.all(answers.map(async answer => {\n            await this.track(CoreUtils.waitFor(() => answer.clientHeight !== 0));\n            await this.track(CoreDomUtils.waitForImages(answer));\n\n            answer.style.setProperty('--height', `${answer.clientHeight}px`);\n        }));\n\n        this.hydrated = true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.promises.forEach(promise => promise.cancel());\n    }\n\n    /**\n     * Check whether the given question is open or not.\n     *\n     * @param question Question.\n     * @returns Whether the given question is open.\n     */\n    isOpen(question: Question): boolean {\n        return this.openQuestion === question.id;\n    }\n\n    /**\n     * Toggle question.\n     *\n     * @param question Question to toggle.\n     */\n    toggle(question: Question): void {\n        if (question.id === this.openQuestion) {\n            delete this.openQuestion;\n\n            return;\n        }\n\n        this.openQuestion = question.id;\n    }\n\n    /**\n     * Close help modal.\n     */\n    close(): void {\n        ModalController.dismiss();\n    }\n\n    /**\n     * Track a promise for cleanup.\n     *\n     * @param promise Cancellable promise.\n     * @returns The promise.\n     */\n    protected track<T>(promise: CoreCancellablePromise<T>): Promise<T>  {\n        const remove = () => {\n            const index = this.promises.indexOf(promise);\n\n            if (index === -1) {\n                return;\n            }\n\n            this.promises.splice(index, 1);\n        };\n\n        this.promises.push(promise);\n\n        promise.then(remove).catch(remove);\n\n        return promise;\n    }\n\n}\n\n/**\n * Question data.\n */\ninterface Question {\n    id: number;\n    text: string;\n    answer: Answer;\n}\n\n/**\n * Question answer.\n */\ninterface Answer {\n    text: string;\n    class: string;\n    format: AnswerFormat;\n}\n\n/**\n * Question answer format.\n */\nenum AnswerFormat {\n    Text = 'text',\n    SafeHTML = 'safe-html',\n    UnsafeHTML = 'unsafe-html',\n}\n\n/**\n * Question definition.\n */\ntype QuestionDefinition = Omit<Question, 'id' | 'answer'> & {\n    answer: Omit<Answer, 'class'> & Partial<Pick<Answer, 'class'>>;\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-title>\n            <h1>{{ 'core.login.help' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"close()\" [attr.aria-label]=\"'core.close' | translate\">\n                <ion-icon slot=\"icon-only\" name=\"fas-xmark\" aria-hidden=\"true\" />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-list>\n        <ng-container *ngFor=\"let question of questions\">\n            <ion-item button class=\"ion-text-wrap divider\" (click)=\"toggle(question)\" [attr.aria-expanded]=\"isOpen(question)\"\n                [attr.aria-controls]=\"'question-' + question.id + '-answer'\" role=\"heading\" [detail]=\"false\">\n                <ion-icon name=\"fas-chevron-right\" flip-rtl slot=\"start\" aria-hidden=\"true\" class=\"expandable-status-icon\"\n                    [class.expandable-status-icon-expanded]=\"isOpen(question)\" />\n                <ion-label>\n                    <h2>{{ question.text }}</h2>\n                </ion-label>\n            </ion-item>\n            <ion-item [id]=\"'question-' + question.id + '-answer'\"\n                [class]=\"question.answer.class + ' ion-text-wrap core-login-site-help--answer'\" [class.open]=\"isOpen(question)\"\n                [tabindex]=\"isOpen(question) ? null : -1\" [attr.inert]=\"isOpen(question) ? null : 'true'\">\n                <ion-label>\n                    <p *ngIf=\"question.answer.format === 'text'\">{{ question.answer.text }}</p>\n                    <p *ngIf=\"question.answer.format === 'safe-html'\" [innerHTML]=\"question.answer.text\"></p>\n                    <core-format-text *ngIf=\"question.answer.format === 'unsafe-html'\" [text]=\"question.answer.text\" [filter]=\"false\" />\n                </ion-label>\n            </ion-item>\n        </ng-container>\n        <ion-item>\n            <ion-label>\n                <p [innerHTML]=\"'core.login.faqmore' | translate\"></p>\n            </ion-label>\n        </ion-item>\n    </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}