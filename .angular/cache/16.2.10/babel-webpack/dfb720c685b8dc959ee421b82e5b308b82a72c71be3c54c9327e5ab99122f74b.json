{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { AddonNotificationsNotificationsSource } from '@addons/notifications/classes/notifications-source';\nimport { AddonNotificationsGetReadType } from '@addons/notifications/services/notifications';\n/**\n * Provides a list of notifications using legacy web services.\n */\nexport class AddonLegacyNotificationsNotificationsSource extends AddonNotificationsNotificationsSource {\n  /**\n   * @inheritdoc\n   */\n  loadPageItems(page) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let items = [];\n      let hasMoreItems = false;\n      let pageUnreadCount = 0;\n      const pageLength = _this.getPageLength();\n      const totalUnread = () => {\n        var _this$totals$AddonNot;\n        return (_this$totals$AddonNot = _this.totals[AddonNotificationsGetReadType.UNREAD]) !== null && _this$totals$AddonNot !== void 0 ? _this$totals$AddonNot : Number.MAX_VALUE;\n      };\n      // Load unread notifications first.\n      if (totalUnread() > page * pageLength) {\n        const pageResults = yield _this.loadNotifications(AddonNotificationsGetReadType.UNREAD, page * pageLength);\n        items = items.concat(pageResults.notifications);\n        hasMoreItems = pageResults.hasMoreNotifications;\n        pageUnreadCount = pageResults.notifications.length;\n      }\n      // If all unread notifications have been fetched, load read notifications first.\n      if (totalUnread() < (page + 1) * pageLength) {\n        const offset = Math.max(0, page * pageLength - totalUnread());\n        const pageResults = yield _this.loadNotifications(AddonNotificationsGetReadType.READ, offset, pageLength - pageUnreadCount);\n        items = items.concat(pageResults.notifications);\n        hasMoreItems = pageResults.hasMoreNotifications;\n      }\n      return {\n        items,\n        hasMoreItems\n      };\n    })();\n  }\n}","map":{"version":3,"names":["AddonNotificationsNotificationsSource","AddonNotificationsGetReadType","AddonLegacyNotificationsNotificationsSource","loadPageItems","page","_this","_asyncToGenerator","items","hasMoreItems","pageUnreadCount","pageLength","getPageLength","totalUnread","_this$totals$AddonNot","totals","UNREAD","Number","MAX_VALUE","pageResults","loadNotifications","concat","notifications","hasMoreNotifications","length","offset","Math","max","READ"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/notifications/classes/legacy-notifications-source.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonNotificationsNotificationsSource } from '@addons/notifications/classes/notifications-source';\nimport {\n    AddonNotificationsGetReadType,\n    AddonNotificationsNotificationMessageFormatted,\n} from '@addons/notifications/services/notifications';\n\n/**\n * Provides a list of notifications using legacy web services.\n */\nexport class AddonLegacyNotificationsNotificationsSource extends AddonNotificationsNotificationsSource {\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(page: number): Promise<{\n        items: AddonNotificationsNotificationMessageFormatted[];\n        hasMoreItems: boolean;\n    }> {\n        let items: AddonNotificationsNotificationMessageFormatted[] = [];\n        let hasMoreItems = false;\n        let pageUnreadCount = 0;\n        const pageLength = this.getPageLength();\n        const totalUnread = () => this.totals[AddonNotificationsGetReadType.UNREAD] ?? Number.MAX_VALUE;\n\n        // Load unread notifications first.\n        if (totalUnread() > page * pageLength) {\n            const pageResults = await this.loadNotifications(AddonNotificationsGetReadType.UNREAD, page * pageLength);\n\n            items = items.concat(pageResults.notifications);\n            hasMoreItems = pageResults.hasMoreNotifications;\n            pageUnreadCount = pageResults.notifications.length;\n        }\n\n        // If all unread notifications have been fetched, load read notifications first.\n        if (totalUnread() < (page + 1) * pageLength) {\n            const offset = Math.max(0, page * pageLength - totalUnread());\n            const pageResults = await this.loadNotifications(\n                AddonNotificationsGetReadType.READ,\n                offset,\n                pageLength - pageUnreadCount,\n            );\n\n            items = items.concat(pageResults.notifications);\n            hasMoreItems = pageResults.hasMoreNotifications;\n        }\n\n        return { items, hasMoreItems };\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,qCAAqC,QAAQ,oDAAoD;AAC1G,SACIC,6BAA6B,QAE1B,8CAA8C;AAErD;;;AAGA,OAAM,MAAOC,2CAA4C,SAAQF,qCAAqC;EAElG;;;EAGgBG,aAAaA,CAACC,IAAY;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAItC,IAAIC,KAAK,GAAqD,EAAE;MAChE,IAAIC,YAAY,GAAG,KAAK;MACxB,IAAIC,eAAe,GAAG,CAAC;MACvB,MAAMC,UAAU,GAAGL,KAAI,CAACM,aAAa,EAAE;MACvC,MAAMC,WAAW,GAAGA,CAAA;QAAA,IAAAC,qBAAA;QAAA,QAAAA,qBAAA,GAAMR,KAAI,CAACS,MAAM,CAACb,6BAA6B,CAACc,MAAM,CAAC,cAAAF,qBAAA,cAAAA,qBAAA,GAAIG,MAAM,CAACC,SAAS;MAAA;MAE/F;MACA,IAAIL,WAAW,EAAE,GAAGR,IAAI,GAAGM,UAAU,EAAE;QACnC,MAAMQ,WAAW,SAASb,KAAI,CAACc,iBAAiB,CAAClB,6BAA6B,CAACc,MAAM,EAAEX,IAAI,GAAGM,UAAU,CAAC;QAEzGH,KAAK,GAAGA,KAAK,CAACa,MAAM,CAACF,WAAW,CAACG,aAAa,CAAC;QAC/Cb,YAAY,GAAGU,WAAW,CAACI,oBAAoB;QAC/Cb,eAAe,GAAGS,WAAW,CAACG,aAAa,CAACE,MAAM;;MAGtD;MACA,IAAIX,WAAW,EAAE,GAAG,CAACR,IAAI,GAAG,CAAC,IAAIM,UAAU,EAAE;QACzC,MAAMc,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEtB,IAAI,GAAGM,UAAU,GAAGE,WAAW,EAAE,CAAC;QAC7D,MAAMM,WAAW,SAASb,KAAI,CAACc,iBAAiB,CAC5ClB,6BAA6B,CAAC0B,IAAI,EAClCH,MAAM,EACNd,UAAU,GAAGD,eAAe,CAC/B;QAEDF,KAAK,GAAGA,KAAK,CAACa,MAAM,CAACF,WAAW,CAACG,aAAa,CAAC;QAC/Cb,YAAY,GAAGU,WAAW,CAACI,oBAAoB;;MAGnD,OAAO;QAAEf,KAAK;QAAEC;MAAY,CAAE;IAAC;EACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}