{"ast":null,"code":"var _class;\nimport { CoreDelegate } from '@classes/delegate';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Delegate to register processors (message/output) to be used in places like notification preferences.\n */\nexport class AddonMessageOutputDelegateService extends CoreDelegate {\n  constructor() {\n    super('AddonMessageOutputDelegate', true);\n    this.handlerNameProperty = 'processorName';\n  }\n  /**\n   * Get the display data of the handler.\n   *\n   * @param processor The processor object.\n   * @returns Data.\n   */\n  getDisplayData(processor) {\n    return this.executeFunctionOnEnabled(processor.name, 'getDisplayData', [processor]);\n  }\n}\n_class = AddonMessageOutputDelegateService;\n_class.ɵfac = function AddonMessageOutputDelegateService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonMessageOutputDelegate = makeSingleton(AddonMessageOutputDelegateService);","map":{"version":3,"names":["CoreDelegate","makeSingleton","AddonMessageOutputDelegateService","constructor","handlerNameProperty","getDisplayData","processor","executeFunctionOnEnabled","name","factory","ɵfac","providedIn","AddonMessageOutputDelegate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messageoutput/services/messageoutput-delegate.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\n\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Interface that all message output handlers must implement.\n */\nexport interface AddonMessageOutputHandler extends CoreDelegateHandler {\n    /**\n     * The name of the processor. E.g. 'airnotifier'.\n     */\n    processorName: string;\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @param processor The processor object.\n     * @returns Data.\n     */\n    getDisplayData(processor: Record<string, unknown>): AddonMessageOutputHandlerData;\n}\n\n/**\n * Data needed to render a message output handler. It's returned by the handler.\n */\nexport interface AddonMessageOutputHandlerData {\n    /**\n     * Handler's priority.\n     */\n    priority: number;\n\n    /**\n     * Name of the page to load for the handler.\n     */\n    page: string;\n\n    /**\n     * Label to display for the handler.\n     */\n    label: string;\n\n    /**\n     * Name of the icon to display for the handler.\n     */\n    icon: string;\n\n    /**\n     * Params to pass to the page.\n     */\n    pageParams?: Params;\n}\n\n/**\n * Delegate to register processors (message/output) to be used in places like notification preferences.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonMessageOutputDelegateService extends CoreDelegate<AddonMessageOutputHandler> {\n\n    protected handlerNameProperty = 'processorName';\n\n    constructor() {\n        super('AddonMessageOutputDelegate', true);\n    }\n\n    /**\n     * Get the display data of the handler.\n     *\n     * @param processor The processor object.\n     * @returns Data.\n     */\n    getDisplayData(processor: Record<string, unknown>): AddonMessageOutputHandlerData | undefined {\n        return this.executeFunctionOnEnabled(<string> processor.name, 'getDisplayData', [processor]);\n    }\n\n}\n\nexport const AddonMessageOutputDelegate = makeSingleton(AddonMessageOutputDelegateService);\n"],"mappings":";AAiBA,SAASA,YAAY,QAA6B,mBAAmB;AACrE,SAASC,aAAa,QAAQ,aAAa;;AAkD3C;;;AAIA,OAAM,MAAOC,iCAAkC,SAAQF,YAAuC;EAI1FG,YAAA;IACI,KAAK,CAAC,4BAA4B,EAAE,IAAI,CAAC;IAHnC,KAAAC,mBAAmB,GAAG,eAAe;EAI/C;EAEA;;;;;;EAMAC,cAAcA,CAACC,SAAkC;IAC7C,OAAO,IAAI,CAACC,wBAAwB,CAAUD,SAAS,CAACE,IAAI,EAAE,gBAAgB,EAAE,CAACF,SAAS,CAAC,CAAC;EAChG;;SAhBSJ,iCAAkC;;mBAAlCA,MAAiC;AAAA;;SAAjCA,MAAiC;EAAAO,OAAA,EAAjCP,MAAiC,CAAAQ,IAAA;EAAAC,UAAA,EADpB;AAAM;AAqBhC,OAAO,MAAMC,0BAA0B,GAAGX,aAAa,CAACC,iCAAiC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}