{"ast":null,"code":"var _class;\nimport { CoreBlockOnlyTitleComponent } from '@features/block/components/only-title-block/only-title-block';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Block handler.\n */\nexport class AddonBlockCommentsHandlerService extends CoreBlockBaseHandler {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonBlockComments';\n    this.blockName = 'comments';\n  }\n  /**\n   * Returns the data needed to render the block.\n   *\n   * @param block The block to render.\n   * @param contextLevel The context where the block will be used.\n   * @param instanceId The instance ID associated with the context level.\n   * @returns Data or promise resolved with the data.\n   */\n  getDisplayData(block, contextLevel, instanceId) {\n    return {\n      title: 'addon.block_comments.pluginname',\n      class: 'addon-block-comments',\n      component: CoreBlockOnlyTitleComponent,\n      link: 'comments/' + contextLevel + '/' + instanceId + '/block_comments/0',\n      linkParams: {\n        area: 'page_comments'\n      }\n    };\n  }\n}\n_class = AddonBlockCommentsHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonBlockCommentsHandlerService_BaseFactory;\n  return function AddonBlockCommentsHandlerService_Factory(t) {\n    return (ɵAddonBlockCommentsHandlerService_BaseFactory || (ɵAddonBlockCommentsHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonBlockCommentsHandler = makeSingleton(AddonBlockCommentsHandlerService);","map":{"version":3,"names":["CoreBlockOnlyTitleComponent","CoreBlockBaseHandler","makeSingleton","AddonBlockCommentsHandlerService","constructor","name","blockName","getDisplayData","block","contextLevel","instanceId","title","class","component","link","linkParams","area","t","factory","ɵfac","providedIn","AddonBlockCommentsHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/comments/services/block-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreBlockHandlerData } from '@features/block/services/block-delegate';\nimport { CoreBlockOnlyTitleComponent } from '@features/block/components/only-title-block/only-title-block';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { CoreCourseBlock } from '@features/course/services/course';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Block handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonBlockCommentsHandlerService extends CoreBlockBaseHandler {\n\n    name = 'AddonBlockComments';\n    blockName = 'comments';\n\n    /**\n     * Returns the data needed to render the block.\n     *\n     * @param block The block to render.\n     * @param contextLevel The context where the block will be used.\n     * @param instanceId The instance ID associated with the context level.\n     * @returns Data or promise resolved with the data.\n     */\n    getDisplayData(block: CoreCourseBlock, contextLevel: string, instanceId: number): CoreBlockHandlerData {\n        return {\n            title: 'addon.block_comments.pluginname',\n            class: 'addon-block-comments',\n            component: CoreBlockOnlyTitleComponent,\n            link: 'comments/' + contextLevel + '/' + instanceId + '/block_comments/0',\n            linkParams: {\n                area: 'page_comments',\n            },\n        };\n    }\n\n}\n\nexport const AddonBlockCommentsHandler = makeSingleton(AddonBlockCommentsHandlerService);\n"],"mappings":";AAgBA,SAASA,2BAA2B,QAAQ,8DAA8D;AAC1G,SAASC,oBAAoB,QAAQ,4CAA4C;AAEjF,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,gCAAiC,SAAQF,oBAAoB;EAD1EG,YAAA;;IAGI,KAAAC,IAAI,GAAG,oBAAoB;IAC3B,KAAAC,SAAS,GAAG,UAAU;;EAEtB;;;;;;;;EAQAC,cAAcA,CAACC,KAAsB,EAAEC,YAAoB,EAAEC,UAAkB;IAC3E,OAAO;MACHC,KAAK,EAAE,iCAAiC;MACxCC,KAAK,EAAE,sBAAsB;MAC7BC,SAAS,EAAEb,2BAA2B;MACtCc,IAAI,EAAE,WAAW,GAAGL,YAAY,GAAG,GAAG,GAAGC,UAAU,GAAG,mBAAmB;MACzEK,UAAU,EAAE;QACRC,IAAI,EAAE;;KAEb;EACL;;SAvBSb,gCAAiC;;;;uIAAjCA,MAAgC,IAAAc,CAAA,IAAhCd,MAAgC;EAAA;AAAA;;SAAhCA,MAAgC;EAAAe,OAAA,EAAhCf,MAAgC,CAAAgB,IAAA;EAAAC,UAAA,EADnB;AAAM;AA4BhC,OAAO,MAAMC,yBAAyB,GAAGnB,aAAa,CAACC,gCAAgC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}