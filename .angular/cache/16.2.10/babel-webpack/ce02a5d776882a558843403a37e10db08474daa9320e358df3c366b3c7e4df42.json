{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Router } from '@singletons';\nimport { CoreLoginHelper } from '../services/login-helper';\n/**\n * Guard to check if the user has any sites stored.\n *\n * @returns True if user has sites, redirect route otherwise.\n */\nexport const hasSitesGuard = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    const sites = yield CoreUtils.ignoreErrors(CoreSites.getSites(), []);\n    if (sites.length > 0) {\n      return true;\n    }\n    const [path, params] = yield CoreLoginHelper.getAddSiteRouteInfo();\n    const route = Router.parseUrl(path);\n    route.queryParams = params;\n    return route;\n  });\n  return function hasSitesGuard() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["CoreSites","CoreUtils","Router","CoreLoginHelper","hasSitesGuard","_ref","_asyncToGenerator","sites","ignoreErrors","getSites","length","path","params","getAddSiteRouteInfo","route","parseUrl","queryParams","apply","arguments"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/login/guards/has-sites.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CanActivateFn } from '@angular/router';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Router } from '@singletons';\nimport { CoreLoginHelper } from '../services/login-helper';\n\n/**\n * Guard to check if the user has any sites stored.\n *\n * @returns True if user has sites, redirect route otherwise.\n */\nexport const hasSitesGuard: CanActivateFn = async () => {\n    const sites = await CoreUtils.ignoreErrors(CoreSites.getSites(), []);\n\n    if (sites.length > 0) {\n        return true;\n    }\n\n    const [path, params] = await CoreLoginHelper.getAddSiteRouteInfo();\n    const route = Router.parseUrl(path);\n\n    route.queryParams = params;\n\n    return route;\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,eAAe,QAAQ,0BAA0B;AAE1D;;;;;AAKA,OAAO,MAAMC,aAAa;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAkB,aAAW;IACnD,MAAMC,KAAK,SAASN,SAAS,CAACO,YAAY,CAACR,SAAS,CAACS,QAAQ,EAAE,EAAE,EAAE,CAAC;IAEpE,IAAIF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MAClB,OAAO,IAAI;;IAGf,MAAM,CAACC,IAAI,EAAEC,MAAM,CAAC,SAAST,eAAe,CAACU,mBAAmB,EAAE;IAClE,MAAMC,KAAK,GAAGZ,MAAM,CAACa,QAAQ,CAACJ,IAAI,CAAC;IAEnCG,KAAK,CAACE,WAAW,GAAGJ,MAAM;IAE1B,OAAOE,KAAK;EAChB,CAAC;EAAA,gBAbYV,aAAaA,CAAA;IAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;EAAA;AAAA,GAazB"},"metadata":{},"sourceType":"module","externalDependencies":[]}