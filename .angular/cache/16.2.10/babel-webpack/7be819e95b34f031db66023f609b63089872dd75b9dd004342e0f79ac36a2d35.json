{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreConstants } from '@/core/constants';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreConfig } from '@services/config';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreNetwork } from '@services/network';\nimport { CoreNavigator } from '@services/navigator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/button-with-spinner/button-with-spinner\";\nimport * as i3 from \"../../../../components/loading/loading\";\nimport * as i4 from \"../../../../components/navbar-buttons/navbar-buttons\";\nimport * as i5 from \"../../../../components/sites-list/sites-list\";\nimport * as i6 from \"../../../../directives/fa-icon\";\nimport * as i7 from \"../../../../directives/content\";\nimport * as i8 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@ionic/angular\";\nimport * as i11 from \"@ngx-translate/core\";\nfunction CoreSettingsSynchronizationPage_ion_card_28_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.connectwifitosync\"), \"\");\n  }\n}\nfunction CoreSettingsSynchronizationPage_ion_card_28_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.connecttosync\"));\n  }\n}\nfunction CoreSettingsSynchronizationPage_ion_card_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 12)(1, \"ion-item\", 7);\n    i0.ɵɵelement(2, \"ion-icon\", 13);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtemplate(4, CoreSettingsSynchronizationPage_ion_card_28_ng_container_4_Template, 3, 3, \"ng-container\", 11);\n    i0.ɵɵtemplate(5, CoreSettingsSynchronizationPage_ion_card_28_ng_container_5_Template, 3, 3, \"ng-container\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isOnline && ctx_r0.dataSaver && ctx_r0.limitedConnection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isOnline);\n  }\n}\nfunction CoreSettingsSynchronizationPage_ng_container_29_ng_template_7_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.logintosync\"));\n  }\n}\nfunction CoreSettingsSynchronizationPage_ng_container_29_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CoreSettingsSynchronizationPage_ng_container_29_ng_template_7_p_0_Template, 3, 3, \"p\", 17);\n  }\n  if (rf & 2) {\n    const site_r8 = ctx.site;\n    i0.ɵɵproperty(\"ngIf\", site_r8.loggedOut);\n  }\n}\nfunction CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_core_button_with_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-button-with-spinner\", 21)(1, \"ion-button\", 22);\n    i0.ɵɵlistener(\"click\", function CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_core_button_with_spinner_0_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const site_r10 = i0.ɵɵnextContext().site;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.synchronize(site_r10.id));\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 23);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const site_r10 = i0.ɵɵnextContext().site;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"loading\", ctx_r11.isSynchronizing(site_r10.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 2, \"core.settings.synchronizenow\"));\n  }\n}\nfunction CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_ion_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 24);\n    i0.ɵɵlistener(\"click\", function CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_ion_button_1_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const site_r10 = i0.ɵɵnextContext().site;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.login(site_r10.id));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"core.login.login\"));\n  }\n}\nfunction CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_core_button_with_spinner_0_Template, 4, 4, \"core-button-with-spinner\", 19);\n    i0.ɵɵtemplate(1, CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_ion_button_1_Template, 3, 3, \"ion-button\", 20);\n  }\n  if (rf & 2) {\n    const site_r10 = ctx.site;\n    i0.ɵɵproperty(\"ngIf\", !site_r10.loggedOut);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", site_r10.loggedOut);\n  }\n}\nfunction CoreSettingsSynchronizationPage_ng_container_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\")(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"core-sites-list\", 14);\n    i0.ɵɵtemplate(7, CoreSettingsSynchronizationPage_ng_container_29_ng_template_7_Template, 1, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(9, CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_Template, 2, 2, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, \"core.accounts\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"accountsList\", ctx_r1.accountsList);\n  }\n}\n/**\n * Page that displays the synchronization settings.\n */\nexport class CoreSettingsSynchronizationPage {\n  constructor() {\n    var _this = this;\n    this.accountsList = {\n      sameSite: [],\n      otherSites: [],\n      count: 0\n    };\n    this.sitesLoaded = false;\n    this.dataSaver = false;\n    this.limitedConnection = false;\n    this.isOnline = true;\n    this.isDestroyed = false;\n    this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        var _this$accountsList$cu;\n        const siteId = data.siteId;\n        let siteEntry = siteId === ((_this$accountsList$cu = _this.accountsList.currentSite) === null || _this$accountsList$cu === void 0 ? void 0 : _this$accountsList$cu.id) ? _this.accountsList.currentSite : undefined;\n        if (!siteEntry) {\n          siteEntry = _this.accountsList.sameSite.find(siteEntry => siteEntry.id === siteId);\n        }\n        if (!siteEntry) {\n          _this.accountsList.otherSites.some(sites => {\n            siteEntry = sites.find(siteEntry => siteEntry.id === siteId);\n            return siteEntry;\n          });\n        }\n        if (!siteEntry) {\n          return;\n        }\n        const site = yield CoreSites.getSite(siteId);\n        const siteInfo = site.getInfo();\n        siteEntry.siteName = yield site.getSiteName();\n        if (siteInfo) {\n          siteEntry.siteUrl = siteInfo.siteurl;\n          siteEntry.fullname = siteInfo.fullname;\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this.isOnline = CoreNetwork.isOnline();\n    this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n    this.networkObserver = CoreNetwork.onChange().subscribe(() => {\n      // Execute the callback in the Angular zone, so change detection doesn't stop working.\n      NgZone.run(() => {\n        this.isOnline = CoreNetwork.isOnline();\n        this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n      });\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.accountsList = yield CoreLoginHelper.getAccountsList();\n      } catch (_unused) {\n        // Ignore errors.\n      }\n      _this2.sitesLoaded = true;\n      _this2.dataSaver = yield CoreConfig.get(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, true);\n    })();\n  }\n  /**\n   * Called when sync only on wifi setting is enabled or disabled.\n   */\n  syncOnlyOnWifiChanged() {\n    CoreConfig.set(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, this.dataSaver ? 1 : 0);\n  }\n  /**\n   * Synchronizes a site.\n   *\n   * @param siteId Site ID.\n   */\n  synchronize(siteId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // Using syncOnlyOnWifi false to force manual sync.\n      try {\n        yield CoreSettingsHelper.synchronizeSite(false, siteId);\n      } catch (error) {\n        if (_this3.isDestroyed) {\n          return;\n        }\n        CoreDomUtils.showErrorModalDefault(error, 'core.settings.sitesyncfailed', true);\n      }\n    })();\n  }\n  /**\n   * Changes site.\n   *\n   * @param siteId Site ID.\n   */\n  login(siteId) {\n    return _asyncToGenerator(function* () {\n      // This navigation will logout and navigate to the site home.\n      yield CoreNavigator.navigateToSiteHome({\n        preferCurrentTab: false,\n        siteId\n      });\n    })();\n  }\n  /**\n   * Returns true if site is beeing synchronized.\n   *\n   * @param siteId Site ID.\n   * @returns True if site is beeing synchronized, false otherwise.\n   */\n  isSynchronizing(siteId) {\n    return !!CoreSettingsHelper.getSiteSyncPromise(siteId);\n  }\n  /**\n   * Show information about sync actions.\n   */\n  showInfo() {\n    CoreDomUtils.showAlert(Translate.instant('core.help'), Translate.instant('core.settings.synchronizenowhelp'));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.isDestroyed = true;\n    this.sitesObserver.off();\n    this.networkObserver.unsubscribe();\n  }\n}\n_class = CoreSettingsSynchronizationPage;\n_class.ɵfac = function CoreSettingsSynchronizationPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-app-settings-synchronization\"]],\n  decls: 30,\n  vars: 19,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [3, \"click\"], [\"name\", \"fas-circle-info\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [1, \"limited-width\"], [3, \"hideUntil\"], [1, \"ion-text-wrap\"], [1, \"item-heading\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"core-warning-card\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"core-warning-card\"], [\"name\", \"fas-triangle-exclamation\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [3, \"accountsList\"], [\"siteLabel\", \"\"], [\"siteItem\", \"\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"], [\"slot\", \"end\", 3, \"loading\", 4, \"ngIf\"], [\"fill\", \"clear\", \"slot\", \"end\", 3, \"click\", 4, \"ngIf\"], [\"slot\", \"end\", 3, \"loading\"], [\"fill\", \"clear\", 3, \"click\"], [\"name\", \"fas-rotate\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"fill\", \"clear\", \"slot\", \"end\", 3, \"click\"], [\"name\", \"fas-right-to-bracket\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"]],\n  template: function CoreSettingsSynchronizationPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-buttons\", 2)(10, \"core-navbar-buttons\")(11, \"ion-button\", 3);\n      i0.ɵɵlistener(\"click\", function CoreSettingsSynchronizationPage_Template_ion_button_click_11_listener() {\n        return ctx.showInfo();\n      });\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelement(13, \"ion-icon\", 4);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(14, \"ion-content\", 5)(15, \"core-loading\", 6)(16, \"ion-list\", 5)(17, \"ion-item-divider\")(18, \"ion-label\")(19, \"h2\");\n      i0.ɵɵtext(20);\n      i0.ɵɵpipe(21, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"ion-item\", 7)(23, \"ion-label\")(24, \"p\", 8);\n      i0.ɵɵtext(25);\n      i0.ɵɵpipe(26, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"ion-toggle\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CoreSettingsSynchronizationPage_Template_ion_toggle_ngModelChange_27_listener($event) {\n        return ctx.dataSaver = $event;\n      })(\"ngModelChange\", function CoreSettingsSynchronizationPage_Template_ion_toggle_ngModelChange_27_listener() {\n        return ctx.syncOnlyOnWifiChanged();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, CoreSettingsSynchronizationPage_ion_card_28_Template, 6, 2, \"ion-card\", 10);\n      i0.ɵɵtemplate(29, CoreSettingsSynchronizationPage_ng_container_29_Template, 11, 4, \"ng-container\", 11);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 9, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 11, \"core.settings.synchronization\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(12, 13, \"core.info\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"hideUntil\", ctx.sitesLoaded);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 15, \"core.settings.syncsettings\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(26, 17, \"core.settings.syncdatasaver\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.dataSaver);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isOnline || ctx.dataSaver && ctx.limitedConnection);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isOnline && (!ctx.dataSaver || !ctx.limitedConnection));\n    }\n  },\n  dependencies: [i1.NgIf, i2.CoreButtonWithSpinnerComponent, i3.CoreLoadingComponent, i4.CoreNavBarButtonsComponent, i5.CoreSitesListComponent, i6.CoreFaIconDirective, i7.CoreContentDirective, i8.CoreUpdateNonReactiveAttributesDirective, i9.NgControlStatus, i9.NgModel, i10.IonButton, i10.IonButtons, i10.IonCard, i10.IonContent, i10.IonHeader, i10.IonIcon, i10.IonItem, i10.IonItemDivider, i10.IonLabel, i10.IonList, i10.IonTitle, i10.IonToggle, i10.IonToolbar, i10.BooleanValueAccessor, i10.IonBackButton, i11.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreConstants","CoreEvents","CoreSites","CoreDomUtils","CoreConfig","CoreSettingsHelper","NgZone","Translate","CoreLoginHelper","CoreNetwork","CoreNavigator","i0","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","ɵɵelementStart","ɵɵelement","ɵɵtemplate","CoreSettingsSynchronizationPage_ion_card_28_ng_container_4_Template","CoreSettingsSynchronizationPage_ion_card_28_ng_container_5_Template","ɵɵelementEnd","ɵɵproperty","ctx_r0","isOnline","dataSaver","limitedConnection","CoreSettingsSynchronizationPage_ng_container_29_ng_template_7_p_0_Template","site_r8","loggedOut","ɵɵlistener","CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_core_button_with_spinner_0_Template_ion_button_click_1_listener","ɵɵrestoreView","_r15","site_r10","ɵɵnextContext","site","ctx_r13","ɵɵresetView","synchronize","id","ctx_r11","isSynchronizing","ɵɵattribute","CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_ion_button_1_Template_ion_button_click_0_listener","_r19","ctx_r17","login","CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_core_button_with_spinner_0_Template","CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_ion_button_1_Template","CoreSettingsSynchronizationPage_ng_container_29_ng_template_7_Template","ɵɵtemplateRefExtractor","CoreSettingsSynchronizationPage_ng_container_29_ng_template_9_Template","ctx_r1","accountsList","CoreSettingsSynchronizationPage","constructor","_this","sameSite","otherSites","count","sitesLoaded","isDestroyed","sitesObserver","on","SITE_UPDATED","_ref","_asyncToGenerator","data","_this$accountsList$cu","siteId","siteEntry","currentSite","undefined","find","some","sites","getSite","siteInfo","getInfo","siteName","getSiteName","siteUrl","siteurl","fullname","_x","apply","arguments","isNetworkAccessLimited","networkObserver","onChange","subscribe","run","ngOnInit","_this2","getAccountsList","_unused","get","SETTINGS_SYNC_ONLY_ON_WIFI","syncOnlyOnWifiChanged","set","_this3","synchronizeSite","error","showErrorModalDefault","navigateToSiteHome","preferCurrentTab","getSiteSyncPromise","showInfo","showAlert","instant","ngOnDestroy","off","unsubscribe","selectors","decls","vars","consts","template","CoreSettingsSynchronizationPage_Template","rf","ctx","CoreSettingsSynchronizationPage_Template_ion_button_click_11_listener","CoreSettingsSynchronizationPage_Template_ion_toggle_ngModelChange_27_listener","$event","CoreSettingsSynchronizationPage_ion_card_28_Template","CoreSettingsSynchronizationPage_ng_container_29_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/pages/synchronization/synchronization.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/pages/synchronization/synchronization.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { CoreConstants } from '@/core/constants';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreConfig } from '@services/config';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreAccountsList, CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreNetwork } from '@services/network';\nimport { Subscription } from 'rxjs';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays the synchronization settings.\n */\n@Component({\n    selector: 'page-core-app-settings-synchronization',\n    templateUrl: 'synchronization.html',\n})\nexport class CoreSettingsSynchronizationPage implements OnInit, OnDestroy {\n\n    accountsList: CoreAccountsList = {\n        sameSite: [],\n        otherSites: [],\n        count: 0,\n    };\n\n    sitesLoaded = false;\n    dataSaver = false;\n    limitedConnection = false;\n    isOnline = true;\n\n    protected isDestroyed = false;\n    protected sitesObserver: CoreEventObserver;\n    protected networkObserver: Subscription;\n\n    constructor() {\n\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, async (data) => {\n            const siteId = data.siteId;\n\n            let siteEntry = siteId === this.accountsList.currentSite?.id\n                ? this.accountsList.currentSite\n                : undefined;\n\n            if (!siteEntry) {\n                siteEntry = this.accountsList.sameSite.find((siteEntry) => siteEntry.id === siteId);\n            }\n\n            if (!siteEntry) {\n                this.accountsList.otherSites.some((sites) => {\n                    siteEntry = sites.find((siteEntry) => siteEntry.id === siteId);\n\n                    return siteEntry;\n                });\n            }\n\n            if (!siteEntry) {\n                return;\n            }\n\n            const site = await CoreSites.getSite(siteId);\n\n            const siteInfo = site.getInfo();\n\n            siteEntry.siteName = await site.getSiteName();\n\n            if (siteInfo) {\n                siteEntry.siteUrl = siteInfo.siteurl;\n                siteEntry.fullname = siteInfo.fullname;\n            }\n        });\n\n        this.isOnline = CoreNetwork.isOnline();\n        this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n\n        this.networkObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n                this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n            });\n        });\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.accountsList = await CoreLoginHelper.getAccountsList();\n        } catch {\n            // Ignore errors.\n        }\n\n        this.sitesLoaded = true;\n\n        this.dataSaver = await CoreConfig.get(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, true);\n    }\n\n    /**\n     * Called when sync only on wifi setting is enabled or disabled.\n     */\n    syncOnlyOnWifiChanged(): void {\n        CoreConfig.set(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, this.dataSaver ? 1 : 0);\n    }\n\n    /**\n     * Synchronizes a site.\n     *\n     * @param siteId Site ID.\n     */\n    async synchronize(siteId: string): Promise<void> {\n        // Using syncOnlyOnWifi false to force manual sync.\n        try {\n            await CoreSettingsHelper.synchronizeSite(false, siteId);\n        } catch (error) {\n            if (this.isDestroyed) {\n                return;\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.settings.sitesyncfailed', true);\n        }\n    }\n\n    /**\n     * Changes site.\n     *\n     * @param siteId Site ID.\n     */\n    async login(siteId: string): Promise<void> {\n        // This navigation will logout and navigate to the site home.\n        await CoreNavigator.navigateToSiteHome({ preferCurrentTab: false , siteId });\n    }\n\n    /**\n     * Returns true if site is beeing synchronized.\n     *\n     * @param siteId Site ID.\n     * @returns True if site is beeing synchronized, false otherwise.\n     */\n    isSynchronizing(siteId: string): boolean {\n        return !!CoreSettingsHelper.getSiteSyncPromise(siteId);\n    }\n\n    /**\n     * Show information about sync actions.\n     */\n    showInfo(): void {\n        CoreDomUtils.showAlert(\n            Translate.instant('core.help'),\n            Translate.instant('core.settings.synchronizenowhelp'),\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.sitesObserver.off();\n        this.networkObserver.unsubscribe();\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'core.settings.synchronization' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <core-navbar-buttons>\n                <ion-button (click)=\"showInfo()\" [attr.aria-label]=\"'core.info' | translate\">\n                    <ion-icon name=\"fas-circle-info\" slot=\"icon-only\" aria-hidden=\"true\" />\n                </ion-button>\n            </core-navbar-buttons>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <core-loading [hideUntil]=\"sitesLoaded\">\n        <ion-list class=\"limited-width\">\n            <ion-item-divider>\n                <ion-label>\n                    <h2>{{ 'core.settings.syncsettings' | translate }}</h2>\n                </ion-label>\n            </ion-item-divider>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <p class=\"item-heading\">\n                        {{ 'core.settings.syncdatasaver' | translate }}\n                    </p>\n                </ion-label>\n                <ion-toggle slot=\"end\" [(ngModel)]=\"dataSaver\" (ngModelChange)=\"syncOnlyOnWifiChanged()\" />\n            </ion-item>\n\n            <ion-card class=\"core-warning-card\" *ngIf=\"!isOnline || (dataSaver && limitedConnection)\">\n                <ion-item class=\"ion-text-wrap\">\n                    <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n                    <ion-label>\n                        <ng-container *ngIf=\"isOnline && dataSaver && limitedConnection\">\n                            {{ 'core.settings.connectwifitosync' | translate }}</ng-container>\n                        <ng-container *ngIf=\"!isOnline\">{{ 'core.settings.connecttosync' | translate }}</ng-container>\n                    </ion-label>\n                </ion-item>\n            </ion-card>\n\n            <ng-container *ngIf=\"isOnline && (!dataSaver || !limitedConnection)\">\n                <ion-item-divider>\n                    <ion-label>\n                        <h2>{{ 'core.accounts' | translate }}</h2>\n                    </ion-label>\n                </ion-item-divider>\n\n                <core-sites-list [accountsList]=\"accountsList\">\n                    <ng-template #siteLabel let-site=\"site\">\n                        <p class=\"text-danger\" *ngIf=\"site.loggedOut\">{{ 'core.settings.logintosync' | translate }}</p>\n                    </ng-template>\n\n                    <ng-template #siteItem let-site=\"site\">\n                        <core-button-with-spinner [loading]=\"isSynchronizing(site.id)\" slot=\"end\" *ngIf=\"!site.loggedOut\">\n                            <ion-button fill=\"clear\" (click)=\"synchronize(site.id)\"\n                                [attr.aria-label]=\"'core.settings.synchronizenow' | translate\">\n                                <ion-icon name=\"fas-rotate\" slot=\"icon-only\" aria-hidden=\"true\" />\n                            </ion-button>\n                        </core-button-with-spinner>\n                        <ion-button fill=\"clear\" (click)=\"login(site.id)\" [attr.aria-label]=\"'core.login.login' | translate\"\n                            *ngIf=\"site.loggedOut\" slot=\"end\">\n                            <ion-icon name=\"fas-right-to-bracket\" slot=\"icon-only\" aria-hidden=\"true\" />\n                        </ion-button>\n                    </ng-template>\n                </core-sites-list>\n            </ng-container>\n        </ion-list>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}