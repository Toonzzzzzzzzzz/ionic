{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreError } from '@classes/errors/error';\nimport { CoreInMemoryDatabaseTable } from './inmemory-database-table';\n/**\n * Wrapper used to improve performance by caching records that are used often for faster read operations.\n *\n * This implementation works best for tables that have a lot of records and are read often; for tables with a few records use\n * CoreEagerDatabaseTable instead.\n */\nexport class CoreLazyDatabaseTable extends CoreInMemoryDatabaseTable {\n  constructor() {\n    super(...arguments);\n    this.DEFAULT_CACHE_LIFETIME = 60000;\n    this.records = {};\n  }\n  /**\n   * @inheritdoc\n   */\n  initialize() {\n    var _superprop_getInitialize = () => super.initialize,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$config$lazyCach;\n      yield _superprop_getInitialize().call(_this);\n      _this.interval = window.setInterval(() => _this.records = {}, (_this$config$lazyCach = _this.config.lazyCacheLifetime) !== null && _this$config$lazyCach !== void 0 ? _this$config$lazyCach : _this.DEFAULT_CACHE_LIFETIME);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  destroy() {\n    var _superprop_getDestroy = () => super.destroy,\n      _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getDestroy().call(_this2);\n      _this2.interval && window.clearInterval(_this2.interval);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  matchesConfig(config) {\n    var _this$config$lazyCach2, _config$lazyCacheLife;\n    const thisCacheLifetime = (_this$config$lazyCach2 = this.config.lazyCacheLifetime) !== null && _this$config$lazyCach2 !== void 0 ? _this$config$lazyCach2 : this.DEFAULT_CACHE_LIFETIME;\n    const otherCacheLifetime = (_config$lazyCacheLife = config.lazyCacheLifetime) !== null && _config$lazyCacheLife !== void 0 ? _config$lazyCacheLife : this.DEFAULT_CACHE_LIFETIME;\n    return super.matchesConfig(config) && thisCacheLifetime === otherCacheLifetime;\n  }\n  /**\n   * @inheritdoc\n   */\n  getOne(conditions, options) {\n    var _superprop_getGetOne = () => super.getOne,\n      _this3 = this;\n    return _asyncToGenerator(function* () {\n      const record = yield _superprop_getGetOne().call(_this3, conditions, options);\n      _this3.records[_this3.serializePrimaryKey(_this3.getPrimaryKeyFromRecord(record))] = record;\n      return record;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getOneByPrimaryKey(primaryKey) {\n    var _superprop_getGetOneByPrimaryKey = () => super.getOneByPrimaryKey,\n      _this4 = this;\n    return _asyncToGenerator(function* () {\n      const serializePrimaryKey = _this4.serializePrimaryKey(primaryKey);\n      if (!(serializePrimaryKey in _this4.records)) {\n        try {\n          const record = yield _superprop_getGetOneByPrimaryKey().call(_this4, primaryKey);\n          _this4.records[serializePrimaryKey] = record;\n          return record;\n        } catch (error) {\n          _this4.records[serializePrimaryKey] = null;\n          throw error;\n        }\n      }\n      const record = _this4.records[serializePrimaryKey];\n      if (!record) {\n        throw new CoreError('No records found.');\n      }\n      return record;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  hasAny(conditions) {\n    var _superprop_getHasAny = () => super.hasAny,\n      _this5 = this;\n    return _asyncToGenerator(function* () {\n      const hasAnyMatching = Object.values(_this5.records).some(record => record !== null && (!conditions || _this5.recordMatches(record, conditions)));\n      if (hasAnyMatching) {\n        return true;\n      }\n      return _superprop_getHasAny().call(_this5, conditions);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  hasAnyByPrimaryKey(primaryKey) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      var _this6$records$_this;\n      const record = (_this6$records$_this = _this6.records[_this6.serializePrimaryKey(primaryKey)]) !== null && _this6$records$_this !== void 0 ? _this6$records$_this : null;\n      return record !== null;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  insert(record) {\n    var _superprop_getInsert = () => super.insert,\n      _this7 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getInsert().call(_this7, record);\n      _this7.records[_this7.serializePrimaryKey(_this7.getPrimaryKeyFromRecord(record))] = record;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  update(updates, conditions) {\n    var _superprop_getUpdate = () => super.update,\n      _this8 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getUpdate().call(_this8, updates, conditions);\n      for (const record of Object.values(_this8.records)) {\n        if (!record || conditions && !_this8.recordMatches(record, conditions)) {\n          continue;\n        }\n        Object.assign(record, updates);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  updateWhere(updates, conditions) {\n    var _superprop_getUpdateWhere = () => super.updateWhere,\n      _this9 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getUpdateWhere().call(_this9, updates, conditions);\n      for (const record of Object.values(_this9.records)) {\n        if (!record || !conditions.js(record)) {\n          continue;\n        }\n        Object.assign(record, updates);\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  delete(conditions) {\n    var _superprop_getDelete = () => super.delete,\n      _this10 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getDelete().call(_this10, conditions);\n      for (const [primaryKey, record] of Object.entries(_this10.records)) {\n        if (!record || conditions && !_this10.recordMatches(record, conditions)) {\n          continue;\n        }\n        _this10.records[primaryKey] = null;\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  deleteByPrimaryKey(primaryKey) {\n    var _superprop_getDeleteByPrimaryKey = () => super.deleteByPrimaryKey,\n      _this11 = this;\n    return _asyncToGenerator(function* () {\n      yield _superprop_getDeleteByPrimaryKey().call(_this11, primaryKey);\n      _this11.records[_this11.serializePrimaryKey(primaryKey)] = null;\n    })();\n  }\n}","map":{"version":3,"names":["CoreError","CoreInMemoryDatabaseTable","CoreLazyDatabaseTable","constructor","DEFAULT_CACHE_LIFETIME","records","initialize","_superprop_getInitialize","_this","_asyncToGenerator","_this$config$lazyCach","call","interval","window","setInterval","config","lazyCacheLifetime","destroy","_superprop_getDestroy","_this2","clearInterval","matchesConfig","_this$config$lazyCach2","_config$lazyCacheLife","thisCacheLifetime","otherCacheLifetime","getOne","conditions","options","_superprop_getGetOne","_this3","record","serializePrimaryKey","getPrimaryKeyFromRecord","getOneByPrimaryKey","primaryKey","_superprop_getGetOneByPrimaryKey","_this4","error","hasAny","_superprop_getHasAny","_this5","hasAnyMatching","Object","values","some","recordMatches","hasAnyByPrimaryKey","_this6","_this6$records$_this","insert","_superprop_getInsert","_this7","update","updates","_superprop_getUpdate","_this8","assign","updateWhere","_superprop_getUpdateWhere","_this9","js","delete","_superprop_getDelete","_this10","entries","deleteByPrimaryKey","_superprop_getDeleteByPrimaryKey","_this11"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/classes/database/lazy-database-table.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreError } from '@classes/errors/error';\nimport { SQLiteDBRecordValues } from '@classes/sqlitedb';\nimport { CoreInMemoryDatabaseTable } from './inmemory-database-table';\nimport {\n    CoreDatabaseConfiguration,\n    CoreDatabaseConditions,\n    GetDBRecordPrimaryKey,\n    CoreDatabaseQueryOptions,\n} from './database-table';\n\n/**\n * Wrapper used to improve performance by caching records that are used often for faster read operations.\n *\n * This implementation works best for tables that have a lot of records and are read often; for tables with a few records use\n * CoreEagerDatabaseTable instead.\n */\nexport class CoreLazyDatabaseTable<\n    DBRecord extends SQLiteDBRecordValues = SQLiteDBRecordValues,\n    PrimaryKeyColumn extends keyof DBRecord = 'id',\n    PrimaryKey extends GetDBRecordPrimaryKey<DBRecord, PrimaryKeyColumn> = GetDBRecordPrimaryKey<DBRecord, PrimaryKeyColumn>\n> extends CoreInMemoryDatabaseTable<DBRecord, PrimaryKeyColumn, PrimaryKey> {\n\n    protected readonly DEFAULT_CACHE_LIFETIME = 60000;\n\n    protected records: Record<string, DBRecord | null> = {};\n    protected interval?: number;\n\n    /**\n     * @inheritdoc\n     */\n    async initialize(): Promise<void> {\n        await super.initialize();\n\n        this.interval = window.setInterval(() => (this.records = {}), this.config.lazyCacheLifetime ?? this.DEFAULT_CACHE_LIFETIME);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async destroy(): Promise<void> {\n        await super.destroy();\n\n        this.interval && window.clearInterval(this.interval);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    matchesConfig(config: Partial<CoreDatabaseConfiguration>): boolean {\n        const thisCacheLifetime = this.config.lazyCacheLifetime ?? this.DEFAULT_CACHE_LIFETIME;\n        const otherCacheLifetime = config.lazyCacheLifetime ?? this.DEFAULT_CACHE_LIFETIME;\n\n        return super.matchesConfig(config) && thisCacheLifetime === otherCacheLifetime;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getOne(\n        conditions?: Partial<DBRecord>,\n        options?: Partial<Omit<CoreDatabaseQueryOptions<DBRecord>, 'offset' | 'limit'>>,\n    ): Promise<DBRecord> {\n        const record = await super.getOne(conditions, options);\n\n        this.records[this.serializePrimaryKey(this.getPrimaryKeyFromRecord(record))] = record;\n\n        return record;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getOneByPrimaryKey(primaryKey: PrimaryKey): Promise<DBRecord> {\n        const serializePrimaryKey = this.serializePrimaryKey(primaryKey);\n\n        if (!(serializePrimaryKey in this.records)) {\n            try {\n                const record = await super.getOneByPrimaryKey(primaryKey);\n\n                this.records[serializePrimaryKey] = record;\n\n                return record;\n            } catch (error) {\n                this.records[serializePrimaryKey] = null;\n\n                throw error;\n            }\n        }\n\n        const record = this.records[serializePrimaryKey];\n\n        if (!record) {\n            throw new CoreError('No records found.');\n        }\n\n        return record;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async hasAny(conditions?: Partial<DBRecord>): Promise<boolean> {\n        const hasAnyMatching = Object\n            .values(this.records)\n            .some(record => record !== null && (!conditions || this.recordMatches(record, conditions)));\n\n        if (hasAnyMatching) {\n            return true;\n        }\n\n        return super.hasAny(conditions);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async hasAnyByPrimaryKey(primaryKey: PrimaryKey): Promise<boolean> {\n        const record = this.records[this.serializePrimaryKey(primaryKey)] ?? null;\n\n        return record !== null;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async insert(record: DBRecord): Promise<void> {\n        await super.insert(record);\n\n        this.records[this.serializePrimaryKey(this.getPrimaryKeyFromRecord(record))] = record;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async update(updates: Partial<DBRecord>, conditions?: Partial<DBRecord>): Promise<void> {\n        await super.update(updates, conditions);\n\n        for (const record of Object.values(this.records)) {\n            if (!record || (conditions && !this.recordMatches(record, conditions))) {\n                continue;\n            }\n\n            Object.assign(record, updates);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async updateWhere(updates: Partial<DBRecord>, conditions: CoreDatabaseConditions<DBRecord>): Promise<void> {\n        await super.updateWhere(updates, conditions);\n\n        for (const record of Object.values(this.records)) {\n            if (!record || !conditions.js(record)) {\n                continue;\n            }\n\n            Object.assign(record, updates);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async delete(conditions?: Partial<DBRecord>): Promise<void> {\n        await super.delete(conditions);\n\n        for (const [primaryKey, record] of Object.entries(this.records)) {\n            if (!record || (conditions && !this.recordMatches(record, conditions))) {\n                continue;\n            }\n\n            this.records[primaryKey] = null;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async deleteByPrimaryKey(primaryKey: PrimaryKey): Promise<void> {\n        await super.deleteByPrimaryKey(primaryKey);\n\n        this.records[this.serializePrimaryKey(primaryKey)] = null;\n    }\n\n}\n\ndeclare module '@classes/database/database-table' {\n\n    /**\n     * Augment CoreDatabaseConfiguration interface with data specific to this table.\n     *\n     * @see https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation\n     */\n    export interface CoreDatabaseConfiguration {\n        lazyCacheLifetime: number;\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}