{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { AddonMessages } from '../messages';\nimport { AddonMessagesMainMenuHandlerService } from './mainmenu';\nimport * as i0 from \"@angular/core\";\n/**\n * Content links handler for messaging index.\n * Match message index URL without params id, user1 or user2.\n */\nexport class AddonMessagesIndexLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonMessagesIndexLinkHandler';\n    this.pattern = /\\/message\\/index\\.php((?![?&](id|user1|user2)=\\d+).)*$/;\n  }\n  /**\n   * Get the list of actions for a link (url).\n   *\n   * @returns List of (or promise resolved with list of) actions.\n   */\n  getActions() {\n    return [{\n      action: function () {\n        var _ref = _asyncToGenerator(function* (siteId) {\n          CoreNavigator.navigateToSitePath(AddonMessagesMainMenuHandlerService.PAGE_NAME, {\n            siteId,\n            preferCurrentTab: false\n          });\n        });\n        return function action(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    }];\n  }\n  /**\n   * Check if the handler is enabled for a certain site (site + user) and a URL.\n   * If not defined, defaults to true.\n   *\n   * @param siteId The site ID.\n   * @returns Whether the handler is enabled for the URL and site.\n   */\n  isEnabled(siteId) {\n    return AddonMessages.isPluginEnabled(siteId);\n  }\n}\n_class = AddonMessagesIndexLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonMessagesIndexLinkHandlerService_BaseFactory;\n  return function AddonMessagesIndexLinkHandlerService_Factory(t) {\n    return (ɵAddonMessagesIndexLinkHandlerService_BaseFactory || (ɵAddonMessagesIndexLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonMessagesIndexLinkHandler = makeSingleton(AddonMessagesIndexLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreNavigator","makeSingleton","AddonMessages","AddonMessagesMainMenuHandlerService","AddonMessagesIndexLinkHandlerService","constructor","name","pattern","getActions","action","_ref","_asyncToGenerator","siteId","navigateToSitePath","PAGE_NAME","preferCurrentTab","_x","apply","arguments","isEnabled","isPluginEnabled","t","factory","ɵfac","providedIn","AddonMessagesIndexLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messages/services/handlers/index-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { AddonMessages } from '../messages';\nimport { AddonMessagesMainMenuHandlerService } from './mainmenu';\n\n/**\n * Content links handler for messaging index.\n * Match message index URL without params id, user1 or user2.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonMessagesIndexLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'AddonMessagesIndexLinkHandler';\n    pattern = /\\/message\\/index\\.php((?![?&](id|user1|user2)=\\d+).)*$/;\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @returns List of (or promise resolved with list of) actions.\n     */\n    getActions(): CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: async (siteId): Promise<void> => {\n                CoreNavigator.navigateToSitePath(AddonMessagesMainMenuHandlerService.PAGE_NAME, {\n                    siteId,\n                    preferCurrentTab: false,\n                });\n            },\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param siteId The site ID.\n     * @returns Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string): Promise<boolean> {\n        return AddonMessages.isPluginEnabled(siteId);\n    }\n\n}\n\nexport const AddonMessagesIndexLinkHandler = makeSingleton(AddonMessagesIndexLinkHandlerService);\n"],"mappings":";;AAeA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,mCAAmC,QAAQ,YAAY;;AAEhE;;;;AAKA,OAAM,MAAOC,oCAAqC,SAAQL,2BAA2B;EADrFM,YAAA;;IAGI,KAAAC,IAAI,GAAG,+BAA+B;IACtC,KAAAC,OAAO,GAAG,wDAAwD;;EAElE;;;;;EAKAC,UAAUA,CAAA;IACN,OAAO,CAAC;MACJC,MAAM;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,WAAOC,MAAM,EAAmB;UACpCZ,aAAa,CAACa,kBAAkB,CAACV,mCAAmC,CAACW,SAAS,EAAE;YAC5EF,MAAM;YACNG,gBAAgB,EAAE;WACrB,CAAC;QACN,CAAC;QAAA,gBAAAN,OAAAO,EAAA;UAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;QAAA;MAAA;KACJ,CAAC;EACN;EAEA;;;;;;;EAOAC,SAASA,CAACP,MAAc;IACpB,OAAOV,aAAa,CAACkB,eAAe,CAACR,MAAM,CAAC;EAChD;;SA9BSR,oCAAqC;;;;+IAArCA,MAAoC,IAAAiB,CAAA,IAApCjB,MAAoC;EAAA;AAAA;;SAApCA,MAAoC;EAAAkB,OAAA,EAApClB,MAAoC,CAAAmB,IAAA;EAAAC,UAAA,EADvB;AAAM;AAmChC,OAAO,MAAMC,6BAA6B,GAAGxB,aAAa,CAACG,oCAAoC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}