{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCanceledError } from '@classes/errors/cancelederror';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { AddonModAssignEditFeedbackModalComponent } from '../components/edit-feedback-modal/edit-feedback-modal';\nimport * as i0 from \"@angular/core\";\n/**\n * Base class for component to render a feedback plugin.\n */\nexport class AddonModAssignFeedbackPluginBaseComponent {\n  constructor() {\n    this.canEdit = false; // Whether the user can edit.\n    this.edit = false; // Whether the user is editing.\n  }\n  /**\n   * Open a modal to edit the feedback plugin.\n   *\n   * @returns Promise resolved with the input data, rejected if cancelled.\n   */\n  editFeedback() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.canEdit) {\n        throw new CoreError('Cannot edit feedback');\n      }\n      // Create the navigation modal.\n      const modalData = yield CoreDomUtils.openModal({\n        component: AddonModAssignEditFeedbackModalComponent,\n        componentProps: {\n          assign: _this.assign,\n          submission: _this.submission,\n          plugin: _this.plugin,\n          userId: _this.userId\n        }\n      });\n      if (modalData === undefined) {\n        throw new CoreCanceledError(); // User cancelled.\n      }\n\n      return modalData;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidate() {\n    return _asyncToGenerator(function* () {\n      return;\n    })();\n  }\n}\n_class = AddonModAssignFeedbackPluginBaseComponent;\n_class.ɵfac = function AddonModAssignFeedbackPluginBaseComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    assign: \"assign\",\n    submission: \"submission\",\n    plugin: \"plugin\",\n    userId: \"userId\",\n    configs: \"configs\",\n    canEdit: \"canEdit\",\n    edit: \"edit\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function AddonModAssignFeedbackPluginBaseComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreCanceledError","CoreError","CoreDomUtils","AddonModAssignEditFeedbackModalComponent","AddonModAssignFeedbackPluginBaseComponent","constructor","canEdit","edit","editFeedback","_this","_asyncToGenerator","modalData","openModal","component","componentProps","assign","submission","plugin","userId","undefined","invalidate","selectors","inputs","configs","decls","vars","template","AddonModAssignFeedbackPluginBaseComponent_Template","rf","ctx","encapsulation"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/classes/base-feedback-plugin-component.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input } from '@angular/core';\nimport { CoreCanceledError } from '@classes/errors/cancelederror';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { AddonModAssignEditFeedbackModalComponent } from '../components/edit-feedback-modal/edit-feedback-modal';\nimport { AddonModAssignFeedbackCommentsTextData } from '../feedback/comments/services/handler';\nimport { AddonModAssignAssign, AddonModAssignPlugin, AddonModAssignSubmission } from '../services/assign';\n\n/**\n * Base class for component to render a feedback plugin.\n */\n@Component({\n    template: '',\n})\nexport class AddonModAssignFeedbackPluginBaseComponent implements IAddonModAssignFeedbackPluginComponent {\n\n    @Input() assign!: AddonModAssignAssign; // The assignment.\n    @Input() submission!: AddonModAssignSubmission; // The submission.\n    @Input() plugin!: AddonModAssignPlugin; // The plugin object.\n    @Input() userId!: number; // The user ID of the submission.\n    @Input() configs?: Record<string,string>; // The configs for the plugin.\n    @Input() canEdit = false; // Whether the user can edit.\n    @Input() edit = false; // Whether the user is editing.\n\n    /**\n     * Open a modal to edit the feedback plugin.\n     *\n     * @returns Promise resolved with the input data, rejected if cancelled.\n     */\n    async editFeedback(): Promise<AddonModAssignFeedbackCommentsTextData> {\n        if (!this.canEdit) {\n            throw new CoreError('Cannot edit feedback');\n        }\n\n        // Create the navigation modal.\n        const modalData = await CoreDomUtils.openModal<AddonModAssignFeedbackCommentsTextData>({\n            component: AddonModAssignEditFeedbackModalComponent,\n            componentProps: {\n                assign: this.assign,\n                submission: this.submission,\n                plugin: this.plugin,\n                userId: this.userId,\n            },\n        });\n\n        if (modalData === undefined) {\n            throw new CoreCanceledError(); // User cancelled.\n        }\n\n        return modalData;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidate(): Promise<void> {\n        return;\n    }\n\n}\n\n/**\n * Interface for component to render a feedback plugin.\n */\nexport interface IAddonModAssignFeedbackPluginComponent {\n\n    /**\n     * Invalidate the data.\n     *\n     * @returns Promise resolved when done.\n     */\n    invalidate(): Promise<void>;\n\n}\n"],"mappings":";;AAeA,SAASA,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,wCAAwC,QAAQ,uDAAuD;;AAIhH;;;AAMA,OAAM,MAAOC,yCAAyC;EAHtDC,YAAA;IAUa,KAAAC,OAAO,GAAG,KAAK,CAAC,CAAC;IACjB,KAAAC,IAAI,GAAG,KAAK,CAAC,CAAC;;EAEvB;;;;;EAKMC,YAAYA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACd,IAAI,CAACD,KAAI,CAACH,OAAO,EAAE;QACf,MAAM,IAAIL,SAAS,CAAC,sBAAsB,CAAC;;MAG/C;MACA,MAAMU,SAAS,SAAST,YAAY,CAACU,SAAS,CAAyC;QACnFC,SAAS,EAAEV,wCAAwC;QACnDW,cAAc,EAAE;UACZC,MAAM,EAAEN,KAAI,CAACM,MAAM;UACnBC,UAAU,EAAEP,KAAI,CAACO,UAAU;UAC3BC,MAAM,EAAER,KAAI,CAACQ,MAAM;UACnBC,MAAM,EAAET,KAAI,CAACS;;OAEpB,CAAC;MAEF,IAAIP,SAAS,KAAKQ,SAAS,EAAE;QACzB,MAAM,IAAInB,iBAAiB,EAAE,CAAC,CAAC;;;MAGnC,OAAOW,SAAS;IAAC;EACrB;EAEA;;;EAGMS,UAAUA,CAAA;IAAA,OAAAV,iBAAA;MACZ;IAAO;EACX;;SA3CSN,yCAAyC;;mBAAzCA,MAAyC;AAAA;;QAAzCA,MAAyC;EAAAiB,SAAA;EAAAC,MAAA;IAAAP,MAAA;IAAAC,UAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAK,OAAA;IAAAjB,OAAA;IAAAC,IAAA;EAAA;EAAAiB,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,mDAAAC,EAAA,EAAAC,GAAA;EAAAC,aAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}