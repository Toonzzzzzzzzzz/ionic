{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreApp } from '@services/app';\nimport { CoreError } from '@classes/errors/error';\nimport { Geolocation, Diagnostic, makeSingleton } from '@singletons';\nimport { CoreUtils } from './utils/utils';\nimport { CorePlatform } from './platform';\nimport { CoreSilentError } from '@classes/errors/silenterror';\nimport { CoreSubscriptions } from '@singletons/subscriptions';\nimport { CoreLogger } from '@singletons/logger';\nimport * as i0 from \"@angular/core\";\nexport class CoreGeolocationProvider {\n  constructor() {\n    this.logger = CoreLogger.getInstance('CoreGeolocationProvider');\n  }\n  /**\n   * Get current user coordinates.\n   *\n   * @throws {CoreGeolocationError}\n   * @returns Promise resolved with the geolocation coordinates.\n   */\n  getCoordinates() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.logger.log('Getting coordinates.');\n        yield _this.authorizeLocation();\n        yield _this.enableLocation();\n        _this.logger.log('Getting coordinates: authorized and enabled.');\n        const result = yield Geolocation.getCurrentPosition({\n          enableHighAccuracy: true,\n          timeout: 30000\n        });\n        _this.logger.log('Coordinates retrieved');\n        return result.coords;\n      } catch (error) {\n        _this.logger.log('Error getting coordinates.', error);\n        if (_this.isCordovaPermissionDeniedError(error)) {\n          throw new CoreGeolocationError(CoreGeolocationErrorReason.PERMISSION_DENIED);\n        }\n        throw error;\n      }\n    })();\n  }\n  /**\n   * Make sure that using device location has been authorized and ask for permission if it hasn't.\n   *\n   * @throws {CoreGeolocationError}\n   */\n  authorizeLocation() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.doAuthorizeLocation();\n    })();\n  }\n  /**\n   * Make sure that location is enabled and open settings to enable it if necessary.\n   *\n   * @throws {CoreGeolocationError}\n   */\n  enableLocation() {\n    return _asyncToGenerator(function* () {\n      let locationEnabled = yield Diagnostic.isLocationEnabled();\n      if (locationEnabled) {\n        // Location is enabled.\n        return;\n      }\n      if (!CorePlatform.isIOS()) {\n        Diagnostic.switchToLocationSettings();\n        yield CoreApp.waitForResume(30000);\n        locationEnabled = yield Diagnostic.isLocationEnabled();\n      }\n      if (!locationEnabled) {\n        throw new CoreGeolocationError(CoreGeolocationErrorReason.LOCATION_NOT_ENABLED);\n      }\n    })();\n  }\n  /**\n   * Recursive implementation of authorizeLocation method, protected to avoid exposing the failOnDeniedOnce parameter.\n   *\n   * @param failOnDeniedOnce Throw an exception if the permission has been denied once.\n   * @throws {CoreGeolocationError}\n   */\n  doAuthorizeLocation(failOnDeniedOnce = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const authorizationStatus = yield Diagnostic.getLocationAuthorizationStatus();\n      _this3.logger.log(`Authorize location: status ${authorizationStatus}`);\n      switch (authorizationStatus) {\n        case Diagnostic.permissionStatus.DENIED_ONCE:\n          if (failOnDeniedOnce) {\n            throw new CoreGeolocationError(CoreGeolocationErrorReason.PERMISSION_DENIED);\n          }\n        // Fall through.\n        case Diagnostic.permissionStatus.NOT_REQUESTED:\n          _this3.logger.log('Request location authorization.');\n          yield _this3.requestLocationAuthorization();\n          _this3.logger.log('Location authorization granted.');\n          yield CoreApp.waitForResume(500);\n          yield _this3.doAuthorizeLocation(true);\n          return;\n        case Diagnostic.permissionStatus.GRANTED:\n        case Diagnostic.permissionStatus.GRANTED_WHEN_IN_USE:\n          // Location is authorized.\n          return;\n        default:\n          throw new CoreGeolocationError(CoreGeolocationErrorReason.PERMISSION_DENIED);\n      }\n    })();\n  }\n  /**\n   * Check whether an error was caused by a PERMISSION_DENIED from the cordova plugin.\n   *\n   * @param error Error.\n   * @returns If error is a permission denied error.\n   */\n  isCordovaPermissionDeniedError(error) {\n    return !!error && typeof error == 'object' && 'code' in error && 'PERMISSION_DENIED' in error && error.code === error.PERMISSION_DENIED;\n  }\n  /**\n   * Prechecks if it can request location services.\n   *\n   * @returns If location can be requested.\n   */\n  canRequest() {\n    return _asyncToGenerator(function* () {\n      return CoreUtils.promiseWorks(Diagnostic.getLocationAuthorizationStatus());\n    })();\n  }\n  /**\n   * Request and return the location authorization status for the application.\n   */\n  requestLocationAuthorization() {\n    return _asyncToGenerator(function* () {\n      if (!CorePlatform.isIOS()) {\n        yield Diagnostic.requestLocationAuthorization();\n        return;\n      }\n      // In iOS, the modal disappears when the screen is locked and the promise never ends. Treat that case.\n      return new Promise((resolve, reject) => {\n        // Don't display an error if app is sent to the background, just finish the process.\n        const unsubscribe = CoreSubscriptions.once(CorePlatform.pause, () => reject(new CoreSilentError()));\n        Diagnostic.requestLocationAuthorization().then(() => resolve(), reject).finally(() => unsubscribe());\n      });\n    })();\n  }\n}\n_class = CoreGeolocationProvider;\n_class.ɵfac = function CoreGeolocationProvider_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreGeolocation = makeSingleton(CoreGeolocationProvider);\nexport var CoreGeolocationErrorReason;\n(function (CoreGeolocationErrorReason) {\n  CoreGeolocationErrorReason[\"PERMISSION_DENIED\"] = \"permission-denied\";\n  CoreGeolocationErrorReason[\"LOCATION_NOT_ENABLED\"] = \"location-not-enabled\";\n})(CoreGeolocationErrorReason || (CoreGeolocationErrorReason = {}));\nexport class CoreGeolocationError extends CoreError {\n  constructor(reason) {\n    super(`GeolocationError: ${reason}`);\n    this.reason = reason;\n  }\n}","map":{"version":3,"names":["CoreApp","CoreError","Geolocation","Diagnostic","makeSingleton","CoreUtils","CorePlatform","CoreSilentError","CoreSubscriptions","CoreLogger","CoreGeolocationProvider","constructor","logger","getInstance","getCoordinates","_this","_asyncToGenerator","log","authorizeLocation","enableLocation","result","getCurrentPosition","enableHighAccuracy","timeout","coords","error","isCordovaPermissionDeniedError","CoreGeolocationError","CoreGeolocationErrorReason","PERMISSION_DENIED","_this2","doAuthorizeLocation","locationEnabled","isLocationEnabled","isIOS","switchToLocationSettings","waitForResume","LOCATION_NOT_ENABLED","failOnDeniedOnce","_this3","authorizationStatus","getLocationAuthorizationStatus","permissionStatus","DENIED_ONCE","NOT_REQUESTED","requestLocationAuthorization","GRANTED","GRANTED_WHEN_IN_USE","code","canRequest","promiseWorks","Promise","resolve","reject","unsubscribe","once","pause","then","finally","factory","ɵfac","providedIn","CoreGeolocation","reason"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/services/geolocation.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Coordinates } from '@awesome-cordova-plugins/geolocation';\n\nimport { CoreApp } from '@services/app';\nimport { CoreAnyError, CoreError } from '@classes/errors/error';\nimport { Geolocation, Diagnostic, makeSingleton } from '@singletons';\nimport { CoreUtils } from './utils/utils';\nimport { CorePlatform } from './platform';\nimport { CoreSilentError } from '@classes/errors/silenterror';\nimport { CoreSubscriptions } from '@singletons/subscriptions';\nimport { CoreLogger } from '@singletons/logger';\n\n@Injectable({ providedIn: 'root' })\nexport class CoreGeolocationProvider {\n\n    protected logger: CoreLogger;\n\n    constructor() {\n        this.logger = CoreLogger.getInstance('CoreGeolocationProvider');\n    }\n\n    /**\n     * Get current user coordinates.\n     *\n     * @throws {CoreGeolocationError}\n     * @returns Promise resolved with the geolocation coordinates.\n     */\n    async getCoordinates(): Promise<Coordinates> {\n        try {\n            this.logger.log('Getting coordinates.');\n            await this.authorizeLocation();\n            await this.enableLocation();\n            this.logger.log('Getting coordinates: authorized and enabled.');\n\n            const result = await Geolocation.getCurrentPosition({\n                enableHighAccuracy: true,\n                timeout: 30000,\n            });\n            this.logger.log('Coordinates retrieved');\n\n            return result.coords;\n        } catch (error) {\n            this.logger.log('Error getting coordinates.', error);\n\n            if (this.isCordovaPermissionDeniedError(error)) {\n                throw new CoreGeolocationError(CoreGeolocationErrorReason.PERMISSION_DENIED);\n            }\n\n            throw error;\n        }\n    }\n\n    /**\n     * Make sure that using device location has been authorized and ask for permission if it hasn't.\n     *\n     * @throws {CoreGeolocationError}\n     */\n    async authorizeLocation(): Promise<void> {\n        await this.doAuthorizeLocation();\n    }\n\n    /**\n     * Make sure that location is enabled and open settings to enable it if necessary.\n     *\n     * @throws {CoreGeolocationError}\n     */\n    async enableLocation(): Promise<void> {\n        let locationEnabled = await Diagnostic.isLocationEnabled();\n\n        if (locationEnabled) {\n            // Location is enabled.\n            return;\n        }\n\n        if (!CorePlatform.isIOS()) {\n            Diagnostic.switchToLocationSettings();\n            await CoreApp.waitForResume(30000);\n\n            locationEnabled = await Diagnostic.isLocationEnabled();\n        }\n\n        if (!locationEnabled) {\n            throw new CoreGeolocationError(CoreGeolocationErrorReason.LOCATION_NOT_ENABLED);\n        }\n    }\n\n    /**\n     * Recursive implementation of authorizeLocation method, protected to avoid exposing the failOnDeniedOnce parameter.\n     *\n     * @param failOnDeniedOnce Throw an exception if the permission has been denied once.\n     * @throws {CoreGeolocationError}\n     */\n    protected async doAuthorizeLocation(failOnDeniedOnce: boolean = false): Promise<void> {\n        const authorizationStatus = await Diagnostic.getLocationAuthorizationStatus();\n        this.logger.log(`Authorize location: status ${authorizationStatus}`);\n\n        switch (authorizationStatus) {\n            case Diagnostic.permissionStatus.DENIED_ONCE:\n                if (failOnDeniedOnce) {\n                    throw new CoreGeolocationError(CoreGeolocationErrorReason.PERMISSION_DENIED);\n                }\n            // Fall through.\n            case Diagnostic.permissionStatus.NOT_REQUESTED:\n                this.logger.log('Request location authorization.');\n                await this.requestLocationAuthorization();\n                this.logger.log('Location authorization granted.');\n                await CoreApp.waitForResume(500);\n                await this.doAuthorizeLocation(true);\n\n                return;\n            case Diagnostic.permissionStatus.GRANTED:\n            case Diagnostic.permissionStatus.GRANTED_WHEN_IN_USE:\n                // Location is authorized.\n                return;\n            default:\n                throw new CoreGeolocationError(CoreGeolocationErrorReason.PERMISSION_DENIED);\n        }\n    }\n\n    /**\n     * Check whether an error was caused by a PERMISSION_DENIED from the cordova plugin.\n     *\n     * @param error Error.\n     * @returns If error is a permission denied error.\n     */\n    protected isCordovaPermissionDeniedError(error?: CoreAnyError | GeolocationPositionError): boolean {\n        return !!error &&\n            typeof error == 'object' &&\n            'code' in error &&\n            'PERMISSION_DENIED' in error &&\n            error.code === error.PERMISSION_DENIED;\n    }\n\n    /**\n     * Prechecks if it can request location services.\n     *\n     * @returns If location can be requested.\n     */\n    async canRequest(): Promise<boolean> {\n        return CoreUtils.promiseWorks(Diagnostic.getLocationAuthorizationStatus());\n    }\n\n    /**\n     * Request and return the location authorization status for the application.\n     */\n    protected async requestLocationAuthorization(): Promise<void> {\n        if (!CorePlatform.isIOS()) {\n            await Diagnostic.requestLocationAuthorization();\n\n            return;\n        }\n\n        // In iOS, the modal disappears when the screen is locked and the promise never ends. Treat that case.\n        return new Promise((resolve, reject) => {\n            // Don't display an error if app is sent to the background, just finish the process.\n            const unsubscribe = CoreSubscriptions.once(CorePlatform.pause, () => reject(new CoreSilentError()));\n            Diagnostic.requestLocationAuthorization().then(() => resolve(), reject).finally(() => unsubscribe());\n        });\n    }\n\n}\n\nexport const CoreGeolocation = makeSingleton(CoreGeolocationProvider);\n\nexport enum CoreGeolocationErrorReason {\n    PERMISSION_DENIED = 'permission-denied',\n    LOCATION_NOT_ENABLED = 'location-not-enabled',\n}\n\nexport class CoreGeolocationError extends CoreError {\n\n    reason: CoreGeolocationErrorReason;\n\n    constructor(reason: CoreGeolocationErrorReason) {\n        super(`GeolocationError: ${reason}`);\n\n        this.reason = reason;\n    }\n\n}\n\n/**\n * Imported interface type from Web api.\n * https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError\n */\ninterface GeolocationPositionError {\n    code: number;\n    message: string;\n    PERMISSION_DENIED: number; // eslint-disable-line @typescript-eslint/naming-convention\n    POSITION_UNAVAILABLE: number; // eslint-disable-line @typescript-eslint/naming-convention\n    TIMEOUT: number; // eslint-disable-line @typescript-eslint/naming-convention\n}\n"],"mappings":";;AAiBA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAAuBC,SAAS,QAAQ,uBAAuB;AAC/D,SAASC,WAAW,EAAEC,UAAU,EAAEC,aAAa,QAAQ,aAAa;AACpE,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,SAASC,UAAU,QAAQ,oBAAoB;;AAG/C,OAAM,MAAOC,uBAAuB;EAIhCC,YAAA;IACI,IAAI,CAACC,MAAM,GAAGH,UAAU,CAACI,WAAW,CAAC,yBAAyB,CAAC;EACnE;EAEA;;;;;;EAMMC,cAAcA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAChB,IAAI;QACAD,KAAI,CAACH,MAAM,CAACK,GAAG,CAAC,sBAAsB,CAAC;QACvC,MAAMF,KAAI,CAACG,iBAAiB,EAAE;QAC9B,MAAMH,KAAI,CAACI,cAAc,EAAE;QAC3BJ,KAAI,CAACH,MAAM,CAACK,GAAG,CAAC,8CAA8C,CAAC;QAE/D,MAAMG,MAAM,SAASlB,WAAW,CAACmB,kBAAkB,CAAC;UAChDC,kBAAkB,EAAE,IAAI;UACxBC,OAAO,EAAE;SACZ,CAAC;QACFR,KAAI,CAACH,MAAM,CAACK,GAAG,CAAC,uBAAuB,CAAC;QAExC,OAAOG,MAAM,CAACI,MAAM;OACvB,CAAC,OAAOC,KAAK,EAAE;QACZV,KAAI,CAACH,MAAM,CAACK,GAAG,CAAC,4BAA4B,EAAEQ,KAAK,CAAC;QAEpD,IAAIV,KAAI,CAACW,8BAA8B,CAACD,KAAK,CAAC,EAAE;UAC5C,MAAM,IAAIE,oBAAoB,CAACC,0BAA0B,CAACC,iBAAiB,CAAC;;QAGhF,MAAMJ,KAAK;;IACd;EACL;EAEA;;;;;EAKMP,iBAAiBA,CAAA;IAAA,IAAAY,MAAA;IAAA,OAAAd,iBAAA;MACnB,MAAMc,MAAI,CAACC,mBAAmB,EAAE;IAAC;EACrC;EAEA;;;;;EAKMZ,cAAcA,CAAA;IAAA,OAAAH,iBAAA;MAChB,IAAIgB,eAAe,SAAS7B,UAAU,CAAC8B,iBAAiB,EAAE;MAE1D,IAAID,eAAe,EAAE;QACjB;QACA;;MAGJ,IAAI,CAAC1B,YAAY,CAAC4B,KAAK,EAAE,EAAE;QACvB/B,UAAU,CAACgC,wBAAwB,EAAE;QACrC,MAAMnC,OAAO,CAACoC,aAAa,CAAC,KAAK,CAAC;QAElCJ,eAAe,SAAS7B,UAAU,CAAC8B,iBAAiB,EAAE;;MAG1D,IAAI,CAACD,eAAe,EAAE;QAClB,MAAM,IAAIL,oBAAoB,CAACC,0BAA0B,CAACS,oBAAoB,CAAC;;IAClF;EACL;EAEA;;;;;;EAMgBN,mBAAmBA,CAACO,gBAAA,GAA4B,KAAK;IAAA,IAAAC,MAAA;IAAA,OAAAvB,iBAAA;MACjE,MAAMwB,mBAAmB,SAASrC,UAAU,CAACsC,8BAA8B,EAAE;MAC7EF,MAAI,CAAC3B,MAAM,CAACK,GAAG,CAAC,8BAA8BuB,mBAAmB,EAAE,CAAC;MAEpE,QAAQA,mBAAmB;QACvB,KAAKrC,UAAU,CAACuC,gBAAgB,CAACC,WAAW;UACxC,IAAIL,gBAAgB,EAAE;YAClB,MAAM,IAAIX,oBAAoB,CAACC,0BAA0B,CAACC,iBAAiB,CAAC;;QAEpF;QACA,KAAK1B,UAAU,CAACuC,gBAAgB,CAACE,aAAa;UAC1CL,MAAI,CAAC3B,MAAM,CAACK,GAAG,CAAC,iCAAiC,CAAC;UAClD,MAAMsB,MAAI,CAACM,4BAA4B,EAAE;UACzCN,MAAI,CAAC3B,MAAM,CAACK,GAAG,CAAC,iCAAiC,CAAC;UAClD,MAAMjB,OAAO,CAACoC,aAAa,CAAC,GAAG,CAAC;UAChC,MAAMG,MAAI,CAACR,mBAAmB,CAAC,IAAI,CAAC;UAEpC;QACJ,KAAK5B,UAAU,CAACuC,gBAAgB,CAACI,OAAO;QACxC,KAAK3C,UAAU,CAACuC,gBAAgB,CAACK,mBAAmB;UAChD;UACA;QACJ;UACI,MAAM,IAAIpB,oBAAoB,CAACC,0BAA0B,CAACC,iBAAiB,CAAC;;IACnF;EACL;EAEA;;;;;;EAMUH,8BAA8BA,CAACD,KAA+C;IACpF,OAAO,CAAC,CAACA,KAAK,IACV,OAAOA,KAAK,IAAI,QAAQ,IACxB,MAAM,IAAIA,KAAK,IACf,mBAAmB,IAAIA,KAAK,IAC5BA,KAAK,CAACuB,IAAI,KAAKvB,KAAK,CAACI,iBAAiB;EAC9C;EAEA;;;;;EAKMoB,UAAUA,CAAA;IAAA,OAAAjC,iBAAA;MACZ,OAAOX,SAAS,CAAC6C,YAAY,CAAC/C,UAAU,CAACsC,8BAA8B,EAAE,CAAC;IAAC;EAC/E;EAEA;;;EAGgBI,4BAA4BA,CAAA;IAAA,OAAA7B,iBAAA;MACxC,IAAI,CAACV,YAAY,CAAC4B,KAAK,EAAE,EAAE;QACvB,MAAM/B,UAAU,CAAC0C,4BAA4B,EAAE;QAE/C;;MAGJ;MACA,OAAO,IAAIM,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;QACnC;QACA,MAAMC,WAAW,GAAG9C,iBAAiB,CAAC+C,IAAI,CAACjD,YAAY,CAACkD,KAAK,EAAE,MAAMH,MAAM,CAAC,IAAI9C,eAAe,EAAE,CAAC,CAAC;QACnGJ,UAAU,CAAC0C,4BAA4B,EAAE,CAACY,IAAI,CAAC,MAAML,OAAO,EAAE,EAAEC,MAAM,CAAC,CAACK,OAAO,CAAC,MAAMJ,WAAW,EAAE,CAAC;MACxG,CAAC,CAAC;IAAC;EACP;;SAjJS5C,uBAAuB;;mBAAvBA,MAAuB;AAAA;;SAAvBA,MAAuB;EAAAiD,OAAA,EAAvBjD,MAAuB,CAAAkD,IAAA;EAAAC,UAAA,EADV;AAAM;AAsJhC,OAAO,MAAMC,eAAe,GAAG1D,aAAa,CAACM,uBAAuB,CAAC;AAErE,WAAYkB,0BAGX;AAHD,WAAYA,0BAA0B;EAClCA,0BAAA,2CAAuC;EACvCA,0BAAA,iDAA6C;AACjD,CAAC,EAHWA,0BAA0B,KAA1BA,0BAA0B;AAKtC,OAAM,MAAOD,oBAAqB,SAAQ1B,SAAS;EAI/CU,YAAYoD,MAAkC;IAC1C,KAAK,CAAC,qBAAqBA,MAAM,EAAE,CAAC;IAEpC,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}