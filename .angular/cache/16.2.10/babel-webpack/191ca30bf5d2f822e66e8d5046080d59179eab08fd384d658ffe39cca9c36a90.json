{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSwipeNavigationTourComponent } from '@components/swipe-navigation-tour/swipe-navigation-tour';\nimport { CoreUserTours } from '@features/usertours/services/user-tours';\nimport { CorePlatform } from '@services/platform';\nimport { GestureController } from '@singletons';\nimport * as i0 from \"@angular/core\";\nconst ACTIVATION_THRESHOLD = 150;\nconst SWIPE_FRICTION = 0.6;\n/**\n * Directive to enable content navigation with swipe.\n *\n * Example usage:\n *\n * <ion-content [core-swipe-navigation]=\"manager\">\n */\nexport class CoreSwipeNavigationDirective {\n  constructor(el) {\n    this.element = el.nativeElement;\n  }\n  get enabled() {\n    return !!this.manager;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$manager, _source$getItems;\n      // Set up gesture listener\n      const style = _this.element.style;\n      _this.swipeGesture = GestureController.create({\n        el: _this.element,\n        gestureName: 'swipe',\n        threshold: 10,\n        direction: 'x',\n        gesturePriority: 10,\n        maxAngle: 20,\n        canStart: () => _this.enabled,\n        onStart: () => {\n          style.transition = '';\n        },\n        onMove: ev => {\n          style.transform = `translateX(${ev.deltaX * SWIPE_FRICTION}px)`;\n        },\n        onEnd: ev => {\n          _this.onRelease(ev);\n        }\n      });\n      const source = (_this$manager = _this.manager) === null || _this$manager === void 0 ? void 0 : _this$manager.getSource();\n      if (!source) {\n        return;\n      }\n      yield source.waitForLoaded();\n      const items = (_source$getItems = source.getItems()) !== null && _source$getItems !== void 0 ? _source$getItems : [];\n      if (!_this.enabled || items.length < 2) {\n        return;\n      }\n      _this.swipeGesture.enable();\n      // Show user tour.\n      yield CoreUserTours.showIfPending({\n        id: 'swipe-navigation',\n        component: CoreSwipeNavigationTourComponent,\n        watch: _this.element\n      });\n    })();\n  }\n  /**\n   * Move to item to the left.\n   */\n  swipeLeft() {\n    var _this$manager2, _this$manager3;\n    if (!this.enabled) {\n      return;\n    }\n    CorePlatform.isRTL ? (_this$manager2 = this.manager) === null || _this$manager2 === void 0 ? void 0 : _this$manager2.navigateToPreviousItem() : (_this$manager3 = this.manager) === null || _this$manager3 === void 0 ? void 0 : _this$manager3.navigateToNextItem();\n  }\n  /**\n   * Move to item to the right.\n   */\n  swipeRight() {\n    var _this$manager4, _this$manager5;\n    if (!this.enabled) {\n      return;\n    }\n    CorePlatform.isRTL ? (_this$manager4 = this.manager) === null || _this$manager4 === void 0 ? void 0 : _this$manager4.navigateToNextItem() : (_this$manager5 = this.manager) === null || _this$manager5 === void 0 ? void 0 : _this$manager5.navigateToPreviousItem();\n  }\n  /**\n   * Check whether there is an item to the right of the current selection.\n   *\n   * @returns If has an item to the right.\n   */\n  hasItemRight() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.manager) {\n        return false;\n      }\n      return CorePlatform.isRTL ? yield _this2.manager.hasNextItem() : yield _this2.manager.hasPreviousItem();\n    })();\n  }\n  /**\n   * Check whether there is an item to the left of the current selection.\n   *\n   * @returns If has an item to the left.\n   */\n  hasItemLeft() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this3.manager) {\n        return false;\n      }\n      return CorePlatform.isRTL ? yield _this3.manager.hasPreviousItem() : yield _this3.manager.hasNextItem();\n    })();\n  }\n  /**\n   * Prevent click event by capturing the click before happening.\n   */\n  preventClickOnElement() {\n    this.element.addEventListener('click', ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      return false;\n    }, true);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$swipeGesture;\n    (_this$swipeGesture = this.swipeGesture) === null || _this$swipeGesture === void 0 || _this$swipeGesture.destroy();\n  }\n  /**\n   * Handle swipe release event.\n   *\n   * @param event Event.\n   */\n  onRelease(event) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.element.style.transition = '.5s ease-out';\n      if (event.deltaX > ACTIVATION_THRESHOLD && (yield _this4.hasItemRight())) {\n        _this4.preventClickOnElement();\n        _this4.swipeRight();\n        _this4.element.style.transform = 'translateX(100%) !important';\n        return;\n      }\n      if (event.deltaX < -ACTIVATION_THRESHOLD && (yield _this4.hasItemLeft())) {\n        _this4.element.style.transform = 'translateX(-100%) !important';\n        _this4.preventClickOnElement();\n        _this4.swipeLeft();\n        return;\n      }\n      _this4.element.style.transform = '';\n    })();\n  }\n}\n_class = CoreSwipeNavigationDirective;\n_class.ɵfac = function CoreSwipeNavigationDirective_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: _class,\n  selectors: [[\"ion-content\", \"core-swipe-navigation\", \"\"]],\n  inputs: {\n    manager: [\"core-swipe-navigation\", \"manager\"]\n  }\n});","map":{"version":3,"names":["CoreSwipeNavigationTourComponent","CoreUserTours","CorePlatform","GestureController","ACTIVATION_THRESHOLD","SWIPE_FRICTION","CoreSwipeNavigationDirective","constructor","el","element","nativeElement","enabled","manager","ngAfterViewInit","_this","_asyncToGenerator","_this$manager","_source$getItems","style","swipeGesture","create","gestureName","threshold","direction","gesturePriority","maxAngle","canStart","onStart","transition","onMove","ev","transform","deltaX","onEnd","onRelease","source","getSource","waitForLoaded","items","getItems","length","enable","showIfPending","id","component","watch","swipeLeft","_this$manager2","_this$manager3","isRTL","navigateToPreviousItem","navigateToNextItem","swipeRight","_this$manager4","_this$manager5","hasItemRight","_this2","hasNextItem","hasPreviousItem","hasItemLeft","_this3","preventClickOnElement","addEventListener","preventDefault","stopPropagation","ngOnDestroy","_this$swipeGesture","destroy","event","_this4","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/directives/swipe-navigation.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {  AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { CoreSwipeNavigationItemsManager } from '@classes/items-management/swipe-navigation-items-manager';\nimport { CoreSwipeNavigationTourComponent } from '@components/swipe-navigation-tour/swipe-navigation-tour';\nimport { CoreUserTours } from '@features/usertours/services/user-tours';\nimport { Gesture, GestureDetail } from '@ionic/angular';\nimport { CorePlatform } from '@services/platform';\nimport { GestureController } from '@singletons';\n\nconst ACTIVATION_THRESHOLD = 150;\nconst SWIPE_FRICTION = 0.6;\n\n/**\n * Directive to enable content navigation with swipe.\n *\n * Example usage:\n *\n * <ion-content [core-swipe-navigation]=\"manager\">\n */\n@Directive({\n    selector: 'ion-content[core-swipe-navigation]',\n})\nexport class CoreSwipeNavigationDirective implements AfterViewInit, OnDestroy {\n\n    @Input('core-swipe-navigation') manager?: CoreSwipeNavigationItemsManager;\n\n    protected element: HTMLElement;\n    protected swipeGesture?: Gesture;\n\n    constructor(el: ElementRef) {\n        this.element = el.nativeElement;\n    }\n\n    get enabled(): boolean {\n        return !!this.manager;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        // Set up gesture listener\n        const style = this.element.style;\n        this.swipeGesture = GestureController.create({\n            el: this.element,\n            gestureName: 'swipe',\n            threshold: 10,\n            direction: 'x',\n            gesturePriority: 10,\n            maxAngle: 20,\n            canStart: () => this.enabled,\n            onStart: () => {\n                style.transition = '';\n            },\n            onMove: (ev) => {\n                style.transform = `translateX(${ev.deltaX * SWIPE_FRICTION }px)`;\n            },\n            onEnd: (ev) => {\n                this.onRelease(ev);\n            },\n        });\n\n        const source = this.manager?.getSource();\n        if (!source) {\n            return;\n        }\n\n        await source.waitForLoaded();\n\n        const items = source.getItems() ?? [];\n        if (!this.enabled || items.length < 2) {\n            return;\n        }\n\n        this.swipeGesture.enable();\n\n        // Show user tour.\n        await CoreUserTours.showIfPending({\n            id: 'swipe-navigation',\n            component: CoreSwipeNavigationTourComponent,\n            watch: this.element,\n        });\n    }\n\n    /**\n     * Move to item to the left.\n     */\n    swipeLeft(): void {\n        if (!this.enabled) {\n            return;\n        }\n\n        CorePlatform.isRTL\n            ? this.manager?.navigateToPreviousItem()\n            : this.manager?.navigateToNextItem();\n    }\n\n    /**\n     * Move to item to the right.\n     */\n    swipeRight(): void {\n        if (!this.enabled) {\n            return;\n        }\n\n        CorePlatform.isRTL\n            ? this.manager?.navigateToNextItem()\n            : this.manager?.navigateToPreviousItem();\n    }\n\n    /**\n     * Check whether there is an item to the right of the current selection.\n     *\n     * @returns If has an item to the right.\n     */\n    protected async hasItemRight(): Promise<boolean> {\n        if (!this.manager) {\n            return false;\n        }\n\n        return CorePlatform.isRTL\n            ? await this.manager.hasNextItem()\n            : await this.manager.hasPreviousItem();\n    }\n\n    /**\n     * Check whether there is an item to the left of the current selection.\n     *\n     * @returns If has an item to the left.\n     */\n    protected async hasItemLeft(): Promise<boolean> {\n        if (!this.manager) {\n            return false;\n        }\n\n        return CorePlatform.isRTL\n            ? await this.manager.hasPreviousItem()\n            : await this.manager.hasNextItem();\n    }\n\n    /**\n     * Prevent click event by capturing the click before happening.\n     */\n    protected preventClickOnElement(): void {\n        this.element.addEventListener(\n            'click',\n            (ev: Event) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                return false;\n            },\n            true, // Register event on the capture phase.\n        );\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.swipeGesture?.destroy();\n    }\n\n    /**\n     * Handle swipe release event.\n     *\n     * @param event Event.\n     */\n    protected async onRelease(event: GestureDetail): Promise<void> {\n        this.element.style.transition = '.5s ease-out';\n\n        if (event.deltaX > ACTIVATION_THRESHOLD && await this.hasItemRight()) {\n            this.preventClickOnElement();\n            this.swipeRight();\n\n            this.element.style.transform = 'translateX(100%) !important';\n\n            return;\n        }\n\n        if (event.deltaX < -ACTIVATION_THRESHOLD && await this.hasItemLeft()) {\n            this.element.style.transform = 'translateX(-100%) !important';\n\n            this.preventClickOnElement();\n            this.swipeLeft();\n\n            return;\n        }\n\n        this.element.style.transform = '';\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}