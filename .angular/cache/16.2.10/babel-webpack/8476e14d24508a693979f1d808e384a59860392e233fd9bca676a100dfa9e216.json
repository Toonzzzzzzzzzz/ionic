{"ast":null,"code":"var _class;\nimport { Md5 } from 'ts-md5';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreSitePlugins } from '../services/siteplugins';\nimport { CoreForms } from '@singletons/form';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../components/plugin-content/plugin-content\";\n/**\n * Directive to display a new site plugin content when clicked. This new content can be displayed in a new page or in the\n * current page (only if the current page is already displaying a site plugin content).\n *\n * Example usages:\n *\n * A button to go to a new content page:\n *\n * <ion-button core-site-plugins-new-content title=\"<% certificate.name %>\" component=\"mod_certificate\"\n *             method=\"mobile_issues_view\" [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\">\n *     {{ 'plugin.mod_certificate_coursecertificate.viewissued' | translate }}\n * </ion-button>\n *\n * A button to load new content in current page using a param from otherdata:\n *\n * <ion-button core-site-plugins-new-content component=\"mod_certificate\" method=\"mobile_issues_view\"\n *         [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\" samePage=\"true\" [useOtherData]=\"['userid']\">\n *     {{ 'plugin.mod_certificate_coursecertificate.viewissued' | translate }}\n * </ion-button>\n */\nexport class CoreSitePluginsNewContentDirective {\n  constructor(element, parentContent) {\n    this.parentContent = parentContent;\n    this.element = element.nativeElement || element;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.element.addEventListener('click', ev => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      let args = this.args || {};\n      if (this.parentContent) {\n        args = CoreSitePlugins.loadOtherDataInArgs(this.args, this.parentContent.otherData, this.useOtherData);\n      }\n      if (this.form && document.forms[this.form]) {\n        args = Object.assign(args, CoreForms.getDataFromForm(document.forms[this.form]));\n      }\n      let jsData = this.jsData || {};\n      if (jsData === true) {\n        var _this$parentContent;\n        jsData = ((_this$parentContent = this.parentContent) === null || _this$parentContent === void 0 ? void 0 : _this$parentContent.data) || {};\n      }\n      if (CoreUtils.isTrueOrOne(this.samePage)) {\n        var _this$parentContent2;\n        // Update the parent content (if it exists).\n        (_this$parentContent2 = this.parentContent) === null || _this$parentContent2 === void 0 || _this$parentContent2.updateContent(args, this.component, this.method, jsData, this.preSets);\n      } else {\n        var _this$parentContent3, _this$parentContent4, _this$parentContent5, _this$parentContent6;\n        const component = this.component || ((_this$parentContent3 = this.parentContent) === null || _this$parentContent3 === void 0 ? void 0 : _this$parentContent3.component);\n        const method = this.method || ((_this$parentContent4 = this.parentContent) === null || _this$parentContent4 === void 0 ? void 0 : _this$parentContent4.method);\n        const hash = Md5.hashAsciiStr(JSON.stringify(args));\n        CoreNavigator.navigateToSitePath(`siteplugins/content/${component}/${method}/${hash}`, {\n          params: {\n            title: this.title || ((_this$parentContent5 = this.parentContent) === null || _this$parentContent5 === void 0 ? void 0 : _this$parentContent5.pageTitle),\n            args,\n            initResult: (_this$parentContent6 = this.parentContent) === null || _this$parentContent6 === void 0 ? void 0 : _this$parentContent6.initResult,\n            jsData,\n            preSets: this.preSets,\n            ptrEnabled: this.ptrEnabled\n          }\n        });\n      }\n    });\n  }\n}\n_class = CoreSitePluginsNewContentDirective;\n_class.ɵfac = function CoreSitePluginsNewContentDirective_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.CoreSitePluginsPluginContentComponent, 8));\n};\n_class.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: _class,\n  selectors: [[\"\", \"core-site-plugins-new-content\", \"\"]],\n  inputs: {\n    component: \"component\",\n    method: \"method\",\n    args: \"args\",\n    title: \"title\",\n    samePage: \"samePage\",\n    useOtherData: \"useOtherData\",\n    form: \"form\",\n    jsData: \"jsData\",\n    preSets: \"preSets\",\n    ptrEnabled: \"ptrEnabled\"\n  }\n});","map":{"version":3,"names":["Md5","CoreNavigator","CoreUtils","CoreSitePlugins","CoreForms","CoreSitePluginsNewContentDirective","constructor","element","parentContent","nativeElement","ngOnInit","addEventListener","ev","preventDefault","stopPropagation","args","loadOtherDataInArgs","otherData","useOtherData","form","document","forms","Object","assign","getDataFromForm","jsData","_this$parentContent","data","isTrueOrOne","samePage","_this$parentContent2","updateContent","component","method","preSets","_this$parentContent3","_this$parentContent4","_this$parentContent5","_this$parentContent6","hash","hashAsciiStr","JSON","stringify","navigateToSitePath","params","title","pageTitle","initResult","ptrEnabled","i0","ɵɵdirectiveInject","ElementRef","i1","CoreSitePluginsPluginContentComponent","selectors","inputs"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/siteplugins/directives/new-content.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef, Optional } from '@angular/core';\nimport { Md5 } from 'ts-md5';\n\nimport { CoreSiteWSPreSets } from '@classes/sites/authenticated-site';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreSitePluginsPluginContentComponent } from '../components/plugin-content/plugin-content';\nimport { CoreSitePlugins } from '../services/siteplugins';\nimport { CoreForms } from '@singletons/form';\n\n/**\n * Directive to display a new site plugin content when clicked. This new content can be displayed in a new page or in the\n * current page (only if the current page is already displaying a site plugin content).\n *\n * Example usages:\n *\n * A button to go to a new content page:\n *\n * <ion-button core-site-plugins-new-content title=\"<% certificate.name %>\" component=\"mod_certificate\"\n *             method=\"mobile_issues_view\" [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\">\n *     {{ 'plugin.mod_certificate_coursecertificate.viewissued' | translate }}\n * </ion-button>\n *\n * A button to load new content in current page using a param from otherdata:\n *\n * <ion-button core-site-plugins-new-content component=\"mod_certificate\" method=\"mobile_issues_view\"\n *         [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\" samePage=\"true\" [useOtherData]=\"['userid']\">\n *     {{ 'plugin.mod_certificate_coursecertificate.viewissued' | translate }}\n * </ion-button>\n */\n@Directive({\n    selector: '[core-site-plugins-new-content]',\n})\nexport class CoreSitePluginsNewContentDirective implements OnInit {\n\n    @Input() component?: string; // The component of the new content. If not provided, use the same component as current page.\n    @Input() method?: string; // The method to get the new content. If not provided, use the same method as current page.\n    @Input() args?: Record<string, unknown>; // The params to get the new content.\n    @Input() title?: string; // The title to display with the new content. Only if samePage=false.\n    @Input() samePage?: boolean | string; // Whether to display the content in same page or open a new one. Defaults to new page.\n    @Input() useOtherData?: string[] | unknown; // Whether to include other data in the args.\n    @Input() form?: string; // ID or name to identify a form. The form data will be retrieved and sent to the WS.\n    // JS variables to pass to the new page so they can be used in the template or JS.\n    // If true is supplied instead of an object, all initial variables from current page will be copied.\n    @Input() jsData?: Record<string, unknown> | boolean;\n    @Input() preSets?: CoreSiteWSPreSets; // The preSets for the WS call of the new content.\n    @Input() ptrEnabled?: boolean | string; // Whether PTR should be enabled in the new page. Defaults to true.\n\n    protected element: HTMLElement;\n\n    constructor(\n        element: ElementRef,\n        @Optional() protected parentContent: CoreSitePluginsPluginContentComponent,\n    ) {\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.element.addEventListener('click', (ev: Event): void => {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            let args = this.args || {};\n\n            if (this.parentContent) {\n                args = CoreSitePlugins.loadOtherDataInArgs(this.args, this.parentContent.otherData, this.useOtherData);\n            }\n\n            if (this.form && document.forms[this.form]) {\n                args = Object.assign(args, CoreForms.getDataFromForm(document.forms[this.form]));\n            }\n\n            let jsData = this.jsData || {};\n            if (jsData === true) {\n                jsData = this.parentContent?.data || {};\n            }\n\n            if (CoreUtils.isTrueOrOne(this.samePage)) {\n                // Update the parent content (if it exists).\n                this.parentContent?.updateContent(args, this.component, this.method, jsData, this.preSets);\n            } else {\n                const component = this.component || this.parentContent?.component;\n                const method = this.method || this.parentContent?.method;\n                const hash = <string> Md5.hashAsciiStr(JSON.stringify(args));\n\n                CoreNavigator.navigateToSitePath(`siteplugins/content/${component}/${method}/${hash}`, {\n                    params: {\n                        title: this.title || this.parentContent?.pageTitle,\n                        args,\n                        initResult: this.parentContent?.initResult,\n                        jsData,\n                        preSets: this.preSets,\n                        ptrEnabled: this.ptrEnabled,\n                    },\n                });\n            }\n        });\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}