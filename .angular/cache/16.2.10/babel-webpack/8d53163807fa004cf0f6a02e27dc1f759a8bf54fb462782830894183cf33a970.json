{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreApp } from '@services/app';\nimport { CoreConfig } from '@services/config';\nimport { CoreCronDelegate } from '@services/cron';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreSites } from '@services/sites';\nimport { CoreStorage } from '@services/storage';\n/**\n * Init databases instances.\n */\nexport default function () {\n  return _ref.apply(this, arguments);\n}\nfunction _ref() {\n  _ref = _asyncToGenerator(function* () {\n    yield Promise.all([CoreApp.initializeDatabase(), CoreConfig.initializeDatabase(), CoreCronDelegate.initializeDatabase(), CoreFilepool.initializeDatabase(), CoreLocalNotifications.initializeDatabase(), CoreSites.initializeDatabase(), CoreStorage.initializeDatabase()]);\n  });\n  return _ref.apply(this, arguments);\n}","map":{"version":3,"names":["CoreApp","CoreConfig","CoreCronDelegate","CoreFilepool","CoreLocalNotifications","CoreSites","CoreStorage","_ref","apply","arguments","_asyncToGenerator","Promise","all","initializeDatabase"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/initializers/initialize-databases.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreApp } from '@services/app';\nimport { CoreConfig } from '@services/config';\nimport { CoreCronDelegate } from '@services/cron';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreSites } from '@services/sites';\nimport { CoreStorage } from '@services/storage';\n\n/**\n * Init databases instances.\n */\nexport default async function(): Promise<void> {\n    await Promise.all([\n        CoreApp.initializeDatabase(),\n        CoreConfig.initializeDatabase(),\n        CoreCronDelegate.initializeDatabase(),\n        CoreFilepool.initializeDatabase(),\n        CoreLocalNotifications.initializeDatabase(),\n        CoreSites.initializeDatabase(),\n        CoreStorage.initializeDatabase(),\n    ]);\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,sBAAsB,QAAQ,+BAA+B;AACtE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,mBAAmB;AAE/C;;;AAGA;EAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAUC,SAAAF,KAAA;EAAAA,IAAA,GAAAG,iBAAA,CAVc,aAAK;IAChB,MAAMC,OAAO,CAACC,GAAG,CAAC,CACdZ,OAAO,CAACa,kBAAkB,EAAE,EAC5BZ,UAAU,CAACY,kBAAkB,EAAE,EAC/BX,gBAAgB,CAACW,kBAAkB,EAAE,EACrCV,YAAY,CAACU,kBAAkB,EAAE,EACjCT,sBAAsB,CAACS,kBAAkB,EAAE,EAC3CR,SAAS,CAACQ,kBAAkB,EAAE,EAC9BP,WAAW,CAACO,kBAAkB,EAAE,CACnC,CAAC;EACN,CAAC;EAAA,OAAAN,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}