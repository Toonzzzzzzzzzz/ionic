{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { APP_INITIALIZER } from '@angular/core';\nimport { CoreMainMenuRoutingModule } from '@features/mainmenu/mainmenu-routing.module';\nimport { CoreMainMenuTabRoutingModule } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreSitePreferencesRoutingModule } from '@features/settings/settings-site-routing.module';\nimport { CoreSettingsDelegate } from '@features/settings/services/settings-delegate';\nimport { AddonStorageManagerSettingsHandler } from './services/handlers/settings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/features/mainmenu/mainmenu-tab-routing.module\";\nimport * as i2 from \"../../core/features/mainmenu/mainmenu-routing.module\";\nimport * as i3 from \"../../core/features/settings/settings-site-routing.module\";\nconst routes = [{\n  path: '',\n  loadChildren: () => import('@addons/storagemanager/storagemanager-lazy.module').then(m => m.AddonStorageManagerLazyModule)\n}];\nexport class AddonStorageManagerModule {}\n_class = AddonStorageManagerModule;\n_class.ɵfac = function AddonStorageManagerModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    useValue: () => {\n      CoreSettingsDelegate.registerHandler(AddonStorageManagerSettingsHandler.instance);\n    }\n  }],\n  imports: [CoreMainMenuTabRoutingModule.forChild(routes), CoreMainMenuRoutingModule.forChild({\n    children: routes\n  }), CoreSitePreferencesRoutingModule.forChild(routes), CoreMainMenuRoutingModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AddonStorageManagerModule, {\n    imports: [i1.CoreMainMenuTabRoutingModule, i2.CoreMainMenuRoutingModule, i3.CoreSitePreferencesRoutingModule],\n    exports: [CoreMainMenuRoutingModule]\n  });\n})();","map":{"version":3,"names":["APP_INITIALIZER","CoreMainMenuRoutingModule","CoreMainMenuTabRoutingModule","CoreSitePreferencesRoutingModule","CoreSettingsDelegate","AddonStorageManagerSettingsHandler","routes","path","loadChildren","then","m","AddonStorageManagerLazyModule","AddonStorageManagerModule","provide","multi","useValue","registerHandler","instance","imports","forChild","children","i1","i2","i3","exports"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/storagemanager/storagemanager.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { CoreMainMenuRoutingModule } from '@features/mainmenu/mainmenu-routing.module';\nimport { CoreMainMenuTabRoutingModule } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreSitePreferencesRoutingModule } from '@features/settings/settings-site-routing.module';\nimport { CoreSettingsDelegate } from '@features/settings/services/settings-delegate';\nimport { AddonStorageManagerSettingsHandler } from './services/handlers/settings';\n\nconst routes: Routes = [\n    {\n        path: '',\n        loadChildren: () => import('@addons/storagemanager/storagemanager-lazy.module').then(m => m.AddonStorageManagerLazyModule),\n    },\n];\n\n@NgModule({\n    imports: [\n        CoreMainMenuTabRoutingModule.forChild(routes),\n        CoreMainMenuRoutingModule.forChild({ children: routes }),\n        CoreSitePreferencesRoutingModule.forChild(routes),\n    ],\n    exports: [CoreMainMenuRoutingModule],\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useValue: () => {\n                CoreSettingsDelegate.registerHandler(AddonStorageManagerSettingsHandler.instance);\n            },\n        },\n    ],\n})\nexport class AddonStorageManagerModule {}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAmBA,eAAe,QAAQ,eAAe;AAEzD,SAASC,yBAAyB,QAAQ,4CAA4C;AACtF,SAASC,4BAA4B,QAAQ,gDAAgD;AAC7F,SAASC,gCAAgC,QAAQ,iDAAiD;AAClG,SAASC,oBAAoB,QAAQ,+CAA+C;AACpF,SAASC,kCAAkC,QAAQ,8BAA8B;;;;;AAEjF,MAAMC,MAAM,GAAW,CACnB;EACIC,IAAI,EAAE,EAAE;EACRC,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,mDAAmD,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,6BAA6B;CAC5H,CACJ;AAmBD,OAAM,MAAOC,yBAAyB;SAAzBA,yBAAyB;;mBAAzBA,MAAyB;AAAA;;QAAzBA;AAAyB;;aAVvB,CACP;IACIC,OAAO,EAAEb,eAAe;IACxBc,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAEA,CAAA,KAAK;MACXX,oBAAoB,CAACY,eAAe,CAACX,kCAAkC,CAACY,QAAQ,CAAC;IACrF;GACH,CACJ;EAAAC,OAAA,GAbGhB,4BAA4B,CAACiB,QAAQ,CAACb,MAAM,CAAC,EAC7CL,yBAAyB,CAACkB,QAAQ,CAAC;IAAEC,QAAQ,EAAEd;EAAM,CAAE,CAAC,EACxDH,gCAAgC,CAACgB,QAAQ,CAACb,MAAM,CAAC,EAE3CL,yBAAyB;AAAA;;2EAW1BW,yBAAyB;IAAAM,OAAA,GAAAG,EAAA,CAAAnB,4BAAA,EAAAoB,EAAA,CAAArB,yBAAA,EAAAsB,EAAA,CAAApB,gCAAA;IAAAqB,OAAA,GAXxBvB,yBAAyB;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}