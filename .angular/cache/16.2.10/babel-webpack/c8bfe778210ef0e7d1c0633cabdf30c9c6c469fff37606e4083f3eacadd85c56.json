{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AddonQbehaviourInformationItemComponent_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"name\", ctx_r0.question.behaviourSeenInput.name)(\"value\", ctx_r0.question.behaviourSeenInput.value);\n  }\n}\n/**\n * Component to render a \"seen\" hidden input for informationitem question behaviour.\n */\nexport class AddonQbehaviourInformationItemComponent {\n  constructor() {\n    this.buttonClicked = new EventEmitter(); // Will emit when a behaviour button is clicked.\n    this.onAbort = new EventEmitter(); // Should emit an event if the question should be aborted.\n  }\n}\n_class = AddonQbehaviourInformationItemComponent;\n_class.ɵfac = function AddonQbehaviourInformationItemComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-qbehaviour-informationitem\"]],\n  inputs: {\n    question: \"question\",\n    component: \"component\",\n    componentId: \"componentId\",\n    attemptId: \"attemptId\",\n    offlineEnabled: \"offlineEnabled\",\n    contextLevel: \"contextLevel\",\n    contextInstanceId: \"contextInstanceId\",\n    courseId: \"courseId\",\n    review: \"review\",\n    preferredBehaviour: \"preferredBehaviour\"\n  },\n  outputs: {\n    buttonClicked: \"buttonClicked\",\n    onAbort: \"onAbort\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"type\", \"hidden\", 3, \"name\", \"value\", 4, \"ngIf\"], [\"type\", \"hidden\", 3, \"name\", \"value\"]],\n  template: function AddonQbehaviourInformationItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddonQbehaviourInformationItemComponent_input_0_Template, 1, 2, \"input\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.question && ctx.question.behaviourSeenInput);\n    }\n  },\n  dependencies: [i1.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelement","ɵɵproperty","ctx_r0","question","behaviourSeenInput","name","value","AddonQbehaviourInformationItemComponent","constructor","buttonClicked","onAbort","selectors","inputs","component","componentId","attemptId","offlineEnabled","contextLevel","contextInstanceId","courseId","review","preferredBehaviour","outputs","decls","vars","consts","template","AddonQbehaviourInformationItemComponent_Template","rf","ctx","ɵɵtemplate","AddonQbehaviourInformationItemComponent_input_0_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qbehaviour/informationitem/component/informationitem.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qbehaviour/informationitem/component/addon-qbehaviour-informationitem.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CoreQuestionBehaviourButton, CoreQuestionQuestion } from '@features/question/services/question-helper';\n\n/**\n * Component to render a \"seen\" hidden input for informationitem question behaviour.\n */\n@Component({\n    selector: 'addon-qbehaviour-informationitem',\n    templateUrl: 'addon-qbehaviour-informationitem.html',\n})\nexport class AddonQbehaviourInformationItemComponent {\n\n    @Input() question?: CoreQuestionQuestion; // The question.\n    @Input() component?: string; // The component the question belongs to.\n    @Input() componentId?: number; // ID of the component the question belongs to.\n    @Input() attemptId?: number; // Attempt ID.\n    @Input() offlineEnabled?: boolean | string; // Whether the question can be answered in offline.\n    @Input() contextLevel?: string; // The context level.\n    @Input() contextInstanceId?: number; // The instance ID related to the context.\n    @Input() courseId?: number; // Course ID the question belongs to (if any). It can be used to improve performance with filters.\n    @Input() review?: boolean; // Whether the user is in review mode.\n    @Input() preferredBehaviour?: string; // Preferred behaviour.\n    @Output() buttonClicked = new EventEmitter<CoreQuestionBehaviourButton>(); // Will emit when a behaviour button is clicked.\n    @Output() onAbort = new EventEmitter<void>(); // Should emit an event if the question should be aborted.\n\n}\n","<input *ngIf=\"question && question.behaviourSeenInput\" type=\"hidden\" [name]=\"question.behaviourSeenInput.name\"\n    [value]=\"question.behaviourSeenInput.value\" >\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAmCA,YAAY,QAAQ,eAAe;;;;;ICdtEC,EAAA,CAAAC,SAAA,eACiD;;;;IADoBD,EAAA,CAAAE,UAAA,SAAAC,MAAA,CAAAC,QAAA,CAAAC,kBAAA,CAAAC,IAAA,CAAyC,UAAAH,MAAA,CAAAC,QAAA,CAAAC,kBAAA,CAAAE,KAAA;;;ADkB9G;;;AAOA,OAAM,MAAOC,uCAAuC;EAJpDC,YAAA;IAgBc,KAAAC,aAAa,GAAG,IAAIX,YAAY,EAA+B,CAAC,CAAC;IACjE,KAAAY,OAAO,GAAG,IAAIZ,YAAY,EAAQ,CAAC,CAAC;;;SAbrCS,uCAAuC;;mBAAvCA,MAAuC;AAAA;;QAAvCA,MAAuC;EAAAI,SAAA;EAAAC,MAAA;IAAAT,QAAA;IAAAU,SAAA;IAAAC,WAAA;IAAAC,SAAA;IAAAC,cAAA;IAAAC,YAAA;IAAAC,iBAAA;IAAAC,QAAA;IAAAC,MAAA;IAAAC,kBAAA;EAAA;EAAAC,OAAA;IAAAb,aAAA;IAAAC,OAAA;EAAA;EAAAa,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,iDAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCzBpD7B,EAAA,CAAA+B,UAAA,IAAAC,wDAAA,mBACiD;;;MADzChC,EAAA,CAAAE,UAAA,SAAA4B,GAAA,CAAA1B,QAAA,IAAA0B,GAAA,CAAA1B,QAAA,CAAAC,kBAAA,CAA6C"},"metadata":{},"sourceType":"module","externalDependencies":[]}