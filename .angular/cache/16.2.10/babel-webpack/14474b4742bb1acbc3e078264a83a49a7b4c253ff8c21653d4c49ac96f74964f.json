{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonModQuizAccessOfflineAttemptsComponent } from '../../component/offlineattempts';\nimport { AddonModQuizSync } from '@addons/mod/quiz/services/quiz-sync';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support offline attempts access rule.\n */\nexport class AddonModQuizAccessOfflineAttemptsHandlerService {\n  constructor() {\n    this.name = 'AddonModQuizAccessOfflineAttempts';\n    this.ruleName = 'quizaccess_offlineattempts';\n  }\n  /**\n   * @inheritdoc\n   */\n  getFixedPreflightData(quiz, preflightData) {\n    preflightData.confirmdatasaved = '1';\n  }\n  /**\n   * @inheritdoc\n   */\n  getPreflightComponent() {\n    return AddonModQuizAccessOfflineAttemptsComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isPreflightCheckRequired(quiz, attempt, prefetch) {\n    return _asyncToGenerator(function* () {\n      if (prefetch) {\n        // Don't show the warning if the user is prefetching.\n        return false;\n      }\n      if (!attempt) {\n        // User is starting a new attempt, show the warning.\n        return true;\n      }\n      const syncTime = yield AddonModQuizSync.getSyncTime(quiz.id);\n      // Show warning if last sync was a while ago.\n      return Date.now() - AddonModQuizSync.syncInterval > syncTime;\n    })();\n  }\n}\n_class = AddonModQuizAccessOfflineAttemptsHandlerService;\n_class.ɵfac = function AddonModQuizAccessOfflineAttemptsHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModQuizAccessOfflineAttemptsHandler = makeSingleton(AddonModQuizAccessOfflineAttemptsHandlerService);","map":{"version":3,"names":["AddonModQuizAccessOfflineAttemptsComponent","AddonModQuizSync","makeSingleton","AddonModQuizAccessOfflineAttemptsHandlerService","constructor","name","ruleName","getFixedPreflightData","quiz","preflightData","confirmdatasaved","getPreflightComponent","isEnabled","_asyncToGenerator","isPreflightCheckRequired","attempt","prefetch","syncTime","getSyncTime","id","Date","now","syncInterval","factory","ɵfac","providedIn","AddonModQuizAccessOfflineAttemptsHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/accessrules/offlineattempts/services/handlers/offlineattempts.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { AddonModQuizAccessRuleHandler } from '@addons/mod/quiz/services/access-rules-delegate';\nimport { AddonModQuizAttemptWSData, AddonModQuizQuizWSData } from '@addons/mod/quiz/services/quiz';\nimport { AddonModQuizAccessOfflineAttemptsComponent } from '../../component/offlineattempts';\nimport { AddonModQuizSync } from '@addons/mod/quiz/services/quiz-sync';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support offline attempts access rule.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModQuizAccessOfflineAttemptsHandlerService implements AddonModQuizAccessRuleHandler {\n\n    name = 'AddonModQuizAccessOfflineAttempts';\n    ruleName = 'quizaccess_offlineattempts';\n\n    /**\n     * @inheritdoc\n     */\n    getFixedPreflightData(\n        quiz: AddonModQuizQuizWSData,\n        preflightData: Record<string, string>,\n    ): void | Promise<void> {\n        preflightData.confirmdatasaved = '1';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getPreflightComponent(): Type<unknown> | Promise<Type<unknown>> {\n        return AddonModQuizAccessOfflineAttemptsComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isPreflightCheckRequired(\n        quiz: AddonModQuizQuizWSData,\n        attempt?: AddonModQuizAttemptWSData,\n        prefetch?: boolean,\n    ): Promise<boolean> {\n        if (prefetch) {\n            // Don't show the warning if the user is prefetching.\n            return false;\n        }\n\n        if (!attempt) {\n            // User is starting a new attempt, show the warning.\n            return true;\n        }\n\n        const syncTime = await AddonModQuizSync.getSyncTime(quiz.id);\n\n        // Show warning if last sync was a while ago.\n        return Date.now() - AddonModQuizSync.syncInterval > syncTime;\n    }\n\n}\n\nexport const AddonModQuizAccessOfflineAttemptsHandler = makeSingleton(AddonModQuizAccessOfflineAttemptsHandlerService);\n"],"mappings":";;AAkBA,SAASA,0CAA0C,QAAQ,iCAAiC;AAC5F,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,+CAA+C;EAD5DC,YAAA;IAGI,KAAAC,IAAI,GAAG,mCAAmC;IAC1C,KAAAC,QAAQ,GAAG,4BAA4B;;EAEvC;;;EAGAC,qBAAqBA,CACjBC,IAA4B,EAC5BC,aAAqC;IAErCA,aAAa,CAACC,gBAAgB,GAAG,GAAG;EACxC;EAEA;;;EAGAC,qBAAqBA,CAAA;IACjB,OAAOX,0CAA0C;EACrD;EAEA;;;EAGMY,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGMC,wBAAwBA,CAC1BN,IAA4B,EAC5BO,OAAmC,EACnCC,QAAkB;IAAA,OAAAH,iBAAA;MAElB,IAAIG,QAAQ,EAAE;QACV;QACA,OAAO,KAAK;;MAGhB,IAAI,CAACD,OAAO,EAAE;QACV;QACA,OAAO,IAAI;;MAGf,MAAME,QAAQ,SAAShB,gBAAgB,CAACiB,WAAW,CAACV,IAAI,CAACW,EAAE,CAAC;MAE5D;MACA,OAAOC,IAAI,CAACC,GAAG,EAAE,GAAGpB,gBAAgB,CAACqB,YAAY,GAAGL,QAAQ;IAAC;EACjE;;SAnDSd,+CAA+C;;mBAA/CA,MAA+C;AAAA;;SAA/CA,MAA+C;EAAAoB,OAAA,EAA/CpB,MAA+C,CAAAqB,IAAA;EAAAC,UAAA,EADlC;AAAM;AAwDhC,OAAO,MAAMC,wCAAwC,GAAGxB,aAAa,CAACC,+CAA+C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}