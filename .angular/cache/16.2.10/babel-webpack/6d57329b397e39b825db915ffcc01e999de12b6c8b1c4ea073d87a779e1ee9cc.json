{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreTagFeedComponent } from '@features/tag/components/feed/feed';\nimport { CoreTagHelper } from '@features/tag/services/tag-helper';\nimport { makeSingleton } from '@singletons';\nimport { AddonBlog } from '../blog';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support tags.\n */\nexport class AddonBlogTagAreaHandlerService {\n  constructor() {\n    this.name = 'AddonBlogTagAreaHandler';\n    this.type = 'core/post';\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return AddonBlog.isPluginEnabled();\n  }\n  /**\n   * @inheritdoc\n   */\n  parseContent(content) {\n    return _asyncToGenerator(function* () {\n      return CoreTagHelper.parseFeedContent(content);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return CoreTagFeedComponent;\n  }\n}\n_class = AddonBlogTagAreaHandlerService;\n_class.ɵfac = function AddonBlogTagAreaHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonBlogTagAreaHandler = makeSingleton(AddonBlogTagAreaHandlerService);","map":{"version":3,"names":["CoreTagFeedComponent","CoreTagHelper","makeSingleton","AddonBlog","AddonBlogTagAreaHandlerService","constructor","name","type","isEnabled","isPluginEnabled","parseContent","content","_asyncToGenerator","parseFeedContent","getComponent","factory","ɵfac","providedIn","AddonBlogTagAreaHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/blog/services/handlers/tag-area.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\nimport { CoreTagFeedComponent } from '@features/tag/components/feed/feed';\nimport { CoreTagAreaHandler } from '@features/tag/services/tag-area-delegate';\nimport { CoreTagFeedElement, CoreTagHelper } from '@features/tag/services/tag-helper';\nimport { makeSingleton } from '@singletons';\nimport { AddonBlog } from '../blog';\n\n/**\n * Handler to support tags.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonBlogTagAreaHandlerService implements CoreTagAreaHandler {\n\n    name = 'AddonBlogTagAreaHandler';\n    type = 'core/post';\n\n    /**\n     * @inheritdoc\n     */\n    isEnabled(): Promise<boolean> {\n        return AddonBlog.isPluginEnabled();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async parseContent(content: string): Promise<CoreTagFeedElement[]> {\n        return CoreTagHelper.parseFeedContent(content);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<unknown> | Promise<Type<unknown>> {\n        return CoreTagFeedComponent;\n    }\n\n}\nexport const AddonBlogTagAreaHandler = makeSingleton(AddonBlogTagAreaHandlerService);\n"],"mappings":";;AAeA,SAASA,oBAAoB,QAAQ,oCAAoC;AAEzE,SAA6BC,aAAa,QAAQ,mCAAmC;AACrF,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,SAAS,QAAQ,SAAS;;AAEnC;;;AAIA,OAAM,MAAOC,8BAA8B;EAD3CC,YAAA;IAGI,KAAAC,IAAI,GAAG,yBAAyB;IAChC,KAAAC,IAAI,GAAG,WAAW;;EAElB;;;EAGAC,SAASA,CAAA;IACL,OAAOL,SAAS,CAACM,eAAe,EAAE;EACtC;EAEA;;;EAGMC,YAAYA,CAACC,OAAe;IAAA,OAAAC,iBAAA;MAC9B,OAAOX,aAAa,CAACY,gBAAgB,CAACF,OAAO,CAAC;IAAC;EACnD;EAEA;;;EAGAG,YAAYA,CAAA;IACR,OAAOd,oBAAoB;EAC/B;;SAxBSI,8BAA8B;;mBAA9BA,MAA8B;AAAA;;SAA9BA,MAA8B;EAAAW,OAAA,EAA9BX,MAA8B,CAAAY,IAAA;EAAAC,UAAA,EADjB;AAAM;AA4BhC,OAAO,MAAMC,uBAAuB,GAAGhB,aAAa,CAACE,8BAA8B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}