{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonNotificationsListPage } from '@addons/notifications/pages/list/list';\nimport { AddonNotificationsNotificationPage } from '@addons/notifications/pages/notification/notification';\nimport { Injector } from '@angular/core';\nimport { RouterModule, ROUTES } from '@angular/router';\nimport { CoreMainMenuComponentsModule } from '@features/mainmenu/components/components.module';\nimport { buildTabMainRoutes } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreScreen } from '@services/screen';\nimport { AddonNotificationsMainMenuHandlerService } from './services/handlers/mainmenu';\nimport * as i0 from \"@angular/core\";\n/**\n * Build module routes.\n *\n * @param injector Injector.\n * @returns Routes.\n */\nfunction buildRoutes(injector) {\n  return [{\n    path: 'list',\n    data: {\n      mainMenuTabRoot: AddonNotificationsMainMenuHandlerService.PAGE_NAME\n    },\n    component: AddonNotificationsListPage,\n    children: conditionalRoutes([{\n      path: ':id',\n      component: AddonNotificationsNotificationPage\n    }], () => CoreScreen.isTablet)\n  }, ...conditionalRoutes([{\n    path: 'list/:id',\n    component: AddonNotificationsNotificationPage\n  }], () => CoreScreen.isMobile), {\n    path: 'notification',\n    component: AddonNotificationsNotificationPage\n  }, ...buildTabMainRoutes(injector, {\n    redirectTo: 'list',\n    pathMatch: 'full'\n  })];\n}\nexport class AddonNotificationsLazyModule {}\n_class = AddonNotificationsLazyModule;\n_class.ɵfac = function AddonNotificationsLazyModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: ROUTES,\n    multi: true,\n    deps: [Injector],\n    useFactory: buildRoutes\n  }],\n  imports: [CoreSharedModule, CoreMainMenuComponentsModule, RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AddonNotificationsLazyModule, {\n    declarations: [AddonNotificationsListPage, AddonNotificationsNotificationPage],\n    imports: [CoreSharedModule, CoreMainMenuComponentsModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["conditionalRoutes","CoreSharedModule","AddonNotificationsListPage","AddonNotificationsNotificationPage","Injector","RouterModule","ROUTES","CoreMainMenuComponentsModule","buildTabMainRoutes","CoreScreen","AddonNotificationsMainMenuHandlerService","buildRoutes","injector","path","data","mainMenuTabRoot","PAGE_NAME","component","children","isTablet","isMobile","redirectTo","pathMatch","AddonNotificationsLazyModule","provide","multi","deps","useFactory","imports","declarations","exports"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/notifications/notifications-lazy.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonNotificationsListPage } from '@addons/notifications/pages/list/list';\nimport { AddonNotificationsNotificationPage } from '@addons/notifications/pages/notification/notification';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\nimport { CoreMainMenuComponentsModule } from '@features/mainmenu/components/components.module';\n\nimport { buildTabMainRoutes } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreScreen } from '@services/screen';\nimport { AddonNotificationsMainMenuHandlerService } from './services/handlers/mainmenu';\n\n/**\n * Build module routes.\n *\n * @param injector Injector.\n * @returns Routes.\n */\nfunction buildRoutes(injector: Injector): Routes {\n    return [\n        {\n            path: 'list',\n            data: { mainMenuTabRoot: AddonNotificationsMainMenuHandlerService.PAGE_NAME },\n            component: AddonNotificationsListPage,\n            children: conditionalRoutes([\n                {\n                    path: ':id',\n                    component: AddonNotificationsNotificationPage,\n                },\n            ], () => CoreScreen.isTablet),\n        },\n        ...conditionalRoutes([\n            {\n                path: 'list/:id',\n                component: AddonNotificationsNotificationPage,\n            },\n        ], () => CoreScreen.isMobile),\n        {\n            path: 'notification',\n            component: AddonNotificationsNotificationPage,\n        },\n        ...buildTabMainRoutes(injector, {\n            redirectTo: 'list',\n            pathMatch: 'full',\n        }),\n    ];\n}\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n        CoreMainMenuComponentsModule,\n    ],\n    declarations: [\n        AddonNotificationsListPage,\n        AddonNotificationsNotificationPage,\n    ],\n    exports: [RouterModule],\n    providers: [\n        {\n            provide: ROUTES,\n            multi: true,\n            deps: [Injector],\n            useFactory: buildRoutes,\n        },\n    ],\n})\nexport class AddonNotificationsLazyModule {}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,0BAA0B,QAAQ,uCAAuC;AAClF,SAASC,kCAAkC,QAAQ,uDAAuD;AAC1G,SAASC,QAAQ,QAAkB,eAAe;AAClD,SAASC,YAAY,EAAEC,MAAM,QAAgB,iBAAiB;AAC9D,SAASC,4BAA4B,QAAQ,iDAAiD;AAE9F,SAASC,kBAAkB,QAAQ,gDAAgD;AACnF,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,wCAAwC,QAAQ,8BAA8B;;AAEvF;;;;;;AAMA,SAASC,WAAWA,CAACC,QAAkB;EACnC,OAAO,CACH;IACIC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MAAEC,eAAe,EAAEL,wCAAwC,CAACM;IAAS,CAAE;IAC7EC,SAAS,EAAEf,0BAA0B;IACrCgB,QAAQ,EAAElB,iBAAiB,CAAC,CACxB;MACIa,IAAI,EAAE,KAAK;MACXI,SAAS,EAAEd;KACd,CACJ,EAAE,MAAMM,UAAU,CAACU,QAAQ;GAC/B,EACD,GAAGnB,iBAAiB,CAAC,CACjB;IACIa,IAAI,EAAE,UAAU;IAChBI,SAAS,EAAEd;GACd,CACJ,EAAE,MAAMM,UAAU,CAACW,QAAQ,CAAC,EAC7B;IACIP,IAAI,EAAE,cAAc;IACpBI,SAAS,EAAEd;GACd,EACD,GAAGK,kBAAkB,CAACI,QAAQ,EAAE;IAC5BS,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;GACd,CAAC,CACL;AACL;AAqBA,OAAM,MAAOC,4BAA4B;SAA5BA,4BAA4B;;mBAA5BA,MAA4B;AAAA;;QAA5BA;AAA4B;;aAT1B,CACP;IACIC,OAAO,EAAElB,MAAM;IACfmB,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,CAACtB,QAAQ,CAAC;IAChBuB,UAAU,EAAEhB;GACf,CACJ;EAAAiB,OAAA,GAfG3B,gBAAgB,EAChBM,4BAA4B,EAMtBF,YAAY;AAAA;;2EAUbkB,4BAA4B;IAAAM,YAAA,GAbjC3B,0BAA0B,EAC1BC,kCAAkC;IAAAyB,OAAA,GALlC3B,gBAAgB,EAChBM,4BAA4B;IAAAuB,OAAA,GAMtBzB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}