{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModAssignListFilterName, AddonModAssignSubmissionsSource } from '../../classes/submissions-source';\nimport { AddonModAssignProvider } from '../../services/assign';\nimport { AddonModAssignSyncProvider } from '../../services/assign-sync';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/empty-box/empty-box\";\nimport * as i3 from \"../../../../../core/components/group-selector/group-selector\";\nimport * as i4 from \"../../../../../core/components/loading/loading\";\nimport * as i5 from \"../../../../../core/components/split-view/split-view\";\nimport * as i6 from \"../../../../../core/components/user-avatar/user-avatar\";\nimport * as i7 from \"../../../../../core/directives/format-text\";\nimport * as i8 from \"../../../../../core/directives/content\";\nimport * as i9 from \"@ionic/angular\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const submission_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(submission_r2.userfullname);\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const submission_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(2, 2, \"addon.mod_assign.hiddenuser\"), \"\", submission_r2.blindid, \" \");\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵelement(1, \"core-format-text\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const submission_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", submission_r2.groupname)(\"contextInstanceId\", ctx_r10.courseId);\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.noteam\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_6_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.multipleteams\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_6_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_assign.defaultteam\"), \" \");\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtemplate(1, AddonModAssignSubmissionListPage_ng_container_17_p_6_span_1_Template, 2, 2, \"span\", 15);\n    i0.ɵɵtemplate(2, AddonModAssignSubmissionListPage_ng_container_17_p_6_span_2_Template, 3, 3, \"span\", 16);\n    i0.ɵɵtemplate(3, AddonModAssignSubmissionListPage_ng_container_17_p_6_span_3_Template, 3, 3, \"span\", 16);\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionListPage_ng_container_17_p_6_span_4_Template, 3, 3, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const submission_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", submission_r2.groupname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.assign.preventsubmissionnotingroup && !submission_r2.groupname && submission_r2.noGroups && !submission_r2.blindid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.assign.preventsubmissionnotingroup && !submission_r2.groupname && submission_r2.manyGroups && !submission_r2.blindid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.assign.preventsubmissionnotingroup && !submission_r2.groupname);\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"ion-badge\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const submission_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", submission_r2.statusColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", submission_r2.statusTranslated, \" \");\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"ion-badge\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const submission_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", submission_r2.gradingColor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 2, submission_r2.gradingStatusTranslationId), \" \");\n  }\n}\nfunction AddonModAssignSubmissionListPage_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 10);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionListPage_ng_container_17_Template_ion_item_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const submission_r2 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.submissions.select(submission_r2));\n    });\n    i0.ɵɵelement(2, \"core-user-avatar\", 11);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtemplate(4, AddonModAssignSubmissionListPage_ng_container_17_p_4_Template, 2, 1, \"p\", 12);\n    i0.ɵɵtemplate(5, AddonModAssignSubmissionListPage_ng_container_17_p_5_Template, 3, 4, \"p\", 12);\n    i0.ɵɵtemplate(6, AddonModAssignSubmissionListPage_ng_container_17_p_6_Template, 5, 4, \"p\", 13);\n    i0.ɵɵtemplate(7, AddonModAssignSubmissionListPage_ng_container_17_p_7_Template, 3, 2, \"p\", 13);\n    i0.ɵɵtemplate(8, AddonModAssignSubmissionListPage_ng_container_17_p_8_Template, 4, 4, \"p\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const submission_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵattribute(\"aria-current\", ctx_r0.submissions.getItemAriaCurrent(submission_r2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", submission_r2)(\"linkProfile\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", submission_r2.userfullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !submission_r2.userfullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.assign && ctx_r0.assign.teamsubmission);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", submission_r2.statusTranslated);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", submission_r2.gradingStatusTranslationId);\n  }\n}\nfunction AddonModAssignSubmissionListPage_core_empty_box_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 21);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"addon.mod_assign.submissionstatus_\"));\n  }\n}\n/**\n * Page that displays a list of submissions of an assignment.\n */\nexport class AddonModAssignSubmissionListPage {\n  constructor() {\n    this.title = '';\n    // Update data if some grade changes.\n    this.gradedObserver = CoreEvents.on(AddonModAssignProvider.GRADED_EVENT, data => {\n      var _this$submissions$get;\n      if (this.submissions.loaded && this.submissions.getSource().assign && data.assignmentId == ((_this$submissions$get = this.submissions.getSource().assign) === null || _this$submissions$get === void 0 ? void 0 : _this$submissions$get.id) && data.userId == CoreSites.getCurrentSiteUserId()) {\n        // Grade changed, refresh the data.\n        this.refreshAllData(true);\n      }\n    }, CoreSites.getCurrentSiteId());\n    // Refresh data if this assign is synchronized.\n    const events = [AddonModAssignSyncProvider.AUTO_SYNCED, AddonModAssignSyncProvider.MANUAL_SYNCED];\n    this.syncObserver = CoreEvents.onMultiple(events, data => {\n      if (!this.submissions.loaded || 'context' in data && data.context == 'submission-list') {\n        return;\n      }\n      this.refreshAllData(false);\n    }, CoreSites.getCurrentSiteId());\n    try {\n      const moduleId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n      const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n      const groupId = CoreNavigator.getRouteNumberParam('groupId') || 0;\n      const selectedStatus = CoreNavigator.getRouteParam('status');\n      const submissionsSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonModAssignSubmissionsSource, [courseId, moduleId, selectedStatus]);\n      submissionsSource.groupId = groupId;\n      this.sourceUnsubscribe = submissionsSource.addListener({\n        onItemsUpdated: () => {\n          var _this$submissions$get2;\n          this.title = ((_this$submissions$get2 = this.submissions.getSource().assign) === null || _this$submissions$get2 === void 0 ? void 0 : _this$submissions$get2.name) || this.title;\n        }\n      });\n      this.submissions = new CoreListItemsManager(submissionsSource, AddonModAssignSubmissionListPage);\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n      return;\n    }\n  }\n  get assign() {\n    return this.submissions.getSource().assign;\n  }\n  get groupInfo() {\n    return this.submissions.getSource().groupInfo;\n  }\n  get moduleId() {\n    return this.submissions.getSource().MODULE_ID;\n  }\n  get courseId() {\n    return this.submissions.getSource().COURSE_ID;\n  }\n  get groupId() {\n    return this.submissions.getSource().groupId;\n  }\n  set groupId(value) {\n    this.submissions.getSource().groupId = value;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    const selectedStatus = this.submissions.getSource().SELECTED_STATUS;\n    this.title = Translate.instant(selectedStatus ? selectedStatus === AddonModAssignListFilterName.NEED_GRADING ? 'addon.mod_assign.numberofsubmissionsneedgrading' : `addon.mod_assign.submissionstatus_${selectedStatus}` : 'addon.mod_assign.numberofparticipants');\n    this.fetchAssignment(true).finally(() => {\n      this.submissions.start(this.splitView);\n    });\n  }\n  /**\n   * Fetch assignment data.\n   *\n   * @param sync Whether to try to synchronize data.\n   * @returns Promise resolved when done.\n   */\n  fetchAssignment(sync = false) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this.submissions.getSource().loadAssignment(sync);\n        if (!_this.assign) {\n          return;\n        }\n        CoreAnalytics.logEvent({\n          type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n          ws: 'mod_assign_get_submissions',\n          name: Translate.instant('addon.mod_assign.subpagetitle', {\n            contextname: _this.assign.name,\n            subpage: Translate.instant('addon.mod_assign.grading')\n          }),\n          data: {\n            assignid: _this.assign.id,\n            category: 'assign'\n          },\n          url: `/mod/assign/view.php?id=${_this.assign.cmid}&action=grading`\n        });\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n      }\n    })();\n  }\n  /**\n   * Refresh all the data.\n   *\n   * @param sync Whether to try to synchronize data.\n   * @returns Promise resolved when done.\n   */\n  refreshAllData(sync) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this2.submissions.getSource().invalidateCache();\n      } finally {\n        _this2.fetchAssignment(sync);\n      }\n    })();\n  }\n  /**\n   * Refresh the list.\n   *\n   * @param refresher Refresher.\n   */\n  refreshList(refresher) {\n    this.refreshAllData(true).finally(() => {\n      refresher === null || refresher === void 0 || refresher.complete();\n    });\n  }\n  /**\n   * Reload submissions list.\n   */\n  reloadSubmissions() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.submissions.reload();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$gradedObserver, _this$syncObserver;\n    (_this$gradedObserver = this.gradedObserver) === null || _this$gradedObserver === void 0 || _this$gradedObserver.off();\n    (_this$syncObserver = this.syncObserver) === null || _this$syncObserver === void 0 || _this$syncObserver.off();\n    this.submissions.destroy();\n    this.sourceUnsubscribe && this.sourceUnsubscribe();\n  }\n}\n_class = AddonModAssignSubmissionListPage;\n_class.ɵfac = function AddonModAssignSubmissionListPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-assign-submission-list\"]],\n  viewQuery: function AddonModAssignSubmissionListPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreSplitViewComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.splitView = _t.first);\n    }\n  },\n  decls: 19,\n  vars: 16,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [\"slot\", \"end\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [3, \"groupInfo\", \"selected\", \"courseId\", \"selectedChange\"], [4, \"ngFor\", \"ngForOf\"], [\"icon\", \"fas-file-signature\", 3, \"message\", 4, \"ngIf\"], [\"button\", \"\", 1, \"ion-text-wrap\", 3, \"detail\", \"click\"], [\"slot\", \"start\", 3, \"user\", \"linkProfile\"], [\"class\", \"item-heading\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"item-heading\"], [\"class\", \"core-groupname\", 4, \"ngIf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"core-groupname\"], [\"contextLevel\", \"course\", 3, \"text\", \"contextInstanceId\"], [1, \"text-danger\"], [1, \"ion-text-center\", \"ion-text-wrap\", 3, \"color\"], [\"icon\", \"fas-file-signature\", 3, \"message\"]],\n  template: function AddonModAssignSubmissionListPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵelement(7, \"core-format-text\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"ion-buttons\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"core-split-view\")(11, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModAssignSubmissionListPage_Template_ion_refresher_ionRefresh_11_listener($event) {\n        return ctx.refreshList($event.target);\n      });\n      i0.ɵɵelement(12, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"core-loading\", 6)(15, \"ion-list\")(16, \"core-group-selector\", 7);\n      i0.ɵɵlistener(\"selectedChange\", function AddonModAssignSubmissionListPage_Template_core_group_selector_selectedChange_16_listener($event) {\n        return ctx.groupId = $event;\n      })(\"selectedChange\", function AddonModAssignSubmissionListPage_Template_core_group_selector_selectedChange_16_listener() {\n        return ctx.reloadSubmissions();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AddonModAssignSubmissionListPage_ng_container_17_Template, 9, 9, \"ng-container\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, AddonModAssignSubmissionListPage_core_empty_box_18_Template, 2, 3, \"core-empty-box\", 9);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 12, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"text\", ctx.title)(\"contextInstanceId\", ctx.moduleId)(\"courseId\", ctx.courseId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.submissions.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(13, 14, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.submissions.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"groupInfo\", ctx.groupInfo)(\"selected\", ctx.groupId)(\"courseId\", ctx.courseId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.submissions.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.submissions || ctx.submissions.empty);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreEmptyBoxComponent, i3.CoreGroupSelectorComponent, i4.CoreLoadingComponent, i5.CoreSplitViewComponent, i6.CoreUserAvatarComponent, i7.CoreFormatTextDirective, i8.CoreContentDirective, i9.IonBadge, i9.IonButtons, i9.IonContent, i9.IonHeader, i9.IonItem, i9.IonLabel, i9.IonList, i9.IonRefresher, i9.IonRefresherContent, i9.IonTitle, i9.IonToolbar, i9.IonBackButton, i10.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreListItemsManager","CoreRoutedItemsManagerSourcesTracker","CoreSplitViewComponent","CoreNavigator","CoreSites","CoreDomUtils","Translate","CoreEvents","AddonModAssignListFilterName","AddonModAssignSubmissionsSource","AddonModAssignProvider","AddonModAssignSyncProvider","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","submission_r2","userfullname","ɵɵtextInterpolate2","ɵɵpipeBind1","blindid","ɵɵelement","ɵɵproperty","groupname","ctx_r10","courseId","ɵɵtextInterpolate1","ɵɵtemplate","AddonModAssignSubmissionListPage_ng_container_17_p_6_span_1_Template","AddonModAssignSubmissionListPage_ng_container_17_p_6_span_2_Template","AddonModAssignSubmissionListPage_ng_container_17_p_6_span_3_Template","AddonModAssignSubmissionListPage_ng_container_17_p_6_span_4_Template","ctx_r5","assign","preventsubmissionnotingroup","noGroups","manyGroups","statusColor","statusTranslated","gradingColor","gradingStatusTranslationId","ɵɵelementContainerStart","ɵɵlistener","AddonModAssignSubmissionListPage_ng_container_17_Template_ion_item_click_1_listener","restoredCtx","ɵɵrestoreView","_r19","$implicit","ctx_r18","ɵɵnextContext","ɵɵresetView","submissions","select","AddonModAssignSubmissionListPage_ng_container_17_p_4_Template","AddonModAssignSubmissionListPage_ng_container_17_p_5_Template","AddonModAssignSubmissionListPage_ng_container_17_p_6_Template","AddonModAssignSubmissionListPage_ng_container_17_p_7_Template","AddonModAssignSubmissionListPage_ng_container_17_p_8_Template","ɵɵelementContainerEnd","ɵɵattribute","ctx_r0","getItemAriaCurrent","teamsubmission","AddonModAssignSubmissionListPage","constructor","title","gradedObserver","on","GRADED_EVENT","data","_this$submissions$get","loaded","getSource","assignmentId","id","userId","getCurrentSiteUserId","refreshAllData","getCurrentSiteId","events","AUTO_SYNCED","MANUAL_SYNCED","syncObserver","onMultiple","context","moduleId","getRequiredRouteNumberParam","groupId","getRouteNumberParam","selectedStatus","getRouteParam","submissionsSource","getOrCreateSource","sourceUnsubscribe","addListener","onItemsUpdated","_this$submissions$get2","name","error","showErrorModal","back","groupInfo","MODULE_ID","COURSE_ID","value","ngAfterViewInit","SELECTED_STATUS","instant","NEED_GRADING","fetchAssignment","finally","start","splitView","sync","_this","_asyncToGenerator","loadAssignment","logEvent","type","VIEW_ITEM_LIST","ws","contextname","subpage","assignid","category","url","cmid","showErrorModalDefault","_this2","invalidateCache","refreshList","refresher","complete","reloadSubmissions","_this3","reload","ngOnDestroy","_this$gradedObserver","_this$syncObserver","off","destroy","selectors","viewQuery","AddonModAssignSubmissionListPage_Query","rf","ctx","AddonModAssignSubmissionListPage_Template_ion_refresher_ionRefresh_11_listener","$event","target","AddonModAssignSubmissionListPage_Template_core_group_selector_selectedChange_16_listener","AddonModAssignSubmissionListPage_ng_container_17_Template","AddonModAssignSubmissionListPage_core_empty_box_18_Template","ɵɵpropertyInterpolate","items","empty"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/pages/submission-list/submission-list.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/pages/submission-list/submission-list.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreGroupInfo } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport {\n    AddonModAssignListFilterName,\n    AddonModAssignSubmissionForList,\n    AddonModAssignSubmissionsSource,\n} from '../../classes/submissions-source';\nimport { AddonModAssignAssign, AddonModAssignProvider } from '../../services/assign';\nimport {\n    AddonModAssignSyncProvider,\n    AddonModAssignManualSyncData,\n    AddonModAssignAutoSyncData,\n} from '../../services/assign-sync';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that displays a list of submissions of an assignment.\n */\n@Component({\n    selector: 'page-addon-mod-assign-submission-list',\n    templateUrl: 'submission-list.html',\n})\nexport class AddonModAssignSubmissionListPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    title = '';\n    submissions!: CoreListItemsManager<AddonModAssignSubmissionForList, AddonModAssignSubmissionsSource>; // List of submissions\n\n    protected gradedObserver: CoreEventObserver; // Observer to refresh data when a grade changes.\n    protected syncObserver: CoreEventObserver; // Observer to refresh data when the async is synchronized.\n    protected sourceUnsubscribe?: () => void;\n\n    constructor() {\n        // Update data if some grade changes.\n        this.gradedObserver = CoreEvents.on(\n            AddonModAssignProvider.GRADED_EVENT,\n            (data) => {\n                if (\n                    this.submissions.loaded &&\n                    this.submissions.getSource().assign &&\n                    data.assignmentId == this.submissions.getSource().assign?.id &&\n                    data.userId == CoreSites.getCurrentSiteUserId()\n                ) {\n                    // Grade changed, refresh the data.\n                    this.refreshAllData(true);\n                }\n            },\n            CoreSites.getCurrentSiteId(),\n        );\n\n        // Refresh data if this assign is synchronized.\n        const events = [AddonModAssignSyncProvider.AUTO_SYNCED, AddonModAssignSyncProvider.MANUAL_SYNCED];\n        this.syncObserver = CoreEvents.onMultiple<AddonModAssignAutoSyncData | AddonModAssignManualSyncData>(\n            events,\n            (data) => {\n                if (!this.submissions.loaded || ('context' in data && data.context == 'submission-list')) {\n                    return;\n                }\n\n                this.refreshAllData(false);\n            },\n            CoreSites.getCurrentSiteId(),\n        );\n\n        try {\n            const moduleId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            const groupId = CoreNavigator.getRouteNumberParam('groupId') || 0;\n            const selectedStatus = CoreNavigator.getRouteParam<AddonModAssignListFilterName>('status');\n            const submissionsSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                AddonModAssignSubmissionsSource,\n                [courseId, moduleId, selectedStatus],\n            );\n\n            submissionsSource.groupId = groupId;\n            this.sourceUnsubscribe = submissionsSource.addListener({\n                onItemsUpdated: () => {\n                    this.title = this.submissions.getSource().assign?.name || this.title;\n                },\n            });\n\n            this.submissions = new CoreListItemsManager(\n                submissionsSource,\n                AddonModAssignSubmissionListPage,\n            );\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n    }\n\n    get assign(): AddonModAssignAssign | undefined {\n        return this.submissions.getSource().assign;\n    }\n\n    get groupInfo(): CoreGroupInfo {\n        return this.submissions.getSource().groupInfo;\n    }\n\n    get moduleId(): number {\n        return this.submissions.getSource().MODULE_ID;\n    }\n\n    get courseId(): number {\n        return this.submissions.getSource().COURSE_ID;\n    }\n\n    get groupId(): number {\n        return this.submissions.getSource().groupId;\n    }\n\n    set groupId(value: number) {\n        this.submissions.getSource().groupId = value;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngAfterViewInit(): void {\n        const selectedStatus = this.submissions.getSource().SELECTED_STATUS;\n        this.title = Translate.instant(\n            selectedStatus\n                ? (\n                    selectedStatus === AddonModAssignListFilterName.NEED_GRADING\n                        ? 'addon.mod_assign.numberofsubmissionsneedgrading'\n                        : `addon.mod_assign.submissionstatus_${selectedStatus}`\n                )\n                : 'addon.mod_assign.numberofparticipants',\n        );\n\n        this.fetchAssignment(true).finally(() => {\n            this.submissions.start(this.splitView);\n        });\n    }\n\n    /**\n     * Fetch assignment data.\n     *\n     * @param sync Whether to try to synchronize data.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchAssignment(sync = false): Promise<void> {\n        try {\n            await this.submissions.getSource().loadAssignment(sync);\n\n            if (!this.assign) {\n                return;\n            }\n\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'mod_assign_get_submissions',\n                name: Translate.instant('addon.mod_assign.subpagetitle', {\n                    contextname: this.assign.name,\n                    subpage: Translate.instant('addon.mod_assign.grading'),\n                }),\n                data: { assignid: this.assign.id, category: 'assign' },\n                url: `/mod/assign/view.php?id=${this.assign.cmid}&action=grading`,\n            });\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n        }\n    }\n\n    /**\n     * Refresh all the data.\n     *\n     * @param sync Whether to try to synchronize data.\n     * @returns Promise resolved when done.\n     */\n    protected async refreshAllData(sync?: boolean): Promise<void> {\n        try {\n            await this.submissions.getSource().invalidateCache();\n        } finally {\n            this.fetchAssignment(sync);\n        }\n    }\n\n    /**\n     * Refresh the list.\n     *\n     * @param refresher Refresher.\n     */\n    refreshList(refresher?: HTMLIonRefresherElement): void {\n        this.refreshAllData(true).finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Reload submissions list.\n     */\n    async reloadSubmissions(): Promise<void> {\n        await this.submissions.reload();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.gradedObserver?.off();\n        this.syncObserver?.off();\n        this.submissions.destroy();\n        this.sourceUnsubscribe && this.sourceUnsubscribe();\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                <core-format-text [text]=\"title\" contextLevel=\"module\" [contextInstanceId]=\"moduleId\" [courseId]=\"courseId\" />\n            </h1>\n        </ion-title>\n\n        <ion-buttons slot=\"end\" />\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <core-split-view>\n        <ion-refresher slot=\"fixed\" [disabled]=\"!submissions.loaded\" (ionRefresh)=\"refreshList($event.target)\">\n            <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n        </ion-refresher>\n        <core-loading [hideUntil]=\"submissions.loaded\">\n            <ion-list>\n                <core-group-selector [groupInfo]=\"groupInfo\" [(selected)]=\"groupId\" (selectedChange)=\"reloadSubmissions()\"\n                    [courseId]=\"courseId\" />\n\n                <!-- List of submissions. -->\n                <ng-container *ngFor=\"let submission of submissions.items\">\n                    <ion-item class=\"ion-text-wrap\" (click)=\"submissions.select(submission)\" button\n                        [attr.aria-current]=\"submissions.getItemAriaCurrent(submission)\" [detail]=\"true\">\n                        <core-user-avatar [user]=\"submission\" [linkProfile]=\"false\" slot=\"start\" />\n                        <ion-label>\n                            <p class=\"item-heading\" *ngIf=\"submission.userfullname\">{{submission.userfullname}}</p>\n                            <p class=\"item-heading\" *ngIf=\"!submission.userfullname\">\n                                {{ 'addon.mod_assign.hiddenuser' | translate }}{{submission.blindid}}\n                            </p>\n                            <p *ngIf=\"assign && assign!.teamsubmission\">\n                                <span *ngIf=\"submission.groupname\" class=\"core-groupname\">\n                                    <core-format-text [text]=\"submission.groupname\" contextLevel=\"course\" [contextInstanceId]=\"courseId\" />\n                                </span>\n                                <span *ngIf=\"assign!.preventsubmissionnotingroup && !submission.groupname && submission.noGroups\n                                    && !submission.blindid\" class=\"text-danger\">\n                                    {{ 'addon.mod_assign.noteam' | translate }}\n                                </span>\n                                <span *ngIf=\"assign!.preventsubmissionnotingroup && !submission.groupname && submission.manyGroups\n                                    && !submission.blindid\" class=\"text-danger\">\n                                    {{ 'addon.mod_assign.multipleteams' | translate }}\n                                </span>\n                                <span *ngIf=\"!assign!.preventsubmissionnotingroup && !submission.groupname\">\n                                    {{ 'addon.mod_assign.defaultteam' | translate }}\n                                </span>\n                            </p>\n                            <p *ngIf=\"submission.statusTranslated\">\n                                <ion-badge class=\"ion-text-center ion-text-wrap\" [color]=\"submission.statusColor\">\n                                    {{ submission.statusTranslated }}\n                                </ion-badge>\n                            </p>\n                            <p *ngIf=\"submission.gradingStatusTranslationId\">\n                                <ion-badge class=\"ion-text-center ion-text-wrap\" [color]=\"submission.gradingColor\">\n                                    {{ submission.gradingStatusTranslationId | translate }}\n                                </ion-badge>\n                            </p>\n                        </ion-label>\n                    </ion-item>\n                </ng-container>\n            </ion-list>\n\n            <core-empty-box *ngIf=\"!submissions || submissions.empty\" icon=\"fas-file-signature\"\n                [message]=\"'addon.mod_assign.submissionstatus_' | translate\" />\n        </core-loading>\n    </core-split-view>\n</ion-content>\n"],"mappings":";;AAeA,SAASA,oBAAoB,QAAQ,8CAA8C;AACnF,SAASC,oCAAoC,QAAQ,gEAAgE;AACrH,SAASC,sBAAsB,QAAQ,mCAAmC;AAE1E,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAA4BC,UAAU,QAAQ,oBAAoB;AAClE,SACIC,4BAA4B,EAE5BC,+BAA+B,QAC5B,kCAAkC;AACzC,SAA+BC,sBAAsB,QAAQ,uBAAuB;AACpF,SACIC,0BAA0B,QAGvB,4BAA4B;AACnC,SAASC,aAAa,EAAEC,sBAAsB,QAAQ,qBAAqB;;;;;;;;;;;;;;ICJ/CC,EAAA,CAAAC,cAAA,YAAwD;IAAAD,EAAA,CAAAE,MAAA,GAA2B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAA/BH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,iBAAA,CAAAC,aAAA,CAAAC,YAAA,CAA2B;;;;;IACnFP,EAAA,CAAAC,cAAA,YAAyD;IACrDD,EAAA,CAAAE,MAAA,GACJ;;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IADAH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAQ,kBAAA,MAAAR,EAAA,CAAAS,WAAA,2CAAAH,aAAA,CAAAI,OAAA,MACJ;;;;;IAEIV,EAAA,CAAAC,cAAA,eAA0D;IACtDD,EAAA,CAAAW,SAAA,2BAAuG;IAC3GX,EAAA,CAAAG,YAAA,EAAO;;;;;IADeH,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAY,UAAA,SAAAN,aAAA,CAAAO,SAAA,CAA6B,sBAAAC,OAAA,CAAAC,QAAA;;;;;IAEnDf,EAAA,CAAAC,cAAA,eACgD;IAC5CD,EAAA,CAAAE,MAAA,GACJ;;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;IADHH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAgB,kBAAA,MAAAhB,EAAA,CAAAS,WAAA,uCACJ;;;;;IACAT,EAAA,CAAAC,cAAA,eACgD;IAC5CD,EAAA,CAAAE,MAAA,GACJ;;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;IADHH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAgB,kBAAA,MAAAhB,EAAA,CAAAS,WAAA,8CACJ;;;;;IACAT,EAAA,CAAAC,cAAA,WAA4E;IACxED,EAAA,CAAAE,MAAA,GACJ;;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;IADHH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAgB,kBAAA,MAAAhB,EAAA,CAAAS,WAAA,4CACJ;;;;;IAdJT,EAAA,CAAAC,cAAA,QAA4C;IACxCD,EAAA,CAAAiB,UAAA,IAAAC,oEAAA,mBAEO;IACPlB,EAAA,CAAAiB,UAAA,IAAAE,oEAAA,mBAGO;IACPnB,EAAA,CAAAiB,UAAA,IAAAG,oEAAA,mBAGO;IACPpB,EAAA,CAAAiB,UAAA,IAAAI,oEAAA,mBAEO;IACXrB,EAAA,CAAAG,YAAA,EAAI;;;;;IAdOH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAY,UAAA,SAAAN,aAAA,CAAAO,SAAA,CAA0B;IAG1Bb,EAAA,CAAAI,SAAA,GACmB;IADnBJ,EAAA,CAAAY,UAAA,SAAAU,MAAA,CAAAC,MAAA,CAAAC,2BAAA,KAAAlB,aAAA,CAAAO,SAAA,IAAAP,aAAA,CAAAmB,QAAA,KAAAnB,aAAA,CAAAI,OAAA,CACmB;IAGnBV,EAAA,CAAAI,SAAA,GACmB;IADnBJ,EAAA,CAAAY,UAAA,SAAAU,MAAA,CAAAC,MAAA,CAAAC,2BAAA,KAAAlB,aAAA,CAAAO,SAAA,IAAAP,aAAA,CAAAoB,UAAA,KAAApB,aAAA,CAAAI,OAAA,CACmB;IAGnBV,EAAA,CAAAI,SAAA,GAAmE;IAAnEJ,EAAA,CAAAY,UAAA,UAAAU,MAAA,CAAAC,MAAA,CAAAC,2BAAA,KAAAlB,aAAA,CAAAO,SAAA,CAAmE;;;;;IAI9Eb,EAAA,CAAAC,cAAA,QAAuC;IAE/BD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;IAFqCH,EAAA,CAAAI,SAAA,GAAgC;IAAhCJ,EAAA,CAAAY,UAAA,UAAAN,aAAA,CAAAqB,WAAA,CAAgC;IAC7E3B,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAgB,kBAAA,MAAAV,aAAA,CAAAsB,gBAAA,MACJ;;;;;IAEJ5B,EAAA,CAAAC,cAAA,QAAiD;IAEzCD,EAAA,CAAAE,MAAA,GACJ;;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;IAFqCH,EAAA,CAAAI,SAAA,GAAiC;IAAjCJ,EAAA,CAAAY,UAAA,UAAAN,aAAA,CAAAuB,YAAA,CAAiC;IAC9E7B,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAgB,kBAAA,MAAAhB,EAAA,CAAAS,WAAA,OAAAH,aAAA,CAAAwB,0BAAA,OACJ;;;;;;IAjChB9B,EAAA,CAAA+B,uBAAA,GAA2D;IACvD/B,EAAA,CAAAC,cAAA,mBACqF;IADrDD,EAAA,CAAAgC,UAAA,mBAAAC,oFAAA;MAAA,MAAAC,WAAA,GAAAlC,EAAA,CAAAmC,aAAA,CAAAC,IAAA;MAAA,MAAA9B,aAAA,GAAA4B,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAAtC,EAAA,CAAAuC,aAAA;MAAA,OAASvC,EAAA,CAAAwC,WAAA,CAAAF,OAAA,CAAAG,WAAA,CAAAC,MAAA,CAAApC,aAAA,CAA8B;IAAA,EAAC;IAEpEN,EAAA,CAAAW,SAAA,2BAA2E;IAC3EX,EAAA,CAAAC,cAAA,gBAAW;IACPD,EAAA,CAAAiB,UAAA,IAAA0B,6DAAA,gBAAuF;IACvF3C,EAAA,CAAAiB,UAAA,IAAA2B,6DAAA,gBAEI;IACJ5C,EAAA,CAAAiB,UAAA,IAAA4B,6DAAA,gBAeI;IACJ7C,EAAA,CAAAiB,UAAA,IAAA6B,6DAAA,gBAII;IACJ9C,EAAA,CAAAiB,UAAA,IAAA8B,6DAAA,gBAII;IACR/C,EAAA,CAAAG,YAAA,EAAY;IAEpBH,EAAA,CAAAgD,qBAAA,EAAe;;;;;IAnC0DhD,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAY,UAAA,gBAAe;IAAhFZ,EAAA,CAAAiD,WAAA,iBAAAC,MAAA,CAAAT,WAAA,CAAAU,kBAAA,CAAA7C,aAAA,EAAgE;IAC9CN,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAY,UAAA,SAAAN,aAAA,CAAmB;IAERN,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAY,UAAA,SAAAN,aAAA,CAAAC,YAAA,CAA6B;IAC7BP,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAY,UAAA,UAAAN,aAAA,CAAAC,YAAA,CAA8B;IAGnDP,EAAA,CAAAI,SAAA,GAAsC;IAAtCJ,EAAA,CAAAY,UAAA,SAAAsC,MAAA,CAAA3B,MAAA,IAAA2B,MAAA,CAAA3B,MAAA,CAAA6B,cAAA,CAAsC;IAgBtCpD,EAAA,CAAAI,SAAA,GAAiC;IAAjCJ,EAAA,CAAAY,UAAA,SAAAN,aAAA,CAAAsB,gBAAA,CAAiC;IAKjC5B,EAAA,CAAAI,SAAA,GAA2C;IAA3CJ,EAAA,CAAAY,UAAA,SAAAN,aAAA,CAAAwB,0BAAA,CAA2C;;;;;IAU/D9B,EAAA,CAAAW,SAAA,yBACmE;;;;IAA/DX,EAAA,CAAAY,UAAA,YAAAZ,EAAA,CAAAS,WAAA,6CAA4D;;;AD9B5E;;;AAOA,OAAM,MAAO4C,gCAAgC;EAWzCC,YAAA;IAPA,KAAAC,KAAK,GAAG,EAAE;IAQN;IACA,IAAI,CAACC,cAAc,GAAG/D,UAAU,CAACgE,EAAE,CAC/B7D,sBAAsB,CAAC8D,YAAY,EAClCC,IAAI,IAAI;MAAA,IAAAC,qBAAA;MACL,IACI,IAAI,CAACnB,WAAW,CAACoB,MAAM,IACvB,IAAI,CAACpB,WAAW,CAACqB,SAAS,EAAE,CAACvC,MAAM,IACnCoC,IAAI,CAACI,YAAY,MAAAH,qBAAA,GAAI,IAAI,CAACnB,WAAW,CAACqB,SAAS,EAAE,CAACvC,MAAM,cAAAqC,qBAAA,uBAAnCA,qBAAA,CAAqCI,EAAE,KAC5DL,IAAI,CAACM,MAAM,IAAI3E,SAAS,CAAC4E,oBAAoB,EAAE,EACjD;QACE;QACA,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC;;IAEjC,CAAC,EACD7E,SAAS,CAAC8E,gBAAgB,EAAE,CAC/B;IAED;IACA,MAAMC,MAAM,GAAG,CAACxE,0BAA0B,CAACyE,WAAW,EAAEzE,0BAA0B,CAAC0E,aAAa,CAAC;IACjG,IAAI,CAACC,YAAY,GAAG/E,UAAU,CAACgF,UAAU,CACrCJ,MAAM,EACLV,IAAI,IAAI;MACL,IAAI,CAAC,IAAI,CAAClB,WAAW,CAACoB,MAAM,IAAK,SAAS,IAAIF,IAAI,IAAIA,IAAI,CAACe,OAAO,IAAI,iBAAkB,EAAE;QACtF;;MAGJ,IAAI,CAACP,cAAc,CAAC,KAAK,CAAC;IAC9B,CAAC,EACD7E,SAAS,CAAC8E,gBAAgB,EAAE,CAC/B;IAED,IAAI;MACA,MAAMO,QAAQ,GAAGtF,aAAa,CAACuF,2BAA2B,CAAC,MAAM,CAAC;MAClE,MAAM7D,QAAQ,GAAG1B,aAAa,CAACuF,2BAA2B,CAAC,UAAU,CAAC;MACtE,MAAMC,OAAO,GAAGxF,aAAa,CAACyF,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC;MACjE,MAAMC,cAAc,GAAG1F,aAAa,CAAC2F,aAAa,CAA+B,QAAQ,CAAC;MAC1F,MAAMC,iBAAiB,GAAG9F,oCAAoC,CAAC+F,iBAAiB,CAC5EvF,+BAA+B,EAC/B,CAACoB,QAAQ,EAAE4D,QAAQ,EAAEI,cAAc,CAAC,CACvC;MAEDE,iBAAiB,CAACJ,OAAO,GAAGA,OAAO;MACnC,IAAI,CAACM,iBAAiB,GAAGF,iBAAiB,CAACG,WAAW,CAAC;QACnDC,cAAc,EAAEA,CAAA,KAAK;UAAA,IAAAC,sBAAA;UACjB,IAAI,CAAC/B,KAAK,GAAG,EAAA+B,sBAAA,OAAI,CAAC7C,WAAW,CAACqB,SAAS,EAAE,CAACvC,MAAM,cAAA+D,sBAAA,uBAAnCA,sBAAA,CAAqCC,IAAI,KAAI,IAAI,CAAChC,KAAK;QACxE;OACH,CAAC;MAEF,IAAI,CAACd,WAAW,GAAG,IAAIvD,oBAAoB,CACvC+F,iBAAiB,EACjB5B,gCAAgC,CACnC;KACJ,CAAC,OAAOmC,KAAK,EAAE;MACZjG,YAAY,CAACkG,cAAc,CAACD,KAAK,CAAC;MAElCnG,aAAa,CAACqG,IAAI,EAAE;MAEpB;;EAER;EAEA,IAAInE,MAAMA,CAAA;IACN,OAAO,IAAI,CAACkB,WAAW,CAACqB,SAAS,EAAE,CAACvC,MAAM;EAC9C;EAEA,IAAIoE,SAASA,CAAA;IACT,OAAO,IAAI,CAAClD,WAAW,CAACqB,SAAS,EAAE,CAAC6B,SAAS;EACjD;EAEA,IAAIhB,QAAQA,CAAA;IACR,OAAO,IAAI,CAAClC,WAAW,CAACqB,SAAS,EAAE,CAAC8B,SAAS;EACjD;EAEA,IAAI7E,QAAQA,CAAA;IACR,OAAO,IAAI,CAAC0B,WAAW,CAACqB,SAAS,EAAE,CAAC+B,SAAS;EACjD;EAEA,IAAIhB,OAAOA,CAAA;IACP,OAAO,IAAI,CAACpC,WAAW,CAACqB,SAAS,EAAE,CAACe,OAAO;EAC/C;EAEA,IAAIA,OAAOA,CAACiB,KAAa;IACrB,IAAI,CAACrD,WAAW,CAACqB,SAAS,EAAE,CAACe,OAAO,GAAGiB,KAAK;EAChD;EAEA;;;EAGAC,eAAeA,CAAA;IACX,MAAMhB,cAAc,GAAG,IAAI,CAACtC,WAAW,CAACqB,SAAS,EAAE,CAACkC,eAAe;IACnE,IAAI,CAACzC,KAAK,GAAG/D,SAAS,CAACyG,OAAO,CAC1BlB,cAAc,GAENA,cAAc,KAAKrF,4BAA4B,CAACwG,YAAY,GACtD,iDAAiD,GACjD,qCAAqCnB,cAAc,EAAE,GAE7D,uCAAuC,CAChD;IAED,IAAI,CAACoB,eAAe,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,MAAK;MACpC,IAAI,CAAC3D,WAAW,CAAC4D,KAAK,CAAC,IAAI,CAACC,SAAS,CAAC;IAC1C,CAAC,CAAC;EACN;EAEA;;;;;;EAMgBH,eAAeA,CAACI,IAAI,GAAG,KAAK;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACxC,IAAI;QACA,MAAMD,KAAI,CAAC/D,WAAW,CAACqB,SAAS,EAAE,CAAC4C,cAAc,CAACH,IAAI,CAAC;QAEvD,IAAI,CAACC,KAAI,CAACjF,MAAM,EAAE;UACd;;QAGJzB,aAAa,CAAC6G,QAAQ,CAAC;UACnBC,IAAI,EAAE7G,sBAAsB,CAAC8G,cAAc;UAC3CC,EAAE,EAAE,4BAA4B;UAChCvB,IAAI,EAAE/F,SAAS,CAACyG,OAAO,CAAC,+BAA+B,EAAE;YACrDc,WAAW,EAAEP,KAAI,CAACjF,MAAM,CAACgE,IAAI;YAC7ByB,OAAO,EAAExH,SAAS,CAACyG,OAAO,CAAC,0BAA0B;WACxD,CAAC;UACFtC,IAAI,EAAE;YAAEsD,QAAQ,EAAET,KAAI,CAACjF,MAAM,CAACyC,EAAE;YAAEkD,QAAQ,EAAE;UAAQ,CAAE;UACtDC,GAAG,EAAE,2BAA2BX,KAAI,CAACjF,MAAM,CAAC6F,IAAI;SACnD,CAAC;OACL,CAAC,OAAO5B,KAAK,EAAE;QACZjG,YAAY,CAAC8H,qBAAqB,CAAC7B,KAAK,EAAE,+BAA+B,CAAC;;IAC7E;EACL;EAEA;;;;;;EAMgBrB,cAAcA,CAACoC,IAAc;IAAA,IAAAe,MAAA;IAAA,OAAAb,iBAAA;MACzC,IAAI;QACA,MAAMa,MAAI,CAAC7E,WAAW,CAACqB,SAAS,EAAE,CAACyD,eAAe,EAAE;OACvD,SAAS;QACND,MAAI,CAACnB,eAAe,CAACI,IAAI,CAAC;;IAC7B;EACL;EAEA;;;;;EAKAiB,WAAWA,CAACC,SAAmC;IAC3C,IAAI,CAACtD,cAAc,CAAC,IAAI,CAAC,CAACiC,OAAO,CAAC,MAAK;MACnCqB,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEC,QAAQ,EAAE;IACzB,CAAC,CAAC;EACN;EAEA;;;EAGMC,iBAAiBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAnB,iBAAA;MACnB,MAAMmB,MAAI,CAACnF,WAAW,CAACoF,MAAM,EAAE;IAAC;EACpC;EAEA;;;EAGAC,WAAWA,CAAA;IAAA,IAAAC,oBAAA,EAAAC,kBAAA;IACP,CAAAD,oBAAA,OAAI,CAACvE,cAAc,cAAAuE,oBAAA,eAAnBA,oBAAA,CAAqBE,GAAG,EAAE;IAC1B,CAAAD,kBAAA,OAAI,CAACxD,YAAY,cAAAwD,kBAAA,eAAjBA,kBAAA,CAAmBC,GAAG,EAAE;IACxB,IAAI,CAACxF,WAAW,CAACyF,OAAO,EAAE;IAC1B,IAAI,CAAC/C,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,EAAE;EACtD;;SA1LS9B,gCAAgC;;mBAAhCA,MAAgC;AAAA;;QAAhCA,MAAgC;EAAA8E,SAAA;EAAAC,SAAA,WAAAC,uCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;qBAE9BlJ,sBAAsB;;;;;;;;;;;;MC9CrCY,EAAA,CAAAC,cAAA,iBAAY;MAGAD,EAAA,CAAAW,SAAA,yBAAoD;;MACxDX,EAAA,CAAAG,YAAA,EAAc;MACdH,EAAA,CAAAC,cAAA,gBAAW;MAEHD,EAAA,CAAAW,SAAA,0BAA8G;MAClHX,EAAA,CAAAG,YAAA,EAAK;MAGTH,EAAA,CAAAW,SAAA,qBAA0B;MAC9BX,EAAA,CAAAG,YAAA,EAAc;MAGlBH,EAAA,CAAAC,cAAA,kBAAa;MAEwDD,EAAA,CAAAgC,UAAA,wBAAAwG,+EAAAC,MAAA;QAAA,OAAcF,GAAA,CAAAf,WAAA,CAAAiB,MAAA,CAAAC,MAAA,CAA0B;MAAA,EAAC;MAClG1I,EAAA,CAAAW,SAAA,gCAA8E;;MAClFX,EAAA,CAAAG,YAAA,EAAgB;MAChBH,EAAA,CAAAC,cAAA,uBAA+C;MAEMD,EAAA,CAAAgC,UAAA,4BAAA2G,yFAAAF,MAAA;QAAA,OAAAF,GAAA,CAAA1D,OAAA,GAAA4D,MAAA;MAAA,EAAsB,4BAAAE,yFAAA;QAAA,OAAmBJ,GAAA,CAAAZ,iBAAA,EAAmB;MAAA,EAAtC;MAAnE3H,EAAA,CAAAG,YAAA,EAC4B;MAG5BH,EAAA,CAAAiB,UAAA,KAAA2H,yDAAA,0BAqCe;MACnB5I,EAAA,CAAAG,YAAA,EAAW;MAEXH,EAAA,CAAAiB,UAAA,KAAA4H,2DAAA,4BACmE;MACvE7I,EAAA,CAAAG,YAAA,EAAe;;;MAjEMH,EAAA,CAAAI,SAAA,GAAgC;MAAhCJ,EAAA,CAAAY,UAAA,SAAAZ,EAAA,CAAAS,WAAA,qBAAgC;MAI3BT,EAAA,CAAAI,SAAA,GAAc;MAAdJ,EAAA,CAAAY,UAAA,SAAA2H,GAAA,CAAAhF,KAAA,CAAc,sBAAAgF,GAAA,CAAA5D,QAAA,cAAA4D,GAAA,CAAAxH,QAAA;MAUZf,EAAA,CAAAI,SAAA,GAAgC;MAAhCJ,EAAA,CAAAY,UAAA,cAAA2H,GAAA,CAAA9F,WAAA,CAAAoB,MAAA,CAAgC;MACjC7D,EAAA,CAAAI,SAAA,GAAoD;MAApDJ,EAAA,CAAA8I,qBAAA,gBAAA9I,EAAA,CAAAS,WAAA,+BAAoD;MAEjET,EAAA,CAAAI,SAAA,GAAgC;MAAhCJ,EAAA,CAAAY,UAAA,cAAA2H,GAAA,CAAA9F,WAAA,CAAAoB,MAAA,CAAgC;MAEjB7D,EAAA,CAAAI,SAAA,GAAuB;MAAvBJ,EAAA,CAAAY,UAAA,cAAA2H,GAAA,CAAA5C,SAAA,CAAuB,aAAA4C,GAAA,CAAA1D,OAAA,cAAA0D,GAAA,CAAAxH,QAAA;MAIPf,EAAA,CAAAI,SAAA,GAAoB;MAApBJ,EAAA,CAAAY,UAAA,YAAA2H,GAAA,CAAA9F,WAAA,CAAAsG,KAAA,CAAoB;MAwC5C/I,EAAA,CAAAI,SAAA,GAAuC;MAAvCJ,EAAA,CAAAY,UAAA,UAAA2H,GAAA,CAAA9F,WAAA,IAAA8F,GAAA,CAAA9F,WAAA,CAAAuG,KAAA,CAAuC"},"metadata":{},"sourceType":"module","externalDependencies":[]}