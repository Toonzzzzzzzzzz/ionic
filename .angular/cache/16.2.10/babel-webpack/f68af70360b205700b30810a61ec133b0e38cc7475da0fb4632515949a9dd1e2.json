{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreError } from '@classes/errors/error';\nimport { LocalNotifications } from '@awesome-cordova-plugins/local-notifications/ngx';\nimport { Subject } from 'rxjs';\n/**\n * Mock LocalNotifications service.\n */\nexport class LocalNotificationsMock extends LocalNotifications {\n  constructor() {\n    super(...arguments);\n    this.scheduledNotifications = [];\n    this.triggeredNotifications = [];\n    this.presentNotifications = {};\n    this.nextTimeout = 0;\n    this.observables = {\n      trigger: new Subject(),\n      click: new Subject(),\n      clear: new Subject(),\n      clearall: new Subject(),\n      cancel: new Subject(),\n      cancelall: new Subject(),\n      schedule: new Subject(),\n      update: new Subject()\n    };\n  }\n  /**\n   * @inheritdoc\n   */\n  schedule(options) {\n    this.hasPermission().then(() => {\n      // Do not check permission here, it could be denied by Selenium.\n      if (!options) {\n        return;\n      }\n      if (!Array.isArray(options)) {\n        options = [options];\n      }\n      this.scheduledNotifications = this.scheduledNotifications.concat(options);\n      this.scheduledNotifications.sort((a, b) => {\n        var _a$trigger, _b$trigger;\n        return (((_a$trigger = a.trigger) === null || _a$trigger === void 0 || (_a$trigger = _a$trigger.at) === null || _a$trigger === void 0 ? void 0 : _a$trigger.getTime()) || 0) - (((_b$trigger = b.trigger) === null || _b$trigger === void 0 || (_b$trigger = _b$trigger.at) === null || _b$trigger === void 0 ? void 0 : _b$trigger.getTime()) || 0);\n      });\n      options.forEach(notification => {\n        this.observables.schedule.next(notification);\n      });\n      this.scheduleNotifications();\n      return;\n    }).catch(() => {\n      // Ignore errors.\n    });\n  }\n  /**\n   * Sets timeout for next nofitication.\n   */\n  scheduleNotifications() {\n    var _nextNotification$tri;\n    window.clearTimeout(this.nextTimeout);\n    const nextNotification = this.scheduledNotifications[0];\n    if (!nextNotification) {\n      return;\n    }\n    const notificationTime = ((_nextNotification$tri = nextNotification.trigger) === null || _nextNotification$tri === void 0 || (_nextNotification$tri = _nextNotification$tri.at) === null || _nextNotification$tri === void 0 ? void 0 : _nextNotification$tri.getTime()) || 0;\n    const timeout = notificationTime - Date.now();\n    if (timeout <= 0) {\n      this.triggerNextNotification();\n      return;\n    }\n    this.nextTimeout = window.setTimeout(() => {\n      this.triggerNextNotification();\n    }, timeout);\n  }\n  /**\n   * Shows the next notification.\n   */\n  triggerNextNotification() {\n    var _nextNotification$tri2;\n    const dateNow = Date.now();\n    const nextNotification = this.scheduledNotifications[0];\n    if (!nextNotification) {\n      return;\n    }\n    const notificationTime = ((_nextNotification$tri2 = nextNotification.trigger) === null || _nextNotification$tri2 === void 0 || (_nextNotification$tri2 = _nextNotification$tri2.at) === null || _nextNotification$tri2 === void 0 ? void 0 : _nextNotification$tri2.getTime()) || 0;\n    if (notificationTime === 0 || notificationTime <= dateNow) {\n      var _nextNotification$dat;\n      const body = Array.isArray(nextNotification.text) ? nextNotification.text.join() : nextNotification.text;\n      const notification = new Notification(nextNotification.title || '', {\n        body,\n        data: nextNotification.data,\n        icon: nextNotification.icon,\n        requireInteraction: true,\n        tag: (_nextNotification$dat = nextNotification.data) === null || _nextNotification$dat === void 0 ? void 0 : _nextNotification$dat.component\n      });\n      this.triggeredNotifications.push(nextNotification);\n      this.observables.trigger.next(nextNotification);\n      notification.addEventListener('click', () => {\n        this.observables.click.next(nextNotification);\n        notification.close();\n        if (nextNotification.id) {\n          delete this.presentNotifications[nextNotification.id];\n        }\n      });\n      if (nextNotification.id) {\n        this.presentNotifications[nextNotification.id] = notification;\n        notification.addEventListener('close', () => {\n          var _nextNotification$id;\n          delete this.presentNotifications[(_nextNotification$id = nextNotification.id) !== null && _nextNotification$id !== void 0 ? _nextNotification$id : 0];\n        });\n      }\n      this.scheduledNotifications.shift();\n      this.triggerNextNotification();\n    } else {\n      this.scheduleNotifications();\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  update(options) {\n    if (!(options !== null && options !== void 0 && options.id)) {\n      return;\n    }\n    const index = this.scheduledNotifications.findIndex(notification => notification.id === options.id);\n    if (index < 0) {\n      return;\n    }\n    this.observables.update.next(options);\n    this.scheduledNotifications[index] = options;\n  }\n  /**\n   * @inheritdoc\n   */\n  clear(notificationId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!Array.isArray(notificationId)) {\n        notificationId = [notificationId];\n      }\n      notificationId.forEach(id => {\n        if (!_this.presentNotifications[id]) {\n          return;\n        }\n        _this.presentNotifications[id].close();\n        _this.observables.clear.next(_this.presentNotifications[id]);\n        delete _this.presentNotifications[id];\n      });\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  clearAll() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      for (const x in _this2.presentNotifications) {\n        _this2.presentNotifications[x].close();\n      }\n      _this2.presentNotifications = {};\n      _this2.observables.clearall.next();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  cancel(notificationId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!Array.isArray(notificationId)) {\n        notificationId = [notificationId];\n      }\n      notificationId.forEach(id => {\n        const index = _this3.scheduledNotifications.findIndex(notification => notification.id === id);\n        _this3.observables.cancel.next(_this3.scheduledNotifications[index]);\n        _this3.scheduledNotifications.splice(index, 1);\n      });\n      _this3.scheduleNotifications();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  cancelAll() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      window.clearTimeout(_this4.nextTimeout);\n      _this4.scheduledNotifications = [];\n      _this4.observables.cancelall.next();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isPresent(notificationId) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return !!_this5.presentNotifications[notificationId];\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isScheduled(notificationId) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      return _this6.scheduledNotifications.some(notification => notification.id === notificationId);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isTriggered(notificationId) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      return _this7.triggeredNotifications.some(notification => notification.id === notificationId);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getIds() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const ids = yield _this8.getScheduledIds();\n      const triggeredIds = yield _this8.getTriggeredIds();\n      return Promise.resolve(ids.concat(triggeredIds));\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getTriggeredIds() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      const ids = _this9.triggeredNotifications.map(notification => notification.id || 0).filter(id => id > 0);\n      return ids;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getScheduledIds() {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const ids = _this10.scheduledNotifications.map(notification => notification.id || 0).filter(id => id > 0);\n      return ids;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  get(notificationId) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      const notification = _this11.scheduledNotifications.find(notification => notification.id === notificationId);\n      if (!notification) {\n        throw new Error('Invalid Notification Id.');\n      }\n      return notification;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getAll() {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      return _this12.scheduledNotifications.concat(_this12.triggeredNotifications);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getAllScheduled() {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      return _this13.scheduledNotifications;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getAllTriggered() {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      return _this14.triggeredNotifications;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  registerPermission() {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      // We need to ask the user for permission\n      const permission = yield Notification.requestPermission();\n      _this15.hasGranted = permission === 'granted';\n      // If the user accepts, let's create a notification\n      return _this15.hasGranted;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  hasPermission() {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      if (_this16.hasGranted !== undefined) {\n        return _this16.hasGranted;\n      }\n      if (!('Notification' in window)) {\n        // Check if the browser supports notifications\n        throw new CoreError('This browser does not support desktop notification');\n      }\n      return _this16.registerPermission();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  addActions(groupId, actions) {\n    return _asyncToGenerator(function* () {\n      // Not implemented.\n      return actions;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  removeActions(groupId) {\n    return _asyncToGenerator(function* () {\n      // Not implemented.\n      return;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  hasActions(groupId) {\n    return _asyncToGenerator(function* () {\n      // Not implemented.\n      return false;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getDefaults() {\n    return _asyncToGenerator(function* () {\n      // Not implemented.\n      return;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setDefaults(defaults) {\n    return _asyncToGenerator(function* () {\n      // Not implemented.\n      return;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  on(eventName) {\n    if (!this.observables[eventName]) {\n      this.observables[eventName] = new Subject();\n    }\n    return this.observables[eventName];\n  }\n  /**\n   * @inheritdoc\n   */\n  fireEvent(eventName, args) {\n    if (!this.observables[eventName]) {\n      return;\n    }\n    this.observables[eventName].next(args);\n  }\n  /**\n   * @inheritdoc\n   */\n  fireQueuedEvents() {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      return _this17.triggerNextNotification();\n    })();\n  }\n}","map":{"version":3,"names":["CoreError","LocalNotifications","Subject","LocalNotificationsMock","constructor","scheduledNotifications","triggeredNotifications","presentNotifications","nextTimeout","observables","trigger","click","clear","clearall","cancel","cancelall","schedule","update","options","hasPermission","then","Array","isArray","concat","sort","a","b","_a$trigger","_b$trigger","at","getTime","forEach","notification","next","scheduleNotifications","catch","_nextNotification$tri","window","clearTimeout","nextNotification","notificationTime","timeout","Date","now","triggerNextNotification","setTimeout","_nextNotification$tri2","dateNow","_nextNotification$dat","body","text","join","Notification","title","data","icon","requireInteraction","tag","component","push","addEventListener","close","id","_nextNotification$id","shift","index","findIndex","notificationId","_this","_asyncToGenerator","clearAll","_this2","x","_this3","splice","cancelAll","_this4","isPresent","_this5","isScheduled","_this6","some","isTriggered","_this7","getIds","_this8","ids","getScheduledIds","triggeredIds","getTriggeredIds","Promise","resolve","_this9","map","filter","_this10","get","_this11","find","Error","getAll","_this12","getAllScheduled","_this13","getAllTriggered","_this14","registerPermission","_this15","permission","requestPermission","hasGranted","_this16","undefined","addActions","groupId","actions","removeActions","hasActions","getDefaults","setDefaults","defaults","on","eventName","fireEvent","args","fireQueuedEvents","_this17"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/emulator/services/local-notifications.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreError } from '@classes/errors/error';\nimport { ILocalNotification, ILocalNotificationAction, LocalNotifications } from '@awesome-cordova-plugins/local-notifications/ngx';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Mock LocalNotifications service.\n */\nexport class LocalNotificationsMock extends LocalNotifications {\n\n    protected scheduledNotifications: ILocalNotification[] = [];\n    protected triggeredNotifications: ILocalNotification[] = [];\n    protected presentNotifications: Record<number, Notification> = {};\n    protected nextTimeout = 0;\n    protected hasGranted?: boolean;\n    protected observables = {\n        trigger: new Subject<ILocalNotification>(),\n        click: new Subject<ILocalNotification>(),\n        clear: new Subject<Notification>(),\n        clearall: new Subject<void>(),\n        cancel: new Subject<ILocalNotification>(),\n        cancelall: new Subject<void>(),\n        schedule: new Subject<ILocalNotification>(),\n        update: new Subject<ILocalNotification>(),\n    };\n\n    /**\n     * @inheritdoc\n     */\n    schedule(options?: ILocalNotification | Array<ILocalNotification>): void {\n        this.hasPermission().then(() => {\n            // Do not check permission here, it could be denied by Selenium.\n            if (!options) {\n                return;\n            }\n\n            if (!Array.isArray(options)) {\n                options = [options];\n            }\n\n            this.scheduledNotifications = this.scheduledNotifications.concat(options);\n            this.scheduledNotifications.sort((a, b) =>\n                (a.trigger?.at?.getTime() || 0) - (b.trigger?.at?.getTime() || 0));\n\n            options.forEach((notification) => {\n                this.observables.schedule.next(notification);\n            });\n\n            this.scheduleNotifications();\n\n            return;\n        }).catch(() => {\n            // Ignore errors.\n        });\n    }\n\n    /**\n     * Sets timeout for next nofitication.\n     */\n    protected scheduleNotifications(): void {\n        window.clearTimeout(this.nextTimeout);\n\n        const nextNotification = this.scheduledNotifications[0];\n        if (!nextNotification) {\n            return;\n        }\n\n        const notificationTime = nextNotification.trigger?.at?.getTime() || 0;\n        const timeout = notificationTime - Date.now();\n        if (timeout <= 0) {\n            this.triggerNextNotification();\n\n            return;\n        }\n\n        this.nextTimeout = window.setTimeout(() => {\n            this.triggerNextNotification();\n        }, timeout);\n    }\n\n    /**\n     * Shows the next notification.\n     */\n    protected triggerNextNotification(): void {\n        const dateNow = Date.now();\n\n        const nextNotification = this.scheduledNotifications[0];\n        if (!nextNotification) {\n            return;\n        }\n\n        const notificationTime = nextNotification.trigger?.at?.getTime() || 0;\n        if (notificationTime === 0 || notificationTime <= dateNow) {\n            const body = Array.isArray(nextNotification.text) ? nextNotification.text.join() : nextNotification.text;\n            const notification = new Notification(nextNotification.title || '', {\n                body,\n                data: nextNotification.data,\n                icon: nextNotification.icon,\n                requireInteraction: true,\n                tag: nextNotification.data?.component,\n            });\n\n            this.triggeredNotifications.push(nextNotification);\n\n            this.observables.trigger.next(nextNotification);\n\n            notification.addEventListener('click', () => {\n                this.observables.click.next(nextNotification);\n\n                notification.close();\n                if (nextNotification.id) {\n                    delete(this.presentNotifications[nextNotification.id]);\n                }\n            });\n\n            if (nextNotification.id) {\n                this.presentNotifications[nextNotification.id] = notification;\n\n                notification.addEventListener('close', () => {\n                    delete(this.presentNotifications[nextNotification.id ?? 0]);\n                });\n            }\n\n            this.scheduledNotifications.shift();\n            this.triggerNextNotification();\n        } else {\n            this.scheduleNotifications();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    update(options?: ILocalNotification): void {\n        if (!options?.id) {\n            return;\n        }\n        const index = this.scheduledNotifications.findIndex((notification) => notification.id === options.id);\n        if (index < 0) {\n            return;\n        }\n\n        this.observables.update.next(options);\n\n        this.scheduledNotifications[index] = options;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async clear(notificationId: number | Array<number>): Promise<void> {\n        if (!Array.isArray(notificationId)) {\n            notificationId = [notificationId];\n        }\n\n        notificationId.forEach((id) => {\n            if (!this.presentNotifications[id]) {\n                return;\n            }\n\n            this.presentNotifications[id].close();\n\n            this.observables.clear.next(this.presentNotifications[id]);\n            delete this.presentNotifications[id];\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async clearAll(): Promise<void> {\n        for (const x in this.presentNotifications) {\n            this.presentNotifications[x].close();\n        }\n        this.presentNotifications = {};\n\n        this.observables.clearall.next();\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async cancel(notificationId: number | Array<number>): Promise<void> {\n        if (!Array.isArray(notificationId)) {\n            notificationId = [notificationId];\n        }\n\n        notificationId.forEach((id) => {\n            const index = this.scheduledNotifications.findIndex((notification) => notification.id === id);\n            this.observables.cancel.next(this.scheduledNotifications[index]);\n\n            this.scheduledNotifications.splice(index, 1);\n        });\n\n        this.scheduleNotifications();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async cancelAll(): Promise<void> {\n        window.clearTimeout(this.nextTimeout);\n        this.scheduledNotifications = [];\n\n        this.observables.cancelall.next();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isPresent(notificationId: number): Promise<boolean> {\n        return !!this.presentNotifications[notificationId];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isScheduled(notificationId: number): Promise<boolean> {\n        return this.scheduledNotifications.some((notification) => notification.id === notificationId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isTriggered(notificationId: number): Promise<boolean> {\n        return this.triggeredNotifications.some((notification) => notification.id === notificationId);\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getIds(): Promise<Array<number>> {\n        const ids = await this.getScheduledIds();\n        const triggeredIds = await this.getTriggeredIds();\n\n        return Promise.resolve(ids.concat(triggeredIds));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getTriggeredIds(): Promise<Array<number>> {\n        const ids = this.triggeredNotifications\n            .map((notification) => notification.id || 0)\n            .filter((id) => id > 0);\n\n        return ids;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getScheduledIds(): Promise<Array<number>> {\n        const ids = this.scheduledNotifications\n            .map((notification) => notification.id || 0)\n            .filter((id) => id > 0);\n\n        return ids;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async get(notificationId: number): Promise<ILocalNotification> {\n        const notification = this.scheduledNotifications\n            .find((notification) => notification.id === notificationId);\n\n        if (!notification) {\n            throw new Error('Invalid Notification Id.');\n        }\n\n        return notification;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getAll(): Promise<Array<ILocalNotification>> {\n        return this.scheduledNotifications.concat(this.triggeredNotifications);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getAllScheduled(): Promise<Array<ILocalNotification>> {\n        return this.scheduledNotifications;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getAllTriggered(): Promise<Array<ILocalNotification>> {\n        return this.triggeredNotifications;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async registerPermission(): Promise<boolean> {\n        // We need to ask the user for permission\n        const permission = await Notification.requestPermission();\n\n        this.hasGranted = permission === 'granted';\n\n        // If the user accepts, let's create a notification\n        return this.hasGranted;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async hasPermission(): Promise<boolean> {\n        if (this.hasGranted !== undefined) {\n            return this.hasGranted;\n        }\n\n        if (!('Notification' in window)) {\n            // Check if the browser supports notifications\n            throw new CoreError('This browser does not support desktop notification');\n        }\n\n        return this.registerPermission();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async addActions(groupId: unknown,  actions: Array<ILocalNotificationAction>): Promise<Array<ILocalNotificationAction>> {\n        // Not implemented.\n        return actions;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async removeActions(groupId: unknown): Promise<unknown> {\n        // Not implemented.\n        return;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async hasActions(groupId: unknown): Promise<boolean> {\n        // Not implemented.\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getDefaults(): Promise<unknown> {\n        // Not implemented.\n        return;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setDefaults(defaults: unknown): Promise<unknown> {\n        // Not implemented.\n        return;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    on(eventName: string): Observable<unknown> {\n        if (!this.observables[eventName]) {\n            this.observables[eventName] = new Subject<ILocalNotification>();\n        }\n\n        return this.observables[eventName];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    fireEvent(eventName: string, args: unknown): void {\n        if (!this.observables[eventName]) {\n            return;\n        }\n\n        this.observables[eventName].next(args);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async fireQueuedEvents(): Promise<unknown> {\n        return this.triggerNextNotification();\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}