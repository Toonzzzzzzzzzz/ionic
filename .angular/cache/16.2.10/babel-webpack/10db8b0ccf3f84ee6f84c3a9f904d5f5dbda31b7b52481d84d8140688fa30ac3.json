{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { FormGroup, Validators } from '@angular/forms';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreFile } from '@services/file';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreForms } from '@singletons/form';\nimport { AddonModWorkshopProvider, AddonModWorkshop, AddonModWorkshopSubmissionType, AddonModWorkshopAction } from '../../services/workshop';\nimport { AddonModWorkshopHelper } from '../../services/workshop-helper';\nimport { AddonModWorkshopOffline } from '../../services/workshop-offline';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { ADDON_MOD_WORKSHOP_COMPONENT } from '@addons/mod/workshop/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../../core/components/attachments/attachments\";\nimport * as i4 from \"../../../../../core/components/loading/loading\";\nimport * as i5 from \"../../../../../core/components/mark-required/mark-required\";\nimport * as i6 from \"../../../../../core/directives/content\";\nimport * as i7 from \"../../../../../core/directives/update-non-reactive-attributes\";\nimport * as i8 from \"@ionic/angular\";\nimport * as i9 from \"../../../../../core/features/editor/components/rich-text-editor/rich-text-editor\";\nimport * as i10 from \"@ngx-translate/core\";\nconst _c0 = [\"editFormEl\"];\nfunction AddonModWorkshopEditSubmissionPage_form_16_ion_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 9)(2, \"span\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"core-rich-text-editor\", 15);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"core-mark-required\", ctx_r2.textRequired);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 9, \"addon.mod_workshop.submissioncontent\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"control\", ctx_r2.editForm.controls[\"content\"])(\"placeholder\", i0.ɵɵpipeBind1(6, 11, \"addon.mod_workshop.submissioncontent\"))(\"component\", ctx_r2.component)(\"componentId\", ctx_r2.componentId)(\"autoSave\", true)(\"contextInstanceId\", ctx_r2.module.id)(\"draftExtraParams\", ctx_r2.editorExtraParams);\n  }\n}\nfunction AddonModWorkshopEditSubmissionPage_form_16_core_attachments_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-attachments\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"files\", ctx_r3.attachments)(\"maxSize\", ctx_r3.workshop.maxbytes)(\"maxSubmissions\", ctx_r3.workshop.nattachments)(\"component\", ctx_r3.component)(\"componentId\", ctx_r3.workshop.coursemodule)(\"acceptedTypes\", ctx_r3.workshop.submissionfiletypes)(\"required\", ctx_r3.fileRequired)(\"courseId\", ctx_r3.workshop.course);\n  }\n}\nfunction AddonModWorkshopEditSubmissionPage_form_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 6, 7)(2, \"ion-item\", 8)(3, \"ion-label\", 9)(4, \"span\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(7, \"ion-input\", 11);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, AddonModWorkshopEditSubmissionPage_form_16_ion_item_9_Template, 7, 13, \"ion-item\", 12);\n    i0.ɵɵtemplate(10, AddonModWorkshopEditSubmissionPage_form_16_core_attachments_10_Template, 1, 8, \"core-attachments\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.editForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 5, \"addon.mod_workshop.submissiontitle\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(8, 7, \"addon.mod_workshop.submissiontitle\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.textAvailable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fileAvailable);\n  }\n}\n/**\n * Page that displays the workshop edit submission.\n */\nexport class AddonModWorkshopEditSubmissionPage {\n  constructor(fb) {\n    this.fb = fb;\n    this.loaded = false;\n    this.component = ADDON_MOD_WORKSHOP_COMPONENT;\n    this.editorExtraParams = {}; // Extra params to identify the draft.\n    this.textAvailable = false;\n    this.textRequired = false;\n    this.fileAvailable = false;\n    this.fileRequired = false;\n    this.attachments = [];\n    this.submissionId = 0;\n    this.originalData = {\n      title: '',\n      content: '',\n      attachmentfiles: []\n    };\n    this.hasOffline = false;\n    this.editing = false;\n    this.forceLeave = false;\n    this.isDestroyed = false;\n    this.userId = CoreSites.getCurrentSiteUserId();\n    this.siteId = CoreSites.getCurrentSiteId();\n    this.editForm = new FormGroup({});\n    this.editForm.addControl('title', this.fb.control('', Validators.required));\n    this.editForm.addControl('content', this.fb.control(''));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    try {\n      this.module = CoreNavigator.getRequiredRouteParam('module');\n      this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n      this.access = CoreNavigator.getRequiredRouteParam('access');\n      this.submissionId = CoreNavigator.getRouteNumberParam('submissionId') || 0;\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n      return;\n    }\n    if (this.submissionId > 0) {\n      this.editorExtraParams.id = this.submissionId;\n    }\n    this.workshopId = this.module.instance;\n    this.componentId = this.module.id;\n    if (!this.isDestroyed) {\n      // Block the workshop.\n      CoreSync.blockOperation(this.component, this.workshopId);\n    }\n    this.fetchSubmissionData();\n  }\n  /**\n   * Check if we can leave the page or not.\n   *\n   * @returns Resolved if we can leave it, rejected if not.\n   */\n  canLeave() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$submission;\n      if (_this.forceLeave) {\n        return true;\n      }\n      // Check if data has changed.\n      if (_this.hasDataChanged()) {\n        // Show confirmation if some data has been modified.\n        yield CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n      }\n      if ((_this$submission = _this.submission) !== null && _this$submission !== void 0 && _this$submission.attachmentfiles) {\n        // Delete the local files from the tmp folder.\n        CoreFileUploader.clearTmpFiles(_this.submission.attachmentfiles);\n      }\n      CoreForms.triggerFormCancelledEvent(_this.formElement, _this.siteId);\n      return true;\n    })();\n  }\n  /**\n   * Fetch the submission data.\n   *\n   * @returns Resolved when done.\n   */\n  fetchSubmissionData() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.workshop = yield AddonModWorkshop.getWorkshop(_this2.courseId, _this2.module.id);\n        _this2.textAvailable = _this2.workshop.submissiontypetext != AddonModWorkshopSubmissionType.SUBMISSION_TYPE_DISABLED;\n        _this2.textRequired = _this2.workshop.submissiontypetext == AddonModWorkshopSubmissionType.SUBMISSION_TYPE_REQUIRED;\n        _this2.fileAvailable = _this2.workshop.submissiontypefile != AddonModWorkshopSubmissionType.SUBMISSION_TYPE_DISABLED;\n        _this2.fileRequired = _this2.workshop.submissiontypefile == AddonModWorkshopSubmissionType.SUBMISSION_TYPE_REQUIRED;\n        _this2.editForm.controls.content.setValidators(_this2.textRequired ? Validators.required : null);\n        if (_this2.submissionId > 0) {\n          _this2.editing = true;\n          _this2.submission = yield AddonModWorkshopHelper.getSubmissionById(_this2.workshopId, _this2.submissionId, {\n            cmId: _this2.module.id\n          });\n          const canEdit = _this2.userId == _this2.submission.authorid && _this2.access.cansubmit && _this2.access.modifyingsubmissionallowed;\n          if (!canEdit) {\n            // Should not happen, but go back if does.\n            _this2.forceLeavePage();\n            return;\n          }\n        } else if (!_this2.access.cansubmit || !_this2.access.creatingsubmissionallowed) {\n          // Should not happen, but go back if does.\n          _this2.forceLeavePage();\n          return;\n        }\n        const submissionsActions = yield AddonModWorkshopOffline.getSubmissions(_this2.workshopId);\n        if (submissionsActions && submissionsActions.length) {\n          _this2.hasOffline = true;\n          _this2.submission = yield AddonModWorkshopHelper.applyOfflineData(_this2.submission, submissionsActions);\n        } else {\n          _this2.hasOffline = false;\n        }\n        if (_this2.submission) {\n          _this2.originalData.title = _this2.submission.title || '';\n          _this2.originalData.content = _this2.submission.content || '';\n          _this2.originalData.attachmentfiles = [];\n          (_this2.submission.attachmentfiles || []).forEach(file => {\n            let filename = CoreFile.getFileName(file);\n            if (!filename) {\n              // We don't have filename, extract it from the path.\n              filename = CoreFileHelper.getFilenameFromPath(file) || '';\n            }\n            _this2.originalData.attachmentfiles.push({\n              filename,\n              fileurl: 'fileurl' in file ? file.fileurl : ''\n            });\n          });\n          _this2.editForm.controls['title'].setValue(_this2.submission.title);\n          _this2.editForm.controls['content'].setValue(_this2.submission.content);\n          _this2.attachments = _this2.submission.attachmentfiles || [];\n        }\n        _this2.loaded = true;\n        _this2.logView();\n      } catch (error) {\n        _this2.loaded = false;\n        CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        _this2.forceLeavePage();\n      }\n    })();\n  }\n  /**\n   * Log view.\n   */\n  logView() {\n    if (!this.workshop) {\n      return;\n    }\n    CoreAnalytics.logEvent({\n      type: CoreAnalyticsEventType.VIEW_ITEM,\n      ws: this.editing ? 'mod_workshop_update_submission' : 'mod_workshop_add_submission',\n      name: this.workshop.name,\n      data: {\n        id: this.workshop.id,\n        submissionid: this.submissionId,\n        category: 'workshop'\n      },\n      url: `/mod/workshop/submission.php?cmid=${this.module.id}&id=${this.submissionId}&edit=on`\n    });\n  }\n  /**\n   * Force leaving the page, without checking for changes.\n   */\n  forceLeavePage() {\n    this.forceLeave = true;\n    CoreNavigator.back();\n  }\n  /**\n   * Get the form input data.\n   *\n   * @returns Object with all the info.\n   */\n  getInputData() {\n    const values = {\n      title: this.editForm.value.title,\n      content: '',\n      attachmentfiles: []\n    };\n    if (this.textAvailable) {\n      values.content = this.editForm.value.content || '';\n    }\n    if (this.fileAvailable) {\n      values.attachmentfiles = this.attachments;\n    }\n    return values;\n  }\n  /**\n   * Check if data has changed.\n   *\n   * @returns True if changed or false if not.\n   */\n  hasDataChanged() {\n    if (!this.loaded) {\n      return false;\n    }\n    const inputData = this.getInputData();\n    if (this.originalData.title != inputData.title || this.textAvailable && this.originalData.content != inputData.content) {\n      return true;\n    }\n    if (this.fileAvailable) {\n      return CoreFileUploader.areFileListDifferent(inputData.attachmentfiles, this.originalData.attachmentfiles);\n    }\n    return false;\n  }\n  /**\n   * Save the submission.\n   */\n  save() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // Check if data has changed.\n      if (_this3.hasDataChanged()) {\n        try {\n          yield _this3.saveSubmission();\n          // Go back to entry list.\n          _this3.forceLeavePage();\n        } catch (_unused) {\n          // Nothing to do.\n        }\n      } else {\n        // Nothing to save, just go back.\n        _this3.forceLeavePage();\n      }\n    })();\n  }\n  /**\n   * Send submission and save.\n   *\n   * @returns Resolved when done.\n   */\n  saveSubmission() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _this4$submission;\n      const inputData = _this4.getInputData();\n      if (!inputData.title) {\n        CoreDomUtils.showAlertTranslated('core.notice', 'addon.mod_workshop.submissionrequiredtitle');\n        throw new CoreError(Translate.instant('addon.mod_workshop.submissionrequiredtitle'));\n      }\n      const noText = CoreTextUtils.htmlIsBlank(inputData.content);\n      const noFiles = !inputData.attachmentfiles.length;\n      if (_this4.textRequired && noText || _this4.fileRequired && noFiles || noText && noFiles) {\n        CoreDomUtils.showAlertTranslated('core.notice', 'addon.mod_workshop.submissionrequiredcontent');\n        throw new CoreError(Translate.instant('addon.mod_workshop.submissionrequiredcontent'));\n      }\n      let saveOffline = false;\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      const submissionId = (_this4$submission = _this4.submission) === null || _this4$submission === void 0 ? void 0 : _this4$submission.id;\n      // Add some HTML to the message if needed.\n      if (_this4.textAvailable) {\n        inputData.content = CoreTextUtils.formatHtmlLines(inputData.content);\n      }\n      // Upload attachments first if any.\n      let allowOffline = !inputData.attachmentfiles.length;\n      try {\n        let attachmentsId;\n        let storeFilesResult;\n        try {\n          attachmentsId = yield AddonModWorkshopHelper.uploadOrStoreSubmissionFiles(_this4.workshopId, inputData.attachmentfiles, false);\n        } catch (error) {\n          if (CoreUtils.isWebServiceError(error)) {\n            throw error;\n          }\n          // Cannot upload them in online, save them in offline.\n          saveOffline = true;\n          allowOffline = true;\n          storeFilesResult = yield AddonModWorkshopHelper.uploadOrStoreSubmissionFiles(_this4.workshopId, inputData.attachmentfiles, true);\n        }\n        if (!saveOffline && !_this4.fileAvailable) {\n          attachmentsId = undefined;\n        }\n        let newSubmissionId;\n        if (_this4.editing) {\n          if (saveOffline) {\n            // Save submission in offline.\n            yield AddonModWorkshopOffline.saveSubmission(_this4.workshopId, _this4.courseId, inputData.title, inputData.content, storeFilesResult, submissionId, AddonModWorkshopAction.UPDATE);\n            newSubmissionId = false;\n          } else {\n            if (!submissionId) {\n              throw new CoreError('Submission cannot be updated without a submissionId');\n            }\n            // Try to send it to server.\n            // Don't allow offline if there are attachments since they were uploaded fine.\n            newSubmissionId = yield AddonModWorkshop.updateSubmission(_this4.workshopId, submissionId, _this4.courseId, inputData.title, inputData.content, attachmentsId, undefined, allowOffline);\n          }\n        } else {\n          if (saveOffline) {\n            // Save submission in offline.\n            yield AddonModWorkshopOffline.saveSubmission(_this4.workshopId, _this4.courseId, inputData.title, inputData.content, storeFilesResult, undefined, AddonModWorkshopAction.ADD);\n            newSubmissionId = false;\n          } else {\n            // Try to send it to server.\n            // Don't allow offline if there are attachments since they were uploaded fine.\n            newSubmissionId = yield AddonModWorkshop.addSubmission(_this4.workshopId, _this4.courseId, inputData.title, inputData.content, attachmentsId, undefined, allowOffline);\n          }\n        }\n        CoreForms.triggerFormSubmittedEvent(_this4.formElement, !!newSubmissionId, _this4.siteId);\n        const data = {\n          workshopId: _this4.workshopId\n        };\n        if (newSubmissionId) {\n          // Data sent to server, delete stored files (if any).\n          AddonModWorkshopOffline.deleteSubmissionAction(_this4.workshopId, _this4.editing ? AddonModWorkshopAction.UPDATE : AddonModWorkshopAction.ADD);\n          AddonModWorkshopHelper.deleteSubmissionStoredFiles(_this4.workshopId, _this4.siteId);\n          data.submissionId = newSubmissionId;\n        }\n        CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, {\n          module: 'workshop'\n        });\n        const promise = newSubmissionId ? AddonModWorkshop.invalidateSubmissionData(_this4.workshopId, newSubmissionId) : Promise.resolve();\n        yield promise.finally(() => {\n          CoreEvents.trigger(AddonModWorkshopProvider.SUBMISSION_CHANGED, data, _this4.siteId);\n          // Delete the local files from the tmp folder.\n          CoreFileUploader.clearTmpFiles(inputData.attachmentfiles);\n        });\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Cannot save submission');\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  getFilesComponentId() {\n    const id = this.submissionId > 0 ? this.submissionId : 'newsub';\n    return this.workshopId + '_' + id;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.isDestroyed = true;\n    CoreSync.unblockOperation(this.component, this.workshopId);\n  }\n}\n_class = AddonModWorkshopEditSubmissionPage;\n_class.ɵfac = function AddonModWorkshopEditSubmissionPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-workshop-edit-submission\"]],\n  viewQuery: function AddonModWorkshopEditSubmissionPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formElement = _t.first);\n    }\n  },\n  decls: 17,\n  vars: 14,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [3, \"hideUntil\"], [3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [\"editFormEl\", \"\"], [1, \"ion-text-wrap\"], [\"position\", \"stacked\"], [\"core-mark-required\", \"true\"], [\"name\", \"title\", \"type\", \"text\", \"formControlName\", \"title\", 3, \"placeholder\"], [4, \"ngIf\"], [\"allowOffline\", \"true\", 3, \"files\", \"maxSize\", \"maxSubmissions\", \"component\", \"componentId\", \"acceptedTypes\", \"required\", \"courseId\", 4, \"ngIf\"], [3, \"core-mark-required\"], [\"name\", \"content\", \"contextLevel\", \"module\", \"elementId\", \"content_editor\", 3, \"control\", \"placeholder\", \"component\", \"componentId\", \"autoSave\", \"contextInstanceId\", \"draftExtraParams\"], [\"allowOffline\", \"true\", 3, \"files\", \"maxSize\", \"maxSubmissions\", \"component\", \"componentId\", \"acceptedTypes\", \"required\", \"courseId\"]],\n  template: function AddonModWorkshopEditSubmissionPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-buttons\", 2)(10, \"ion-button\", 3);\n      i0.ɵɵlistener(\"click\", function AddonModWorkshopEditSubmissionPage_Template_ion_button_click_10_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵpipe(11, \"translate\");\n      i0.ɵɵtext(12);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"ion-content\")(15, \"core-loading\", 4);\n      i0.ɵɵtemplate(16, AddonModWorkshopEditSubmissionPage_form_16_Template, 11, 9, \"form\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 6, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 8, \"addon.mod_workshop.editsubmission\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(11, 10, \"core.save\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 12, \"core.save\"), \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.workshop);\n    }\n  },\n  dependencies: [i2.NgIf, i3.CoreAttachmentsComponent, i4.CoreLoadingComponent, i5.CoreMarkRequiredComponent, i6.CoreContentDirective, i7.CoreUpdateNonReactiveAttributesDirective, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i8.IonButton, i8.IonButtons, i8.IonContent, i8.IonHeader, i8.IonInput, i8.IonItem, i8.IonLabel, i8.IonTitle, i8.IonToolbar, i8.TextValueAccessor, i8.IonBackButton, i1.FormGroupDirective, i1.FormControlName, i9.CoreEditorRichTextEditorComponent, i10.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["FormGroup","Validators","CoreError","CoreFileUploader","CoreFile","CoreFileHelper","CoreNavigator","CoreSites","CoreSync","CoreDomUtils","CoreTextUtils","CoreUtils","Translate","CoreEvents","CoreForms","AddonModWorkshopProvider","AddonModWorkshop","AddonModWorkshopSubmissionType","AddonModWorkshopAction","AddonModWorkshopHelper","AddonModWorkshopOffline","CoreAnalytics","CoreAnalyticsEventType","ADDON_MOD_WORKSHOP_COMPONENT","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r2","textRequired","ɵɵtextInterpolate1","ɵɵpipeBind1","editForm","controls","component","componentId","module","id","editorExtraParams","ctx_r3","attachments","workshop","maxbytes","nattachments","coursemodule","submissionfiletypes","fileRequired","course","ɵɵtemplate","AddonModWorkshopEditSubmissionPage_form_16_ion_item_9_Template","AddonModWorkshopEditSubmissionPage_form_16_core_attachments_10_Template","ctx_r0","textAvailable","fileAvailable","AddonModWorkshopEditSubmissionPage","constructor","fb","loaded","submissionId","originalData","title","content","attachmentfiles","hasOffline","editing","forceLeave","isDestroyed","userId","getCurrentSiteUserId","siteId","getCurrentSiteId","addControl","control","required","ngOnInit","getRequiredRouteParam","courseId","getRequiredRouteNumberParam","access","getRouteNumberParam","error","showErrorModal","back","workshopId","instance","blockOperation","fetchSubmissionData","canLeave","_this","_asyncToGenerator","_this$submission","hasDataChanged","showConfirm","instant","submission","clearTmpFiles","triggerFormCancelledEvent","formElement","_this2","getWorkshop","submissiontypetext","SUBMISSION_TYPE_DISABLED","SUBMISSION_TYPE_REQUIRED","submissiontypefile","setValidators","getSubmissionById","cmId","canEdit","authorid","cansubmit","modifyingsubmissionallowed","forceLeavePage","creatingsubmissionallowed","submissionsActions","getSubmissions","length","applyOfflineData","forEach","file","filename","getFileName","getFilenameFromPath","push","fileurl","setValue","logView","showErrorModalDefault","logEvent","type","VIEW_ITEM","ws","name","data","submissionid","category","url","getInputData","values","value","inputData","areFileListDifferent","save","_this3","saveSubmission","_unused","_this4","_this4$submission","showAlertTranslated","noText","htmlIsBlank","noFiles","saveOffline","modal","showModalLoading","formatHtmlLines","allowOffline","attachmentsId","storeFilesResult","uploadOrStoreSubmissionFiles","isWebServiceError","undefined","newSubmissionId","UPDATE","updateSubmission","ADD","addSubmission","triggerFormSubmittedEvent","deleteSubmissionAction","deleteSubmissionStoredFiles","trigger","ACTIVITY_DATA_SENT","promise","invalidateSubmissionData","Promise","resolve","finally","SUBMISSION_CHANGED","dismiss","getFilesComponentId","ngOnDestroy","unblockOperation","ɵɵdirectiveInject","i1","FormBuilder","selectors","viewQuery","AddonModWorkshopEditSubmissionPage_Query","rf","ctx","ɵɵlistener","AddonModWorkshopEditSubmissionPage_Template_ion_button_click_10_listener","AddonModWorkshopEditSubmissionPage_form_16_Template","ɵɵtextInterpolate","ɵɵattribute"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/workshop/pages/edit-submission/edit-submission.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/workshop/pages/edit-submission/edit-submission.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreCourseModuleData } from '@features/course/services/course-helper';\nimport { CoreFileUploader, CoreFileUploaderStoreFilesResult } from '@features/fileuploader/services/fileuploader';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreFile } from '@services/file';\nimport { CoreFileEntry, CoreFileHelper } from '@services/file-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreForms } from '@singletons/form';\nimport {\n    AddonModWorkshopProvider,\n    AddonModWorkshop,\n    AddonModWorkshopSubmissionType,\n    AddonModWorkshopSubmissionChangedEventData,\n    AddonModWorkshopAction,\n    AddonModWorkshopGetWorkshopAccessInformationWSResponse,\n    AddonModWorkshopData,\n} from '../../services/workshop';\nimport { AddonModWorkshopHelper, AddonModWorkshopSubmissionDataWithOfflineData } from '../../services/workshop-helper';\nimport { AddonModWorkshopOffline } from '../../services/workshop-offline';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { ADDON_MOD_WORKSHOP_COMPONENT } from '@addons/mod/workshop/constants';\n\n/**\n * Page that displays the workshop edit submission.\n */\n@Component({\n    selector: 'page-addon-mod-workshop-edit-submission',\n    templateUrl: 'edit-submission.html',\n})\nexport class AddonModWorkshopEditSubmissionPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild('editFormEl') formElement!: ElementRef;\n\n    module!: CoreCourseModuleData;\n    courseId!: number;\n    access!: AddonModWorkshopGetWorkshopAccessInformationWSResponse;\n    submission?: AddonModWorkshopSubmissionDataWithOfflineData;\n\n    loaded = false;\n    component = ADDON_MOD_WORKSHOP_COMPONENT;\n    componentId!: number;\n    editForm: FormGroup; // The form group.\n    editorExtraParams: Record<string, unknown> = {}; // Extra params to identify the draft.\n    workshop?: AddonModWorkshopData;\n    textAvailable = false;\n    textRequired = false;\n    fileAvailable = false;\n    fileRequired = false;\n    attachments: CoreFileEntry[] = [];\n\n    protected workshopId!: number;\n    protected submissionId = 0;\n    protected userId: number;\n    protected originalData: AddonModWorkshopEditSubmissionInputData = {\n        title: '',\n        content: '',\n        attachmentfiles: [],\n    };\n\n    protected hasOffline = false;\n    protected editing = false;\n    protected forceLeave = false;\n    protected siteId: string;\n    protected isDestroyed = false;\n\n    constructor(\n        protected fb: FormBuilder,\n    ) {\n\n        this.userId = CoreSites.getCurrentSiteUserId();\n        this.siteId = CoreSites.getCurrentSiteId();\n\n        this.editForm = new FormGroup({});\n        this.editForm.addControl('title', this.fb.control('', Validators.required));\n        this.editForm.addControl('content', this.fb.control(''));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.module = CoreNavigator.getRequiredRouteParam<CoreCourseModuleData>('module');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.access = CoreNavigator.getRequiredRouteParam<AddonModWorkshopGetWorkshopAccessInformationWSResponse>('access');\n            this.submissionId = CoreNavigator.getRouteNumberParam('submissionId') || 0;\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        if (this.submissionId > 0) {\n            this.editorExtraParams.id = this.submissionId;\n        }\n\n        this.workshopId = this.module.instance;\n        this.componentId = this.module.id;\n\n        if (!this.isDestroyed) {\n            // Block the workshop.\n            CoreSync.blockOperation(this.component, this.workshopId);\n        }\n\n        this.fetchSubmissionData();\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (this.forceLeave) {\n            return true;\n        }\n\n        // Check if data has changed.\n        if (this.hasDataChanged()) {\n            // Show confirmation if some data has been modified.\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        if (this.submission?.attachmentfiles) {\n            // Delete the local files from the tmp folder.\n            CoreFileUploader.clearTmpFiles(this.submission.attachmentfiles);\n        }\n\n        CoreForms.triggerFormCancelledEvent(this.formElement, this.siteId);\n\n        return true;\n    }\n\n    /**\n     * Fetch the submission data.\n     *\n     * @returns Resolved when done.\n     */\n    protected async fetchSubmissionData(): Promise<void> {\n        try {\n            this.workshop = await AddonModWorkshop.getWorkshop(this.courseId, this.module.id);\n            this.textAvailable = (this.workshop.submissiontypetext != AddonModWorkshopSubmissionType.SUBMISSION_TYPE_DISABLED);\n            this.textRequired = (this.workshop.submissiontypetext == AddonModWorkshopSubmissionType.SUBMISSION_TYPE_REQUIRED);\n            this.fileAvailable = (this.workshop.submissiontypefile != AddonModWorkshopSubmissionType.SUBMISSION_TYPE_DISABLED);\n            this.fileRequired = (this.workshop.submissiontypefile == AddonModWorkshopSubmissionType.SUBMISSION_TYPE_REQUIRED);\n\n            this.editForm.controls.content.setValidators(this.textRequired ? Validators.required : null);\n\n            if (this.submissionId > 0) {\n                this.editing = true;\n\n                this.submission =\n                    await AddonModWorkshopHelper.getSubmissionById(this.workshopId, this.submissionId, { cmId: this.module.id });\n\n                const canEdit = this.userId == this.submission.authorid &&\n                    this.access.cansubmit &&\n                    this.access.modifyingsubmissionallowed;\n\n                if (!canEdit) {\n                    // Should not happen, but go back if does.\n                    this.forceLeavePage();\n\n                    return;\n                }\n            } else if (!this.access.cansubmit || !this.access.creatingsubmissionallowed) {\n                // Should not happen, but go back if does.\n                this.forceLeavePage();\n\n                return;\n            }\n\n            const submissionsActions = await AddonModWorkshopOffline.getSubmissions(this.workshopId);\n            if (submissionsActions && submissionsActions.length) {\n                this.hasOffline = true;\n                this.submission = await AddonModWorkshopHelper.applyOfflineData(this.submission, submissionsActions);\n            } else {\n                this.hasOffline = false;\n            }\n\n            if (this.submission) {\n                this.originalData.title = this.submission.title || '';\n                this.originalData.content = this.submission.content || '';\n                this.originalData.attachmentfiles = [];\n\n                (this.submission.attachmentfiles || []).forEach((file) => {\n                    let filename = CoreFile.getFileName(file);\n                    if (!filename) {\n                        // We don't have filename, extract it from the path.\n                        filename = CoreFileHelper.getFilenameFromPath(file) || '';\n                    }\n\n                    this.originalData.attachmentfiles.push({\n                        filename,\n                        fileurl: 'fileurl' in file ? file.fileurl : '',\n                    });\n                });\n\n                this.editForm.controls['title'].setValue(this.submission.title);\n                this.editForm.controls['content'].setValue(this.submission.content);\n                this.attachments = this.submission.attachmentfiles || [];\n            }\n\n            this.loaded = true;\n\n            this.logView();\n        } catch (error) {\n            this.loaded = false;\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n\n            this.forceLeavePage();\n        }\n    }\n\n    /**\n     * Log view.\n     */\n    protected logView(): void {\n        if (!this.workshop) {\n            return;\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: this.editing ? 'mod_workshop_update_submission' : 'mod_workshop_add_submission',\n            name: this.workshop.name,\n            data: { id: this.workshop.id, submissionid: this.submissionId, category: 'workshop' },\n            url: `/mod/workshop/submission.php?cmid=${this.module.id}&id=${this.submissionId}&edit=on`,\n        });\n    }\n\n    /**\n     * Force leaving the page, without checking for changes.\n     */\n    protected forceLeavePage(): void {\n        this.forceLeave = true;\n        CoreNavigator.back();\n    }\n\n    /**\n     * Get the form input data.\n     *\n     * @returns Object with all the info.\n     */\n    protected getInputData(): AddonModWorkshopEditSubmissionInputData {\n        const values: AddonModWorkshopEditSubmissionInputData = {\n            title: this.editForm.value.title,\n            content: '',\n            attachmentfiles: [],\n        };\n\n        if (this.textAvailable) {\n            values.content = this.editForm.value.content || '';\n        }\n\n        if (this.fileAvailable) {\n            values.attachmentfiles = this.attachments;\n        }\n\n        return values;\n    }\n\n    /**\n     * Check if data has changed.\n     *\n     * @returns True if changed or false if not.\n     */\n    protected hasDataChanged(): boolean {\n        if (!this.loaded) {\n            return false;\n        }\n\n        const inputData = this.getInputData();\n        if (this.originalData.title != inputData.title || this.textAvailable && this.originalData.content != inputData.content) {\n            return true;\n        }\n\n        if (this.fileAvailable) {\n            return CoreFileUploader.areFileListDifferent(inputData.attachmentfiles, this.originalData.attachmentfiles);\n        }\n\n        return false;\n    }\n\n    /**\n     * Save the submission.\n     */\n    async save(): Promise<void> {\n        // Check if data has changed.\n        if (this.hasDataChanged()) {\n            try {\n                await this.saveSubmission();\n                // Go back to entry list.\n                this.forceLeavePage();\n            } catch{\n                // Nothing to do.\n            }\n        } else {\n            // Nothing to save, just go back.\n            this.forceLeavePage();\n        }\n    }\n\n    /**\n     * Send submission and save.\n     *\n     * @returns Resolved when done.\n     */\n    protected async saveSubmission(): Promise<void> {\n        const inputData = this.getInputData();\n\n        if (!inputData.title) {\n            CoreDomUtils.showAlertTranslated('core.notice', 'addon.mod_workshop.submissionrequiredtitle');\n\n            throw new CoreError(Translate.instant('addon.mod_workshop.submissionrequiredtitle'));\n        }\n\n        const noText = CoreTextUtils.htmlIsBlank(inputData.content);\n        const noFiles = !inputData.attachmentfiles.length;\n\n        if ((this.textRequired && noText) || (this.fileRequired && noFiles) || (noText && noFiles)) {\n            CoreDomUtils.showAlertTranslated('core.notice', 'addon.mod_workshop.submissionrequiredcontent');\n\n            throw new CoreError(Translate.instant('addon.mod_workshop.submissionrequiredcontent'));\n        }\n\n        let saveOffline = false;\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n        const submissionId = this.submission?.id;\n\n        // Add some HTML to the message if needed.\n        if (this.textAvailable) {\n            inputData.content = CoreTextUtils.formatHtmlLines(inputData.content);\n        }\n\n        // Upload attachments first if any.\n        let allowOffline = !inputData.attachmentfiles.length;\n        try {\n            let attachmentsId: number | undefined;\n            let storeFilesResult: CoreFileUploaderStoreFilesResult | undefined;\n\n            try {\n                attachmentsId = await AddonModWorkshopHelper.uploadOrStoreSubmissionFiles(\n                    this.workshopId,\n                    inputData.attachmentfiles,\n                    false,\n                );\n            } catch (error) {\n                if (CoreUtils.isWebServiceError(error)) {\n                    throw error;\n                }\n\n                // Cannot upload them in online, save them in offline.\n                saveOffline = true;\n                allowOffline = true;\n\n                storeFilesResult = await AddonModWorkshopHelper.uploadOrStoreSubmissionFiles(\n                    this.workshopId,\n                    inputData.attachmentfiles,\n                    true,\n                );\n            }\n\n            if (!saveOffline && !this.fileAvailable) {\n                attachmentsId = undefined;\n            }\n\n            let newSubmissionId: number | false;\n            if (this.editing) {\n                if (saveOffline) {\n                    // Save submission in offline.\n                    await AddonModWorkshopOffline.saveSubmission(\n                        this.workshopId,\n                        this.courseId,\n                        inputData.title,\n                        inputData.content,\n                        storeFilesResult,\n                        submissionId,\n                        AddonModWorkshopAction.UPDATE,\n                    );\n                    newSubmissionId = false;\n                } else {\n                    if (!submissionId) {\n                        throw new CoreError('Submission cannot be updated without a submissionId');\n                    }\n                    // Try to send it to server.\n                    // Don't allow offline if there are attachments since they were uploaded fine.\n                    newSubmissionId = await AddonModWorkshop.updateSubmission(\n                        this.workshopId,\n                        submissionId,\n                        this.courseId,\n                        inputData.title,\n                        inputData.content,\n                        attachmentsId,\n                        undefined,\n                        allowOffline,\n                    );\n                }\n            } else {\n                if (saveOffline) {\n                    // Save submission in offline.\n                    await AddonModWorkshopOffline.saveSubmission(\n                        this.workshopId,\n                        this.courseId,\n                        inputData.title,\n                        inputData.content,\n                        storeFilesResult,\n                        undefined,\n                        AddonModWorkshopAction.ADD,\n                    );\n                    newSubmissionId = false;\n                } else {\n                    // Try to send it to server.\n                    // Don't allow offline if there are attachments since they were uploaded fine.\n                    newSubmissionId = await AddonModWorkshop.addSubmission(\n                        this.workshopId,\n                        this.courseId,\n                        inputData.title,\n                        inputData.content,\n                        attachmentsId,\n                        undefined,\n                        allowOffline,\n                    );\n                }\n            }\n\n            CoreForms.triggerFormSubmittedEvent(this.formElement, !!newSubmissionId, this.siteId);\n\n            const data: AddonModWorkshopSubmissionChangedEventData = {\n                workshopId: this.workshopId,\n            };\n\n            if (newSubmissionId) {\n                // Data sent to server, delete stored files (if any).\n                AddonModWorkshopOffline.deleteSubmissionAction(\n                    this.workshopId,\n                    this.editing ? AddonModWorkshopAction.UPDATE : AddonModWorkshopAction.ADD,\n                );\n\n                AddonModWorkshopHelper.deleteSubmissionStoredFiles(this.workshopId, this.siteId);\n                data.submissionId = newSubmissionId;\n            }\n\n            CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'workshop' });\n\n            const promise = newSubmissionId ? AddonModWorkshop.invalidateSubmissionData(this.workshopId, newSubmissionId) :\n                Promise.resolve();\n\n            await promise.finally(() => {\n                CoreEvents.trigger(AddonModWorkshopProvider.SUBMISSION_CHANGED, data, this.siteId);\n\n                // Delete the local files from the tmp folder.\n                CoreFileUploader.clearTmpFiles(inputData.attachmentfiles);\n            });\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Cannot save submission');\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    protected getFilesComponentId(): string {\n        const id = this.submissionId > 0\n            ? this.submissionId\n            : 'newsub';\n\n        return this.workshopId + '_' + id;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        CoreSync.unblockOperation(this.component, this.workshopId);\n    }\n\n}\n\ntype AddonModWorkshopEditSubmissionInputData = {\n    title: string;\n    content: string;\n    attachmentfiles: CoreFileEntry[];\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.mod_workshop.editsubmission' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"save()\" [attr.aria-label]=\"'core.save' | translate\">\n                {{ 'core.save' | translate }}\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-loading [hideUntil]=\"loaded\">\n        <form [formGroup]=\"editForm\" *ngIf=\"workshop\" #editFormEl>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label position=\"stacked\">\n                    <span core-mark-required=\"true\">\n                        {{ 'addon.mod_workshop.submissiontitle' | translate }}\n                    </span>\n                </ion-label>\n                <ion-input name=\"title\" type=\"text\" [placeholder]=\"'addon.mod_workshop.submissiontitle' | translate\"\n                    formControlName=\"title\" />\n            </ion-item>\n\n            <ion-item *ngIf=\"textAvailable\">\n                <ion-label position=\"stacked\">\n                    <span [core-mark-required]=\"textRequired\">\n                        {{ 'addon.mod_workshop.submissioncontent' | translate }}\n                    </span>\n                </ion-label>\n                <core-rich-text-editor [control]=\"editForm.controls['content']\" name=\"content\"\n                    [placeholder]=\"'addon.mod_workshop.submissioncontent' | translate\" [component]=\"component\" [componentId]=\"componentId\"\n                    [autoSave]=\"true\" contextLevel=\"module\" [contextInstanceId]=\"module.id\" elementId=\"content_editor\"\n                    [draftExtraParams]=\"editorExtraParams\" />\n            </ion-item>\n\n            <core-attachments *ngIf=\"fileAvailable\" [files]=\"attachments\" [maxSize]=\"workshop.maxbytes\"\n                [maxSubmissions]=\"workshop.nattachments\" [component]=\"component\" [componentId]=\"workshop.coursemodule\" allowOffline=\"true\"\n                [acceptedTypes]=\"workshop.submissionfiletypes\" [required]=\"fileRequired\" [courseId]=\"workshop.course\" />\n        </form>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}