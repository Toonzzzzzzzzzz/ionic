{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\nimport { CorePlatform } from '@services/platform';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Shared files settings handler.\n */\nexport class CoreSharedFilesSettingsHandlerService {\n  constructor() {\n    this.name = 'CoreSharedFiles';\n    this.priority = 200;\n  }\n  /**\n   * Check if the handler is enabled on a site level.\n   *\n   * @returns Whether or not the handler is enabled on a site level.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return CorePlatform.isIOS();\n    })();\n  }\n  /**\n   * Returns the data needed to render the handler.\n   *\n   * @returns Data needed to render the handler.\n   */\n  getDisplayData() {\n    return {\n      icon: 'fas-folder',\n      title: 'core.sharedfiles.sharedfiles',\n      page: SHAREDFILES_PAGE_NAME + '/list/root',\n      params: {\n        manage: true,\n        hideSitePicker: true\n      },\n      class: 'core-sharedfiles-settings-handler'\n    };\n  }\n}\n_class = CoreSharedFilesSettingsHandlerService;\n_class.ɵfac = function CoreSharedFilesSettingsHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreSharedFilesSettingsHandler = makeSingleton(CoreSharedFilesSettingsHandlerService);","map":{"version":3,"names":["SHAREDFILES_PAGE_NAME","CorePlatform","makeSingleton","CoreSharedFilesSettingsHandlerService","constructor","name","priority","isEnabled","_asyncToGenerator","isIOS","getDisplayData","icon","title","page","params","manage","hideSitePicker","class","factory","ɵfac","providedIn","CoreSharedFilesSettingsHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/sharedfiles/services/handlers/settings.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSettingsHandler, CoreSettingsHandlerData } from '@features/settings/services/settings-delegate';\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\nimport { CorePlatform } from '@services/platform';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Shared files settings handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreSharedFilesSettingsHandlerService implements CoreSettingsHandler {\n\n    name = 'CoreSharedFiles';\n    priority = 200;\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @returns Whether or not the handler is enabled on a site level.\n     */\n    async isEnabled(): Promise<boolean> {\n        return CorePlatform.isIOS();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @returns Data needed to render the handler.\n     */\n    getDisplayData(): CoreSettingsHandlerData {\n        return {\n            icon: 'fas-folder',\n            title: 'core.sharedfiles.sharedfiles',\n            page: SHAREDFILES_PAGE_NAME + '/list/root',\n            params: { manage: true, hideSitePicker: true },\n            class: 'core-sharedfiles-settings-handler',\n        };\n    }\n\n}\n\nexport const CoreSharedFilesSettingsHandler = makeSingleton(CoreSharedFilesSettingsHandlerService);\n"],"mappings":";;AAgBA,SAASA,qBAAqB,QAAQ,0CAA0C;AAChF,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,qCAAqC;EADlDC,YAAA;IAGI,KAAAC,IAAI,GAAG,iBAAiB;IACxB,KAAAC,QAAQ,GAAG,GAAG;;EAEd;;;;;EAKMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAOP,YAAY,CAACQ,KAAK,EAAE;IAAC;EAChC;EAEA;;;;;EAKAC,cAAcA,CAAA;IACV,OAAO;MACHC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE,8BAA8B;MACrCC,IAAI,EAAEb,qBAAqB,GAAG,YAAY;MAC1Cc,MAAM,EAAE;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAI,CAAE;MAC9CC,KAAK,EAAE;KACV;EACL;;SA3BSd,qCAAqC;;mBAArCA,MAAqC;AAAA;;SAArCA,MAAqC;EAAAe,OAAA,EAArCf,MAAqC,CAAAgB,IAAA;EAAAC,UAAA,EADxB;AAAM;AAgChC,OAAO,MAAMC,8BAA8B,GAAGnB,aAAa,CAACC,qCAAqC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}