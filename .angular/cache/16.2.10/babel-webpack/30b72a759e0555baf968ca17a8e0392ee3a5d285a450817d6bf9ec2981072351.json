{"ast":null,"code":"var _class;\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport * as i0 from \"@angular/core\";\n/**\n * Emulates the Cordova InAppBrowser plugin in desktop apps.\n */\nexport class InAppBrowserMock extends InAppBrowser {\n  /**\n   * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n   *\n   * @param url The URL to load.\n   * @param target The target in which to load the URL, an optional parameter that defaults to _self.\n   * @param options Options for the InAppBrowser.\n   * @returns The new instance.\n   */\n  create(url, target, options = 'location=yes') {\n    if (options && typeof options !== 'string') {\n      // Convert to string.\n      options = Object.keys(options).map(key => key + '=' + options[key]).join(',');\n    }\n    return super.create(url, target, options);\n  }\n}\n_class = InAppBrowserMock;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵInAppBrowserMock_BaseFactory;\n  return function InAppBrowserMock_Factory(t) {\n    return (ɵInAppBrowserMock_BaseFactory || (ɵInAppBrowserMock_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["InAppBrowser","InAppBrowserMock","create","url","target","options","Object","keys","map","key","join","t","factory","ɵfac"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/emulator/services/inappbrowser.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { InAppBrowser, InAppBrowserObject } from '@awesome-cordova-plugins/in-app-browser/ngx';\n\n/**\n * Emulates the Cordova InAppBrowser plugin in desktop apps.\n */\n@Injectable()\nexport class InAppBrowserMock extends InAppBrowser {\n\n    /**\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n     *\n     * @param url The URL to load.\n     * @param target The target in which to load the URL, an optional parameter that defaults to _self.\n     * @param options Options for the InAppBrowser.\n     * @returns The new instance.\n     */\n    create(url: string, target?: string, options: string = 'location=yes'): InAppBrowserObject {\n        if (options && typeof options !== 'string') {\n            // Convert to string.\n            options = Object.keys(options).map((key) => key + '=' + options[key]).join(',');\n        }\n\n        return super.create(url, target, options);\n    }\n\n}\n"],"mappings":";AAeA,SAASA,YAAY,QAA4B,6CAA6C;;AAE9F;;;AAIA,OAAM,MAAOC,gBAAiB,SAAQD,YAAY;EAE9C;;;;;;;;EAQAE,MAAMA,CAACC,GAAW,EAAEC,MAAe,EAAEC,OAAA,GAAkB,cAAc;IACjE,IAAIA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MACxC;MACAA,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC,CAACG,GAAG,CAAEC,GAAG,IAAKA,GAAG,GAAG,GAAG,GAAGJ,OAAO,CAACI,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;;IAGnF,OAAO,KAAK,CAACR,MAAM,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,CAAC;EAC7C;;SAjBSJ,gBAAiB;;;;uGAAjBA,MAAgB,IAAAU,CAAA,IAAhBV,MAAgB;EAAA;AAAA;;SAAhBA,MAAgB;EAAAW,OAAA,EAAhBX,MAAgB,CAAAY;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}