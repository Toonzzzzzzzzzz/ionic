{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter, TemplateRef } from '@angular/core';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\nimport { CoreNavBarButtonsComponent } from '../navbar-buttons/navbar-buttons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tabs\";\nimport * as i2 from \"@angular/common\";\nfunction CoreTabComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template);\n  }\n}\n/**\n * A tab to use inside core-tabs. The content of this tab will be displayed when the tab is selected.\n *\n * You must provide either a title or an icon for the tab.\n *\n * The tab content MUST be surrounded by ng-template. This component uses ngTemplateOutlet instead of ng-content because the\n * latter executes all the code immediately. This means that all the tabs would be initialized as soon as your view is\n * loaded, leading to performance issues.\n *\n * Example usage:\n *\n * <core-tabs selectedIndex=\"1\">\n *     <core-tab [title]=\"'core.courses.timeline' | translate\" (ionSelect)=\"switchTab('timeline')\">\n *         <ng-template> <!-- This ng-template is required. -->\n *             <!-- Tab contents. -->\n *         </ng-template>\n *     </core-tab>\n * </core-tabs>\n */\nexport class CoreTabComponent {\n  set enabled(value) {\n    value = value === undefined ? true : value;\n    const hasChanged = this.isEnabled != value;\n    this.isEnabled = value;\n    if (this.initialized && hasChanged) {\n      this.tabs.tabVisibilityChanged();\n    }\n  }\n  get enabled() {\n    return this.isEnabled;\n  }\n  constructor(tabs, element) {\n    this.tabs = tabs;\n    this.id = ''; // An ID to identify the tab.\n    this.ionSelect = new EventEmitter();\n    this.loaded = false;\n    this.initialized = false;\n    this.isEnabled = true;\n    this.element = element.nativeElement;\n    this.id = this.id || 'core-tab-' + CoreUtils.getUniqueId('CoreTabComponent');\n    this.element.setAttribute('role', 'tabpanel');\n    this.element.setAttribute('tabindex', '0');\n    this.element.setAttribute('aria-hidden', 'true');\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.element.setAttribute('aria-labelledby', this.id + '-tab');\n    this.element.setAttribute('id', this.id);\n    this.tabs.addTab(this);\n    this.initialized = true;\n  }\n  /**\n   * Component destroyed.\n   */\n  ngOnDestroy() {\n    this.tabs.removeTab(this);\n  }\n  /**\n   * Select tab.\n   */\n  selectTab() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$tabElement;\n      _this.element.classList.add('selected');\n      _this.tabElement = _this.tabElement || document.getElementById(_this.id + '-tab');\n      (_this$tabElement = _this.tabElement) === null || _this$tabElement === void 0 || _this$tabElement.setAttribute('aria-selected', 'true');\n      _this.element.setAttribute('aria-hidden', 'false');\n      _this.loaded = true;\n      _this.ionSelect.emit(_this);\n      _this.showHideNavBarButtons(true);\n    })();\n  }\n  /**\n   * Unselect tab.\n   */\n  unselectTab() {\n    var _this$tabElement2;\n    (_this$tabElement2 = this.tabElement) === null || _this$tabElement2 === void 0 || _this$tabElement2.setAttribute('aria-selected', 'false');\n    this.element.classList.remove('selected');\n    this.element.setAttribute('aria-hidden', 'true');\n    this.showHideNavBarButtons(false);\n  }\n  /**\n   * Show all hide all children navbar buttons.\n   *\n   * @param show Whether to show or hide the buttons.\n   */\n  showHideNavBarButtons(show) {\n    const elements = this.element.querySelectorAll('core-navbar-buttons');\n    elements.forEach(element => {\n      const instance = CoreDirectivesRegistry.resolve(element, CoreNavBarButtonsComponent);\n      if (instance) {\n        instance.forceHide(!show);\n      }\n    });\n  }\n}\n_class = CoreTabComponent;\n_class.ɵfac = function CoreTabComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CoreTabsComponent), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-tab\"]],\n  contentQueries: function CoreTabComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    title: \"title\",\n    icon: \"icon\",\n    badge: \"badge\",\n    badgeStyle: \"badgeStyle\",\n    badgeA11yText: \"badgeA11yText\",\n    class: \"class\",\n    enabled: \"enabled\",\n    id: \"id\"\n  },\n  outputs: {\n    ionSelect: \"ionSelect\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function CoreTabComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoreTabComponent_ng_container_0_Template, 1, 1, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded && ctx.template);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","TemplateRef","CoreUtils","CoreDirectivesRegistry","CoreNavBarButtonsComponent","i0","ɵɵelementContainer","ɵɵproperty","ctx_r0","template","CoreTabComponent","enabled","value","undefined","hasChanged","isEnabled","initialized","tabs","tabVisibilityChanged","constructor","element","id","ionSelect","loaded","nativeElement","getUniqueId","setAttribute","ngOnInit","addTab","ngOnDestroy","removeTab","selectTab","_this","_asyncToGenerator","_this$tabElement","classList","add","tabElement","document","getElementById","emit","showHideNavBarButtons","unselectTab","_this$tabElement2","remove","show","elements","querySelectorAll","forEach","instance","resolve","forceHide","ɵɵdirectiveInject","i1","CoreTabsComponent","ElementRef","selectors","contentQueries","CoreTabComponent_ContentQueries","rf","ctx","dirIndex","ɵɵtemplate","CoreTabComponent_ng_container_0_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/tabs/tab.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, OnInit, OnDestroy, ElementRef, EventEmitter, ContentChild, TemplateRef } from '@angular/core';\nimport { CoreTabBase } from '@classes/tabs';\n\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\nimport { CoreNavBarButtonsComponent } from '../navbar-buttons/navbar-buttons';\nimport { CoreTabsComponent } from './tabs';\n\n/**\n * A tab to use inside core-tabs. The content of this tab will be displayed when the tab is selected.\n *\n * You must provide either a title or an icon for the tab.\n *\n * The tab content MUST be surrounded by ng-template. This component uses ngTemplateOutlet instead of ng-content because the\n * latter executes all the code immediately. This means that all the tabs would be initialized as soon as your view is\n * loaded, leading to performance issues.\n *\n * Example usage:\n *\n * <core-tabs selectedIndex=\"1\">\n *     <core-tab [title]=\"'core.courses.timeline' | translate\" (ionSelect)=\"switchTab('timeline')\">\n *         <ng-template> <!-- This ng-template is required. -->\n *             <!-- Tab contents. -->\n *         </ng-template>\n *     </core-tab>\n * </core-tabs>\n */\n@Component({\n    selector: 'core-tab',\n    template: '<ng-container *ngIf=\"loaded && template\" [ngTemplateOutlet]=\"template\" />',\n})\nexport class CoreTabComponent implements OnInit, OnDestroy, CoreTabBase {\n\n    @Input() title!: string; // The tab title.\n    @Input() icon?: string; // The tab icon.\n    @Input() badge?: string; // A badge to add in the tab.\n    @Input() badgeStyle?: string; // The badge color.\n    @Input() badgeA11yText?: string; // Accessibility text to add on the badge.\n    @Input() class?: string; // Class, if needed.\n    @Input() set enabled(value: boolean) { // Whether the tab should be shown.\n        value = value === undefined ? true : value;\n        const hasChanged = this.isEnabled != value;\n        this.isEnabled = value;\n\n        if (this.initialized && hasChanged) {\n            this.tabs.tabVisibilityChanged();\n        }\n    }\n\n    get enabled(): boolean {\n        return this.isEnabled;\n    }\n\n    @Input() id = ''; // An ID to identify the tab.\n    @Output() ionSelect: EventEmitter<CoreTabComponent> = new EventEmitter<CoreTabComponent>();\n\n    @ContentChild(TemplateRef) template?: TemplateRef<unknown>; // Template defined by the content.\n\n    element: HTMLElement; // The core-tab element.\n    loaded = false;\n    initialized = false;\n    tabElement?: HTMLElement | null;\n\n    protected isEnabled = true;\n\n    constructor(\n        protected tabs: CoreTabsComponent,\n        element: ElementRef,\n    ) {\n        this.element = element.nativeElement;\n        this.id = this.id || 'core-tab-' + CoreUtils.getUniqueId('CoreTabComponent');\n        this.element.setAttribute('role', 'tabpanel');\n        this.element.setAttribute('tabindex', '0');\n        this.element.setAttribute('aria-hidden', 'true');\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.element.setAttribute('aria-labelledby', this.id + '-tab');\n        this.element.setAttribute('id', this.id);\n\n        this.tabs.addTab(this);\n        this.initialized = true;\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.tabs.removeTab(this);\n    }\n\n    /**\n     * Select tab.\n     */\n    async selectTab(): Promise<void> {\n        this.element.classList.add('selected');\n\n        this.tabElement = this.tabElement || document.getElementById(this.id + '-tab');\n        this.tabElement?.setAttribute('aria-selected', 'true');\n        this.element.setAttribute('aria-hidden', 'false');\n\n        this.loaded = true;\n        this.ionSelect.emit(this);\n        this.showHideNavBarButtons(true);\n    }\n\n    /**\n     * Unselect tab.\n     */\n    unselectTab(): void {\n        this.tabElement?.setAttribute('aria-selected', 'false');\n        this.element.classList.remove('selected');\n        this.element.setAttribute('aria-hidden', 'true');\n\n        this.showHideNavBarButtons(false);\n    }\n\n    /**\n     * Show all hide all children navbar buttons.\n     *\n     * @param show Whether to show or hide the buttons.\n     */\n    protected showHideNavBarButtons(show: boolean): void {\n        const elements = this.element.querySelectorAll('core-navbar-buttons');\n        elements.forEach((element) => {\n            const instance = CoreDirectivesRegistry.resolve(element, CoreNavBarButtonsComponent);\n\n            if (instance) {\n                instance.forceHide(!show);\n            }\n        });\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}