{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { CoreContentLinksDelegate } from '@features/contentlinks/services/contentlinks-delegate';\nimport { COURSE_CONTENTS_PATH } from '@features/course/course.module';\nimport { CoreCourseContentsRoutingModule } from '@features/course/course-contents-routing.module';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@features/course/services/module-prefetch-delegate';\nimport { CoreMainMenuTabRoutingModule } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreTagAreaDelegate } from '@features/tag/services/tag-area-delegate';\nimport { CoreCronDelegate } from '@services/cron';\nimport { CoreScreen } from '@services/screen';\nimport { CORE_SITE_SCHEMAS } from '@services/sites';\nimport { AddonModGlossaryComponentsModule } from './components/components.module';\nimport { SITE_SCHEMA, OFFLINE_SITE_SCHEMA } from './services/database/glossary';\nimport { AddonModGlossaryProvider } from './services/glossary';\nimport { AddonModGlossaryHelperProvider } from './services/glossary-helper';\nimport { AddonModGlossaryOfflineProvider } from './services/glossary-offline';\nimport { AddonModGlossarySyncProvider } from './services/glossary-sync';\nimport { AddonModGlossaryEditLinkHandler } from './services/handlers/edit-link';\nimport { AddonModGlossaryEntryLinkHandler } from './services/handlers/entry-link';\nimport { AddonModGlossaryIndexLinkHandler } from './services/handlers/index-link';\nimport { AddonModGlossaryListLinkHandler } from './services/handlers/list-link';\nimport { AddonModGlossaryModuleHandler, AddonModGlossaryModuleHandlerService } from './services/handlers/module';\nimport { AddonModGlossaryPrefetchHandler } from './services/handlers/prefetch';\nimport { AddonModGlossarySyncCronHandler } from './services/handlers/sync-cron';\nimport { AddonModGlossaryTagAreaHandler } from './services/handlers/tag-area';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/features/mainmenu/mainmenu-tab-routing.module\";\nimport * as i2 from \"../../../core/features/course/course-contents-routing.module\";\nexport const ADDON_MOD_GLOSSARY_SERVICES = [AddonModGlossaryProvider, AddonModGlossaryOfflineProvider, AddonModGlossarySyncProvider, AddonModGlossaryHelperProvider];\nconst mainMenuRoutes = [\n// Link handlers navigation.\n{\n  path: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug`,\n  loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule)\n},\n// Course activity navigation.\n{\n  path: AddonModGlossaryModuleHandlerService.PAGE_NAME,\n  loadChildren: () => import('./glossary-lazy.module').then(m => m.AddonModGlossaryLazyModule)\n},\n// Single Activity format navigation.\n{\n  path: `${COURSE_CONTENTS_PATH}/${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/new`,\n  loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule),\n  data: {\n    glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/`\n  }\n}, {\n  path: `${COURSE_CONTENTS_PATH}/${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug/edit`,\n  loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule),\n  data: {\n    glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/`\n  }\n}, ...conditionalRoutes([{\n  path: `${COURSE_CONTENTS_PATH}/${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug`,\n  loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule),\n  data: {\n    glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/`\n  }\n}], () => CoreScreen.isMobile)];\n// Single Activity format navigation.\nconst courseContentsRoutes = conditionalRoutes([{\n  path: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug`,\n  loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule),\n  data: {\n    glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/`\n  }\n}], () => CoreScreen.isTablet);\nexport class AddonModGlossaryModule {}\n_class = AddonModGlossaryModule;\n_class.ɵfac = function AddonModGlossaryModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: CORE_SITE_SCHEMAS,\n    useValue: [SITE_SCHEMA, OFFLINE_SITE_SCHEMA],\n    multi: true\n  }, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    useValue: () => {\n      CoreCourseModuleDelegate.registerHandler(AddonModGlossaryModuleHandler.instance);\n      CoreCourseModulePrefetchDelegate.registerHandler(AddonModGlossaryPrefetchHandler.instance);\n      CoreCronDelegate.register(AddonModGlossarySyncCronHandler.instance);\n      CoreContentLinksDelegate.registerHandler(AddonModGlossaryIndexLinkHandler.instance);\n      CoreContentLinksDelegate.registerHandler(AddonModGlossaryListLinkHandler.instance);\n      CoreContentLinksDelegate.registerHandler(AddonModGlossaryEditLinkHandler.instance);\n      CoreContentLinksDelegate.registerHandler(AddonModGlossaryEntryLinkHandler.instance);\n      CoreTagAreaDelegate.registerHandler(AddonModGlossaryTagAreaHandler.instance);\n      CoreCourseHelper.registerModuleReminderClick(AddonModGlossaryProvider.COMPONENT);\n    }\n  }],\n  imports: [CoreMainMenuTabRoutingModule.forChild(mainMenuRoutes), CoreCourseContentsRoutingModule.forChild({\n    children: courseContentsRoutes\n  }), AddonModGlossaryComponentsModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AddonModGlossaryModule, {\n    imports: [i1.CoreMainMenuTabRoutingModule, i2.CoreCourseContentsRoutingModule, AddonModGlossaryComponentsModule]\n  });\n})();","map":{"version":3,"names":["conditionalRoutes","APP_INITIALIZER","CoreContentLinksDelegate","COURSE_CONTENTS_PATH","CoreCourseContentsRoutingModule","CoreCourseHelper","CoreCourseModuleDelegate","CoreCourseModulePrefetchDelegate","CoreMainMenuTabRoutingModule","CoreTagAreaDelegate","CoreCronDelegate","CoreScreen","CORE_SITE_SCHEMAS","AddonModGlossaryComponentsModule","SITE_SCHEMA","OFFLINE_SITE_SCHEMA","AddonModGlossaryProvider","AddonModGlossaryHelperProvider","AddonModGlossaryOfflineProvider","AddonModGlossarySyncProvider","AddonModGlossaryEditLinkHandler","AddonModGlossaryEntryLinkHandler","AddonModGlossaryIndexLinkHandler","AddonModGlossaryListLinkHandler","AddonModGlossaryModuleHandler","AddonModGlossaryModuleHandlerService","AddonModGlossaryPrefetchHandler","AddonModGlossarySyncCronHandler","AddonModGlossaryTagAreaHandler","ADDON_MOD_GLOSSARY_SERVICES","mainMenuRoutes","path","PAGE_NAME","loadChildren","then","m","AddonModGlossaryEntryLazyModule","AddonModGlossaryLazyModule","AddonModGlossaryEditLazyModule","data","glossaryPathPrefix","isMobile","courseContentsRoutes","isTablet","AddonModGlossaryModule","provide","useValue","multi","registerHandler","instance","register","registerModuleReminderClick","COMPONENT","imports","forChild","children","i1","i2"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/glossary/glossary.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { APP_INITIALIZER, NgModule, Type } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { CoreContentLinksDelegate } from '@features/contentlinks/services/contentlinks-delegate';\nimport { COURSE_CONTENTS_PATH } from '@features/course/course.module';\nimport { CoreCourseContentsRoutingModule } from '@features/course/course-contents-routing.module';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@features/course/services/module-prefetch-delegate';\nimport { CoreMainMenuTabRoutingModule } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreTagAreaDelegate } from '@features/tag/services/tag-area-delegate';\nimport { CoreCronDelegate } from '@services/cron';\nimport { CoreScreen } from '@services/screen';\nimport { CORE_SITE_SCHEMAS } from '@services/sites';\nimport { AddonModGlossaryComponentsModule } from './components/components.module';\nimport { SITE_SCHEMA, OFFLINE_SITE_SCHEMA } from './services/database/glossary';\nimport { AddonModGlossaryProvider } from './services/glossary';\nimport { AddonModGlossaryHelperProvider } from './services/glossary-helper';\nimport { AddonModGlossaryOfflineProvider } from './services/glossary-offline';\nimport { AddonModGlossarySyncProvider } from './services/glossary-sync';\nimport { AddonModGlossaryEditLinkHandler } from './services/handlers/edit-link';\nimport { AddonModGlossaryEntryLinkHandler } from './services/handlers/entry-link';\nimport { AddonModGlossaryIndexLinkHandler } from './services/handlers/index-link';\nimport { AddonModGlossaryListLinkHandler } from './services/handlers/list-link';\nimport { AddonModGlossaryModuleHandler, AddonModGlossaryModuleHandlerService } from './services/handlers/module';\nimport { AddonModGlossaryPrefetchHandler } from './services/handlers/prefetch';\nimport { AddonModGlossarySyncCronHandler } from './services/handlers/sync-cron';\nimport { AddonModGlossaryTagAreaHandler } from './services/handlers/tag-area';\n\nexport const ADDON_MOD_GLOSSARY_SERVICES: Type<unknown>[] = [\n    AddonModGlossaryProvider,\n    AddonModGlossaryOfflineProvider,\n    AddonModGlossarySyncProvider,\n    AddonModGlossaryHelperProvider,\n];\n\nconst mainMenuRoutes: Routes = [\n    // Link handlers navigation.\n    {\n        path: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug`,\n        loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule),\n    },\n\n    // Course activity navigation.\n    {\n        path: AddonModGlossaryModuleHandlerService.PAGE_NAME,\n        loadChildren: () => import('./glossary-lazy.module').then(m => m.AddonModGlossaryLazyModule),\n    },\n\n    // Single Activity format navigation.\n    {\n        path: `${COURSE_CONTENTS_PATH}/${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/new`,\n        loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule),\n        data: { glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/` },\n    },\n    {\n        path: `${COURSE_CONTENTS_PATH}/${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug/edit`,\n        loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule),\n        data: { glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/` },\n    },\n    ...conditionalRoutes(\n        [{\n            path: `${COURSE_CONTENTS_PATH}/${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug`,\n            loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule),\n            data: { glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/` },\n        }],\n        () => CoreScreen.isMobile,\n    ),\n];\n\n// Single Activity format navigation.\nconst courseContentsRoutes: Routes = conditionalRoutes(\n    [{\n        path: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/entry/:entrySlug`,\n        loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule),\n        data: { glossaryPathPrefix: `${AddonModGlossaryModuleHandlerService.PAGE_NAME}/` },\n    }],\n    () => CoreScreen.isTablet,\n);\n\n@NgModule({\n    imports: [\n        CoreMainMenuTabRoutingModule.forChild(mainMenuRoutes),\n        CoreCourseContentsRoutingModule.forChild({ children: courseContentsRoutes }),\n        AddonModGlossaryComponentsModule,\n    ],\n    providers: [\n        {\n            provide: CORE_SITE_SCHEMAS,\n            useValue: [SITE_SCHEMA, OFFLINE_SITE_SCHEMA],\n            multi: true,\n        },\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useValue: () => {\n                CoreCourseModuleDelegate.registerHandler(AddonModGlossaryModuleHandler.instance);\n                CoreCourseModulePrefetchDelegate.registerHandler(AddonModGlossaryPrefetchHandler.instance);\n                CoreCronDelegate.register(AddonModGlossarySyncCronHandler.instance);\n                CoreContentLinksDelegate.registerHandler(AddonModGlossaryIndexLinkHandler.instance);\n                CoreContentLinksDelegate.registerHandler(AddonModGlossaryListLinkHandler.instance);\n                CoreContentLinksDelegate.registerHandler(AddonModGlossaryEditLinkHandler.instance);\n                CoreContentLinksDelegate.registerHandler(AddonModGlossaryEntryLinkHandler.instance);\n                CoreTagAreaDelegate.registerHandler(AddonModGlossaryTagAreaHandler.instance);\n\n                CoreCourseHelper.registerModuleReminderClick(AddonModGlossaryProvider.COMPONENT);\n            },\n        },\n    ],\n})\nexport class AddonModGlossaryModule {}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}