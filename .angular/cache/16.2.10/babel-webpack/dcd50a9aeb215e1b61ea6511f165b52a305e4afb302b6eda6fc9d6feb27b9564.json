{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Base Error class.\n *\n * The native Error class cannot be extended in Typescript without restoring the prototype chain, extend this\n * class instead.\n *\n * @see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n */\nexport class CoreError extends Error {\n  constructor(message) {\n    super(message);\n    // Fix prototype chain: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    this.name = new.target.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}","map":{"version":3,"names":["CoreError","Error","constructor","message","name","new","target","Object","setPrototypeOf","prototype"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/classes/errors/error.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreTextErrorObject } from '@services/utils/text';\n\n/**\n * Base Error class.\n *\n * The native Error class cannot be extended in Typescript without restoring the prototype chain, extend this\n * class instead.\n *\n * @see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n */\nexport class CoreError extends Error {\n\n    constructor(message?: string) {\n        super(message);\n\n        // Fix prototype chain: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n        this.name = new.target.name;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n\n}\n\nexport type CoreAnyError = string | CoreError | CoreTextErrorObject | null | undefined;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;AAQA,OAAM,MAAOA,SAAU,SAAQC,KAAK;EAEhCC,YAAYC,OAAgB;IACxB,KAAK,CAACA,OAAO,CAAC;IAEd;IACA,IAAI,CAACC,IAAI,GAAGC,GAAG,CAACC,MAAM,CAACF,IAAI;IAC3BG,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEH,GAAG,CAACC,MAAM,CAACG,SAAS,CAAC;EACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}