{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreNetwork } from '@services/network';\nimport { NgZone } from '@singletons';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreConfig } from '@services/config';\nimport { CoreSettingsHandlersSource } from '@features/settings/classes/settings-handlers-source';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/button-with-spinner/button-with-spinner\";\nimport * as i3 from \"../../../../components/loading/loading\";\nimport * as i4 from \"../../../../components/split-view/split-view\";\nimport * as i5 from \"../../../../directives/fa-icon\";\nimport * as i6 from \"../../../../directives/content\";\nimport * as i7 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@ionic/angular\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction CoreSitePreferencesPage_ion_item_17_ion_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 16);\n  }\n  if (rf & 2) {\n    const handler_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"name\", handler_r2.icon);\n  }\n}\nfunction CoreSitePreferencesPage_ion_item_17_ion_toggle_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-toggle\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function CoreSitePreferencesPage_ion_item_17_ion_toggle_7_Template_ion_toggle_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const handler_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(handler_r2.toggleChecked = $event);\n    })(\"ionChange\", function CoreSitePreferencesPage_ion_item_17_ion_toggle_7_Template_ion_toggle_ionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const handler_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(handler_r2.toggle($event.detail.checked));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const handler_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngModel\", handler_r2.toggleChecked);\n  }\n}\nfunction CoreSitePreferencesPage_ion_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 13);\n    i0.ɵɵlistener(\"click\", function CoreSitePreferencesPage_ion_item_17_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const handler_r2 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(!handler_r2.toggle && ctx_r12.handlers.select(handler_r2));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵtemplate(2, CoreSitePreferencesPage_ion_item_17_ion_icon_2_Template, 1, 1, \"ion-icon\", 14);\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, CoreSitePreferencesPage_ion_item_17_ion_toggle_7_Template, 1, 1, \"ion-toggle\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const handler_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", handler_r2.class)(\"button\", !handler_r2.toggle)(\"detail\", !handler_r2.toggle);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 8, handler_r2.title))(\"aria-current\", ctx_r0.handlers.getItemAriaCurrent(handler_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", handler_r2.icon);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 10, handler_r2.title));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", handler_r2.toggle);\n  }\n}\nfunction CoreSitePreferencesPage_ion_item_31_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.connectwifitosync\"), \"\");\n  }\n}\nfunction CoreSitePreferencesPage_ion_item_31_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.connecttosync\"));\n  }\n}\nfunction CoreSitePreferencesPage_ion_item_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 18);\n    i0.ɵɵelement(1, \"ion-icon\", 19);\n    i0.ɵɵelementStart(2, \"ion-label\");\n    i0.ɵɵtemplate(3, CoreSitePreferencesPage_ion_item_31_ng_container_3_Template, 3, 3, \"ng-container\", 20);\n    i0.ɵɵtemplate(4, CoreSitePreferencesPage_ion_item_31_ng_container_4_Template, 3, 3, \"ng-container\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isOnline && ctx_r1.dataSaver && ctx_r1.limitedConnection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isOnline);\n  }\n}\n/**\n * Page that displays the list of site settings pages.\n */\nexport class CoreSitePreferencesPage {\n  get handlerItems() {\n    return this.handlers.getSource().handlers;\n  }\n  constructor() {\n    this.dataSaver = false;\n    this.limitedConnection = false;\n    this.isOnline = true;\n    this.isDestroyed = false;\n    this.siteId = CoreSites.getCurrentSiteId();\n    const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreSettingsHandlersSource, []);\n    this.handlers = new CoreListItemsManager(source, CoreSitePreferencesPage);\n    this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n      this.refreshData();\n    }, this.siteId);\n    this.isOnline = CoreNetwork.isOnline();\n    this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n    this.networkObserver = CoreNetwork.onChange().subscribe(() => {\n      // Execute the callback in the Angular zone, so change detection doesn't stop working.\n      NgZone.run(() => {\n        this.isOnline = CoreNetwork.isOnline();\n        this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n      });\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.dataSaver = yield CoreConfig.get(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, true);\n      const pageToOpen = CoreNavigator.getRouteParam('page');\n      try {\n        yield _this.fetchData();\n      } finally {\n        const handler = pageToOpen ? _this.handlers.items.find(handler => handler.page == pageToOpen) : undefined;\n        if (handler) {\n          _this.handlers.watchSplitViewOutlet(_this.splitView);\n          yield _this.handlers.select(handler);\n        } else {\n          yield _this.handlers.start(_this.splitView);\n        }\n      }\n    })();\n  }\n  /**\n   * Fetch Data.\n   */\n  fetchData() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.handlers.load();\n    })();\n  }\n  /**\n   * Syncrhonizes the site.\n   */\n  synchronize() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Using syncOnlyOnWifi false to force manual sync.\n        yield CoreSettingsHelper.synchronizeSite(false, _this3.siteId);\n      } catch (error) {\n        if (_this3.isDestroyed) {\n          return;\n        }\n        CoreDomUtils.showErrorModalDefault(error, 'core.settings.sitesyncfailed', true);\n      }\n    })();\n  }\n  /**\n   * Returns true if site is beeing synchronized.\n   *\n   * @returns True if site is beeing synchronized, false otherwise.\n   */\n  isSynchronizing() {\n    return !!CoreSettingsHelper.getSiteSyncPromise(this.siteId);\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   */\n  refreshData(refresher) {\n    this.handlers.getSource().setDirty(true);\n    this.fetchData().finally(() => {\n      refresher === null || refresher === void 0 || refresher.complete();\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.isDestroyed = true;\n    this.sitesObserver.off();\n    this.networkObserver.unsubscribe();\n    this.handlers.destroy();\n  }\n}\n_class = CoreSitePreferencesPage;\n_class.ɵfac = function CoreSitePreferencesPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-site-preferences\"]],\n  viewQuery: function CoreSitePreferencesPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreSplitViewComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.splitView = _t.first);\n    }\n  },\n  decls: 32,\n  vars: 24,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [\"class\", \"core-settings-handler\", 3, \"ngClass\", \"button\", \"detail\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\"], [1, \"item-heading\"], [\"slot\", \"end\", 3, \"loading\"], [\"fill\", \"clear\", 3, \"disabled\", \"click\"], [\"name\", \"fas-rotate\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"class\", \"core-warning-item ion-text-wrap\", 4, \"ngIf\"], [1, \"core-settings-handler\", 3, \"ngClass\", \"button\", \"detail\", \"click\"], [\"slot\", \"start\", \"aria-hidden\", \"true\", 3, \"name\", 4, \"ngIf\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\", 4, \"ngIf\"], [\"slot\", \"start\", \"aria-hidden\", \"true\", 3, \"name\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [1, \"core-warning-item\", \"ion-text-wrap\"], [\"name\", \"fas-triangle-exclamation\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [4, \"ngIf\"]],\n  template: function CoreSitePreferencesPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"ion-buttons\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-content\")(11, \"core-split-view\")(12, \"ion-refresher\", 3);\n      i0.ɵɵlistener(\"ionRefresh\", function CoreSitePreferencesPage_Template_ion_refresher_ionRefresh_12_listener($event) {\n        return ctx.refreshData($event.target);\n      });\n      i0.ɵɵelement(13, \"ion-refresher-content\", 4);\n      i0.ɵɵpipe(14, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"core-loading\", 5)(16, \"ion-list\");\n      i0.ɵɵtemplate(17, CoreSitePreferencesPage_ion_item_17_Template, 8, 12, \"ion-item\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ion-card\")(19, \"ion-item\", 7)(20, \"ion-label\")(21, \"p\", 8);\n      i0.ɵɵtext(22);\n      i0.ɵɵpipe(23, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"p\");\n      i0.ɵɵtext(25);\n      i0.ɵɵpipe(26, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"core-button-with-spinner\", 9)(28, \"ion-button\", 10);\n      i0.ɵɵlistener(\"click\", function CoreSitePreferencesPage_Template_ion_button_click_28_listener() {\n        return ctx.synchronize();\n      });\n      i0.ɵɵpipe(29, \"translate\");\n      i0.ɵɵelement(30, \"ion-icon\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(31, CoreSitePreferencesPage_ion_item_31_Template, 5, 2, \"ion-item\", 12);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 12, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 14, \"core.settings.preferences\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.handlers.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(14, 16, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.handlers.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.handlerItems);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 18, \"core.settings.synchronizenow\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(26, 20, \"core.settings.synchronizenowhelp\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"loading\", ctx.isSynchronizing());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.isOnline || ctx.dataSaver && ctx.limitedConnection);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(29, 22, \"core.settings.synchronizenow\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isOnline || ctx.dataSaver && ctx.limitedConnection);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.CoreButtonWithSpinnerComponent, i3.CoreLoadingComponent, i4.CoreSplitViewComponent, i5.CoreFaIconDirective, i6.CoreContentDirective, i7.CoreUpdateNonReactiveAttributesDirective, i8.NgControlStatus, i8.NgModel, i9.IonButton, i9.IonButtons, i9.IonCard, i9.IonContent, i9.IonHeader, i9.IonIcon, i9.IonItem, i9.IonLabel, i9.IonList, i9.IonRefresher, i9.IonRefresherContent, i9.IonTitle, i9.IonToggle, i9.IonToolbar, i9.BooleanValueAccessor, i9.IonBackButton, i10.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreEvents","CoreSites","CoreNavigator","CoreSplitViewComponent","CoreListItemsManager","CoreRoutedItemsManagerSourcesTracker","CoreSettingsHelper","CoreDomUtils","CoreNetwork","NgZone","CoreConstants","CoreConfig","CoreSettingsHandlersSource","i0","ɵɵelement","ɵɵproperty","handler_r2","icon","ɵɵelementStart","ɵɵlistener","CoreSitePreferencesPage_ion_item_17_ion_toggle_7_Template_ion_toggle_ngModelChange_0_listener","$event","ɵɵrestoreView","_r8","ɵɵnextContext","$implicit","ɵɵresetView","toggleChecked","CoreSitePreferencesPage_ion_item_17_ion_toggle_7_Template_ion_toggle_ionChange_0_listener","toggle","detail","checked","ɵɵelementEnd","CoreSitePreferencesPage_ion_item_17_Template_ion_item_click_0_listener","restoredCtx","_r13","ctx_r12","handlers","select","ɵɵtemplate","CoreSitePreferencesPage_ion_item_17_ion_icon_2_Template","ɵɵtext","CoreSitePreferencesPage_ion_item_17_ion_toggle_7_Template","class","ɵɵattribute","ɵɵpipeBind1","title","ctx_r0","getItemAriaCurrent","ɵɵadvance","ɵɵtextInterpolate","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtextInterpolate1","CoreSitePreferencesPage_ion_item_31_ng_container_3_Template","CoreSitePreferencesPage_ion_item_31_ng_container_4_Template","ctx_r1","isOnline","dataSaver","limitedConnection","CoreSitePreferencesPage","handlerItems","getSource","constructor","isDestroyed","siteId","getCurrentSiteId","source","getOrCreateSource","sitesObserver","on","SITE_UPDATED","refreshData","isNetworkAccessLimited","networkObserver","onChange","subscribe","run","ngAfterViewInit","_this","_asyncToGenerator","get","SETTINGS_SYNC_ONLY_ON_WIFI","pageToOpen","getRouteParam","fetchData","handler","items","find","page","undefined","watchSplitViewOutlet","splitView","start","_this2","load","synchronize","_this3","synchronizeSite","error","showErrorModalDefault","isSynchronizing","getSiteSyncPromise","refresher","setDirty","finally","complete","ngOnDestroy","off","unsubscribe","destroy","selectors","viewQuery","CoreSitePreferencesPage_Query","rf","ctx","CoreSitePreferencesPage_Template_ion_refresher_ionRefresh_12_listener","target","CoreSitePreferencesPage_ion_item_17_Template","CoreSitePreferencesPage_Template_ion_button_click_28_listener","CoreSitePreferencesPage_ion_item_31_Template","loaded","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/pages/site/site.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/pages/site/site.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\n\nimport { CoreSettingsHandlerToDisplay, CoreSettingsPageHandlerToDisplay } from '../../services/settings-delegate';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreNetwork } from '@services/network';\nimport { Subscription } from 'rxjs';\nimport { NgZone } from '@singletons';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreConfig } from '@services/config';\nimport { CoreSettingsHandlersSource } from '@features/settings/classes/settings-handlers-source';\n\n/**\n * Page that displays the list of site settings pages.\n */\n@Component({\n    selector: 'page-core-site-preferences',\n    templateUrl: 'site.html',\n})\nexport class CoreSitePreferencesPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    handlers: CoreListItemsManager<CoreSettingsPageHandlerToDisplay, CoreSettingsHandlersSource>;\n\n    dataSaver = false;\n    limitedConnection = false;\n    isOnline = true;\n\n    protected siteId: string;\n    protected sitesObserver: CoreEventObserver;\n    protected networkObserver: Subscription;\n    protected isDestroyed = false;\n\n    get handlerItems(): CoreSettingsHandlerToDisplay[] {\n        return this.handlers.getSource().handlers;\n    }\n\n    constructor() {\n        this.siteId = CoreSites.getCurrentSiteId();\n\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreSettingsHandlersSource, []);\n\n        this.handlers = new CoreListItemsManager(source, CoreSitePreferencesPage);\n\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.refreshData();\n        }, this.siteId);\n\n        this.isOnline = CoreNetwork.isOnline();\n        this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n\n        this.networkObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n                this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        this.dataSaver = await CoreConfig.get(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, true);\n\n        const pageToOpen = CoreNavigator.getRouteParam('page');\n\n        try {\n            await this.fetchData();\n        } finally {\n            const handler = pageToOpen ? this.handlers.items.find(handler => handler.page == pageToOpen) : undefined;\n\n            if (handler) {\n                this.handlers.watchSplitViewOutlet(this.splitView);\n\n                await this.handlers.select(handler);\n            } else {\n                await this.handlers.start(this.splitView);\n            }\n        }\n    }\n\n    /**\n     * Fetch Data.\n     */\n    protected async fetchData(): Promise<void> {\n        await this.handlers.load();\n    }\n\n    /**\n     * Syncrhonizes the site.\n     */\n    async synchronize(): Promise<void> {\n        try {\n            // Using syncOnlyOnWifi false to force manual sync.\n            await CoreSettingsHelper.synchronizeSite(false, this.siteId);\n        } catch (error) {\n            if (this.isDestroyed) {\n                return;\n            }\n            CoreDomUtils.showErrorModalDefault(error, 'core.settings.sitesyncfailed', true);\n        }\n\n    }\n\n    /**\n     * Returns true if site is beeing synchronized.\n     *\n     * @returns True if site is beeing synchronized, false otherwise.\n     */\n    isSynchronizing(): boolean {\n        return !!CoreSettingsHelper.getSiteSyncPromise(this.siteId);\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    refreshData(refresher?: HTMLIonRefresherElement): void {\n        this.handlers.getSource().setDirty(true);\n        this.fetchData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.sitesObserver.off();\n        this.networkObserver.unsubscribe();\n        this.handlers.destroy();\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'core.settings.preferences' | translate}}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\" />\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-split-view>\n        <ion-refresher slot=\"fixed\" [disabled]=\"!handlers.loaded\" (ionRefresh)=\"refreshData($event.target)\">\n            <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n        </ion-refresher>\n        <core-loading [hideUntil]=\"handlers.loaded\">\n            <ion-list>\n                <ion-item *ngFor=\"let handler of handlerItems\" class=\"core-settings-handler\" [ngClass]=\"handler.class\"\n                    [attr.aria-label]=\"handler.title | translate\" (click)=\"!handler.toggle && handlers.select(handler)\"\n                    [button]=\"!handler.toggle\" [detail]=\"!handler.toggle\" [attr.aria-current]=\"handlers.getItemAriaCurrent(handler)\">\n                    <ion-icon [name]=\"handler.icon\" slot=\"start\" *ngIf=\"handler.icon\" aria-hidden=\"true\" />\n                    <ion-label>\n                        <p class=\"item-heading\">{{ handler.title | translate}}</p>\n                    </ion-label>\n                    <ion-toggle *ngIf=\"handler.toggle\" [(ngModel)]=\"handler.toggleChecked\"\n                        (ionChange)=\"handler.toggle($event.detail.checked)\" slot=\"end\" />\n                </ion-item>\n            </ion-list>\n\n            <ion-card>\n                <ion-item class=\"ion-text-wrap\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'core.settings.synchronizenow' | translate }}</p>\n                        <p>\n                            {{ 'core.settings.synchronizenowhelp' | translate }}\n                        </p>\n                    </ion-label>\n                    <core-button-with-spinner [loading]=\"isSynchronizing()\" slot=\"end\">\n                        <ion-button fill=\"clear\" (click)=\"synchronize()\" [attr.aria-label]=\"'core.settings.synchronizenow' | translate\"\n                            [disabled]=\"!isOnline || (dataSaver && limitedConnection)\">\n                            <ion-icon name=\"fas-rotate\" slot=\"icon-only\" aria-hidden=\"true\" />\n                        </ion-button>\n                    </core-button-with-spinner>\n                </ion-item>\n                <ion-item class=\"core-warning-item ion-text-wrap\" *ngIf=\"!isOnline || (dataSaver && limitedConnection)\">\n                    <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n                    <ion-label>\n                        <ng-container *ngIf=\"isOnline && dataSaver && limitedConnection\">\n                            {{ 'core.settings.connectwifitosync' | translate }}</ng-container>\n                        <ng-container *ngIf=\"!isOnline\">{{ 'core.settings.connecttosync' | translate }}</ng-container>\n                    </ion-label>\n                </ion-item>\n            </ion-card>\n        </core-loading>\n    </core-split-view>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}