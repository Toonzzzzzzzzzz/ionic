{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/iframe/iframe\";\nimport * as i3 from \"../../../../components/loading/loading\";\nimport * as i4 from \"../../../../directives/link\";\nimport * as i5 from \"../../../../directives/content\";\nimport * as i6 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i7 from \"@ionic/angular\";\nimport * as i8 from \"@ngx-translate/core\";\nfunction CoreLoginSitePolicyPage_ion_list_11_ion_card_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 9);\n    i0.ɵɵelement(1, \"core-iframe\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r1.sitePolicy);\n  }\n}\nfunction CoreLoginSitePolicyPage_ion_list_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-list\")(1, \"ion-item\", 4)(2, \"ion-label\")(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"ion-item\", 4)(7, \"ion-label\")(8, \"p\")(9, \"a\", 5);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(12, CoreLoginSitePolicyPage_ion_list_11_ion_card_12_Template, 2, 1, \"ion-card\", 6);\n    i0.ɵɵelementStart(13, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function CoreLoginSitePolicyPage_ion_list_11_Template_ion_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.accept());\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"ion-button\", 8);\n    i0.ɵɵlistener(\"click\", function CoreLoginSitePolicyPage_ion_list_11_Template_ion_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.cancel());\n    });\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 7, \"core.login.policyagree\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"href\", ctx_r0.sitePolicy, i0.ɵɵsanitizeUrl)(\"capture\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 9, \"core.login.policyagreementclick\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showInline);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(15, 11, \"core.login.policyacceptmandatory\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 13, \"core.login.cancel\"), \" \");\n  }\n}\n/**\n * Page to accept a site policy.\n */\nexport class CoreLoginSitePolicyPage {\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.siteId = CoreNavigator.getRouteParam('siteId');\n    try {\n      this.currentSite = CoreSites.getRequiredCurrentSite();\n    } catch (_unused) {\n      // Not logged in, stop.\n      this.cancel();\n      return;\n    }\n    const currentSiteId = this.currentSite.id;\n    this.siteId = this.siteId || currentSiteId;\n    if (this.siteId != currentSiteId) {\n      // Not current site, stop.\n      this.cancel();\n      return;\n    }\n    this.fetchSitePolicy();\n  }\n  /**\n   * Fetch the site policy URL.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchSitePolicy() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.sitePolicy = yield CoreLoginHelper.getSitePolicy(_this.siteId);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error getting site policy.');\n        _this.cancel();\n        return;\n      }\n      // Try to get the mime type.\n      try {\n        const mimeType = yield CoreUtils.getMimeTypeFromUrl(_this.sitePolicy);\n        const extension = CoreMimetypeUtils.getExtension(mimeType, _this.sitePolicy);\n        _this.showInline = extension == 'html' || extension == 'htm';\n      } catch (_unused2) {\n        // Unable to get mime type, assume it's not supported.\n        _this.showInline = false;\n      } finally {\n        _this.policyLoaded = true;\n      }\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'auth_email_get_signup_settings',\n        name: Translate.instant('core.login.policyagreement'),\n        data: {\n          category: 'policy'\n        },\n        url: '/user/policy.php'\n      });\n    })();\n  }\n  /**\n   * Cancel.\n   *\n   * @returns Promise resolved when done.\n   */\n  cancel() {\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(CoreSites.logout());\n      yield CoreNavigator.navigate('/login/sites', {\n        reset: true\n      });\n    })();\n  }\n  /**\n   * Accept the site policy.\n   *\n   * @returns Promise resolved when done.\n   */\n  accept() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        yield CoreLoginHelper.acceptSitePolicy(_this2.siteId);\n        // Success accepting, go to site initial page.\n        // Invalidate cache since some WS don't return error if site policy is not accepted.\n        yield CoreUtils.ignoreErrors(_this2.currentSite.invalidateWsCache());\n        CoreEvents.trigger(CoreEvents.SITE_POLICY_AGREED, {}, _this2.siteId);\n        yield CoreNavigator.navigateToSiteHome();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error accepting site policy.');\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n}\n_class = CoreLoginSitePolicyPage;\n_class.ɵfac = function CoreLoginSitePolicyPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-login-site-policy\"]],\n  decls: 12,\n  vars: 8,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [3, \"hideUntil\"], [4, \"ngIf\"], [1, \"ion-text-wrap\"], [\"core-link\", \"\", 3, \"href\", \"capture\"], [\"class\", \"core-site-policy-iframe-container\", 4, \"ngIf\"], [\"expand\", \"block\", 1, \"ion-text-wrap\", \"ion-margin-horizontal\", 3, \"click\"], [\"expand\", \"block\", \"fill\", \"outline\", 1, \"ion-text-wrap\", \"ion-margin-horizontal\", \"ion-margin-bottom\", 3, \"click\"], [1, \"core-site-policy-iframe-container\"], [3, \"src\"]],\n  template: function CoreLoginSitePolicyPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"core-loading\", 2);\n      i0.ɵɵtemplate(11, CoreLoginSitePolicyPage_ion_list_11_Template, 19, 15, \"ion-list\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 4, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 6, \"core.login.policyagreement\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hideUntil\", ctx.policyLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.sitePolicy);\n    }\n  },\n  dependencies: [i1.NgIf, i2.CoreIframeComponent, i3.CoreLoadingComponent, i4.CoreLinkDirective, i5.CoreContentDirective, i6.CoreUpdateNonReactiveAttributesDirective, i7.IonButton, i7.IonButtons, i7.IonCard, i7.IonContent, i7.IonHeader, i7.IonItem, i7.IonLabel, i7.IonList, i7.IonTitle, i7.IonToolbar, i7.IonBackButton, i8.TranslatePipe],\n  styles: [\"[_nghost-%COMP%]   ion-list[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n[_nghost-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%] {\\n  flex-shrink: 0;\\n}\\n[_nghost-%COMP%]   ion-list[_ngcontent-%COMP%]   .core-site-policy-iframe-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n[_nghost-%COMP%]   ion-list[_ngcontent-%COMP%]   .core-site-policy-iframe-container[_ngcontent-%COMP%]   core-iframe[_ngcontent-%COMP%] {\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL2xvZ2luL3BhZ2VzL3NpdGUtcG9saWN5L3NpdGUtcG9saWN5LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0FBQVI7QUFFUTtFQUNJLGNBQUE7QUFBWjtBQUdRO0VBQ0ksWUFBQTtBQURaO0FBR1k7RUFDSSxZQUFBO0VBQ0EsV0FBQTtBQURoQiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICBpb24tbGlzdCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgICBpb24taXRlbSB7XG4gICAgICAgICAgICBmbGV4LXNocmluazogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb3JlLXNpdGUtcG9saWN5LWlmcmFtZS1jb250YWluZXIge1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgICAgICAgICBjb3JlLWlmcmFtZSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreSites","CoreDomUtils","CoreUtils","CoreMimetypeUtils","CoreLoginHelper","CoreNavigator","CoreEvents","CoreAnalytics","CoreAnalyticsEventType","Translate","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r1","sitePolicy","ɵɵtext","ɵɵtemplate","CoreLoginSitePolicyPage_ion_list_11_ion_card_12_Template","ɵɵlistener","CoreLoginSitePolicyPage_ion_list_11_Template_ion_button_click_13_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","accept","CoreLoginSitePolicyPage_ion_list_11_Template_ion_button_click_16_listener","ctx_r4","cancel","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r0","ɵɵsanitizeUrl","showInline","ɵɵtextInterpolate1","CoreLoginSitePolicyPage","ngOnInit","siteId","getRouteParam","currentSite","getRequiredCurrentSite","_unused","currentSiteId","id","fetchSitePolicy","_this","_asyncToGenerator","getSitePolicy","error","showErrorModalDefault","mimeType","getMimeTypeFromUrl","extension","getExtension","_unused2","policyLoaded","logEvent","type","VIEW_ITEM","ws","name","instant","data","category","url","ignoreErrors","logout","navigate","reset","_this2","modal","showModalLoading","acceptSitePolicy","invalidateWsCache","trigger","SITE_POLICY_AGREED","navigateToSiteHome","dismiss","selectors","decls","vars","consts","template","CoreLoginSitePolicyPage_Template","rf","ctx","CoreLoginSitePolicyPage_ion_list_11_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/login/pages/site-policy/site-policy.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/login/pages/site-policy/site-policy.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreSite } from '@classes/sites/site';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\n\n/**\n * Page to accept a site policy.\n */\n@Component({\n    selector: 'page-core-login-site-policy',\n    templateUrl: 'site-policy.html',\n    styleUrls: ['site-policy.scss'],\n})\nexport class CoreLoginSitePolicyPage implements OnInit {\n\n    sitePolicy?: string;\n    showInline?: boolean;\n    policyLoaded?: boolean;\n    protected siteId?: string;\n    protected currentSite!: CoreSite;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.siteId = CoreNavigator.getRouteParam('siteId');\n\n        try {\n            this.currentSite = CoreSites.getRequiredCurrentSite();\n        } catch {\n            // Not logged in, stop.\n            this.cancel();\n\n            return;\n        }\n\n        const currentSiteId = this.currentSite.id;\n        this.siteId = this.siteId || currentSiteId;\n\n        if (this.siteId != currentSiteId) {\n            // Not current site, stop.\n            this.cancel();\n\n            return;\n        }\n\n        this.fetchSitePolicy();\n    }\n\n    /**\n     * Fetch the site policy URL.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchSitePolicy(): Promise<void> {\n        try {\n            this.sitePolicy = await CoreLoginHelper.getSitePolicy(this.siteId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting site policy.');\n            this.cancel();\n\n            return;\n        }\n\n        // Try to get the mime type.\n        try {\n            const mimeType = await CoreUtils.getMimeTypeFromUrl(this.sitePolicy);\n\n            const extension = CoreMimetypeUtils.getExtension(mimeType, this.sitePolicy);\n            this.showInline = extension == 'html' || extension == 'htm';\n        } catch {\n            // Unable to get mime type, assume it's not supported.\n            this.showInline = false;\n        } finally {\n            this.policyLoaded = true;\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'auth_email_get_signup_settings',\n            name: Translate.instant('core.login.policyagreement'),\n            data: { category: 'policy' },\n            url: '/user/policy.php',\n        });\n    }\n\n    /**\n     * Cancel.\n     *\n     * @returns Promise resolved when done.\n     */\n    async cancel(): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreSites.logout());\n\n        await CoreNavigator.navigate('/login/sites', { reset: true });\n    }\n\n    /**\n     * Accept the site policy.\n     *\n     * @returns Promise resolved when done.\n     */\n    async accept(): Promise<void> {\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await CoreLoginHelper.acceptSitePolicy(this.siteId);\n\n            // Success accepting, go to site initial page.\n            // Invalidate cache since some WS don't return error if site policy is not accepted.\n            await CoreUtils.ignoreErrors(this.currentSite.invalidateWsCache());\n\n            CoreEvents.trigger(CoreEvents.SITE_POLICY_AGREED, {}, this.siteId);\n\n            await CoreNavigator.navigateToSiteHome();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error accepting site policy.');\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n\n        <ion-title>\n            <h1>{{ 'core.login.policyagreement' | translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-loading [hideUntil]=\"policyLoaded\">\n        <ion-list *ngIf=\"sitePolicy\">\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <p>{{ 'core.login.policyagree' | translate }}</p>\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <p>\n                        <a [href]=\"sitePolicy\" core-link [capture]=\"false\">{{ 'core.login.policyagreementclick' | translate }}</a>\n                    </p>\n                </ion-label>\n            </ion-item>\n            <ion-card *ngIf=\"showInline\" class=\"core-site-policy-iframe-container\">\n                <core-iframe [src]=\"sitePolicy\" />\n            </ion-card>\n            <ion-button class=\"ion-text-wrap ion-margin-horizontal\" expand=\"block\" (click)=\"accept()\">\n                {{ 'core.login.policyacceptmandatory' | translate }}\n            </ion-button>\n            <ion-button class=\"ion-text-wrap ion-margin-horizontal ion-margin-bottom\" expand=\"block\" fill=\"outline\" (click)=\"cancel()\">\n                {{ 'core.login.cancel' | translate }}\n            </ion-button>\n        </ion-list>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}