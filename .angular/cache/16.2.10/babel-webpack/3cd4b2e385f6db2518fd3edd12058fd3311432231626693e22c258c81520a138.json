{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourseResourcePrefetchHandlerBase } from '@features/course/classes/resource-prefetch-handler';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonModBook, AddonModBookProvider } from '../book';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to prefetch books.\n */\nexport class AddonModBookPrefetchHandlerService extends CoreCourseResourcePrefetchHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModBook';\n    this.modName = 'book';\n    this.component = AddonModBookProvider.COMPONENT;\n    this.updatesNames = /^configuration$|^.*files$|^entries$/;\n  }\n  /**\n   * Download or prefetch the content.\n   *\n   * @param module The module object returned by WS.\n   * @param courseId Course ID.\n   * @param prefetch True to prefetch, false to download right away.\n   * @returns Promise resolved when all content is downloaded. Data returned is not reliable.\n   */\n  downloadOrPrefetch(module, courseId, prefetch) {\n    var _superprop_getDownloadOrPrefetch = () => super.downloadOrPrefetch,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(_superprop_getDownloadOrPrefetch().call(_this, module, courseId, prefetch));\n      // Ignore errors since this WS isn't available in some Moodle versions.\n      promises.push(CoreUtils.ignoreErrors(AddonModBook.getBook(courseId, module.id)));\n      yield Promise.all(promises);\n    })();\n  }\n  /**\n   * Returns module intro files.\n   *\n   * @param module The module object returned by WS.\n   * @param courseId Course ID.\n   * @returns Promise resolved with list of intro files.\n   */\n  getIntroFiles(module, courseId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const book = yield CoreUtils.ignoreErrors(AddonModBook.getBook(courseId, module.id));\n      return _this2.getIntroFilesFromInstance(module, book);\n    })();\n  }\n  /**\n   * Invalidate the prefetched content.\n   *\n   * @param moduleId The module ID.\n   * @param courseId Course ID the module belongs to.\n   * @returns Promise resolved when the data is invalidated.\n   */\n  invalidateContent(moduleId, courseId) {\n    return _asyncToGenerator(function* () {\n      yield AddonModBook.invalidateContent(moduleId, courseId);\n    })();\n  }\n  /**\n   * Whether or not the handler is enabled on a site level.\n   *\n   * @returns A boolean, or a promise resolved with a boolean, indicating if the handler is enabled.\n   */\n  isEnabled() {\n    return AddonModBook.isPluginEnabled();\n  }\n}\n_class = AddonModBookPrefetchHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModBookPrefetchHandlerService_BaseFactory;\n  return function AddonModBookPrefetchHandlerService_Factory(t) {\n    return (ɵAddonModBookPrefetchHandlerService_BaseFactory || (ɵAddonModBookPrefetchHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModBookPrefetchHandler = makeSingleton(AddonModBookPrefetchHandlerService);","map":{"version":3,"names":["CoreCourseResourcePrefetchHandlerBase","CoreUtils","makeSingleton","AddonModBook","AddonModBookProvider","AddonModBookPrefetchHandlerService","constructor","name","modName","component","COMPONENT","updatesNames","downloadOrPrefetch","module","courseId","prefetch","_superprop_getDownloadOrPrefetch","_this","_asyncToGenerator","promises","push","call","ignoreErrors","getBook","id","Promise","all","getIntroFiles","_this2","book","getIntroFilesFromInstance","invalidateContent","moduleId","isEnabled","isPluginEnabled","t","factory","ɵfac","providedIn","AddonModBookPrefetchHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/book/services/handlers/prefetch.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourseResourcePrefetchHandlerBase } from '@features/course/classes/resource-prefetch-handler';\nimport { CoreCourseAnyModuleData } from '@features/course/services/course';\nimport { CoreCourseModuleData } from '@features/course/services/course-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreWSFile } from '@services/ws';\nimport { makeSingleton } from '@singletons';\nimport { AddonModBook, AddonModBookProvider } from '../book';\n\n/**\n * Handler to prefetch books.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModBookPrefetchHandlerService extends CoreCourseResourcePrefetchHandlerBase {\n\n    name = 'AddonModBook';\n    modName = 'book';\n    component = AddonModBookProvider.COMPONENT;\n    updatesNames = /^configuration$|^.*files$|^entries$/;\n\n    /**\n     * Download or prefetch the content.\n     *\n     * @param module The module object returned by WS.\n     * @param courseId Course ID.\n     * @param prefetch True to prefetch, false to download right away.\n     * @returns Promise resolved when all content is downloaded. Data returned is not reliable.\n     */\n    async downloadOrPrefetch(module: CoreCourseModuleData, courseId: number, prefetch?: boolean): Promise<void> {\n        const promises: Promise<unknown>[] = [];\n\n        promises.push(super.downloadOrPrefetch(module, courseId, prefetch));\n        // Ignore errors since this WS isn't available in some Moodle versions.\n        promises.push(CoreUtils.ignoreErrors(AddonModBook.getBook(courseId, module.id)));\n        await Promise.all(promises);\n    }\n\n    /**\n     * Returns module intro files.\n     *\n     * @param module The module object returned by WS.\n     * @param courseId Course ID.\n     * @returns Promise resolved with list of intro files.\n     */\n    async getIntroFiles(module: CoreCourseAnyModuleData, courseId: number): Promise<CoreWSFile[]> {\n        const book = await CoreUtils.ignoreErrors(AddonModBook.getBook(courseId, module.id));\n\n        return this.getIntroFilesFromInstance(module, book);\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param moduleId The module ID.\n     * @param courseId Course ID the module belongs to.\n     * @returns Promise resolved when the data is invalidated.\n     */\n    async invalidateContent(moduleId: number, courseId: number): Promise<void> {\n        await AddonModBook.invalidateContent(moduleId, courseId);\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @returns A boolean, or a promise resolved with a boolean, indicating if the handler is enabled.\n     */\n    isEnabled(): Promise<boolean> {\n        return AddonModBook.isPluginEnabled();\n    }\n\n}\n\nexport const AddonModBookPrefetchHandler = makeSingleton(AddonModBookPrefetchHandlerService);\n"],"mappings":";;AAeA,SAASA,qCAAqC,QAAQ,oDAAoD;AAG1G,SAASC,SAAS,QAAQ,uBAAuB;AAEjD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,SAAS;;AAE5D;;;AAIA,OAAM,MAAOC,kCAAmC,SAAQL,qCAAqC;EAD7FM,YAAA;;IAGI,KAAAC,IAAI,GAAG,cAAc;IACrB,KAAAC,OAAO,GAAG,MAAM;IAChB,KAAAC,SAAS,GAAGL,oBAAoB,CAACM,SAAS;IAC1C,KAAAC,YAAY,GAAG,qCAAqC;;EAEpD;;;;;;;;EAQMC,kBAAkBA,CAACC,MAA4B,EAAEC,QAAgB,EAAEC,QAAkB;IAAA,IAAAC,gCAAA,GAAAA,CAAA,WAAAJ,kBAAA;MAAAK,KAAA;IAAA,OAAAC,iBAAA;MACvF,MAAMC,QAAQ,GAAuB,EAAE;MAEvCA,QAAQ,CAACC,IAAI,CAACJ,gCAAA,GAAAK,IAAA,CAAAJ,KAAA,EAAyBJ,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,CAAC,CAAC;MACnE;MACAI,QAAQ,CAACC,IAAI,CAACnB,SAAS,CAACqB,YAAY,CAACnB,YAAY,CAACoB,OAAO,CAACT,QAAQ,EAAED,MAAM,CAACW,EAAE,CAAC,CAAC,CAAC;MAChF,MAAMC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IAAC;EAChC;EAEA;;;;;;;EAOMQ,aAAaA,CAACd,MAA+B,EAAEC,QAAgB;IAAA,IAAAc,MAAA;IAAA,OAAAV,iBAAA;MACjE,MAAMW,IAAI,SAAS5B,SAAS,CAACqB,YAAY,CAACnB,YAAY,CAACoB,OAAO,CAACT,QAAQ,EAAED,MAAM,CAACW,EAAE,CAAC,CAAC;MAEpF,OAAOI,MAAI,CAACE,yBAAyB,CAACjB,MAAM,EAAEgB,IAAI,CAAC;IAAC;EACxD;EAEA;;;;;;;EAOME,iBAAiBA,CAACC,QAAgB,EAAElB,QAAgB;IAAA,OAAAI,iBAAA;MACtD,MAAMf,YAAY,CAAC4B,iBAAiB,CAACC,QAAQ,EAAElB,QAAQ,CAAC;IAAC;EAC7D;EAEA;;;;;EAKAmB,SAASA,CAAA;IACL,OAAO9B,YAAY,CAAC+B,eAAe,EAAE;EACzC;;SAvDS7B,kCAAmC;;;;2IAAnCA,MAAkC,IAAA8B,CAAA,IAAlC9B,MAAkC;EAAA;AAAA;;SAAlCA,MAAkC;EAAA+B,OAAA,EAAlC/B,MAAkC,CAAAgC,IAAA;EAAAC,UAAA,EADrB;AAAM;AA4DhC,OAAO,MAAMC,2BAA2B,GAAGrC,aAAa,CAACG,kCAAkC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}