{"ast":null,"code":"var _class;\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldTextHandlerService } from '../../text/services/handler';\nimport { AddonModDataFieldNumberComponent } from '../component/number';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for number data field plugin.\n */\nexport class AddonModDataFieldNumberHandlerService extends AddonModDataFieldTextHandlerService {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModDataFieldNumberHandler';\n    this.type = 'number';\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return AddonModDataFieldNumberComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  hasFieldDataChanged(field, inputData, originalFieldData) {\n    var _inputData$fieldName, _originalFieldData$co;\n    const fieldName = 'f_' + field.id;\n    const input = (_inputData$fieldName = inputData[fieldName]) !== null && _inputData$fieldName !== void 0 ? _inputData$fieldName : '';\n    const content = (_originalFieldData$co = originalFieldData === null || originalFieldData === void 0 ? void 0 : originalFieldData.content) !== null && _originalFieldData$co !== void 0 ? _originalFieldData$co : '';\n    return input !== content;\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldsNotifications(field, inputData) {\n    if (field.required && (!inputData || !inputData.length || inputData[0].value === '')) {\n      return Translate.instant('addon.mod_data.errormustsupplyvalue');\n    }\n  }\n}\n_class = AddonModDataFieldNumberHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModDataFieldNumberHandlerService_BaseFactory;\n  return function AddonModDataFieldNumberHandlerService_Factory(t) {\n    return (ɵAddonModDataFieldNumberHandlerService_BaseFactory || (ɵAddonModDataFieldNumberHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModDataFieldNumberHandler = makeSingleton(AddonModDataFieldNumberHandlerService);","map":{"version":3,"names":["makeSingleton","Translate","AddonModDataFieldTextHandlerService","AddonModDataFieldNumberComponent","AddonModDataFieldNumberHandlerService","constructor","name","type","getComponent","hasFieldDataChanged","field","inputData","originalFieldData","_inputData$fieldName","_originalFieldData$co","fieldName","id","input","content","getFieldsNotifications","required","length","value","instant","t","factory","ɵfac","providedIn","AddonModDataFieldNumberHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/number/services/handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonModDataEntryField, AddonModDataField, AddonModDataSubfieldData } from '@addons/mod/data/services/data';\nimport { Injectable, Type } from '@angular/core';\nimport { CoreFormFields } from '@singletons/form';\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldTextHandlerService } from '../../text/services/handler';\nimport { AddonModDataFieldNumberComponent } from '../component/number';\nimport type { AddonModDataFieldPluginBaseComponent } from '@addons/mod/data/classes/base-field-plugin-component';\n\n/**\n * Handler for number data field plugin.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModDataFieldNumberHandlerService extends AddonModDataFieldTextHandlerService {\n\n    name = 'AddonModDataFieldNumberHandler';\n    type = 'number';\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<AddonModDataFieldPluginBaseComponent> {\n        return AddonModDataFieldNumberComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    hasFieldDataChanged(\n        field: AddonModDataField,\n        inputData: CoreFormFields,\n        originalFieldData: AddonModDataEntryField,\n    ): boolean {\n        const fieldName = 'f_' + field.id;\n        const input = inputData[fieldName] ?? '';\n        const content = originalFieldData?.content ?? '';\n\n        return input !== content;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldsNotifications(field: AddonModDataField, inputData: AddonModDataSubfieldData[]): string | undefined {\n        if (field.required && (!inputData || !inputData.length || inputData[0].value === '')) {\n            return Translate.instant('addon.mod_data.errormustsupplyvalue');\n        }\n    }\n\n}\nexport const AddonModDataFieldNumberHandler = makeSingleton(AddonModDataFieldNumberHandlerService);\n"],"mappings":";AAiBA,SAASA,aAAa,EAAEC,SAAS,QAAQ,aAAa;AACtD,SAASC,mCAAmC,QAAQ,6BAA6B;AACjF,SAASC,gCAAgC,QAAQ,qBAAqB;;AAGtE;;;AAIA,OAAM,MAAOC,qCAAsC,SAAQF,mCAAmC;EAD9FG,YAAA;;IAGI,KAAAC,IAAI,GAAG,gCAAgC;IACvC,KAAAC,IAAI,GAAG,QAAQ;;EAEf;;;EAGAC,YAAYA,CAAA;IACR,OAAOL,gCAAgC;EAC3C;EAEA;;;EAGAM,mBAAmBA,CACfC,KAAwB,EACxBC,SAAyB,EACzBC,iBAAyC;IAAA,IAAAC,oBAAA,EAAAC,qBAAA;IAEzC,MAAMC,SAAS,GAAG,IAAI,GAAGL,KAAK,CAACM,EAAE;IACjC,MAAMC,KAAK,IAAAJ,oBAAA,GAAGF,SAAS,CAACI,SAAS,CAAC,cAAAF,oBAAA,cAAAA,oBAAA,GAAI,EAAE;IACxC,MAAMK,OAAO,IAAAJ,qBAAA,GAAGF,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEM,OAAO,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,EAAE;IAEhD,OAAOG,KAAK,KAAKC,OAAO;EAC5B;EAEA;;;EAGAC,sBAAsBA,CAACT,KAAwB,EAAEC,SAAqC;IAClF,IAAID,KAAK,CAACU,QAAQ,KAAK,CAACT,SAAS,IAAI,CAACA,SAAS,CAACU,MAAM,IAAIV,SAAS,CAAC,CAAC,CAAC,CAACW,KAAK,KAAK,EAAE,CAAC,EAAE;MAClF,OAAOrB,SAAS,CAACsB,OAAO,CAAC,qCAAqC,CAAC;;EAEvE;;SAlCSnB,qCAAsC;;;;iJAAtCA,MAAqC,IAAAoB,CAAA,IAArCpB,MAAqC;EAAA;AAAA;;SAArCA,MAAqC;EAAAqB,OAAA,EAArCrB,MAAqC,CAAAsB,IAAA;EAAAC,UAAA,EADxB;AAAM;AAsChC,OAAO,MAAMC,8BAA8B,GAAG5B,aAAa,CAACI,qCAAqC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}