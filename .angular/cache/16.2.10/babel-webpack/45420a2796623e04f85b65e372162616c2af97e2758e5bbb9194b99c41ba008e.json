{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreMainMenuHomeHandlerService } from '@features/mainmenu/services/handlers/mainmenu';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { CoreDashboardHomeHandler, CoreDashboardHomeHandlerService } from './dashboard-home';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to treat links to dashboard.\n */\nexport class CoreCoursesDashboardLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'CoreCoursesDashboardLinkHandler';\n    this.pattern = /\\/my\\/?$/;\n  }\n  /**\n   * Get the list of actions for a link (url).\n   *\n   * @returns List of (or promise resolved with list of) actions.\n   */\n  getActions() {\n    return [{\n      action: siteId => {\n        // Use redirect to select the tab.\n        CoreNavigator.navigateToSitePath(`/${CoreMainMenuHomeHandlerService.PAGE_NAME}/${CoreDashboardHomeHandlerService.PAGE_NAME}`, {\n          siteId,\n          preferCurrentTab: false\n        });\n      }\n    }];\n  }\n  /**\n   * Check if the handler is enabled for a certain site (site + user) and a URL.\n   *\n   * @param siteId The site ID.\n   * @returns Whether the handler is enabled for the URL and site.\n   */\n  isEnabled(siteId) {\n    return _asyncToGenerator(function* () {\n      return CoreDashboardHomeHandler.isEnabledForSite(siteId);\n    })();\n  }\n}\n_class = CoreCoursesDashboardLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵCoreCoursesDashboardLinkHandlerService_BaseFactory;\n  return function CoreCoursesDashboardLinkHandlerService_Factory(t) {\n    return (ɵCoreCoursesDashboardLinkHandlerService_BaseFactory || (ɵCoreCoursesDashboardLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreCoursesDashboardLinkHandler = makeSingleton(CoreCoursesDashboardLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreMainMenuHomeHandlerService","CoreNavigator","makeSingleton","CoreDashboardHomeHandler","CoreDashboardHomeHandlerService","CoreCoursesDashboardLinkHandlerService","constructor","name","pattern","getActions","action","siteId","navigateToSitePath","PAGE_NAME","preferCurrentTab","isEnabled","_asyncToGenerator","isEnabledForSite","t","factory","ɵfac","providedIn","CoreCoursesDashboardLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/courses/services/handlers/dashboard-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreMainMenuHomeHandlerService } from '@features/mainmenu/services/handlers/mainmenu';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { CoreDashboardHomeHandler, CoreDashboardHomeHandlerService } from './dashboard-home';\n\n/**\n * Handler to treat links to dashboard.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreCoursesDashboardLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'CoreCoursesDashboardLinkHandler';\n    pattern = /\\/my\\/?$/;\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @returns List of (or promise resolved with list of) actions.\n     */\n    getActions(): CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId): void => {\n                // Use redirect to select the tab.\n                CoreNavigator.navigateToSitePath(\n                    `/${CoreMainMenuHomeHandlerService.PAGE_NAME}/${CoreDashboardHomeHandlerService.PAGE_NAME}`,\n                    {\n                        siteId,\n                        preferCurrentTab: false,\n                    },\n                );\n            },\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     *\n     * @param siteId The site ID.\n     * @returns Whether the handler is enabled for the URL and site.\n     */\n    async isEnabled(siteId: string): Promise<boolean> {\n        return CoreDashboardHomeHandler.isEnabledForSite(siteId);\n    }\n\n}\n\nexport const CoreCoursesDashboardLinkHandler = makeSingleton(CoreCoursesDashboardLinkHandlerService);\n"],"mappings":";;AAeA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,8BAA8B,QAAQ,+CAA+C;AAC9F,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,wBAAwB,EAAEC,+BAA+B,QAAQ,kBAAkB;;AAE5F;;;AAIA,OAAM,MAAOC,sCAAuC,SAAQN,2BAA2B;EADvFO,YAAA;;IAGI,KAAAC,IAAI,GAAG,iCAAiC;IACxC,KAAAC,OAAO,GAAG,UAAU;;EAEpB;;;;;EAKAC,UAAUA,CAAA;IACN,OAAO,CAAC;MACJC,MAAM,EAAGC,MAAM,IAAU;QACrB;QACAV,aAAa,CAACW,kBAAkB,CAC5B,IAAIZ,8BAA8B,CAACa,SAAS,IAAIT,+BAA+B,CAACS,SAAS,EAAE,EAC3F;UACIF,MAAM;UACNG,gBAAgB,EAAE;SACrB,CACJ;MACL;KACH,CAAC;EACN;EAEA;;;;;;EAMMC,SAASA,CAACJ,MAAc;IAAA,OAAAK,iBAAA;MAC1B,OAAOb,wBAAwB,CAACc,gBAAgB,CAACN,MAAM,CAAC;IAAC;EAC7D;;SAjCSN,sCAAuC;;;;mJAAvCA,MAAsC,IAAAa,CAAA,IAAtCb,MAAsC;EAAA;AAAA;;SAAtCA,MAAsC;EAAAc,OAAA,EAAtCd,MAAsC,CAAAe,IAAA;EAAAC,UAAA,EADzB;AAAM;AAsChC,OAAO,MAAMC,+BAA+B,GAAGpB,aAAa,CAACG,sCAAsC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}