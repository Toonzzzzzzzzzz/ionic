{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreNetwork } from '@services/network';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { AddonCalendar, AddonCalendarProvider } from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { AddonCalendarHelper } from '../../services/calendar-helper';\nimport { NgZone } from '@singletons';\nimport { AddonCalendarCalendarComponent } from '../../components/calendar/calendar';\nimport { AddonCalendarUpcomingEventsComponent } from '../../components/upcoming-events/upcoming-events';\nimport { AddonCalendarFilterComponent } from '../../components/filter/filter';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../core/components/context-menu/context-menu\";\nimport * as i4 from \"../../../../core/components/context-menu/context-menu-item\";\nimport * as i5 from \"../../../../core/directives/fab\";\nimport * as i6 from \"../../../../core/directives/fa-icon\";\nimport * as i7 from \"../../../../core/directives/content\";\nimport * as i8 from \"../../../../core/directives/update-non-reactive-attributes\";\nimport * as i9 from \"@ionic/angular\";\nimport * as i10 from \"../../components/calendar/calendar\";\nimport * as i11 from \"../../components/upcoming-events/upcoming-events\";\nimport * as i12 from \"../../../../core/features/mainmenu/components/user-menu-button/user-menu-button\";\nimport * as i13 from \"@ngx-translate/core\";\nfunction AddonCalendarIndexPage_core_context_menu_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 15);\n    i0.ɵɵlistener(\"action\", function AddonCalendarIndexPage_core_context_menu_item_14_Template_core_context_menu_item_action_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleDisplay());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"priority\", 800)(\"content\", i0.ɵɵpipeBind1(1, 2, \"addon.calendar.upcomingevents\"));\n  }\n}\nfunction AddonCalendarIndexPage_core_context_menu_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 16);\n    i0.ɵɵlistener(\"action\", function AddonCalendarIndexPage_core_context_menu_item_15_Template_core_context_menu_item_action_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.toggleDisplay());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"priority\", 800)(\"content\", i0.ɵɵpipeBind1(1, 2, \"addon.calendar.monthlyview\"));\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonCalendarIndexPage_ion_card_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 17)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 18);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 1, \"core.hasdatatosync\", i0.ɵɵpureFunction1(6, _c0, i0.ɵɵpipeBind1(6, 4, \"addon.calendar.calendar\"))));\n  }\n}\nfunction AddonCalendarIndexPage_addon_calendar_upcoming_events_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"addon-calendar-upcoming-events\", 19);\n    i0.ɵɵlistener(\"onEventClicked\", function AddonCalendarIndexPage_addon_calendar_upcoming_events_27_Template_addon_calendar_upcoming_events_onEventClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.gotoEvent($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", ctx_r3.showCalendar)(\"filter\", ctx_r3.filter);\n  }\n}\nfunction AddonCalendarIndexPage_ion_fab_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-fab\", 20)(1, \"ion-fab-button\", 21);\n    i0.ɵɵlistener(\"click\", function AddonCalendarIndexPage_ion_fab_28_Template_ion_fab_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.openEdit());\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 22);\n    i0.ɵɵelementStart(4, \"span\", 23);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 2, \"addon.calendar.newevent\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 4, \"addon.calendar.newevent\"));\n  }\n}\n/**\n * Page that displays the calendar events.\n */\nexport class AddonCalendarIndexPage {\n  constructor(route) {\n    var _this = this;\n    this.route = route;\n    this.canCreate = false;\n    this.courses = [];\n    this.loaded = false;\n    this.hasOffline = false;\n    this.isOnline = false;\n    this.syncIcon = CoreConstants.ICON_LOADING;\n    this.showCalendar = true;\n    this.loadUpcoming = false;\n    this.filter = {\n      filtered: false,\n      courseId: undefined,\n      categoryId: undefined,\n      course: true,\n      group: true,\n      site: true,\n      user: true,\n      category: true\n    };\n    this.currentSiteId = CoreSites.getCurrentSiteId();\n    // Listen for events added. When an event is added, reload the data.\n    this.newEventObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_EVENT, data => {\n      if (data && data.eventId) {\n        this.loaded = false;\n        this.refreshData(true, false, true);\n      }\n    }, this.currentSiteId);\n    // Listen for new event discarded event. When it does, reload the data.\n    this.discardedObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n      this.loaded = false;\n      this.refreshData(true, false, true);\n    }, this.currentSiteId);\n    // Listen for events edited. When an event is edited, reload the data.\n    this.editEventObserver = CoreEvents.on(AddonCalendarProvider.EDIT_EVENT_EVENT, data => {\n      if (data && data.eventId) {\n        this.loaded = false;\n        this.refreshData(true, false, true);\n      }\n    }, this.currentSiteId);\n    // Refresh data if calendar events are synchronized automatically.\n    this.syncObserver = CoreEvents.on(AddonCalendarSyncProvider.AUTO_SYNCED, () => {\n      this.loaded = false;\n      this.refreshData(false, false, true);\n    }, this.currentSiteId);\n    // Refresh data if calendar events are synchronized manually but not by this page.\n    this.manualSyncObserver = CoreEvents.on(AddonCalendarSyncProvider.MANUAL_SYNCED, data => {\n      if (data && data.source != 'index') {\n        this.loaded = false;\n        this.refreshData(false, false, true);\n      }\n    }, this.currentSiteId);\n    // Update the events when an event is deleted.\n    this.deleteEventObserver = CoreEvents.on(AddonCalendarProvider.DELETED_EVENT_EVENT, () => {\n      this.loaded = false;\n      this.refreshData(false, false, true);\n    }, this.currentSiteId);\n    // Update the \"hasOffline\" property if an event deleted in offline is restored.\n    this.undeleteEventObserver = CoreEvents.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.hasOffline = yield AddonCalendarOffline.hasOfflineData();\n    }), this.currentSiteId);\n    this.filterChangedObserver = CoreEvents.on(AddonCalendarProvider.FILTER_CHANGED_EVENT, /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (filterData) {\n        _this.filter = filterData;\n        // Course viewed has changed, check if the user can create events for this course calendar.\n        _this.canCreate = yield AddonCalendarHelper.canEditEvents(_this.filter.courseId);\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    // Refresh online status when changes.\n    this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n      // Execute the callback in the Angular zone, so change detection doesn't stop working.\n      NgZone.run(() => {\n        this.isOnline = CoreNetwork.isOnline();\n      });\n    });\n  }\n  /**\n   * View loaded.\n   */\n  ngOnInit() {\n    var _this2 = this;\n    this.loadUpcoming = !!CoreNavigator.getRouteBooleanParam('upcoming');\n    this.showCalendar = !this.loadUpcoming;\n    this.route.queryParams.subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n      _this2.filter.courseId = CoreNavigator.getRouteNumberParam('courseId');\n      _this2.year = CoreNavigator.getRouteNumberParam('year');\n      _this2.month = CoreNavigator.getRouteNumberParam('month');\n      _this2.filter.filtered = !!_this2.filter.courseId;\n      _this2.fetchData(true, false);\n      if (_this2.year !== undefined && _this2.month !== undefined && _this2.calendarComponent) {\n        _this2.calendarComponent.viewMonth(_this2.month, _this2.year);\n      }\n    }));\n    const deepLinkManager = new CoreMainMenuDeepLinkManager();\n    deepLinkManager.treatLink();\n  }\n  /**\n   * Fetch all the data required for the view.\n   *\n   * @param sync Whether it should try to synchronize offline events.\n   * @param showErrors Whether to show sync errors to the user.\n   * @returns Promise resolved when done.\n   */\n  fetchData(sync, showErrors) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.syncIcon = CoreConstants.ICON_LOADING;\n      _this3.isOnline = CoreNetwork.isOnline();\n      if (sync) {\n        // Try to synchronize offline events.\n        try {\n          const result = yield AddonCalendarSync.syncEvents();\n          if (result.warnings && result.warnings.length) {\n            CoreDomUtils.showAlert(undefined, result.warnings[0]);\n          }\n          if (result.updated) {\n            // Trigger a manual sync event.\n            result.source = 'index';\n            CoreEvents.trigger(AddonCalendarSyncProvider.MANUAL_SYNCED, result, _this3.currentSiteId);\n          }\n        } catch (error) {\n          if (showErrors) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n          }\n        }\n      }\n      try {\n        const promises = [];\n        _this3.hasOffline = false;\n        // Load courses for the popover.\n        promises.push(CoreCoursesHelper.getCoursesForPopover(_this3.filter.courseId).then(data => {\n          _this3.courses = data.courses;\n          return;\n        }));\n        // Check if user can create events.\n        promises.push(AddonCalendarHelper.canEditEvents(_this3.filter.courseId).then(canEdit => {\n          _this3.canCreate = canEdit;\n          return;\n        }));\n        // Check if there is offline data.\n        promises.push(AddonCalendarOffline.hasOfflineData().then(hasOffline => {\n          _this3.hasOffline = hasOffline;\n          return;\n        }));\n        yield Promise.all(promises);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n      }\n      _this3.loaded = true;\n      _this3.syncIcon = CoreConstants.ICON_SYNC;\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   * @param done Function to call when done.\n   * @param showErrors Whether to show sync errors to the user.\n   * @returns Promise resolved when done.\n   */\n  doRefresh(refresher, done, showErrors) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.loaded) {\n        return;\n      }\n      yield _this4.refreshData(true, showErrors).finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n        done && done();\n      });\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param sync Whether it should try to synchronize offline events.\n   * @param showErrors Whether to show sync errors to the user.\n   * @param afterChange Whether the refresh is done after an event has changed or has been synced.\n   * @returns Promise resolved when done.\n   */\n  refreshData(sync = false, showErrors = false, afterChange = false) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.syncIcon = CoreConstants.ICON_LOADING;\n      const promises = [];\n      promises.push(AddonCalendar.invalidateAllowedEventTypes());\n      // Refresh the sub-component.\n      if (_this5.showCalendar && _this5.calendarComponent) {\n        promises.push(_this5.calendarComponent.refreshData(afterChange));\n      } else if (!_this5.showCalendar && _this5.upcomingEventsComponent) {\n        promises.push(_this5.upcomingEventsComponent.refreshData());\n      }\n      yield Promise.all(promises).finally(() => _this5.fetchData(sync, showErrors));\n    })();\n  }\n  /**\n   * Navigate to a particular event.\n   *\n   * @param eventId Event to load.\n   */\n  gotoEvent(eventId) {\n    CoreNavigator.navigateToSitePath(`/calendar/event/${eventId}`);\n  }\n  /**\n   * View a certain day.\n   *\n   * @param data Data with the year, month and day.\n   */\n  gotoDay(data) {\n    const params = {\n      day: data.day,\n      month: data.month,\n      year: data.year\n    };\n    Object.keys(this.filter).forEach(key => {\n      params[key] = this.filter[key];\n    });\n    CoreNavigator.navigateToSitePath('/calendar/day', {\n      params\n    });\n  }\n  /**\n   * Show the filter menu.\n   */\n  openFilter() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreDomUtils.openSideModal({\n        component: AddonCalendarFilterComponent,\n        componentProps: {\n          courses: _this6.courses,\n          filter: _this6.filter\n        }\n      });\n    })();\n  }\n  /**\n   * Open page to create/edit an event.\n   *\n   * @param eventId Event ID to edit.\n   */\n  openEdit(eventId) {\n    const params = {};\n    eventId = eventId || 0;\n    if (this.filter.courseId) {\n      params.courseId = this.filter.courseId;\n    }\n    CoreNavigator.navigateToSitePath(`/calendar/edit/${eventId}`, {\n      params\n    });\n  }\n  /**\n   * Open calendar events settings.\n   */\n  openSettings() {\n    CoreNavigator.navigateToSitePath('/calendar/calendar-settings');\n  }\n  /**\n   * Toogle display: monthly view or upcoming events.\n   */\n  toggleDisplay() {\n    this.showCalendar = !this.showCalendar;\n    if (!this.showCalendar) {\n      this.loadUpcoming = true;\n    }\n  }\n  /**\n   * Page destroyed.\n   */\n  ngOnDestroy() {\n    var _this$newEventObserve, _this$discardedObserv, _this$editEventObserv, _this$deleteEventObse, _this$undeleteEventOb, _this$syncObserver, _this$manualSyncObser, _this$filterChangedOb, _this$onlineObserver;\n    (_this$newEventObserve = this.newEventObserver) === null || _this$newEventObserve === void 0 || _this$newEventObserve.off();\n    (_this$discardedObserv = this.discardedObserver) === null || _this$discardedObserv === void 0 || _this$discardedObserv.off();\n    (_this$editEventObserv = this.editEventObserver) === null || _this$editEventObserv === void 0 || _this$editEventObserv.off();\n    (_this$deleteEventObse = this.deleteEventObserver) === null || _this$deleteEventObse === void 0 || _this$deleteEventObse.off();\n    (_this$undeleteEventOb = this.undeleteEventObserver) === null || _this$undeleteEventOb === void 0 || _this$undeleteEventOb.off();\n    (_this$syncObserver = this.syncObserver) === null || _this$syncObserver === void 0 || _this$syncObserver.off();\n    (_this$manualSyncObser = this.manualSyncObserver) === null || _this$manualSyncObser === void 0 || _this$manualSyncObser.off();\n    (_this$filterChangedOb = this.filterChangedObserver) === null || _this$filterChangedOb === void 0 || _this$filterChangedOb.off();\n    (_this$onlineObserver = this.onlineObserver) === null || _this$onlineObserver === void 0 || _this$onlineObserver.unsubscribe();\n  }\n}\n_class = AddonCalendarIndexPage;\n_class.ɵfac = function AddonCalendarIndexPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-calendar-index\"]],\n  viewQuery: function AddonCalendarIndexPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(AddonCalendarCalendarComponent, 5);\n      i0.ɵɵviewQuery(AddonCalendarUpcomingEventsComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.calendarComponent = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.upcomingEventsComponent = _t.first);\n    }\n  },\n  decls: 29,\n  vars: 34,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"fas-filter\", \"aria-hidden\", \"true\"], [\"iconAction\", \"fas-table-list\", 3, \"priority\", \"content\", \"action\", 4, \"ngIf\"], [\"iconAction\", \"fas-calendar-days\", 3, \"priority\", \"content\", \"action\", 4, \"ngIf\"], [\"iconAction\", \"fas-gears\", 3, \"priority\", \"content\", \"action\"], [3, \"hidden\", \"priority\", \"content\", \"iconAction\", \"closeOnClick\", \"action\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [\"class\", \"core-warning-card\", 4, \"ngIf\"], [3, \"hidden\", \"initialYear\", \"initialMonth\", \"filter\", \"displayNavButtons\", \"onEventClicked\", \"onDayClicked\"], [3, \"hidden\", \"filter\", \"onEventClicked\", 4, \"ngIf\"], [\"slot\", \"fixed\", \"core-fab\", \"\", \"vertical\", \"bottom\", \"horizontal\", \"end\", 4, \"ngIf\"], [\"iconAction\", \"fas-table-list\", 3, \"priority\", \"content\", \"action\"], [\"iconAction\", \"fas-calendar-days\", 3, \"priority\", \"content\", \"action\"], [1, \"core-warning-card\"], [\"name\", \"fas-triangle-exclamation\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [3, \"hidden\", \"filter\", \"onEventClicked\"], [\"slot\", \"fixed\", \"core-fab\", \"\", \"vertical\", \"bottom\", \"horizontal\", \"end\"], [3, \"click\"], [\"name\", \"fas-plus\", \"aria-hidden\", \"true\"], [1, \"sr-only\"]],\n  template: function AddonCalendarIndexPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-buttons\", 2)(10, \"ion-button\", 3);\n      i0.ɵɵlistener(\"click\", function AddonCalendarIndexPage_Template_ion_button_click_10_listener() {\n        return ctx.openFilter();\n      });\n      i0.ɵɵpipe(11, \"translate\");\n      i0.ɵɵelement(12, \"ion-icon\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"core-context-menu\");\n      i0.ɵɵtemplate(14, AddonCalendarIndexPage_core_context_menu_item_14_Template, 2, 4, \"core-context-menu-item\", 5);\n      i0.ɵɵtemplate(15, AddonCalendarIndexPage_core_context_menu_item_15_Template, 2, 4, \"core-context-menu-item\", 6);\n      i0.ɵɵelementStart(16, \"core-context-menu-item\", 7);\n      i0.ɵɵlistener(\"action\", function AddonCalendarIndexPage_Template_core_context_menu_item_action_16_listener() {\n        return ctx.openSettings();\n      });\n      i0.ɵɵpipe(17, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"core-context-menu-item\", 8);\n      i0.ɵɵlistener(\"action\", function AddonCalendarIndexPage_Template_core_context_menu_item_action_18_listener($event) {\n        return ctx.doRefresh(undefined, $event, true);\n      });\n      i0.ɵɵpipe(19, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(20, \"core-user-menu-button\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"ion-content\")(22, \"ion-refresher\", 9);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonCalendarIndexPage_Template_ion_refresher_ionRefresh_22_listener($event) {\n        return ctx.doRefresh($event.target);\n      });\n      i0.ɵɵelement(23, \"ion-refresher-content\", 10);\n      i0.ɵɵpipe(24, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, AddonCalendarIndexPage_ion_card_25_Template, 7, 8, \"ion-card\", 11);\n      i0.ɵɵelementStart(26, \"addon-calendar-calendar\", 12);\n      i0.ɵɵlistener(\"onEventClicked\", function AddonCalendarIndexPage_Template_addon_calendar_calendar_onEventClicked_26_listener($event) {\n        return ctx.gotoEvent($event);\n      })(\"onDayClicked\", function AddonCalendarIndexPage_Template_addon_calendar_calendar_onDayClicked_26_listener($event) {\n        return ctx.gotoDay($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, AddonCalendarIndexPage_addon_calendar_upcoming_events_27_Template, 1, 2, \"addon-calendar-upcoming-events\", 13);\n      i0.ɵɵtemplate(28, AddonCalendarIndexPage_ion_fab_28_Template, 7, 6, \"ion-fab\", 14);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 22, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 24, ctx.showCalendar ? \"addon.calendar.calendarevents\" : \"addon.calendar.upcomingevents\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(11, 26, \"core.filter\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showCalendar);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showCalendar);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"priority\", 600)(\"content\", i0.ɵɵpipeBind1(17, 28, \"core.settings.settings\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.loaded || !ctx.hasOffline || !ctx.isOnline)(\"priority\", 400)(\"content\", i0.ɵɵpipeBind1(19, 30, \"core.settings.synchronizenow\"))(\"iconAction\", ctx.syncIcon)(\"closeOnClick\", false);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(24, 32, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasOffline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", !ctx.showCalendar)(\"initialYear\", ctx.year)(\"initialMonth\", ctx.month)(\"filter\", ctx.filter)(\"displayNavButtons\", ctx.showCalendar);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loadUpcoming);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.canCreate);\n    }\n  },\n  dependencies: [i2.NgIf, i3.CoreContextMenuComponent, i4.CoreContextMenuItemComponent, i5.CoreFabDirective, i6.CoreFaIconDirective, i7.CoreContentDirective, i8.CoreUpdateNonReactiveAttributesDirective, i9.IonButton, i9.IonButtons, i9.IonCard, i9.IonContent, i9.IonFab, i9.IonFabButton, i9.IonHeader, i9.IonIcon, i9.IonItem, i9.IonLabel, i9.IonRefresher, i9.IonRefresherContent, i9.IonTitle, i9.IonToolbar, i9.IonBackButton, i10.AddonCalendarCalendarComponent, i11.AddonCalendarUpcomingEventsComponent, i12.CoreMainMenuUserButtonComponent, i13.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreNetwork","CoreEvents","CoreSites","CoreDomUtils","CoreCoursesHelper","AddonCalendar","AddonCalendarProvider","AddonCalendarOffline","AddonCalendarSync","AddonCalendarSyncProvider","AddonCalendarHelper","NgZone","AddonCalendarCalendarComponent","AddonCalendarUpcomingEventsComponent","AddonCalendarFilterComponent","CoreNavigator","CoreConstants","CoreMainMenuDeepLinkManager","i0","ɵɵelementStart","ɵɵlistener","AddonCalendarIndexPage_core_context_menu_item_14_Template_core_context_menu_item_action_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","toggleDisplay","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind1","AddonCalendarIndexPage_core_context_menu_item_15_Template_core_context_menu_item_action_0_listener","_r8","ctx_r7","ɵɵelement","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","ɵɵpureFunction1","_c0","AddonCalendarIndexPage_addon_calendar_upcoming_events_27_Template_addon_calendar_upcoming_events_onEventClicked_0_listener","$event","_r10","ctx_r9","gotoEvent","ctx_r3","showCalendar","filter","AddonCalendarIndexPage_ion_fab_28_Template_ion_fab_button_click_1_listener","_r12","ctx_r11","openEdit","ɵɵattribute","AddonCalendarIndexPage","constructor","route","_this","canCreate","courses","loaded","hasOffline","isOnline","syncIcon","ICON_LOADING","loadUpcoming","filtered","courseId","undefined","categoryId","course","group","site","user","category","currentSiteId","getCurrentSiteId","newEventObserver","on","NEW_EVENT_EVENT","data","eventId","refreshData","discardedObserver","NEW_EVENT_DISCARDED_EVENT","editEventObserver","EDIT_EVENT_EVENT","syncObserver","AUTO_SYNCED","manualSyncObserver","MANUAL_SYNCED","source","deleteEventObserver","DELETED_EVENT_EVENT","undeleteEventObserver","UNDELETED_EVENT_EVENT","_asyncToGenerator","hasOfflineData","filterChangedObserver","FILTER_CHANGED_EVENT","_ref2","filterData","canEditEvents","_x","apply","arguments","onlineObserver","onChange","subscribe","run","ngOnInit","_this2","getRouteBooleanParam","queryParams","getRouteNumberParam","year","month","fetchData","calendarComponent","viewMonth","deepLinkManager","treatLink","sync","showErrors","_this3","result","syncEvents","warnings","length","showAlert","updated","trigger","error","showErrorModalDefault","promises","push","getCoursesForPopover","then","canEdit","Promise","all","ICON_SYNC","doRefresh","refresher","done","_this4","finally","complete","afterChange","_this5","invalidateAllowedEventTypes","upcomingEventsComponent","navigateToSitePath","gotoDay","params","day","Object","keys","forEach","key","openFilter","_this6","openSideModal","component","componentProps","openSettings","ngOnDestroy","_this$newEventObserve","_this$discardedObserv","_this$editEventObserv","_this$deleteEventObse","_this$undeleteEventOb","_this$syncObserver","_this$manualSyncObser","_this$filterChangedOb","_this$onlineObserver","off","unsubscribe","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","viewQuery","AddonCalendarIndexPage_Query","rf","ctx","AddonCalendarIndexPage_Template_ion_button_click_10_listener","ɵɵtemplate","AddonCalendarIndexPage_core_context_menu_item_14_Template","AddonCalendarIndexPage_core_context_menu_item_15_Template","AddonCalendarIndexPage_Template_core_context_menu_item_action_16_listener","AddonCalendarIndexPage_Template_core_context_menu_item_action_18_listener","AddonCalendarIndexPage_Template_ion_refresher_ionRefresh_22_listener","target","AddonCalendarIndexPage_ion_card_25_Template","AddonCalendarIndexPage_Template_addon_calendar_calendar_onEventClicked_26_listener","AddonCalendarIndexPage_Template_addon_calendar_calendar_onDayClicked_26_listener","AddonCalendarIndexPage_addon_calendar_upcoming_events_27_Template","AddonCalendarIndexPage_ion_fab_28_Template","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/calendar/pages/index/index.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/calendar/pages/index/index.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { CoreNetwork } from '@services/network';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { AddonCalendar, AddonCalendarProvider } from '../../services/calendar';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { AddonCalendarFilter, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { NgZone } from '@singletons';\nimport { Subscription } from 'rxjs';\nimport { CoreEnrolledCourseData } from '@features/courses/services/courses';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AddonCalendarCalendarComponent } from '../../components/calendar/calendar';\nimport { AddonCalendarUpcomingEventsComponent } from '../../components/upcoming-events/upcoming-events';\nimport { AddonCalendarFilterComponent } from '../../components/filter/filter';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\n\n/**\n * Page that displays the calendar events.\n */\n@Component({\n    selector: 'page-addon-calendar-index',\n    templateUrl: 'index.html',\n})\nexport class AddonCalendarIndexPage implements OnInit, OnDestroy {\n\n    @ViewChild(AddonCalendarCalendarComponent) calendarComponent?: AddonCalendarCalendarComponent;\n    @ViewChild(AddonCalendarUpcomingEventsComponent) upcomingEventsComponent?: AddonCalendarUpcomingEventsComponent;\n\n    protected currentSiteId: string;\n\n    // Observers.\n    protected newEventObserver?: CoreEventObserver;\n    protected discardedObserver?: CoreEventObserver;\n    protected editEventObserver?: CoreEventObserver;\n    protected deleteEventObserver?: CoreEventObserver;\n    protected undeleteEventObserver?: CoreEventObserver;\n    protected syncObserver?: CoreEventObserver;\n    protected manualSyncObserver?: CoreEventObserver;\n    protected onlineObserver?: Subscription;\n    protected filterChangedObserver?: CoreEventObserver;\n\n    year?: number;\n    month?: number;\n    canCreate = false;\n    courses: CoreEnrolledCourseData[] = [];\n    loaded = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING;\n    showCalendar = true;\n    loadUpcoming = false;\n    filter: AddonCalendarFilter = {\n        filtered: false,\n        courseId: undefined,\n        categoryId: undefined,\n        course: true,\n        group: true,\n        site: true,\n        user: true,\n        category: true,\n    };\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = CoreEvents.on(\n            AddonCalendarProvider.NEW_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, false, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(true, false, true);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(\n            AddonCalendarProvider.EDIT_EVENT_EVENT,\n            (data) => {\n                if (data && data.eventId) {\n                    this.loaded = false;\n                    this.refreshData(true, false, true);\n                }\n            },\n            this.currentSiteId,\n        );\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonCalendarSyncProvider.AUTO_SYNCED, () => {\n            this.loaded = false;\n            this.refreshData(false, false, true);\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data && data.source != 'index') {\n                this.loaded = false;\n                this.refreshData(false, false, true);\n            }\n        }, this.currentSiteId);\n\n        // Update the events when an event is deleted.\n        this.deleteEventObserver = CoreEvents.on(AddonCalendarProvider.DELETED_EVENT_EVENT, () => {\n            this.loaded = false;\n            this.refreshData(false, false, true);\n        }, this.currentSiteId);\n\n        // Update the \"hasOffline\" property if an event deleted in offline is restored.\n        this.undeleteEventObserver = CoreEvents.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, async () => {\n            this.hasOffline = await AddonCalendarOffline.hasOfflineData();\n        }, this.currentSiteId);\n\n        this.filterChangedObserver = CoreEvents.on(\n            AddonCalendarProvider.FILTER_CHANGED_EVENT,\n            async (filterData) => {\n                this.filter = filterData;\n\n                // Course viewed has changed, check if the user can create events for this course calendar.\n                this.canCreate = await AddonCalendarHelper.canEditEvents(this.filter.courseId);\n            },\n        );\n\n        // Refresh online status when changes.\n        this.onlineObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.loadUpcoming = !!CoreNavigator.getRouteBooleanParam('upcoming');\n        this.showCalendar = !this.loadUpcoming;\n\n        this.route.queryParams.subscribe(async () => {\n            this.filter.courseId = CoreNavigator.getRouteNumberParam('courseId');\n            this.year = CoreNavigator.getRouteNumberParam('year');\n            this.month = CoreNavigator.getRouteNumberParam('month');\n            this.filter.filtered = !!this.filter.courseId;\n\n            this.fetchData(true, false);\n\n            if (this.year !== undefined && this.month !== undefined && this.calendarComponent) {\n                this.calendarComponent.viewMonth(this.month, this.year);\n            }\n        });\n\n        const deepLinkManager = new CoreMainMenuDeepLinkManager();\n        deepLinkManager.treatLink();\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    async fetchData(sync?: boolean, showErrors?: boolean): Promise<void> {\n\n        this.syncIcon = CoreConstants.ICON_LOADING;\n        this.isOnline = CoreNetwork.isOnline();\n\n        if (sync) {\n            // Try to synchronize offline events.\n            try {\n                const result = await AddonCalendarSync.syncEvents();\n                if (result.warnings && result.warnings.length) {\n                    CoreDomUtils.showAlert(undefined, result.warnings[0]);\n                }\n\n                if (result.updated) {\n                    // Trigger a manual sync event.\n                    result.source = 'index';\n\n                    CoreEvents.trigger(\n                        AddonCalendarSyncProvider.MANUAL_SYNCED,\n                        result,\n                        this.currentSiteId,\n                    );\n                }\n            } catch (error) {\n                if (showErrors) {\n                    CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n                }\n            }\n        }\n\n        try {\n            const promises: Promise<void>[] = [];\n\n            this.hasOffline = false;\n\n            // Load courses for the popover.\n            promises.push(CoreCoursesHelper.getCoursesForPopover(this.filter.courseId).then((data) => {\n                this.courses = data.courses;\n\n                return;\n            }));\n\n            // Check if user can create events.\n            promises.push(AddonCalendarHelper.canEditEvents(this.filter.courseId).then((canEdit) => {\n                this.canCreate = canEdit;\n\n                return;\n            }));\n\n            // Check if there is offline data.\n            promises.push(AddonCalendarOffline.hasOfflineData().then((hasOffline) => {\n                this.hasOffline = hasOffline;\n\n                return;\n            }));\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n        }\n\n        this.loaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors Whether to show sync errors to the user.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: HTMLIonRefresherElement, done?: () => void, showErrors?: boolean): Promise<void> {\n        if (!this.loaded) {\n            return;\n        }\n\n        await this.refreshData(true, showErrors).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @param afterChange Whether the refresh is done after an event has changed or has been synced.\n     * @returns Promise resolved when done.\n     */\n    async refreshData(sync = false, showErrors = false, afterChange = false): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonCalendar.invalidateAllowedEventTypes());\n\n        // Refresh the sub-component.\n        if (this.showCalendar && this.calendarComponent) {\n            promises.push(this.calendarComponent.refreshData(afterChange));\n        } else if (!this.showCalendar && this.upcomingEventsComponent) {\n            promises.push(this.upcomingEventsComponent.refreshData());\n        }\n\n        await Promise.all(promises).finally(() => this.fetchData(sync, showErrors));\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param eventId Event to load.\n     */\n    gotoEvent(eventId: number): void {\n        CoreNavigator.navigateToSitePath(`/calendar/event/${eventId}`);\n    }\n\n    /**\n     * View a certain day.\n     *\n     * @param data Data with the year, month and day.\n     */\n    gotoDay(data: {day: number; month: number; year: number}): void {\n        const params: Params = {\n            day: data.day,\n            month: data.month,\n            year: data.year,\n        };\n\n        Object.keys(this.filter).forEach((key) => {\n            params[key] = this.filter[key];\n        });\n\n        CoreNavigator.navigateToSitePath('/calendar/day', { params });\n    }\n\n    /**\n     * Show the filter menu.\n     */\n    async openFilter(): Promise<void> {\n        await CoreDomUtils.openSideModal({\n            component: AddonCalendarFilterComponent,\n            componentProps: {\n                courses: this.courses,\n                filter: this.filter,\n            },\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param eventId Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        const params: Params = {};\n        eventId = eventId || 0;\n\n        if (this.filter.courseId) {\n            params.courseId = this.filter.courseId;\n        }\n\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${eventId}`, { params });\n    }\n\n    /**\n     * Open calendar events settings.\n     */\n    openSettings(): void {\n        CoreNavigator.navigateToSitePath('/calendar/calendar-settings');\n    }\n\n    /**\n     * Toogle display: monthly view or upcoming events.\n     */\n    toggleDisplay(): void {\n        this.showCalendar = !this.showCalendar;\n\n        if (!this.showCalendar) {\n            this.loadUpcoming = true;\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.newEventObserver?.off();\n        this.discardedObserver?.off();\n        this.editEventObserver?.off();\n        this.deleteEventObserver?.off();\n        this.undeleteEventObserver?.off();\n        this.syncObserver?.off();\n        this.manualSyncObserver?.off();\n        this.filterChangedObserver?.off();\n        this.onlineObserver?.unsubscribe();\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ (showCalendar ? 'addon.calendar.calendarevents' : 'addon.calendar.upcomingevents') | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"openFilter()\" [attr.aria-label]=\"'core.filter' | translate\">\n                <ion-icon slot=\"icon-only\" name=\"fas-filter\" aria-hidden=\"true\" />\n            </ion-button>\n            <core-context-menu>\n                <core-context-menu-item *ngIf=\"showCalendar\" [priority]=\"800\" [content]=\"'addon.calendar.upcomingevents' | translate\"\n                    iconAction=\"fas-table-list\" (action)=\"toggleDisplay()\" />\n                <core-context-menu-item *ngIf=\"!showCalendar\" [priority]=\"800\" [content]=\"'addon.calendar.monthlyview' | translate\"\n                    iconAction=\"fas-calendar-days\" (action)=\"toggleDisplay()\" />\n                <core-context-menu-item [priority]=\"600\" [content]=\"'core.settings.settings' | translate\" (action)=\"openSettings()\"\n                    iconAction=\"fas-gears\" />\n                <core-context-menu-item [hidden]=\"!loaded || !hasOffline || !isOnline\" [priority]=\"400\"\n                    [content]=\"'core.settings.synchronizenow' | translate\" (action)=\"doRefresh(undefined, $event, true)\"\n                    [iconAction]=\"syncIcon\" [closeOnClick]=\"false\" />\n            </core-context-menu>\n            <core-user-menu-button />\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"doRefresh($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n\n    <!-- There is data to be synchronized -->\n    <ion-card class=\"core-warning-card\" *ngIf=\"hasOffline\">\n        <ion-item>\n            <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'addon.calendar.calendar' | translate} }}</ion-label>\n        </ion-item>\n    </ion-card>\n\n    <addon-calendar-calendar [hidden]=\"!showCalendar\" [initialYear]=\"year\" [initialMonth]=\"month\" [filter]=\"filter\"\n        [displayNavButtons]=\"showCalendar\" (onEventClicked)=\"gotoEvent($event)\" (onDayClicked)=\"gotoDay($event)\" />\n\n    <addon-calendar-upcoming-events *ngIf=\"loadUpcoming\" [hidden]=\"showCalendar\" [filter]=\"filter\" (onEventClicked)=\"gotoEvent($event)\" />\n\n    <!-- Create a calendar event. -->\n    <ion-fab slot=\"fixed\" core-fab vertical=\"bottom\" horizontal=\"end\" *ngIf=\"canCreate\">\n        <ion-fab-button (click)=\"openEdit()\" [attr.aria-label]=\"'addon.calendar.newevent' | translate\">\n            <ion-icon name=\"fas-plus\" aria-hidden=\"true\" />\n            <span class=\"sr-only\">{{ 'addon.calendar.newevent' | translate }}</span>\n        </ion-fab-button>\n    </ion-fab>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}