{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a map that will initialize entries lazily with the given constructor.\n *\n * @param lazyConstructor Constructor to use the first time an entry is accessed.\n * @returns Lazy map.\n */\nexport function lazyMap(lazyConstructor) {\n  const instances = {};\n  return new Proxy(instances, {\n    get(target, property, receiver) {\n      if (!(property in instances)) {\n        target[property] = lazyConstructor(property.toString());\n      }\n      return Reflect.get(target, property, receiver);\n    }\n  });\n}","map":{"version":3,"names":["lazyMap","lazyConstructor","instances","Proxy","get","target","property","receiver","toString","Reflect"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/utils/lazy-map.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Lazy map.\n *\n * Lazy maps are empty by default, but entries are generated lazily when accessed.\n */\nexport type LazyMap<T> = Record<string, T>;\n\n/**\n * Create a map that will initialize entries lazily with the given constructor.\n *\n * @param lazyConstructor Constructor to use the first time an entry is accessed.\n * @returns Lazy map.\n */\nexport function lazyMap<T>(lazyConstructor: (key: string) => T): LazyMap<T> {\n    const instances = {};\n\n    return new Proxy(instances, {\n        get(target, property, receiver) {\n            if (!(property in instances)) {\n                target[property] = lazyConstructor(property.toString());\n            }\n\n            return Reflect.get(target, property, receiver);\n        },\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;;;;;;AAMA,OAAM,SAAUA,OAAOA,CAAIC,eAAmC;EAC1D,MAAMC,SAAS,GAAG,EAAE;EAEpB,OAAO,IAAIC,KAAK,CAACD,SAAS,EAAE;IACxBE,GAAGA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ;MAC1B,IAAI,EAAED,QAAQ,IAAIJ,SAAS,CAAC,EAAE;QAC1BG,MAAM,CAACC,QAAQ,CAAC,GAAGL,eAAe,CAACK,QAAQ,CAACE,QAAQ,EAAE,CAAC;;MAG3D,OAAOC,OAAO,CAACL,GAAG,CAACC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IAClD;GACH,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}