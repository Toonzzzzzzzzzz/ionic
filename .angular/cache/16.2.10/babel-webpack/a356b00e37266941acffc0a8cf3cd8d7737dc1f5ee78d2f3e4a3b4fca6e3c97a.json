{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreFilterDefaultHandler } from '@features/filter/services/handlers/default-filter';\nimport { CoreLang } from '@services/lang';\nimport { CoreSites } from '@services/sites';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEvents } from '@singletons/events';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support the MathJax filter.\n */\nexport class AddonFilterMathJaxLoaderHandlerService extends CoreFilterDefaultHandler {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonFilterMathJaxLoaderHandler';\n    this.filterName = 'mathjaxloader';\n    // Default values for MathJax config for sites where we cannot retrieve it.\n    this.DEFAULT_URL = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js';\n    this.DEFAULT_CONFIG = `\n        MathJax.Hub.Config({\n            extensions: [\n                \"Safe.js\",\n                \"tex2jax.js\",\n                \"mml2jax.js\",\n                \"MathEvents.js\",\n                \"MathZoom.js\",\n                \"MathMenu.js\",\n                \"toMathML.js\",\n                \"TeX/noErrors.js\",\n                \"TeX/noUndefined.js\",\n                \"TeX/AMSmath.js\",\n                \"TeX/AMSsymbols.js\",\n                \"fast-preview.js\",\n                \"AssistiveMML.js\",\n                \"[a11y]/accessibility-menu.js\"\n            ],\n            jax: [\"input/TeX\",\"input/MathML\",\"output/SVG\"],\n            showMathMenu: false,\n            errorSettings: { message: [\"!\"] },\n            skipStartupTypeset: true,\n            messageStyle: \"none\"\n        });\n    `;\n    // List of language codes found in the MathJax/localization/ directory.\n    this.MATHJAX_LANG_CODES = ['ar', 'ast', 'bcc', 'bg', 'br', 'ca', 'cdo', 'ce', 'cs', 'cy', 'da', 'de', 'diq', 'en', 'eo', 'es', 'fa', 'fi', 'fr', 'gl', 'he', 'ia', 'it', 'ja', 'kn', 'ko', 'lb', 'lki', 'lt', 'mk', 'nl', 'oc', 'pl', 'pt', 'pt-br', 'qqq', 'ru', 'scn', 'sco', 'sk', 'sl', 'sv', 'th', 'tr', 'uk', 'vi', 'zh-hans', 'zh-hant'];\n    // List of explicit mappings and known exceptions (moodle => mathjax).\n    this.EXPLICIT_MAPPING = {\n      'zh-tw': 'zh-hant',\n      'zh-cn': 'zh-hans'\n    };\n    this.window = window;\n  }\n  /**\n   * Initialize MathJax.\n   *\n   * @returns Promise resolved when done.\n   */\n  initialize() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.loadJS();\n      // Update MathJax locale if app language changes.\n      CoreEvents.on(CoreEvents.LANGUAGE_CHANGED, lang => {\n        if (_this.window.MathJax === undefined) {\n          return;\n        }\n        _this.window.MathJax.Hub.Queue(() => {\n          _this.window.MathJax.Localization.setLocale(_this.mapLanguageCode(lang));\n        });\n      });\n      // Get the current language.\n      const lang = yield CoreLang.getCurrentLanguage();\n      // Now call the configure function.\n      _this.window.M.filter_mathjaxloader.configure({\n        mathjaxconfig: _this.DEFAULT_CONFIG,\n        lang: _this.mapLanguageCode(lang)\n      });\n    })();\n  }\n  /**\n   * Filter some text.\n   *\n   * @param text The text to filter.\n   * @param filter The filter.\n   * @param options Options passed to the filters.\n   * @param siteId Site ID. If not defined, current site.\n   * @returns Filtered text (or promise resolved with the filtered text).\n   */\n  filter(text, filter, options, siteId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const site = yield CoreSites.getSite(siteId);\n      // Don't apply this filter if Moodle is 3.7 or higher and the WS already filtered the content.\n      if (!options.wsNotFiltered && site.isVersionGreaterEqualThan('3.7')) {\n        return text;\n      }\n      if (text.indexOf('class=\"filter_mathjaxloader_equation\"') != -1) {\n        // The content seems to have treated mathjax already, don't do it.\n        return text;\n      }\n      // We cannot get the filter settings, so we cannot know if it can be used as a replacement for the TeX filter.\n      // Assume it cannot (default value).\n      let hasDisplayOrInline = false;\n      if (text.match(/\\\\[[(]/) || text.match(/\\$\\$/)) {\n        // Only parse the text if there are mathjax symbols in it.\n        // The recognized math environments are \\[ \\] and $$ $$ for display mathematics and \\( \\) for inline mathematics.\n        // Wrap display and inline math environments in nolink spans.\n        const result = _this2.wrapMathInNoLink(text);\n        text = result.text;\n        hasDisplayOrInline = result.changed;\n      }\n      if (hasDisplayOrInline) {\n        return '<span class=\"filter_mathjaxloader_equation\">' + text + '</span>';\n      }\n      return text;\n    })();\n  }\n  /**\n   * Handle HTML. This function is called after \"filter\", and it will receive an HTMLElement containing the text that was\n   * filtered.\n   *\n   * @param container The HTML container to handle.\n   * @param filter The filter.\n   * @param options Options passed to the filters.\n   * @param viewContainerRef The ViewContainerRef where the container is.\n   * @param component Component.\n   * @param componentId Component ID.\n   * @param siteId Site ID. If not defined, current site.\n   * @returns If async, promise resolved when done.\n   */\n  handleHtml(container, filter,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  options,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  viewContainerRef,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  component,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  componentId,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  siteId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.waitForReady();\n      _this3.window.M.filter_mathjaxloader.typeset(container);\n    })();\n  }\n  /**\n   * Wrap a portion of the $text inside a no link span. The whole text is then returned.\n   *\n   * @param text The text to modify.\n   * @param start The start index of the substring in text that should be wrapped in the span.\n   * @param end The end index of the substring in text that should be wrapped in the span.\n   * @returns The whole text with the span inserted around the defined substring.\n   */\n  insertSpan(text, start, end) {\n    return CoreTextUtils.substrReplace(text, '<span class=\"nolink\">' + text.substring(start, end + 1) + '</span>', start, end - start + 1);\n  }\n  /**\n   * Load the JS to make MathJax work in the app. The JS loaded is extracted from Moodle filter's loader JS file.\n   */\n  loadJS() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    this.window.M = this.window.M || {};\n    this.window.M.filter_mathjaxloader = this.window.M.filter_mathjaxloader || {\n      _lang: '',\n      _configured: false,\n      // Add the configuration to the head and set the lang.\n      configure: function (params) {\n        // Add a js configuration object to the head.\n        const script = document.createElement('script');\n        script.type = 'text/x-mathjax-config';\n        script.text = params.mathjaxconfig;\n        document.head.appendChild(script);\n        // Save the lang config until MathJax is actually loaded.\n        this._lang = params.lang;\n      },\n      // Set the correct language for the MathJax menus.\n      _setLocale: function () {\n        if (!this._configured) {\n          const lang = this._lang;\n          if (that.window.MathJax !== undefined) {\n            that.window.MathJax.Hub.Queue(() => {\n              that.window.MathJax.Localization.setLocale(lang);\n            });\n            that.window.MathJax.Hub.Configured();\n            this._configured = true;\n          }\n        }\n      },\n      // Called by the filter when an equation is found while rendering the page.\n      typeset: function (container) {\n        if (!this._configured) {\n          this._setLocale();\n        }\n        if (that.window.MathJax !== undefined) {\n          const processDelay = that.window.MathJax.Hub.processSectionDelay;\n          // Set the process section delay to 0 when updating the formula.\n          that.window.MathJax.Hub.processSectionDelay = 0;\n          const equations = Array.from(container.querySelectorAll('.filter_mathjaxloader_equation'));\n          equations.forEach(node => {\n            that.window.MathJax.Hub.Queue(['Typeset', that.window.MathJax.Hub, node], [that.fixUseUrls, node]);\n          });\n          // Set the delay back to normal after processing.\n          that.window.MathJax.Hub.processSectionDelay = processDelay;\n        }\n      }\n    };\n  }\n  /**\n   * Fix URLs in <use> elements.\n   * This is needed because MathJax stores the location.href when it's loaded, and then sets that URL to all the <use>\n   * elements href. Since the app URL changes when navigating, the SVGs can use a URL that isn't the current page.\n   * When that happens, the request returns a 404 error and the SVG isn't displayed.\n   *\n   * @param node Element that can contain equations.\n   */\n  fixUseUrls(node) {\n    Array.from(node.querySelectorAll('use')).forEach(useElem => {\n      useElem.setAttribute('href', useElem.href.baseVal.substring(useElem.href.baseVal.indexOf('#')));\n    });\n  }\n  /**\n   * Perform a mapping of the app language code to the equivalent for MathJax.\n   *\n   * @param langCode The app language code.\n   * @returns The MathJax language code.\n   */\n  mapLanguageCode(langCode) {\n    // If defined, explicit mapping takes the highest precedence.\n    if (this.EXPLICIT_MAPPING[langCode]) {\n      return this.EXPLICIT_MAPPING[langCode];\n    }\n    // If there is exact match, it will be probably right.\n    if (this.MATHJAX_LANG_CODES.indexOf(langCode) != -1) {\n      return langCode;\n    }\n    // Finally try to find the best matching mathjax pack.\n    const parts = langCode.split('-');\n    if (this.MATHJAX_LANG_CODES.indexOf(parts[0]) != -1) {\n      return parts[0];\n    }\n    // No more guessing, use default language.\n    return CoreLang.getDefaultLanguage();\n  }\n  /**\n   * Check if the filter should be applied in a certain site based on some filter options.\n   *\n   * @param options Options.\n   * @param site Site.\n   * @returns Whether filter should be applied.\n   */\n  shouldBeApplied(options, site) {\n    // Only apply the filter if logged in and we're filtering current site.\n    return !!(site && site.getId() == CoreSites.getCurrentSiteId());\n  }\n  /**\n   * Wait for the MathJax library and our JS object to be loaded.\n   *\n   * @param retries Number of times this has been retried.\n   * @returns Promise resolved when ready or if it took too long to load.\n   */\n  waitForReady(retries = 0) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (_this4.window.MathJax || retries >= 20) {\n        // Loaded or too many retries, stop.\n        return;\n      }\n      yield CoreUtils.wait(250);\n      yield CoreUtils.ignoreErrors(_this4.waitForReady(retries + 1));\n    })();\n  }\n  /**\n   * Find math environments in the $text and wrap them in no link spans\n   * (<span class=\"nolink\"></span>). If math environments are nested, only\n   * the outer environment is wrapped in the span.\n   *\n   * The recognized math environments are \\[ \\] and $$ $$ for display\n   * mathematics and \\( \\) for inline mathematics.\n   *\n   * @param text The text to filter.\n   * @returns Object containing the potentially modified text and a boolean that is true if any changes were made to the text.\n   */\n  wrapMathInNoLink(text) {\n    let len = text.length;\n    let i = 1;\n    let displayStart = -1;\n    let displayBracket = false;\n    let displayDollar = false;\n    let inlineStart = -1;\n    let changesDone = false;\n    // Loop over the $text once.\n    while (i < len) {\n      if (displayStart === -1) {\n        // No display math has started yet.\n        if (text[i - 1] === '\\\\') {\n          if (text[i] === '[') {\n            // Display mode \\[ begins.\n            displayStart = i - 1;\n            displayBracket = true;\n          } else if (text[i] === '(') {\n            // Inline math \\( begins, not nested inside display math.\n            inlineStart = i - 1;\n          } else if (text[i] === ')' && inlineStart > -1) {\n            // Inline math ends, not nested inside display math. Wrap the span around it.\n            text = this.insertSpan(text, inlineStart, i);\n            inlineStart = -1; // Reset.\n            i += 28; // The text length changed due to the <span>.\n            len += 28;\n            changesDone = true;\n          }\n        } else if (text[i - 1] === '$' && text[i] === '$') {\n          // Display mode $$ begins.\n          displayStart = i - 1;\n          displayDollar = true;\n        }\n      } else {\n        // Display math open.\n        if (text[i - 1] === '\\\\' && text[i] === ']' && displayBracket || text[i - 1] === '$' && text[i] === '$' && displayDollar) {\n          // Display math ends, wrap the span around it.\n          text = this.insertSpan(text, displayStart, i);\n          displayStart = -1; // Reset.\n          displayBracket = false;\n          displayDollar = false;\n          i += 28; // The text length changed due to the <span>.\n          len += 28;\n          changesDone = true;\n        }\n      }\n      i++;\n    }\n    return {\n      text: text,\n      changed: changesDone\n    };\n  }\n}\n_class = AddonFilterMathJaxLoaderHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonFilterMathJaxLoaderHandlerService_BaseFactory;\n  return function AddonFilterMathJaxLoaderHandlerService_Factory(t) {\n    return (ɵAddonFilterMathJaxLoaderHandlerService_BaseFactory || (ɵAddonFilterMathJaxLoaderHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonFilterMathJaxLoaderHandler = makeSingleton(AddonFilterMathJaxLoaderHandlerService);","map":{"version":3,"names":["CoreFilterDefaultHandler","CoreLang","CoreSites","CoreTextUtils","CoreUtils","CoreEvents","makeSingleton","AddonFilterMathJaxLoaderHandlerService","constructor","name","filterName","DEFAULT_URL","DEFAULT_CONFIG","MATHJAX_LANG_CODES","EXPLICIT_MAPPING","window","initialize","_this","_asyncToGenerator","loadJS","on","LANGUAGE_CHANGED","lang","MathJax","undefined","Hub","Queue","Localization","setLocale","mapLanguageCode","getCurrentLanguage","M","filter_mathjaxloader","configure","mathjaxconfig","filter","text","options","siteId","_this2","site","getSite","wsNotFiltered","isVersionGreaterEqualThan","indexOf","hasDisplayOrInline","match","result","wrapMathInNoLink","changed","handleHtml","container","viewContainerRef","component","componentId","_this3","waitForReady","typeset","insertSpan","start","end","substrReplace","substring","that","_lang","_configured","params","script","document","createElement","type","head","appendChild","_setLocale","Configured","processDelay","processSectionDelay","equations","Array","from","querySelectorAll","forEach","node","fixUseUrls","useElem","setAttribute","href","baseVal","langCode","parts","split","getDefaultLanguage","shouldBeApplied","getId","getCurrentSiteId","retries","_this4","wait","ignoreErrors","len","length","i","displayStart","displayBracket","displayDollar","inlineStart","changesDone","t","factory","ɵfac","providedIn","AddonFilterMathJaxLoaderHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/filter/mathjaxloader/services/handlers/mathjaxloader.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, ViewContainerRef } from '@angular/core';\n\nimport { CoreFilterDefaultHandler } from '@features/filter/services/handlers/default-filter';\nimport { CoreFilterFilter, CoreFilterFormatTextOptions } from '@features/filter/services/filter';\nimport { CoreLang } from '@services/lang';\nimport { CoreSites } from '@services/sites';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSite } from '@classes/sites/site';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support the MathJax filter.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonFilterMathJaxLoaderHandlerService extends CoreFilterDefaultHandler {\n\n    name = 'AddonFilterMathJaxLoaderHandler';\n    filterName = 'mathjaxloader';\n\n    // Default values for MathJax config for sites where we cannot retrieve it.\n    protected readonly DEFAULT_URL = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js';\n    protected readonly DEFAULT_CONFIG = `\n        MathJax.Hub.Config({\n            extensions: [\n                \"Safe.js\",\n                \"tex2jax.js\",\n                \"mml2jax.js\",\n                \"MathEvents.js\",\n                \"MathZoom.js\",\n                \"MathMenu.js\",\n                \"toMathML.js\",\n                \"TeX/noErrors.js\",\n                \"TeX/noUndefined.js\",\n                \"TeX/AMSmath.js\",\n                \"TeX/AMSsymbols.js\",\n                \"fast-preview.js\",\n                \"AssistiveMML.js\",\n                \"[a11y]/accessibility-menu.js\"\n            ],\n            jax: [\"input/TeX\",\"input/MathML\",\"output/SVG\"],\n            showMathMenu: false,\n            errorSettings: { message: [\"!\"] },\n            skipStartupTypeset: true,\n            messageStyle: \"none\"\n        });\n    `;\n\n    // List of language codes found in the MathJax/localization/ directory.\n    protected readonly MATHJAX_LANG_CODES = [\n        'ar', 'ast', 'bcc', 'bg', 'br', 'ca', 'cdo', 'ce', 'cs', 'cy', 'da', 'de', 'diq', 'en', 'eo', 'es', 'fa',\n        'fi', 'fr', 'gl', 'he', 'ia', 'it', 'ja', 'kn', 'ko', 'lb', 'lki', 'lt', 'mk', 'nl', 'oc', 'pl', 'pt',\n        'pt-br', 'qqq', 'ru', 'scn', 'sco', 'sk', 'sl', 'sv', 'th', 'tr', 'uk', 'vi', 'zh-hans', 'zh-hant',\n    ];\n\n    // List of explicit mappings and known exceptions (moodle => mathjax).\n    protected readonly EXPLICIT_MAPPING = {\n        'zh-tw': 'zh-hant',\n        'zh-cn': 'zh-hans',\n    };\n\n    protected window: MathJaxWindow = window;\n\n    /**\n     * Initialize MathJax.\n     *\n     * @returns Promise resolved when done.\n     */\n    async initialize(): Promise<void> {\n        this.loadJS();\n\n        // Update MathJax locale if app language changes.\n        CoreEvents.on(CoreEvents.LANGUAGE_CHANGED, (lang: string) => {\n            if (this.window.MathJax === undefined) {\n                return;\n            }\n\n            this.window.MathJax.Hub.Queue(() => {\n                this.window.MathJax.Localization.setLocale(this.mapLanguageCode(lang));\n            });\n        });\n\n        // Get the current language.\n        const lang = await CoreLang.getCurrentLanguage();\n\n        // Now call the configure function.\n        this.window.M!.filter_mathjaxloader!.configure({\n            mathjaxconfig: this.DEFAULT_CONFIG,\n            lang: this.mapLanguageCode(lang),\n        });\n    }\n\n    /**\n     * Filter some text.\n     *\n     * @param text The text to filter.\n     * @param filter The filter.\n     * @param options Options passed to the filters.\n     * @param siteId Site ID. If not defined, current site.\n     * @returns Filtered text (or promise resolved with the filtered text).\n     */\n    async filter(\n        text: string,\n        filter: CoreFilterFilter,\n        options: CoreFilterFormatTextOptions,\n        siteId?: string,\n    ): Promise<string> {\n\n        const site = await CoreSites.getSite(siteId);\n\n        // Don't apply this filter if Moodle is 3.7 or higher and the WS already filtered the content.\n        if (!options.wsNotFiltered && site.isVersionGreaterEqualThan('3.7')) {\n            return text;\n        }\n\n        if (text.indexOf('class=\"filter_mathjaxloader_equation\"') != -1) {\n            // The content seems to have treated mathjax already, don't do it.\n            return text;\n        }\n\n        // We cannot get the filter settings, so we cannot know if it can be used as a replacement for the TeX filter.\n        // Assume it cannot (default value).\n        let hasDisplayOrInline = false;\n        if (text.match(/\\\\[[(]/) || text.match(/\\$\\$/)) {\n            // Only parse the text if there are mathjax symbols in it.\n            // The recognized math environments are \\[ \\] and $$ $$ for display mathematics and \\( \\) for inline mathematics.\n            // Wrap display and inline math environments in nolink spans.\n            const result = this.wrapMathInNoLink(text);\n            text = result.text;\n            hasDisplayOrInline = result.changed;\n        }\n\n        if (hasDisplayOrInline) {\n            return '<span class=\"filter_mathjaxloader_equation\">' + text + '</span>';\n        }\n\n        return text;\n    }\n\n    /**\n     * Handle HTML. This function is called after \"filter\", and it will receive an HTMLElement containing the text that was\n     * filtered.\n     *\n     * @param container The HTML container to handle.\n     * @param filter The filter.\n     * @param options Options passed to the filters.\n     * @param viewContainerRef The ViewContainerRef where the container is.\n     * @param component Component.\n     * @param componentId Component ID.\n     * @param siteId Site ID. If not defined, current site.\n     * @returns If async, promise resolved when done.\n     */\n    async handleHtml(\n        container: HTMLElement,\n        filter: CoreFilterFilter, // eslint-disable-line @typescript-eslint/no-unused-vars\n        options: CoreFilterFormatTextOptions, // eslint-disable-line @typescript-eslint/no-unused-vars\n        viewContainerRef: ViewContainerRef, // eslint-disable-line @typescript-eslint/no-unused-vars\n        component?: string, // eslint-disable-line @typescript-eslint/no-unused-vars\n        componentId?: string | number, // eslint-disable-line @typescript-eslint/no-unused-vars\n        siteId?: string, // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): Promise<void> {\n        await this.waitForReady();\n\n        this.window.M!.filter_mathjaxloader!.typeset(container);\n    }\n\n    /**\n     * Wrap a portion of the $text inside a no link span. The whole text is then returned.\n     *\n     * @param text The text to modify.\n     * @param start The start index of the substring in text that should be wrapped in the span.\n     * @param end The end index of the substring in text that should be wrapped in the span.\n     * @returns The whole text with the span inserted around the defined substring.\n     */\n    protected insertSpan(text: string, start: number, end: number): string {\n        return CoreTextUtils.substrReplace(\n            text,\n            '<span class=\"nolink\">' + text.substring(start, end + 1) + '</span>',\n            start,\n            end - start + 1,\n        );\n    }\n\n    /**\n     * Load the JS to make MathJax work in the app. The JS loaded is extracted from Moodle filter's loader JS file.\n     */\n    protected loadJS(): void {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n\n        this.window.M = this.window.M || {};\n        this.window.M.filter_mathjaxloader = this.window.M.filter_mathjaxloader || {\n            _lang: '', // eslint-disable-line @typescript-eslint/naming-convention\n            _configured: false, // eslint-disable-line @typescript-eslint/naming-convention\n            // Add the configuration to the head and set the lang.\n            configure: function (params: Record<string, unknown>): void {\n                // Add a js configuration object to the head.\n                const script = document.createElement('script');\n                script.type = 'text/x-mathjax-config';\n                script.text = <string> params.mathjaxconfig;\n                document.head.appendChild(script);\n\n                // Save the lang config until MathJax is actually loaded.\n                this._lang = <string> params.lang;\n            },\n            // Set the correct language for the MathJax menus.\n            _setLocale: function (): void {\n                if (!this._configured) {\n                    const lang = this._lang;\n\n                    if (that.window.MathJax !== undefined) {\n                        that.window.MathJax.Hub.Queue(() => {\n                            that.window.MathJax.Localization.setLocale(lang);\n                        });\n                        that.window.MathJax.Hub.Configured();\n                        this._configured = true;\n                    }\n                }\n            },\n            // Called by the filter when an equation is found while rendering the page.\n            typeset: function (container: HTMLElement): void {\n                if (!this._configured) {\n                    this._setLocale();\n                }\n\n                if (that.window.MathJax !== undefined) {\n                    const processDelay = that.window.MathJax.Hub.processSectionDelay;\n                    // Set the process section delay to 0 when updating the formula.\n                    that.window.MathJax.Hub.processSectionDelay = 0;\n\n                    const equations = Array.from(container.querySelectorAll('.filter_mathjaxloader_equation'));\n                    equations.forEach((node) => {\n                        that.window.MathJax.Hub.Queue(['Typeset', that.window.MathJax.Hub, node], [that.fixUseUrls, node]);\n                    });\n\n                    // Set the delay back to normal after processing.\n                    that.window.MathJax.Hub.processSectionDelay = processDelay;\n                }\n            },\n        };\n    }\n\n    /**\n     * Fix URLs in <use> elements.\n     * This is needed because MathJax stores the location.href when it's loaded, and then sets that URL to all the <use>\n     * elements href. Since the app URL changes when navigating, the SVGs can use a URL that isn't the current page.\n     * When that happens, the request returns a 404 error and the SVG isn't displayed.\n     *\n     * @param node Element that can contain equations.\n     */\n    protected fixUseUrls(node: Element): void {\n        Array.from(node.querySelectorAll('use')).forEach((useElem) => {\n            useElem.setAttribute('href', useElem.href.baseVal.substring(useElem.href.baseVal.indexOf('#')));\n        });\n    }\n\n    /**\n     * Perform a mapping of the app language code to the equivalent for MathJax.\n     *\n     * @param langCode The app language code.\n     * @returns The MathJax language code.\n     */\n    protected mapLanguageCode(langCode: string): string {\n\n        // If defined, explicit mapping takes the highest precedence.\n        if (this.EXPLICIT_MAPPING[langCode]) {\n            return this.EXPLICIT_MAPPING[langCode];\n        }\n\n        // If there is exact match, it will be probably right.\n        if (this.MATHJAX_LANG_CODES.indexOf(langCode) != -1) {\n            return langCode;\n        }\n\n        // Finally try to find the best matching mathjax pack.\n        const parts = langCode.split('-');\n        if (this.MATHJAX_LANG_CODES.indexOf(parts[0]) != -1) {\n            return parts[0];\n        }\n\n        // No more guessing, use default language.\n        return CoreLang.getDefaultLanguage();\n    }\n\n    /**\n     * Check if the filter should be applied in a certain site based on some filter options.\n     *\n     * @param options Options.\n     * @param site Site.\n     * @returns Whether filter should be applied.\n     */\n    shouldBeApplied(options: CoreFilterFormatTextOptions, site?: CoreSite): boolean {\n        // Only apply the filter if logged in and we're filtering current site.\n        return !!(site && site.getId() == CoreSites.getCurrentSiteId());\n    }\n\n    /**\n     * Wait for the MathJax library and our JS object to be loaded.\n     *\n     * @param retries Number of times this has been retried.\n     * @returns Promise resolved when ready or if it took too long to load.\n     */\n    protected async waitForReady(retries: number = 0): Promise<void> {\n        if (this.window.MathJax || retries >= 20) {\n            // Loaded or too many retries, stop.\n            return;\n        }\n\n        await CoreUtils.wait(250);\n        await CoreUtils.ignoreErrors(this.waitForReady(retries + 1));\n    }\n\n    /**\n     * Find math environments in the $text and wrap them in no link spans\n     * (<span class=\"nolink\"></span>). If math environments are nested, only\n     * the outer environment is wrapped in the span.\n     *\n     * The recognized math environments are \\[ \\] and $$ $$ for display\n     * mathematics and \\( \\) for inline mathematics.\n     *\n     * @param text The text to filter.\n     * @returns Object containing the potentially modified text and a boolean that is true if any changes were made to the text.\n     */\n    protected wrapMathInNoLink(text: string): {text: string; changed: boolean} {\n        let len = text.length;\n        let i = 1;\n        let displayStart = -1;\n        let displayBracket = false;\n        let displayDollar = false;\n        let inlineStart = -1;\n        let changesDone = false;\n\n        // Loop over the $text once.\n        while (i < len) {\n            if (displayStart === -1) {\n                // No display math has started yet.\n                if (text[i - 1] === '\\\\') {\n\n                    if (text[i] === '[') {\n                        // Display mode \\[ begins.\n                        displayStart = i - 1;\n                        displayBracket = true;\n                    } else if (text[i] === '(') {\n                        // Inline math \\( begins, not nested inside display math.\n                        inlineStart = i - 1;\n                    } else if (text[i] === ')' && inlineStart > -1) {\n                        // Inline math ends, not nested inside display math. Wrap the span around it.\n                        text = this.insertSpan(text, inlineStart, i);\n\n                        inlineStart = -1; // Reset.\n                        i += 28; // The text length changed due to the <span>.\n                        len += 28;\n                        changesDone = true;\n                    }\n\n                } else if (text[i - 1] === '$' && text[i] === '$') {\n                    // Display mode $$ begins.\n                    displayStart = i - 1;\n                    displayDollar = true;\n                }\n\n            } else {\n                // Display math open.\n                if ((text[i - 1] === '\\\\' && text[i] === ']' && displayBracket) ||\n                        (text[i - 1] === '$' && text[i] === '$' && displayDollar)) {\n                    // Display math ends, wrap the span around it.\n                    text = this.insertSpan(text, displayStart, i);\n\n                    displayStart = -1; // Reset.\n                    displayBracket = false;\n                    displayDollar = false;\n                    i += 28; // The text length changed due to the <span>.\n                    len += 28;\n                    changesDone = true;\n                }\n            }\n\n            i++;\n        }\n\n        return {\n            text: text,\n            changed: changesDone,\n        };\n    }\n\n}\n\nexport const AddonFilterMathJaxLoaderHandler = makeSingleton(AddonFilterMathJaxLoaderHandlerService);\n\ntype MathJaxWindow = Window & {\n    MathJax?: any; // eslint-disable-line @typescript-eslint/naming-convention, @typescript-eslint/no-explicit-any\n    M?: { // eslint-disable-line @typescript-eslint/naming-convention\n        filter_mathjaxloader?: { // eslint-disable-line @typescript-eslint/naming-convention\n            _lang: string; // eslint-disable-line @typescript-eslint/naming-convention\n            _configured: boolean; // eslint-disable-line @typescript-eslint/naming-convention\n            // Add the configuration to the head and set the lang.\n            configure: (params: Record<string, unknown>) => void;\n            _setLocale: () => void;\n            typeset: (container: HTMLElement) => void;\n        };\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}