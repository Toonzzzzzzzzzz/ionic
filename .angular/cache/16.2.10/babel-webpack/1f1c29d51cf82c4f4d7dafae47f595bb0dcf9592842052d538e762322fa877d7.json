{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { asyncInstance } from '@/core/utils/async-instance';\nimport { ADDON_MOD_WORKSHOP_SYNC_CRON_NAME } from '@addons/mod/workshop/constants';\nexport class AddonModWorkshopSyncCronHandlerService {\n  constructor() {\n    this.name = ADDON_MOD_WORKSHOP_SYNC_CRON_NAME;\n  }\n}\n/**\n * Get cron handler instance.\n *\n * @returns Cron handler.\n */\nexport function getCronHandlerInstance() {\n  const lazyHandler = asyncInstance( /*#__PURE__*/_asyncToGenerator(function* () {\n    const {\n      AddonModWorkshopSyncCronHandler\n    } = yield import('./sync-cron-lazy');\n    return AddonModWorkshopSyncCronHandler.instance;\n  }));\n  lazyHandler.setEagerInstance(new AddonModWorkshopSyncCronHandlerService());\n  return lazyHandler;\n}","map":{"version":3,"names":["asyncInstance","ADDON_MOD_WORKSHOP_SYNC_CRON_NAME","AddonModWorkshopSyncCronHandlerService","constructor","name","getCronHandlerInstance","lazyHandler","_asyncToGenerator","AddonModWorkshopSyncCronHandler","instance","setEagerInstance"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/workshop/services/handlers/sync-cron.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { asyncInstance } from '@/core/utils/async-instance';\nimport { ADDON_MOD_WORKSHOP_SYNC_CRON_NAME } from '@addons/mod/workshop/constants';\nimport { CoreCronHandler } from '@services/cron';\n\nexport class AddonModWorkshopSyncCronHandlerService {\n\n    name = ADDON_MOD_WORKSHOP_SYNC_CRON_NAME;\n\n}\n\n/**\n * Get cron handler instance.\n *\n * @returns Cron handler.\n */\nexport function getCronHandlerInstance(): CoreCronHandler {\n    const lazyHandler = asyncInstance(async () => {\n        const { AddonModWorkshopSyncCronHandler } = await import('./sync-cron-lazy');\n\n        return AddonModWorkshopSyncCronHandler.instance;\n    });\n\n    lazyHandler.setEagerInstance(new AddonModWorkshopSyncCronHandlerService());\n\n    return lazyHandler;\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,iCAAiC,QAAQ,gCAAgC;AAGlF,OAAM,MAAOC,sCAAsC;EAAnDC,YAAA;IAEI,KAAAC,IAAI,GAAGH,iCAAiC;EAE5C;;AAEA;;;;;AAKA,OAAM,SAAUI,sBAAsBA,CAAA;EAClC,MAAMC,WAAW,GAAGN,aAAa,eAAAO,iBAAA,CAAC,aAAW;IACzC,MAAM;MAAEC;IAA+B,CAAE,SAAS,MAAM,CAAC,kBAAkB,CAAC;IAE5E,OAAOA,+BAA+B,CAACC,QAAQ;EACnD,CAAC,EAAC;EAEFH,WAAW,CAACI,gBAAgB,CAAC,IAAIR,sCAAsC,EAAE,CAAC;EAE1E,OAAOI,WAAW;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}