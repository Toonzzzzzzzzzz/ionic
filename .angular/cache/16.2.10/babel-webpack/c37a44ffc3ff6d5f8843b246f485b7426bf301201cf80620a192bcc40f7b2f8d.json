{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreError } from '@classes/errors/error';\nimport { CoreCourseModuleMainActivityComponent } from '@features/course/classes/main-activity-component';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModSurveyPrefetchHandler } from '../../services/handlers/prefetch';\nimport { AddonModSurveyProvider, AddonModSurvey } from '../../services/survey';\nimport { AddonModSurveyHelper } from '../../services/survey-helper';\nimport { AddonModSurveyOffline } from '../../services/survey-offline';\nimport { AddonModSurveySync, AddonModSurveySyncProvider } from '../../services/survey-sync';\nimport { CoreUtils } from '@services/utils/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@features/course/pages/contents/contents\";\nfunction AddonModSurveyIndexComponent_ion_card_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 8)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 9);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 1, \"addon.mod_survey.surveycompletednograph\"), \" \");\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_1_ion_col_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r11, \" \");\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h3\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-row\", 13)(4, \"ion-col\", 14);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_1_ion_col_7_Template, 2, 1, \"ion-col\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-item\", 16)(9, \"ion-label\")(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    const questionIndex_r5 = ctx_r13.index;\n    const question_r4 = ctx_r13.$implicit;\n    const isEven_r6 = ctx_r13.even;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"ion-padding-top\", questionIndex_r5 === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r4.text);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 8, \"addon.mod_survey.responses\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r4.optionsArray);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"even\", isEven_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r4.intro);\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_ion_col_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 27);\n    i0.ɵɵelement(1, \"ion-radio\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r16 = ctx.$implicit;\n    const value_r17 = ctx.index;\n    const question_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", value_r17 + 1);\n    i0.ɵɵattribute(\"aria-label\", question_r4.num + \". \" + question_r4.text + \": \" + option_r16);\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_ion_select_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r19 = ctx.$implicit;\n    const value_r20 = ctx.index;\n    i0.ɵɵproperty(\"value\", value_r20 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r19, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    header: a0\n  };\n};\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-radio-group\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_Template_ion_radio_group_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const question_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.answers[question_r4.name] = $event);\n    });\n    i0.ɵɵelementStart(2, \"ion-row\", 19)(3, \"ion-col\", 20)(4, \"span\", 21)(5, \"strong\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_ion_col_8_Template, 2, 2, \"ion-col\", 22);\n    i0.ɵɵelementStart(9, \"ion-col\", 23)(10, \"ion-select\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_Template_ion_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const question_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.answers[question_r4.name] = $event);\n    });\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementStart(12, \"ion-select-option\", 25);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_ion_select_option_15_Template, 2, 2, \"ion-select-option\", 26);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext();\n    const question_r4 = ctx_r26.$implicit;\n    const isEven_r6 = ctx_r26.even;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.answers[question_r4.name])(\"required\", question_r4.required)(\"name\", question_r4.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"even\", isEven_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"addon-mod_survey-\", question_r4.name, \"\");\n    i0.ɵɵproperty(\"core-mark-required\", question_r4.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", question_r4.num, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", question_r4.text, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r4.optionsArray);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.answers[question_r4.name])(\"required\", question_r4.required)(\"name\", question_r4.name)(\"cancelText\", i0.ɵɵpipeBind1(11, 18, \"core.cancel\"))(\"interfaceOptions\", i0.ɵɵpureFunction1(22, _c0, question_r4.text));\n    i0.ɵɵattribute(\"aria-labelledby\", \"addon-mod_survey-\" + question_r4.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 20, \"core.choose\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r4.optionsArray);\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_ion_select_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r30 = ctx.$implicit;\n    const value_r31 = ctx.index;\n    i0.ɵɵproperty(\"value\", value_r31 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r30, \" \");\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-row\", 31)(1, \"ion-col\", 20)(2, \"span\", 21)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-col\", 32)(7, \"ion-select\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_Template_ion_select_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const question_r4 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.answers[question_r4.name] = $event);\n    });\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementStart(9, \"ion-select-option\", 33);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_ion_select_option_12_Template, 2, 2, \"ion-select-option\", 26);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    const isEven_r6 = ctx_r35.even;\n    const question_r4 = ctx_r35.$implicit;\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"even\", isEven_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"addon-mod_survey-\", question_r4.name, \"\");\n    i0.ɵɵproperty(\"core-mark-required\", question_r4.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", question_r4.num, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", question_r4.text, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r27.answers[question_r4.name])(\"required\", question_r4.required)(\"name\", question_r4.name)(\"cancelText\", i0.ɵɵpipeBind1(8, 16, \"core.cancel\"))(\"interfaceOptions\", i0.ɵɵpureFunction1(20, _c0, question_r4.text));\n    i0.ɵɵattribute(\"aria-labelledby\", \"addon-mod_survey-\" + question_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", question_r4.required ? \"-1\" : \"0\")(\"disabled\", question_r4.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 18, \"core.choose\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r4.optionsArray);\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 34)(1, \"ion-label\", 35)(2, \"span\", 36)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-textarea\", 37);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_item_2_Template_ion_textarea_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const question_r4 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r36.answers[question_r4.name] = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    const isEven_r6 = ctx_r39.even;\n    const question_r4 = ctx_r39.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"even\", isEven_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"core-mark-required\", question_r4.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", question_r4.num, \".\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", question_r4.text, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r28.answers[question_r4.name])(\"name\", question_r4.name)(\"required\", question_r4.required);\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_Template, 13, 22, \"ion-row\", 29);\n    i0.ɵɵtemplate(2, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_item_2_Template, 7, 8, \"ion-item\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const question_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r4.type > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r4.type === 0);\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 10);\n    i0.ɵɵtemplate(1, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_1_Template, 12, 10, \"ng-container\", 6);\n    i0.ɵɵtemplate(2, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_Template, 16, 24, \"ng-container\", 6);\n    i0.ɵɵtemplate(3, AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_Template, 3, 2, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const question_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r4.multiArray == null ? null : question_r4.multiArray.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r4.parent !== 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (!question_r4.multiArray || question_r4.multiArray.length === 0) && question_r4.parent === 0);\n  }\n}\nfunction AddonModSurveyIndexComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\")(1, \"ion-grid\", 10);\n    i0.ɵɵtemplate(2, AddonModSurveyIndexComponent_form_7_ng_container_2_Template, 4, 3, \"ng-container\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.questions);\n  }\n}\nfunction AddonModSurveyIndexComponent_div_8_div_1_ion_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-button\", 44);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 45);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"href\", ctx_r42.module.url);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"addon.mod_survey.results\"), \" \");\n  }\n}\nfunction AddonModSurveyIndexComponent_div_8_div_1_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 46);\n    i0.ɵɵlistener(\"click\", function AddonModSurveyIndexComponent_div_8_div_1_ion_button_2_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r44.submit());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r43.isValidResponse());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"core.submit\"), \" \");\n  }\n}\nfunction AddonModSurveyIndexComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtemplate(1, AddonModSurveyIndexComponent_div_8_div_1_ion_button_1_Template, 4, 4, \"ion-button\", 42);\n    i0.ɵɵtemplate(2, AddonModSurveyIndexComponent_div_8_div_1_ion_button_2_Template, 3, 4, \"ion-button\", 43);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r41.survey.surveydone);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r41.survey.surveydone && !ctx_r41.hasOffline && ctx_r41.questions && ctx_r41.questions.length);\n  }\n}\nfunction AddonModSurveyIndexComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, AddonModSurveyIndexComponent_div_8_div_1_Template, 3, 2, \"div\", 39);\n    i0.ɵɵelement(2, \"core-course-module-navigation\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.survey && (ctx_r2.survey.surveydone || !ctx_r2.hasOffline && ctx_r2.questions && ctx_r2.questions.length));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"courseId\", ctx_r2.courseId)(\"currentModuleId\", ctx_r2.module.id);\n  }\n}\n/**\n * Component that displays a survey.\n */\nexport class AddonModSurveyIndexComponent extends CoreCourseModuleMainActivityComponent {\n  constructor(content, courseContentsPage) {\n    super('AddonModSurveyIndexComponent', content, courseContentsPage);\n    this.content = content;\n    this.component = AddonModSurveyProvider.COMPONENT;\n    this.pluginName = 'survey';\n    this.questions = [];\n    this.answers = {};\n    this.syncEventName = AddonModSurveySyncProvider.AUTO_SYNCED;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _superprop_getNgOnInit = () => super.ngOnInit,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      _superprop_getNgOnInit().call(_this);\n      _this.currentUserId = CoreSites.getCurrentSiteUserId();\n      yield _this.loadContent(false, true);\n    })();\n  }\n  /**\n   * Perform the invalidate content function.\n   *\n   * @returns Resolved when done.\n   */\n  invalidateContent() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonModSurvey.invalidateSurveyData(_this2.courseId));\n      if (_this2.survey) {\n        promises.push(AddonModSurvey.invalidateQuestions(_this2.survey.id));\n      }\n      yield Promise.all(promises);\n    })();\n  }\n  /**\n   * Compares sync event data with current data to check if refresh content is needed.\n   *\n   * @param syncEventData Data receiven on sync observer.\n   * @returns True if refresh is needed, false otherwise.\n   */\n  isRefreshSyncNeeded(syncEventData) {\n    if (this.survey && syncEventData.surveyId == this.survey.id && syncEventData.userId == this.currentUserId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * @inheritdoc\n   */\n  fetchContent(refresh, sync = false, showErrors = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.survey = yield AddonModSurvey.getSurvey(_this3.courseId, _this3.module.id);\n      _this3.description = _this3.survey.intro;\n      _this3.dataRetrieved.emit(_this3.survey);\n      if (sync) {\n        // Try to synchronize the survey.\n        const updated = yield _this3.syncActivity(showErrors);\n        if (updated) {\n          // Answers were sent, update the survey.\n          _this3.survey = yield AddonModSurvey.getSurvey(_this3.courseId, _this3.module.id);\n        }\n      }\n      // Check if there are answers stored in offline.\n      _this3.hasOffline = _this3.survey.surveydone ? false : yield AddonModSurveyOffline.hasAnswers(_this3.survey.id);\n      if (!_this3.survey.surveydone && !_this3.hasOffline) {\n        yield _this3.fetchQuestions(_this3.survey.id);\n      }\n    })();\n  }\n  /**\n   * Convenience function to get survey questions.\n   *\n   * @param surveyId Survey Id.\n   * @returns Promise resolved when done.\n   */\n  fetchQuestions(surveyId) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const questions = yield AddonModSurvey.getQuestions(surveyId, {\n        cmId: _this4.module.id\n      });\n      _this4.questions = AddonModSurveyHelper.formatQuestions(questions);\n      // Init answers object.\n      _this4.questions.forEach(question => {\n        if (question.name) {\n          const isTextArea = question.multiArray && question.multiArray.length === 0 && question.type === 0;\n          _this4.answers[question.name] = question.required ? '-1' : isTextArea ? '' : '0';\n        }\n        if (question.multiArray && !question.multiArray.length && question.parent === 0 && question.type > 0) {\n          var _question$optionsArra;\n          // Options shown in a select. Remove all HTML.\n          question.optionsArray = (_question$optionsArra = question.optionsArray) === null || _question$optionsArra === void 0 ? void 0 : _question$optionsArra.map(option => CoreTextUtils.cleanTags(option));\n        }\n      });\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  logActivity() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.survey) {\n        return; // Shouldn't happen.\n      }\n\n      yield CoreUtils.ignoreErrors(AddonModSurvey.logView(_this5.survey.id));\n      _this5.analyticsLogEvent('mod_survey_view_survey');\n    })();\n  }\n  /**\n   * Check if answers are valid to be submitted.\n   *\n   * @returns If answers are valid\n   */\n  isValidResponse() {\n    return !this.questions.some(question => question.required && question.name && (question.type === 0 ? this.answers[question.name] == '' : parseInt(this.answers[question.name], 10) === -1));\n  }\n  /**\n   * Save options selected.\n   */\n  submit() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this6.survey) {\n        return;\n      }\n      let modal;\n      try {\n        yield CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n        const answers = [];\n        modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n        for (const x in _this6.answers) {\n          answers.push({\n            key: x,\n            value: _this6.answers[x]\n          });\n        }\n        const online = yield AddonModSurvey.submitAnswers(_this6.survey.id, _this6.survey.name, _this6.courseId, answers);\n        CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, {\n          module: _this6.moduleName\n        });\n        if (online && _this6.isPrefetched()) {\n          // The survey is downloaded, update the data.\n          try {\n            const prefetched = yield AddonModSurveySync.prefetchAfterUpdate(AddonModSurveyPrefetchHandler.instance, _this6.module, _this6.courseId);\n            // Update the view.\n            prefetched ? _this6.showLoadingAndFetch(false, false) : _this6.showLoadingAndRefresh(false);\n          } catch (_unused) {\n            // Prefetch failed, refresh the data.\n            _this6.showLoadingAndRefresh(false);\n          }\n        } else {\n          // Not downloaded, refresh the data.\n          _this6.showLoadingAndRefresh(false);\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_survey.cannotsubmitsurvey', true);\n      } finally {\n        var _modal;\n        (_modal = modal) === null || _modal === void 0 || _modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  sync() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this7.survey) {\n        throw new CoreError('Cannot sync without a survey.');\n      }\n      return AddonModSurveySync.syncSurvey(_this7.survey.id, _this7.currentUserId);\n    })();\n  }\n}\n_class = AddonModSurveyIndexComponent;\n_class.ɵfac = function AddonModSurveyIndexComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.IonContent), i0.ɵɵdirectiveInject(i2.CoreCourseContentsPage, 8));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-survey-index\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 9,\n  vars: 13,\n  consts: [[\"slot\", \"end\"], [\"fill\", \"clear\", \"aria-haspopup\", \"true\", 3, \"click\"], [\"name\", \"fas-circle-info\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"hideUntil\"], [3, \"module\", \"description\", \"component\", \"componentId\", \"courseId\", \"hasDataToSync\", \"completionChanged\"], [\"class\", \"core-success-card\", 4, \"ngIf\"], [4, \"ngIf\"], [\"collapsible-footer\", \"\", \"slot\", \"fixed\", 4, \"ngIf\"], [1, \"core-success-card\"], [\"name\", \"fas-check\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [1, \"ion-no-padding\", \"ion-text-wrap\"], [\"class\", \"ion-no-padding ion-text-wrap\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-padding-horizontal\"], [1, \"ion-align-items-center\", \"ion-hide-md-down\", \"ion-padding\"], [\"size\", \"7\", 1, \"ion-padding\"], [\"size\", \"1\", \"class\", \"ion-text-center option-name\", 4, \"ngFor\", \"ngForOf\"], [\"lines\", \"full\", 1, \"ion-text-wrap\", \"addon-mod_survey-question\"], [\"size\", \"1\", 1, \"ion-text-center\", \"option-name\"], [3, \"ngModel\", \"required\", \"name\", \"ngModelChange\"], [1, \"ion-align-items-center\", \"ion-padding-horizontal\"], [\"size\", \"7\"], [3, \"id\", \"core-mark-required\"], [\"class\", \"ion-hide-md-down ion-text-center\", \"size\", \"1\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"5\", 1, \"ion-hide-md-up\"], [\"interface\", \"action-sheet\", 1, \"ion-padding\", 3, \"ngModel\", \"required\", \"name\", \"cancelText\", \"interfaceOptions\", \"ngModelChange\"], [\"value\", \"-1\", \"selected\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"1\", 1, \"ion-hide-md-down\", \"ion-text-center\"], [3, \"value\"], [\"class\", \"ion-align-items-center ion-padding\", 3, \"even\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", 3, \"even\", 4, \"ngIf\"], [1, \"ion-align-items-center\", \"ion-padding\"], [\"size\", \"5\"], [\"selected\", \"\", 3, \"value\", \"disabled\"], [1, \"ion-text-wrap\"], [\"position\", \"floating\"], [3, \"core-mark-required\"], [3, \"ngModel\", \"name\", \"required\", \"ngModelChange\"], [\"collapsible-footer\", \"\", \"slot\", \"fixed\"], [\"class\", \"list-item-limited-width\", 4, \"ngIf\"], [3, \"courseId\", \"currentModuleId\"], [1, \"list-item-limited-width\"], [\"class\", \"ion-text-wrap ion-margin\", \"expand\", \"block\", \"core-link\", \"\", 3, \"href\", 4, \"ngIf\"], [\"expand\", \"block\", \"class\", \"ion-text-wrap ion-margin\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"expand\", \"block\", \"core-link\", \"\", 1, \"ion-text-wrap\", \"ion-margin\", 3, \"href\"], [\"name\", \"fas-up-right-from-square\", \"slot\", \"end\", \"aria-hidden\", \"true\"], [\"expand\", \"block\", 1, \"ion-text-wrap\", \"ion-margin\", 3, \"disabled\", \"click\"]],\n  template: function AddonModSurveyIndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"core-navbar-buttons\", 0)(1, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function AddonModSurveyIndexComponent_Template_ion_button_click_1_listener() {\n        return ctx.openModuleSummary();\n      });\n      i0.ɵɵpipe(2, \"translate\");\n      i0.ɵɵelement(3, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"core-loading\", 3)(5, \"core-course-module-info\", 4);\n      i0.ɵɵlistener(\"completionChanged\", function AddonModSurveyIndexComponent_Template_core_course_module_info_completionChanged_5_listener() {\n        return ctx.onCompletionChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, AddonModSurveyIndexComponent_ion_card_6_Template, 6, 3, \"ion-card\", 5);\n      i0.ɵɵtemplate(7, AddonModSurveyIndexComponent_form_7_Template, 3, 1, \"form\", 6);\n      i0.ɵɵtemplate(8, AddonModSurveyIndexComponent_div_8_Template, 3, 3, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 11, \"core.info\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hideUntil\", !ctx.showLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"module\", ctx.module)(\"description\", ctx.survey && !ctx.survey.surveydone && !ctx.hasOffline && ctx.description)(\"component\", ctx.component)(\"componentId\", ctx.componentId)(\"courseId\", ctx.courseId)(\"hasDataToSync\", ctx.hasOffline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.survey && ctx.survey.surveydone);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.survey && !ctx.survey.surveydone && !ctx.hasOffline && ctx.questions && ctx.questions.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showLoading);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n  --grid-background: var(--white);\\n  --even-background: var(--gray-200);\\n}\\n[_nghost-%COMP%]   .option-name[_ngcontent-%COMP%] {\\n  font-size: var(--text-size);\\n}\\n[_nghost-%COMP%]   .addon-mod_survey-question[_ngcontent-%COMP%] {\\n  border-top: 1px solid var(--stroke);\\n}\\n[_nghost-%COMP%]   ion-row[_ngcontent-%COMP%] {\\n  background-color: var(--grid-background);\\n}\\n[_nghost-%COMP%]   .even[_ngcontent-%COMP%] {\\n  background-color: var(--even-background);\\n}\\n[_nghost-%COMP%]   ion-radio[_ngcontent-%COMP%] {\\n  height: var(--a11y-min-target-size);\\n  width: var(--a11y-min-target-size);\\n  padding: 12px;\\n}\\n\\nhtml.dark[_nghost-%COMP%], html.dark   [_nghost-%COMP%] {\\n  --grid-background: var(--gray-900);\\n  --even-background: var(--medium);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvbW9kL3N1cnZleS9jb21wb25lbnRzL2luZGV4L2luZGV4LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBQTtFQUNBLGtDQUFBO0FBQ0o7QUFDSTtFQUNJLDJCQUFBO0FBQ1I7QUFFSTtFQUNJLG1DQUFBO0FBQVI7QUFHSTtFQUNJLHdDQUFBO0FBRFI7QUFJSTtFQUNJLHdDQUFBO0FBRlI7QUFLSTtFQUNJLG1DQUFBO0VBQ0Esa0NBQUE7RUFDQSxhQUFBO0FBSFI7O0FBT0E7RUFDSSxrQ0FBQTtFQUNBLGdDQUFBO0FBSkoiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgLS1ncmlkLWJhY2tncm91bmQ6IHZhcigtLXdoaXRlKTtcbiAgICAtLWV2ZW4tYmFja2dyb3VuZDogdmFyKC0tZ3JheS0yMDApO1xuXG4gICAgLm9wdGlvbi1uYW1lIHtcbiAgICAgICAgZm9udC1zaXplOiB2YXIoLS10ZXh0LXNpemUpO1xuICAgIH1cblxuICAgIC5hZGRvbi1tb2Rfc3VydmV5LXF1ZXN0aW9uIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLXN0cm9rZSk7XG4gICAgfVxuXG4gICAgaW9uLXJvdyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyaWQtYmFja2dyb3VuZCk7XG4gICAgfVxuXG4gICAgLmV2ZW4ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ldmVuLWJhY2tncm91bmQpO1xuICAgIH1cblxuICAgIGlvbi1yYWRpbyB7XG4gICAgICAgIGhlaWdodDogdmFyKC0tYTExeS1taW4tdGFyZ2V0LXNpemUpO1xuICAgICAgICB3aWR0aDogdmFyKC0tYTExeS1taW4tdGFyZ2V0LXNpemUpO1xuICAgICAgICBwYWRkaW5nOiAxMnB4O1xuICAgIH1cbn1cblxuOmhvc3QtY29udGV4dChodG1sLmRhcmspIHtcbiAgICAtLWdyaWQtYmFja2dyb3VuZDogdmFyKC0tZ3JheS05MDApO1xuICAgIC0tZXZlbi1iYWNrZ3JvdW5kOiB2YXIoLS1tZWRpdW0pO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreError","CoreCourseModuleMainActivityComponent","CoreSites","CoreDomUtils","CoreTextUtils","Translate","CoreEvents","AddonModSurveyPrefetchHandler","AddonModSurveyProvider","AddonModSurvey","AddonModSurveyHelper","AddonModSurveyOffline","AddonModSurveySync","AddonModSurveySyncProvider","CoreUtils","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","option_r11","ɵɵelementContainerStart","ɵɵtemplate","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_1_ion_col_7_Template","ɵɵelementContainerEnd","ɵɵclassProp","questionIndex_r5","ɵɵtextInterpolate","question_r4","text","ɵɵproperty","optionsArray","isEven_r6","intro","value_r17","ɵɵattribute","num","option_r16","value_r20","option_r19","ɵɵlistener","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_Template_ion_radio_group_ngModelChange_1_listener","$event","ɵɵrestoreView","_r22","ɵɵnextContext","$implicit","ctx_r21","ɵɵresetView","answers","name","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_ion_col_8_Template","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_Template_ion_select_ngModelChange_10_listener","ctx_r24","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_ion_select_option_15_Template","ctx_r8","required","ɵɵpropertyInterpolate1","ɵɵpureFunction1","_c0","value_r31","option_r30","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_Template_ion_select_ngModelChange_7_listener","_r33","ctx_r32","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_ion_select_option_12_Template","ctx_r27","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_item_2_Template_ion_textarea_ngModelChange_6_listener","_r37","ctx_r36","ctx_r28","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_row_1_Template","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_ion_item_2_Template","type","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_1_Template","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_2_Template","AddonModSurveyIndexComponent_form_7_ng_container_2_ng_container_3_Template","multiArray","length","parent","AddonModSurveyIndexComponent_form_7_ng_container_2_Template","ctx_r1","questions","ctx_r42","module","url","AddonModSurveyIndexComponent_div_8_div_1_ion_button_2_Template_ion_button_click_0_listener","_r45","ctx_r44","submit","ctx_r43","isValidResponse","AddonModSurveyIndexComponent_div_8_div_1_ion_button_1_Template","AddonModSurveyIndexComponent_div_8_div_1_ion_button_2_Template","ctx_r41","survey","surveydone","hasOffline","AddonModSurveyIndexComponent_div_8_div_1_Template","ctx_r2","courseId","id","AddonModSurveyIndexComponent","constructor","content","courseContentsPage","component","COMPONENT","pluginName","syncEventName","AUTO_SYNCED","ngOnInit","_superprop_getNgOnInit","_this","_asyncToGenerator","call","currentUserId","getCurrentSiteUserId","loadContent","invalidateContent","_this2","promises","push","invalidateSurveyData","invalidateQuestions","Promise","all","isRefreshSyncNeeded","syncEventData","surveyId","userId","fetchContent","refresh","sync","showErrors","_this3","getSurvey","description","dataRetrieved","emit","updated","syncActivity","hasAnswers","fetchQuestions","_this4","getQuestions","cmId","formatQuestions","forEach","question","isTextArea","_question$optionsArra","map","option","cleanTags","logActivity","_this5","ignoreErrors","logView","analyticsLogEvent","some","parseInt","_this6","modal","showConfirm","instant","showModalLoading","x","key","value","online","submitAnswers","trigger","ACTIVITY_DATA_SENT","moduleName","isPrefetched","prefetched","prefetchAfterUpdate","instance","showLoadingAndFetch","showLoadingAndRefresh","_unused","error","showErrorModalDefault","_modal","dismiss","_this7","syncSurvey","ɵɵdirectiveInject","i1","IonContent","i2","CoreCourseContentsPage","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonModSurveyIndexComponent_Template","rf","ctx","AddonModSurveyIndexComponent_Template_ion_button_click_1_listener","openModuleSummary","AddonModSurveyIndexComponent_Template_core_course_module_info_completionChanged_5_listener","onCompletionChange","AddonModSurveyIndexComponent_ion_card_6_Template","AddonModSurveyIndexComponent_form_7_Template","AddonModSurveyIndexComponent_div_8_Template","showLoading","componentId"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/survey/components/index/index.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/survey/components/index/addon-mod-survey-index.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Optional } from '@angular/core';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreIonLoadingElement } from '@classes/ion-loading';\nimport { CoreCourseModuleMainActivityComponent } from '@features/course/classes/main-activity-component';\nimport { CoreCourseContentsPage } from '@features/course/pages/contents/contents';\nimport { IonContent } from '@ionic/angular';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModSurveyPrefetchHandler } from '../../services/handlers/prefetch';\nimport {\n    AddonModSurveyProvider,\n    AddonModSurveySurvey,\n    AddonModSurvey,\n    AddonModSurveySubmitAnswerData,\n} from '../../services/survey';\nimport { AddonModSurveyHelper, AddonModSurveyQuestionFormatted } from '../../services/survey-helper';\nimport { AddonModSurveyOffline } from '../../services/survey-offline';\nimport {\n    AddonModSurveyAutoSyncData,\n    AddonModSurveySync,\n    AddonModSurveySyncProvider,\n    AddonModSurveySyncResult,\n} from '../../services/survey-sync';\nimport { CoreUtils } from '@services/utils/utils';\n\n/**\n * Component that displays a survey.\n */\n@Component({\n    selector: 'addon-mod-survey-index',\n    templateUrl: 'addon-mod-survey-index.html',\n    styleUrls: ['index.scss'],\n})\nexport class AddonModSurveyIndexComponent extends CoreCourseModuleMainActivityComponent implements OnInit {\n\n    component = AddonModSurveyProvider.COMPONENT;\n    pluginName = 'survey';\n\n    survey?: AddonModSurveySurvey;\n    questions: AddonModSurveyQuestionFormatted[] = [];\n    answers: Record<string, string> = {};\n\n    protected currentUserId?: number;\n    protected syncEventName = AddonModSurveySyncProvider.AUTO_SYNCED;\n\n    constructor(\n        protected content?: IonContent,\n        @Optional() courseContentsPage?: CoreCourseContentsPage,\n    ) {\n        super('AddonModSurveyIndexComponent', content, courseContentsPage);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        super.ngOnInit();\n\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n\n        await this.loadContent(false, true);\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @returns Resolved when done.\n     */\n    protected async invalidateContent(): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModSurvey.invalidateSurveyData(this.courseId));\n        if (this.survey) {\n            promises.push(AddonModSurvey.invalidateQuestions(this.survey.id));\n        }\n\n        await Promise.all(promises);\n    }\n\n    /**\n     * Compares sync event data with current data to check if refresh content is needed.\n     *\n     * @param syncEventData Data receiven on sync observer.\n     * @returns True if refresh is needed, false otherwise.\n     */\n    protected isRefreshSyncNeeded(syncEventData: AddonModSurveyAutoSyncData): boolean {\n        if (this.survey && syncEventData.surveyId == this.survey.id && syncEventData.userId == this.currentUserId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async fetchContent(refresh?: boolean, sync = false, showErrors = false): Promise<void> {\n        this.survey = await AddonModSurvey.getSurvey(this.courseId, this.module.id);\n\n        this.description = this.survey.intro;\n        this.dataRetrieved.emit(this.survey);\n\n        if (sync) {\n            // Try to synchronize the survey.\n            const updated = await this.syncActivity(showErrors);\n            if (updated) {\n                // Answers were sent, update the survey.\n                this.survey = await AddonModSurvey.getSurvey(this.courseId, this.module.id);\n            }\n        }\n\n        // Check if there are answers stored in offline.\n        this.hasOffline = this.survey.surveydone\n            ? false\n            : await AddonModSurveyOffline.hasAnswers(this.survey.id);\n\n        if (!this.survey.surveydone && !this.hasOffline) {\n            await this.fetchQuestions(this.survey.id);\n        }\n    }\n\n    /**\n     * Convenience function to get survey questions.\n     *\n     * @param surveyId Survey Id.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchQuestions(surveyId: number): Promise<void> {\n        const questions = await AddonModSurvey.getQuestions(surveyId, { cmId: this.module.id });\n\n        this.questions = AddonModSurveyHelper.formatQuestions(questions);\n\n        // Init answers object.\n        this.questions.forEach((question) => {\n            if (question.name) {\n                const isTextArea = question.multiArray && question.multiArray.length === 0 && question.type === 0;\n                this.answers[question.name] = question.required ? '-1' : (isTextArea ? '' : '0');\n            }\n\n            if (question.multiArray && !question.multiArray.length && question.parent === 0 && question.type > 0) {\n                // Options shown in a select. Remove all HTML.\n                question.optionsArray = question.optionsArray?.map((option) => CoreTextUtils.cleanTags(option));\n            }\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async logActivity(): Promise<void> {\n        if (!this.survey) {\n            return; // Shouldn't happen.\n        }\n\n        await CoreUtils.ignoreErrors(AddonModSurvey.logView(this.survey.id));\n\n        this.analyticsLogEvent('mod_survey_view_survey');\n    }\n\n    /**\n     * Check if answers are valid to be submitted.\n     *\n     * @returns If answers are valid\n     */\n    isValidResponse(): boolean {\n        return !this.questions.some((question) => question.required && question.name &&\n            (question.type === 0 ? this.answers[question.name] == '' : parseInt(this.answers[question.name], 10) === -1));\n    }\n\n    /**\n     * Save options selected.\n     */\n    async submit(): Promise<void> {\n        if (!this.survey) {\n            return;\n        }\n\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            await CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n\n            const answers: AddonModSurveySubmitAnswerData[] = [];\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            for (const x in this.answers) {\n                answers.push({\n                    key: x,\n                    value: this.answers[x],\n                });\n            }\n\n            const online = await AddonModSurvey.submitAnswers(this.survey.id, this.survey.name, this.courseId, answers);\n\n            CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: this.moduleName });\n\n            if (online && this.isPrefetched()) {\n                // The survey is downloaded, update the data.\n                try {\n                    const prefetched = await AddonModSurveySync.prefetchAfterUpdate(\n                        AddonModSurveyPrefetchHandler.instance,\n                        this.module,\n                        this.courseId,\n                    );\n\n                    // Update the view.\n                    prefetched ?\n                        this.showLoadingAndFetch(false, false) :\n                        this.showLoadingAndRefresh(false);\n                } catch {\n                    // Prefetch failed, refresh the data.\n                    this.showLoadingAndRefresh(false);\n                }\n            } else {\n                // Not downloaded, refresh the data.\n                this.showLoadingAndRefresh(false);\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_survey.cannotsubmitsurvey', true);\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async sync(): Promise<AddonModSurveySyncResult> {\n        if (!this.survey) {\n            throw new CoreError('Cannot sync without a survey.');\n        }\n\n        return AddonModSurveySync.syncSurvey(this.survey.id, this.currentUserId);\n    }\n\n}\n","<!-- Buttons to add to the header. -->\n<core-navbar-buttons slot=\"end\">\n    <ion-button fill=\"clear\" (click)=\"openModuleSummary()\" aria-haspopup=\"true\" [attr.aria-label]=\"'core.info' | translate\">\n        <ion-icon name=\"fas-circle-info\" slot=\"icon-only\" aria-hidden=\"true\" />\n    </ion-button>\n</core-navbar-buttons>\n\n<!-- Content. -->\n<core-loading [hideUntil]=\"!showLoading\">\n\n    <!-- Activity info. -->\n    <core-course-module-info [module]=\"module\" [description]=\"survey && !survey.surveydone && !hasOffline && description\"\n        [component]=\"component\" [componentId]=\"componentId\" [courseId]=\"courseId\" [hasDataToSync]=\"hasOffline\"\n        (completionChanged)=\"onCompletionChange()\" />\n\n    <!-- Survey already done -->\n    <ion-card class=\"core-success-card\" *ngIf=\"survey && survey.surveydone\">\n        <ion-item>\n            <ion-icon name=\"fas-check\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>\n                {{ 'addon.mod_survey.surveycompletednograph' | translate }}\n            </ion-label>\n        </ion-item>\n    </ion-card>\n\n    <!-- Survey questions -->\n    <form *ngIf=\"survey && !survey.surveydone && !hasOffline && questions && questions.length\">\n\n        <ion-grid class=\"ion-no-padding ion-text-wrap\">\n            <ng-container *ngFor=\"let question of questions; let questionIndex=index; let isEven=even;\"\n                class=\"ion-no-padding ion-text-wrap\">\n                <!-- Parent question (Category header) -->\n                <ng-container *ngIf=\"question.multiArray?.length\">\n                    <h3 class=\"ion-padding-horizontal\" [class.ion-padding-top]=\"questionIndex === 1\">{{ question.text }}</h3>\n                    <ion-row class=\"ion-align-items-center ion-hide-md-down ion-padding\">\n                        <ion-col size=\"7\" class=\"ion-padding\">{{ 'addon.mod_survey.responses' | translate }}</ion-col>\n                        <ion-col size=\"1\" class=\"ion-text-center option-name\"\n                            *ngFor=\"let option of question.optionsArray; let indexOption=index;\">\n                            {{ option }}\n                        </ion-col>\n                    </ion-row>\n                    <ion-item class=\"ion-text-wrap addon-mod_survey-question\" [class.even]=\"isEven\" lines=\"full\">\n                        <ion-label>\n                            <p>{{ question.intro }}</p>\n                        </ion-label>\n                    </ion-item>\n                </ng-container>\n\n                <!-- Subquestion -->\n                <ng-container *ngIf=\"question.parent !== 0\">\n                    <ion-radio-group [(ngModel)]=\"answers[question.name]\" [required]=\"question.required\" [name]=\"question.name\">\n                        <ion-row class=\"ion-align-items-center ion-padding-horizontal\" [class.even]=\"isEven\">\n\n                            <ion-col size=\"7\">\n                                <span id=\"addon-mod_survey-{{question.name}}\" [core-mark-required]=\"question.required\">\n                                    <strong>{{question.num}}.</strong> {{ question.text }}\n                                </span>\n                            </ion-col>\n\n                            <!-- Tablet view: radio buttons -->\n                            <ion-col class=\"ion-hide-md-down ion-text-center\" size=\"1\"\n                                *ngFor=\"let option of question.optionsArray; let value=index;\">\n                                <!-- Empty slot to avoid errors on migration tslint checks -->\n                                <ion-radio [value]=\"value + 1\" [attr.aria-label]=\"question.num + '. '+question.text + ': ' + option\" />\n                            </ion-col>\n                            <ion-col class=\"ion-hide-md-up\" size=\"5\">\n                                <ion-select class=\"ion-padding\" [(ngModel)]=\"answers[question.name]\" [required]=\"question.required\"\n                                    [attr.aria-labelledby]=\"'addon-mod_survey-'+question.name\" interface=\"action-sheet\"\n                                    [name]=\"question.name\" [cancelText]=\"'core.cancel' | translate\"\n                                    [interfaceOptions]=\"{header: question.text}\">\n                                    <ion-select-option value=\"-1\" selected disabled>{{ 'core.choose' | translate }}</ion-select-option>\n                                    <ion-select-option *ngFor=\"let option of question.optionsArray; let value=index;\" [value]=\"value +1\">\n                                        {{option}}\n                                    </ion-select-option>\n                                </ion-select>\n                            </ion-col>\n                        </ion-row>\n                    </ion-radio-group>\n                </ng-container>\n\n                <!-- Single question (don't belong to a category) -->\n                <ng-container *ngIf=\"(!question.multiArray || question.multiArray.length === 0) && question.parent === 0\">\n                    <ion-row class=\"ion-align-items-center ion-padding\" *ngIf=\"question.type > 0\" [class.even]=\"isEven\">\n                        <ion-col size=\"7\">\n                            <span id=\"addon-mod_survey-{{question.name}}\" [core-mark-required]=\"question.required\">\n                                <strong>{{question.num}}.</strong> {{ question.text }}\n                            </span>\n                        </ion-col>\n                        <ion-col size=\"5\">\n                            <ion-select class=\"ion-padding\" [(ngModel)]=\"answers[question.name]\" [required]=\"question.required\"\n                                [attr.aria-labelledby]=\"'addon-mod_survey-'+question.name\" interface=\"action-sheet\" [name]=\"question.name\"\n                                [cancelText]=\"'core.cancel' | translate\" [interfaceOptions]=\"{header: question.text}\">\n                                <ion-select-option [value]=\"question.required ? '-1' : '0'\" selected [disabled]=\"question.required\">\n                                    {{ 'core.choose' | translate }}\n                                </ion-select-option>\n                                <ion-select-option *ngFor=\"let option of question.optionsArray; let value=index;\" [value]=\"value +1\">\n                                    {{option}}\n                                </ion-select-option>\n                            </ion-select>\n                        </ion-col>\n                    </ion-row>\n\n                    <ion-item *ngIf=\"question.type === 0\" class=\"ion-text-wrap\" [class.even]=\"isEven\">\n                        <ion-label position=\"floating\">\n                            <span [core-mark-required]=\"question.required\">\n                                <strong>{{question.num}}.</strong> {{ question.text }}\n                            </span>\n                        </ion-label>\n                        <ion-textarea [(ngModel)]=\"answers[question.name]\" [name]=\"question.name\" [required]=\"question.required\" />\n                    </ion-item>\n                </ng-container>\n\n            </ng-container>\n        </ion-grid>\n    </form>\n\n    <div collapsible-footer *ngIf=\"!showLoading\" slot=\"fixed\">\n        <div class=\"list-item-limited-width\" *ngIf=\"survey && (survey.surveydone || (!hasOffline && questions && questions.length))\">\n            <ion-button class=\"ion-text-wrap ion-margin\" expand=\"block\" [href]=\"module.url\" core-link *ngIf=\"survey.surveydone\">\n                {{ 'addon.mod_survey.results' | translate }}\n                <ion-icon name=\"fas-up-right-from-square\" slot=\"end\" aria-hidden=\"true\" />\n            </ion-button>\n\n            <ion-button expand=\"block\" class=\"ion-text-wrap ion-margin\" (click)=\"submit()\" [disabled]=\"!isValidResponse()\"\n                *ngIf=\"!survey.surveydone && !hasOffline && questions && questions.length\">\n                {{ 'core.submit' | translate }}\n            </ion-button>\n        </div>\n\n        <core-course-module-navigation [courseId]=\"courseId\" [currentModuleId]=\"module.id\" />\n    </div>\n</core-loading>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}