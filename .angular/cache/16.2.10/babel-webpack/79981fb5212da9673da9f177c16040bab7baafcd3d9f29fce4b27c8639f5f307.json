{"ast":null,"code":"var _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { AddonNotificationsMainMenuHandlerService } from './mainmenu';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to treat links to notifications.\n */\nexport class AddonNotificationsLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonNotificationsLinkHandler';\n    this.pattern = /\\/message\\/output\\/popup\\/notifications\\.php/;\n    this.featureName = 'CoreMainMenuDelegate_AddonNotifications';\n  }\n  /**\n   * @inheritdoc\n   */\n  getActions() {\n    return [{\n      action: siteId => {\n        CoreNavigator.navigateToSitePath(AddonNotificationsMainMenuHandlerService.PAGE_NAME, {\n          preferCurrentTab: false,\n          siteId\n        });\n      }\n    }];\n  }\n}\n_class = AddonNotificationsLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonNotificationsLinkHandlerService_BaseFactory;\n  return function AddonNotificationsLinkHandlerService_Factory(t) {\n    return (ɵAddonNotificationsLinkHandlerService_BaseFactory || (ɵAddonNotificationsLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonNotificationsLinkHandler = makeSingleton(AddonNotificationsLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreNavigator","makeSingleton","AddonNotificationsMainMenuHandlerService","AddonNotificationsLinkHandlerService","constructor","name","pattern","featureName","getActions","action","siteId","navigateToSitePath","PAGE_NAME","preferCurrentTab","t","factory","ɵfac","providedIn","AddonNotificationsLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/notifications/services/handlers/notifications-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { AddonNotificationsMainMenuHandlerService } from './mainmenu';\n\n/**\n * Handler to treat links to notifications.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonNotificationsLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'AddonNotificationsLinkHandler';\n    pattern = /\\/message\\/output\\/popup\\/notifications\\.php/;\n    featureName = 'CoreMainMenuDelegate_AddonNotifications';\n\n    /**\n     * @inheritdoc\n     */\n    getActions(): CoreContentLinksAction[] {\n        return [{\n            action: (siteId: string): void => {\n                CoreNavigator.navigateToSitePath(AddonNotificationsMainMenuHandlerService.PAGE_NAME, {\n                    preferCurrentTab: false,\n                    siteId,\n                });\n            },\n        }];\n    }\n\n}\n\nexport const AddonNotificationsLinkHandler = makeSingleton(AddonNotificationsLinkHandlerService);\n"],"mappings":";AAgBA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,wCAAwC,QAAQ,YAAY;;AAErE;;;AAIA,OAAM,MAAOC,oCAAqC,SAAQJ,2BAA2B;EADrFK,YAAA;;IAGI,KAAAC,IAAI,GAAG,+BAA+B;IACtC,KAAAC,OAAO,GAAG,8CAA8C;IACxD,KAAAC,WAAW,GAAG,yCAAyC;;EAEvD;;;EAGAC,UAAUA,CAAA;IACN,OAAO,CAAC;MACJC,MAAM,EAAGC,MAAc,IAAU;QAC7BV,aAAa,CAACW,kBAAkB,CAACT,wCAAwC,CAACU,SAAS,EAAE;UACjFC,gBAAgB,EAAE,KAAK;UACvBH;SACH,CAAC;MACN;KACH,CAAC;EACN;;SAlBSP,oCAAqC;;;;+IAArCA,MAAoC,IAAAW,CAAA,IAApCX,MAAoC;EAAA;AAAA;;SAApCA,MAAoC;EAAAY,OAAA,EAApCZ,MAAoC,CAAAa,IAAA;EAAAC,UAAA,EADvB;AAAM;AAuBhC,OAAO,MAAMC,6BAA6B,GAAGjB,aAAa,CAACE,oCAAoC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}