{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreGroups } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModFeedback } from '../../services/feedback';\nimport { AddonModFeedbackHelper } from '../../services/feedback-helper';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/group-selector/group-selector\";\nimport * as i3 from \"../../../../../core/components/infinite-loading/infinite-loading\";\nimport * as i4 from \"../../../../../core/components/loading/loading\";\nimport * as i5 from \"../../../../../core/components/user-avatar/user-avatar\";\nimport * as i6 from \"../../../../../core/directives/content\";\nimport * as i7 from \"@ionic/angular\";\nimport * as i8 from \"@ngx-translate/core\";\nfunction AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_ion_badge_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_feedback.started\"), \" \");\n  }\n}\nfunction AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_ion_badge_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_feedback.not_started\"), \" \");\n  }\n}\nfunction AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10);\n    i0.ɵɵelement(1, \"core-user-avatar\", 11);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtemplate(6, AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_ion_badge_6_Template, 3, 3, \"ion-badge\", 13);\n    i0.ɵɵtemplate(7, AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_ion_badge_7_Template, 3, 3, \"ion-badge\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", user_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r2.fullname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", user_r2.started);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !user_r2.started);\n  }\n}\nfunction AddonModFeedbackNonRespondentsPage_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_Template, 8, 4, \"ion-item\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.users);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\n/**\n * Page that displays feedback non respondents.\n */\nexport class AddonModFeedbackNonRespondentsPage {\n  constructor() {\n    this.page = 0;\n    this.users = [];\n    this.total = 0;\n    this.canLoadMore = false;\n    this.loaded = false;\n    this.loadMoreError = false;\n    this.logView = CoreTime.once(() => {\n      if (!this.feedback) {\n        return;\n      }\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'mod_feedback_get_non_respondents',\n        name: this.feedback.name,\n        data: {\n          feedbackid: this.feedback.id,\n          category: 'feedback'\n        },\n        url: `/mod/feedback/show_nonrespondents.php?id=${this.cmId}&courseid=${this.courseId}`\n      });\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    try {\n      this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n      this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n      this.selectedGroup = CoreNavigator.getRouteNumberParam('group') || 0;\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n      return;\n    }\n    this.fetchData();\n  }\n  /**\n   * Fetch all the data required for the view.\n   *\n   * @param refresh Empty events array first.\n   * @returns Promise resolved when done.\n   */\n  fetchData(refresh = false) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.page = 0;\n      _this.total = 0;\n      _this.users = [];\n      try {\n        _this.feedback = yield AddonModFeedback.getFeedback(_this.courseId, _this.cmId);\n        _this.groupInfo = yield CoreGroups.getActivityGroupInfo(_this.cmId);\n        _this.selectedGroup = CoreGroups.validateGroupId(_this.selectedGroup, _this.groupInfo);\n        yield _this.loadGroupUsers(_this.selectedGroup);\n        _this.logView();\n      } catch (message) {\n        CoreDomUtils.showErrorModalDefault(message, 'core.course.errorgetmodule', true);\n        if (!refresh) {\n          // Some call failed on first fetch, go back.\n          CoreNavigator.back();\n        }\n      }\n    })();\n  }\n  /**\n   * Load Group responses.\n   *\n   * @param groupId If defined it will change group if not, it will load more users for the same group.\n   * @returns Promise resolved when done.\n   */\n  loadGroupUsers(groupId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.loadMoreError = false;\n      if (groupId === undefined) {\n        _this2.page++;\n      } else {\n        _this2.selectedGroup = groupId;\n        _this2.page = 0;\n        _this2.total = 0;\n        _this2.users = [];\n        _this2.loaded = false;\n      }\n      try {\n        const response = yield AddonModFeedbackHelper.getNonRespondents(_this2.feedback.id, {\n          groupId: _this2.selectedGroup,\n          page: _this2.page,\n          cmId: _this2.cmId\n        });\n        _this2.total = response.total;\n        if (_this2.users.length < response.total) {\n          _this2.users = _this2.users.concat(response.users);\n        }\n        _this2.canLoadMore = _this2.users.length < response.total;\n      } catch (error) {\n        _this2.loadMoreError = true;\n        throw error;\n      } finally {\n        _this2.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Change selected group or load more users.\n   *\n   * @param groupId Group ID selected. If not defined, it will load more users.\n   * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n   */\n  loadAttempts(groupId, infiniteComplete) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this3.loadGroupUsers(groupId);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n      } finally {\n        infiniteComplete && infiniteComplete();\n      }\n    })();\n  }\n  /**\n   * Refresh the attempts.\n   *\n   * @param refresher Refresher.\n   */\n  refreshFeedback(refresher) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const promises = [];\n        promises.push(CoreGroups.invalidateActivityGroupInfo(_this4.cmId));\n        if (_this4.feedback) {\n          promises.push(AddonModFeedback.invalidateNonRespondentsData(_this4.feedback.id));\n        }\n        yield CoreUtils.ignoreErrors(Promise.all(promises));\n        yield _this4.fetchData(true);\n      } finally {\n        refresher.complete();\n      }\n    })();\n  }\n}\n_class = AddonModFeedbackNonRespondentsPage;\n_class.ɵfac = function AddonModFeedbackNonRespondentsPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-feedback-nonrespondents\"]],\n  decls: 23,\n  vars: 23,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [1, \"ion-no-margin\"], [3, \"groupInfo\", \"selected\", \"courseId\", \"selectedChange\"], [4, \"ngIf\"], [3, \"enabled\", \"error\", \"action\"], [\"class\", \"ion-text-wrap\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\"], [\"slot\", \"start\", 3, \"user\"], [1, \"item-heading\"], [\"color\", \"success\", 4, \"ngIf\"], [\"color\", \"danger\", 4, \"ngIf\"], [\"color\", \"success\"], [\"color\", \"danger\"]],\n  template: function AddonModFeedbackNonRespondentsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"ion-refresher\", 2);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModFeedbackNonRespondentsPage_Template_ion_refresher_ionRefresh_10_listener($event) {\n        return ctx.refreshFeedback($event.target);\n      });\n      i0.ɵɵelement(11, \"ion-refresher-content\", 3);\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"core-loading\", 4)(14, \"ion-list\", 5)(15, \"core-group-selector\", 6);\n      i0.ɵɵlistener(\"selectedChange\", function AddonModFeedbackNonRespondentsPage_Template_core_group_selector_selectedChange_15_listener($event) {\n        return ctx.selectedGroup = $event;\n      })(\"selectedChange\", function AddonModFeedbackNonRespondentsPage_Template_core_group_selector_selectedChange_15_listener() {\n        return ctx.loadAttempts(ctx.selectedGroup);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"ion-item-divider\")(17, \"ion-label\")(18, \"h2\");\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(21, AddonModFeedbackNonRespondentsPage_ng_container_21_Template, 2, 1, \"ng-container\", 7);\n      i0.ɵɵelementStart(22, \"core-infinite-loading\", 8);\n      i0.ɵɵlistener(\"action\", function AddonModFeedbackNonRespondentsPage_Template_core_infinite_loading_action_22_listener($event) {\n        return ctx.loadAttempts(undefined, $event);\n      });\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 12, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 14, \"addon.mod_feedback.responses\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(12, 16, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"groupInfo\", ctx.groupInfo)(\"selected\", ctx.selectedGroup)(\"courseId\", ctx.courseId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(20, 18, \"addon.mod_feedback.non_respondents_students\", i0.ɵɵpureFunction1(21, _c0, ctx.total)));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.total > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"enabled\", ctx.canLoadMore)(\"error\", ctx.loadMoreError);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreGroupSelectorComponent, i3.CoreInfiniteLoadingComponent, i4.CoreLoadingComponent, i5.CoreUserAvatarComponent, i6.CoreContentDirective, i7.IonBadge, i7.IonButtons, i7.IonContent, i7.IonHeader, i7.IonItem, i7.IonItemDivider, i7.IonLabel, i7.IonList, i7.IonRefresher, i7.IonRefresherContent, i7.IonTitle, i7.IonToolbar, i7.IonBackButton, i8.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreGroups","CoreNavigator","CoreDomUtils","CoreUtils","AddonModFeedback","AddonModFeedbackHelper","CoreTime","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵelement","ɵɵtemplate","AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_ion_badge_6_Template","AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_ion_badge_7_Template","ɵɵproperty","user_r2","ɵɵtextInterpolate","fullname","started","ɵɵelementContainerStart","AddonModFeedbackNonRespondentsPage_ng_container_21_ion_item_1_Template","ɵɵelementContainerEnd","ctx_r0","users","AddonModFeedbackNonRespondentsPage","constructor","page","total","canLoadMore","loaded","loadMoreError","logView","once","feedback","logEvent","type","VIEW_ITEM_LIST","ws","name","data","feedbackid","id","category","url","cmId","courseId","ngOnInit","getRequiredRouteNumberParam","selectedGroup","getRouteNumberParam","error","showErrorModal","back","fetchData","refresh","_this","_asyncToGenerator","getFeedback","groupInfo","getActivityGroupInfo","validateGroupId","loadGroupUsers","message","showErrorModalDefault","groupId","_this2","undefined","response","getNonRespondents","length","concat","loadAttempts","infiniteComplete","_this3","refreshFeedback","refresher","_this4","promises","push","invalidateActivityGroupInfo","invalidateNonRespondentsData","ignoreErrors","Promise","all","complete","selectors","decls","vars","consts","template","AddonModFeedbackNonRespondentsPage_Template","rf","ctx","ɵɵlistener","AddonModFeedbackNonRespondentsPage_Template_ion_refresher_ionRefresh_10_listener","$event","target","AddonModFeedbackNonRespondentsPage_Template_core_group_selector_selectedChange_15_listener","AddonModFeedbackNonRespondentsPage_ng_container_21_Template","AddonModFeedbackNonRespondentsPage_Template_core_infinite_loading_action_22_listener","ɵɵpropertyInterpolate","ɵɵpipeBind2","ɵɵpureFunction1","_c0"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/feedback/pages/nonrespondents/nonrespondents.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/feedback/pages/nonrespondents/nonrespondents.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreGroupInfo, CoreGroups } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModFeedback, AddonModFeedbackWSFeedback } from '../../services/feedback';\nimport { AddonModFeedbackHelper, AddonModFeedbackNonRespondent } from '../../services/feedback-helper';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that displays feedback non respondents.\n */\n@Component({\n    selector: 'page-addon-mod-feedback-nonrespondents',\n    templateUrl: 'nonrespondents.html',\n})\nexport class AddonModFeedbackNonRespondentsPage implements OnInit {\n\n    protected cmId!: number;\n    protected feedback?: AddonModFeedbackWSFeedback;\n    protected page = 0;\n    protected logView: () => void;\n\n    courseId!: number;\n    selectedGroup!: number;\n    groupInfo?: CoreGroupInfo;\n    users: AddonModFeedbackNonRespondent[] = [];\n    total = 0;\n    canLoadMore = false;\n    loaded = false;\n    loadMoreError = false;\n\n    constructor() {\n        this.logView = CoreTime.once(() => {\n            if (!this.feedback) {\n                return;\n            }\n\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'mod_feedback_get_non_respondents',\n                name: this.feedback.name,\n                data: { feedbackid: this.feedback.id, category: 'feedback' },\n                url: `/mod/feedback/show_nonrespondents.php?id=${this.cmId}&courseid=${this.courseId}`,\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.selectedGroup = CoreNavigator.getRouteNumberParam('group') || 0;\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.fetchData();\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param refresh Empty events array first.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(refresh: boolean = false): Promise<void> {\n        this.page = 0;\n        this.total = 0;\n        this.users = [];\n\n        try {\n            this.feedback = await AddonModFeedback.getFeedback(this.courseId, this.cmId);\n\n            this.groupInfo = await CoreGroups.getActivityGroupInfo(this.cmId);\n\n            this.selectedGroup = CoreGroups.validateGroupId(this.selectedGroup, this.groupInfo);\n\n            await this.loadGroupUsers(this.selectedGroup);\n\n            this.logView();\n        } catch (message) {\n            CoreDomUtils.showErrorModalDefault(message, 'core.course.errorgetmodule', true);\n\n            if (!refresh) {\n                // Some call failed on first fetch, go back.\n                CoreNavigator.back();\n            }\n        }\n    }\n\n    /**\n     * Load Group responses.\n     *\n     * @param groupId If defined it will change group if not, it will load more users for the same group.\n     * @returns Promise resolved when done.\n     */\n    protected async loadGroupUsers(groupId?: number): Promise<void> {\n        this.loadMoreError = false;\n\n        if (groupId === undefined) {\n            this.page++;\n        } else {\n            this.selectedGroup = groupId;\n            this.page = 0;\n            this.total = 0;\n            this.users = [];\n            this.loaded = false;\n        }\n\n        try {\n            const response = await AddonModFeedbackHelper.getNonRespondents(this.feedback!.id, {\n                groupId: this.selectedGroup,\n                page: this.page,\n                cmId: this.cmId,\n            });\n\n            this.total = response.total;\n            if (this.users.length < response.total) {\n                this.users = this.users.concat(response.users);\n            }\n\n            this.canLoadMore = this.users.length < response.total;\n        } catch (error) {\n            this.loadMoreError = true;\n\n            throw error;\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Change selected group or load more users.\n     *\n     * @param groupId Group ID selected. If not defined, it will load more users.\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     */\n    async loadAttempts(groupId?: number, infiniteComplete?: () => void): Promise<void> {\n        try {\n            await this.loadGroupUsers(groupId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        } finally {\n            infiniteComplete && infiniteComplete();\n        }\n    }\n\n    /**\n     * Refresh the attempts.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshFeedback(refresher: HTMLIonRefresherElement): Promise<void> {\n        try {\n            const promises: Promise<void>[] = [];\n\n            promises.push(CoreGroups.invalidateActivityGroupInfo(this.cmId));\n            if (this.feedback) {\n                promises.push(AddonModFeedback.invalidateNonRespondentsData(this.feedback.id));\n            }\n\n            await CoreUtils.ignoreErrors(Promise.all(promises));\n\n            await this.fetchData(true);\n        } finally {\n            refresher.complete();\n        }\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.mod_feedback.responses' |translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refreshFeedback($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"loaded\">\n        <ion-list class=\"ion-no-margin\">\n            <core-group-selector [groupInfo]=\"groupInfo\" [(selected)]=\"selectedGroup\" (selectedChange)=\"loadAttempts(selectedGroup)\"\n                [courseId]=\"courseId\" />\n\n            <ion-item-divider>\n                <ion-label>\n                    <h2>{{ 'addon.mod_feedback.non_respondents_students' | translate : {$a: total } }}</h2>\n                </ion-label>\n            </ion-item-divider>\n            <ng-container *ngIf=\"total > 0\">\n                <ion-item *ngFor=\"let user of users\" class=\"ion-text-wrap\">\n                    <core-user-avatar [user]=\"user\" slot=\"start\" />\n                    <ion-label>\n                        <p class=\"item-heading\">{{ user.fullname }}</p>\n                        <p>\n                            <ion-badge color=\"success\" *ngIf=\"user.started\">\n                                {{ 'addon.mod_feedback.started' | translate}}\n                            </ion-badge>\n                            <ion-badge color=\"danger\" *ngIf=\"!user.started\">\n                                {{ 'addon.mod_feedback.not_started' | translate}}\n                            </ion-badge>\n                        </p>\n                    </ion-label>\n                </ion-item>\n            </ng-container>\n\n            <core-infinite-loading [enabled]=\"canLoadMore\" (action)=\"loadAttempts(undefined, $event)\" [error]=\"loadMoreError\" />\n        </ion-list>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}