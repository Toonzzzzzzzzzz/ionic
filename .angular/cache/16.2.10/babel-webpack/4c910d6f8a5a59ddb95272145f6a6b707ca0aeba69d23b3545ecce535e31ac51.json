{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourseFormatDelegate } from '@features/course/services/format-delegate';\nimport { CoreSitePlugins } from '@features/siteplugins/services/siteplugins';\nimport { CoreSitePluginsPluginContentComponent } from '../plugin-content/plugin-content';\nimport * as i0 from \"@angular/core\";\nfunction CoreSitePluginsCourseFormatComponent_core_site_plugins_plugin_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-site-plugins-plugin-content\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"component\", ctx_r0.component)(\"method\", ctx_r0.method)(\"args\", ctx_r0.args)(\"initResult\", ctx_r0.initResult)(\"data\", ctx_r0.data);\n  }\n}\n/**\n * Component that displays the index of a course format site plugin.\n */\nexport class CoreSitePluginsCourseFormatComponent {\n  /**\n   * @inheritdoc\n   */\n  ngOnChanges() {\n    if (!this.course || !this.course.format) {\n      return;\n    }\n    if (!this.component) {\n      // Initialize the data.\n      const handlerName = CoreCourseFormatDelegate.getHandlerName(this.course.format);\n      const handler = CoreSitePlugins.getSitePluginHandler(handlerName);\n      if (handler) {\n        this.component = handler.plugin.component;\n        this.method = handler.handlerSchema.method;\n        this.args = {\n          courseid: this.course.id\n        };\n        this.initResult = handler.initResult;\n      }\n    }\n    // Pass input data to the component.\n    this.data = {\n      course: this.course,\n      sections: this.sections,\n      initialSectionId: this.initialSectionId,\n      initialSectionNumber: this.initialSectionNumber,\n      moduleId: this.moduleId,\n      coreCourseFormatComponent: this.coreCourseFormatComponent\n    };\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   * @param done Function to call when done.\n   * @param afterCompletionChange Whether the refresh is due to a completion change.\n   * @returns Promise resolved when done.\n   */\n  doRefresh(refresher, done, afterCompletionChange) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$content;\n      yield (_this$content = _this.content) === null || _this$content === void 0 ? void 0 : _this$content.refreshContent(afterCompletionChange);\n    })();\n  }\n}\n_class = CoreSitePluginsCourseFormatComponent;\n_class.ɵfac = function CoreSitePluginsCourseFormatComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-site-plugins-course-format\"]],\n  viewQuery: function CoreSitePluginsCourseFormatComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreSitePluginsPluginContentComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function CoreSitePluginsCourseFormatComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.component);\n    }\n  },\n  inputs: {\n    course: \"course\",\n    sections: \"sections\",\n    initialSectionId: \"initialSectionId\",\n    initialSectionNumber: \"initialSectionNumber\",\n    moduleId: \"moduleId\",\n    coreCourseFormatComponent: \"coreCourseFormatComponent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"component\", \"method\", \"args\", \"initResult\", \"data\", 4, \"ngIf\"], [3, \"component\", \"method\", \"args\", \"initResult\", \"data\"]],\n  template: function CoreSitePluginsCourseFormatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoreSitePluginsCourseFormatComponent_core_site_plugins_plugin_content_0_Template, 1, 5, \"core-site-plugins-plugin-content\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.component && ctx.method);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] { display: contents; }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL3NpdGVwbHVnaW5zL2NvbXBvbmVudHMvY291cnNlLWZvcm1hdC9jb3Vyc2UtZm9ybWF0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVEsaUJBQWlCLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7IGRpc3BsYXk6IGNvbnRlbnRzOyB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreCourseFormatDelegate","CoreSitePlugins","CoreSitePluginsPluginContentComponent","i0","ɵɵelement","ɵɵproperty","ctx_r0","component","method","args","initResult","data","CoreSitePluginsCourseFormatComponent","ngOnChanges","course","format","handlerName","getHandlerName","handler","getSitePluginHandler","plugin","handlerSchema","courseid","id","sections","initialSectionId","initialSectionNumber","moduleId","coreCourseFormatComponent","doRefresh","refresher","done","afterCompletionChange","_this","_asyncToGenerator","_this$content","content","refreshContent","selectors","viewQuery","CoreSitePluginsCourseFormatComponent_Query","rf","ctx","ɵɵtemplate","CoreSitePluginsCourseFormatComponent_core_site_plugins_plugin_content_0_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/siteplugins/components/course-format/course-format.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/siteplugins/components/course-format/core-siteplugins-course-format.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnChanges, Input, ViewChild, HostBinding } from '@angular/core';\n\nimport { CoreCourseFormatComponent } from '@features/course/components/course-format/course-format';\nimport { CoreCourseSection } from '@features/course/services/course-helper';\nimport { CoreCourseFormatDelegate } from '@features/course/services/format-delegate';\nimport { CoreCourseAnyCourseData } from '@features/courses/services/courses';\nimport { CoreSitePlugins, CoreSitePluginsContent } from '@features/siteplugins/services/siteplugins';\nimport { CoreSitePluginsPluginContentComponent } from '../plugin-content/plugin-content';\n\n/**\n * Component that displays the index of a course format site plugin.\n */\n@Component({\n    selector: 'core-site-plugins-course-format',\n    templateUrl: 'core-siteplugins-course-format.html',\n    styles: [':host { display: contents; }'],\n})\nexport class CoreSitePluginsCourseFormatComponent implements OnChanges {\n\n    @Input() course?: CoreCourseAnyCourseData; // The course to render.\n    @Input() sections?: CoreCourseSection[]; // List of course sections. The status will be calculated in this component.\n    @Input() initialSectionId?: number; // The section to load first (by ID).\n    @Input() initialSectionNumber?: number; // The section to load first (by number).\n    @Input() moduleId?: number; // The module ID to scroll to. Must be inside the initial selected section.\n\n    // Special input, allows access to the parent instance properties and methods.\n    // Please notice that all the other inputs/outputs are also accessible through this instance, so they could be removed.\n    // However, we decided to keep them to support ngOnChanges and to make templates easier to read.\n    @Input() coreCourseFormatComponent?: CoreCourseFormatComponent;\n\n    @ViewChild(CoreSitePluginsPluginContentComponent) content?: CoreSitePluginsPluginContentComponent;\n\n    @HostBinding('class') component?: string;\n    method?: string;\n    args?: Record<string, unknown>;\n    initResult?: CoreSitePluginsContent | null;\n    data?: Record<string, unknown>;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnChanges(): void {\n        if (!this.course || !this.course.format) {\n            return;\n        }\n\n        if (!this.component) {\n            // Initialize the data.\n            const handlerName = CoreCourseFormatDelegate.getHandlerName(this.course.format);\n            const handler = CoreSitePlugins.getSitePluginHandler(handlerName);\n\n            if (handler) {\n                this.component = handler.plugin.component;\n                this.method = handler.handlerSchema.method;\n                this.args = {\n                    courseid: this.course.id,\n                };\n                this.initResult = handler.initResult;\n            }\n        }\n\n        // Pass input data to the component.\n        this.data = {\n            course: this.course,\n            sections: this.sections,\n            initialSectionId: this.initialSectionId,\n            initialSectionNumber: this.initialSectionNumber,\n            moduleId: this.moduleId,\n            coreCourseFormatComponent: this.coreCourseFormatComponent,\n        };\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param afterCompletionChange Whether the refresh is due to a completion change.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: HTMLIonRefresherElement, done?: () => void, afterCompletionChange?: boolean): Promise<void> {\n        await this.content?.refreshContent(afterCompletionChange);\n    }\n\n}\n","<core-site-plugins-plugin-content *ngIf=\"component && method\" [component]=\"component\" [method]=\"method\" [args]=\"args\"\n    [initResult]=\"initResult\" [data]=\"data\" />\n"],"mappings":";;AAkBA,SAASA,wBAAwB,QAAQ,2CAA2C;AAEpF,SAASC,eAAe,QAAgC,4CAA4C;AACpG,SAASC,qCAAqC,QAAQ,kCAAkC;;;;ICrBxFC,EAAA,CAAAC,SAAA,0CAC8C;;;;IADgBD,EAAA,CAAAE,UAAA,cAAAC,MAAA,CAAAC,SAAA,CAAuB,WAAAD,MAAA,CAAAE,MAAA,UAAAF,MAAA,CAAAG,IAAA,gBAAAH,MAAA,CAAAI,UAAA,UAAAJ,MAAA,CAAAK,IAAA;;;ADuBrF;;;AAQA,OAAM,MAAOC,oCAAoC;EAqB7C;;;EAGAC,WAAWA,CAAA;IACP,IAAI,CAAC,IAAI,CAACC,MAAM,IAAI,CAAC,IAAI,CAACA,MAAM,CAACC,MAAM,EAAE;MACrC;;IAGJ,IAAI,CAAC,IAAI,CAACR,SAAS,EAAE;MACjB;MACA,MAAMS,WAAW,GAAGhB,wBAAwB,CAACiB,cAAc,CAAC,IAAI,CAACH,MAAM,CAACC,MAAM,CAAC;MAC/E,MAAMG,OAAO,GAAGjB,eAAe,CAACkB,oBAAoB,CAACH,WAAW,CAAC;MAEjE,IAAIE,OAAO,EAAE;QACT,IAAI,CAACX,SAAS,GAAGW,OAAO,CAACE,MAAM,CAACb,SAAS;QACzC,IAAI,CAACC,MAAM,GAAGU,OAAO,CAACG,aAAa,CAACb,MAAM;QAC1C,IAAI,CAACC,IAAI,GAAG;UACRa,QAAQ,EAAE,IAAI,CAACR,MAAM,CAACS;SACzB;QACD,IAAI,CAACb,UAAU,GAAGQ,OAAO,CAACR,UAAU;;;IAI5C;IACA,IAAI,CAACC,IAAI,GAAG;MACRG,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBU,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCC,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;MAC/CC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,yBAAyB,EAAE,IAAI,CAACA;KACnC;EACL;EAEA;;;;;;;;EAQMC,SAASA,CAACC,SAAmC,EAAEC,IAAiB,EAAEC,qBAA+B;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAAA,IAAAC,aAAA;MACnG,OAAAA,aAAA,GAAMF,KAAI,CAACG,OAAO,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,cAAc,CAACL,qBAAqB,CAAC;IAAC;EAC9D;;SAjESpB,oCAAoC;;mBAApCA,MAAoC;AAAA;;QAApCA,MAAoC;EAAA0B,SAAA;EAAAC,SAAA,WAAAC,2CAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;qBAalCvC,qCAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;MC5CpDC,EAAA,CAAAwC,UAAA,IAAAC,gFAAA,8CAC8C;;;MADXzC,EAAA,CAAAE,UAAA,SAAAqC,GAAA,CAAAnC,SAAA,IAAAmC,GAAA,CAAAlC,MAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}