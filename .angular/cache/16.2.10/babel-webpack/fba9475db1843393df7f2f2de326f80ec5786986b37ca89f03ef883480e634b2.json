{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreUtils } from '@services/utils/utils';\n/**\n * Singleton with helpers to work with subscriptions.\n */\nexport class CoreSubscriptions {\n  /**\n   * Listen once to a subscribable object.\n   *\n   * @param subscribable Subscribable to listen to.\n   * @param onSuccess Callback to run when the subscription is updated.\n   * @param onError Callback to run when the an error happens.\n   * @param onComplete Callback to run when the observable completes.\n   * @returns A function to unsubscribe.\n   */\n  static once(subscribable, onSuccess, onError, onComplete) {\n    let callbackCalled = false;\n    let subscription = null;\n    const runCallback = callback => {\n      if (!callbackCalled) {\n        callbackCalled = true;\n        callback();\n      }\n    };\n    const unsubscribe = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* () {\n        var _subscription;\n        // Subscription variable might not be set because we can receive a value immediately. Wait for next tick.\n        yield CoreUtils.nextTick();\n        (_subscription = subscription) === null || _subscription === void 0 || _subscription.unsubscribe();\n      });\n      return function unsubscribe() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    subscription = subscribable.subscribe({\n      next: value => {\n        unsubscribe();\n        runCallback(() => onSuccess(value));\n      },\n      error: error => {\n        unsubscribe();\n        runCallback(() => onError === null || onError === void 0 ? void 0 : onError(error));\n      },\n      complete: () => {\n        unsubscribe();\n        runCallback(() => onComplete === null || onComplete === void 0 ? void 0 : onComplete());\n      }\n    });\n    return () => {\n      var _subscription2;\n      return (_subscription2 = subscription) === null || _subscription2 === void 0 ? void 0 : _subscription2.unsubscribe();\n    };\n  }\n}","map":{"version":3,"names":["CoreUtils","CoreSubscriptions","once","subscribable","onSuccess","onError","onComplete","callbackCalled","subscription","runCallback","callback","unsubscribe","_ref","_asyncToGenerator","_subscription","nextTick","apply","arguments","subscribe","next","value","error","complete","_subscription2"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/singletons/subscriptions.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { EventEmitter } from '@angular/core';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * Subscribable object.\n */\ntype Subscribable<T> = EventEmitter<T> | Observable<T>;\n\n/**\n * Singleton with helpers to work with subscriptions.\n */\nexport class CoreSubscriptions {\n\n    /**\n     * Listen once to a subscribable object.\n     *\n     * @param subscribable Subscribable to listen to.\n     * @param onSuccess Callback to run when the subscription is updated.\n     * @param onError Callback to run when the an error happens.\n     * @param onComplete Callback to run when the observable completes.\n     * @returns A function to unsubscribe.\n     */\n    static once<T>(\n        subscribable: Subscribable<T>,\n        onSuccess: (value: T) => unknown,\n        onError?: (error: unknown) => unknown,\n        onComplete?: () => void,\n    ): () => void {\n        let callbackCalled = false;\n        let subscription: Subscription | null = null;\n\n        const runCallback = (callback) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                callback();\n            }\n        };\n        const unsubscribe = async () => {\n            // Subscription variable might not be set because we can receive a value immediately. Wait for next tick.\n            await CoreUtils.nextTick();\n\n            subscription?.unsubscribe();\n        };\n\n        subscription = subscribable.subscribe({\n            next: value => {\n                unsubscribe();\n                runCallback(() => onSuccess(value));\n            },\n            error: error => {\n                unsubscribe();\n                runCallback(() => onError?.(error));\n            },\n            complete: () => {\n                unsubscribe();\n                runCallback(() => onComplete?.());\n            },\n        });\n\n        return () => subscription?.unsubscribe();\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,SAAS,QAAQ,uBAAuB;AAQjD;;;AAGA,OAAM,MAAOC,iBAAiB;EAE1B;;;;;;;;;EASA,OAAOC,IAAIA,CACPC,YAA6B,EAC7BC,SAAgC,EAChCC,OAAqC,EACrCC,UAAuB;IAEvB,IAAIC,cAAc,GAAG,KAAK;IAC1B,IAAIC,YAAY,GAAwB,IAAI;IAE5C,MAAMC,WAAW,GAAIC,QAAQ,IAAI;MAC7B,IAAI,CAACH,cAAc,EAAE;QACjBA,cAAc,GAAG,IAAI;QACrBG,QAAQ,EAAE;;IAElB,CAAC;IACD,MAAMC,WAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAW;QAAA,IAAAC,aAAA;QAC3B;QACA,MAAMd,SAAS,CAACe,QAAQ,EAAE;QAE1B,CAAAD,aAAA,GAAAN,YAAY,cAAAM,aAAA,eAAZA,aAAA,CAAcH,WAAW,EAAE;MAC/B,CAAC;MAAA,gBALKA,WAAWA,CAAA;QAAA,OAAAC,IAAA,CAAAI,KAAA,OAAAC,SAAA;MAAA;IAAA,GAKhB;IAEDT,YAAY,GAAGL,YAAY,CAACe,SAAS,CAAC;MAClCC,IAAI,EAAEC,KAAK,IAAG;QACVT,WAAW,EAAE;QACbF,WAAW,CAAC,MAAML,SAAS,CAACgB,KAAK,CAAC,CAAC;MACvC,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG;QACXV,WAAW,EAAE;QACbF,WAAW,CAAC,MAAMJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGgB,KAAK,CAAC,CAAC;MACvC,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAK;QACXX,WAAW,EAAE;QACbF,WAAW,CAAC,MAAMH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE,CAAE,CAAC;MACrC;KACH,CAAC;IAEF,OAAO;MAAA,IAAAiB,cAAA;MAAA,QAAAA,cAAA,GAAMf,YAAY,cAAAe,cAAA,uBAAZA,cAAA,CAAcZ,WAAW,EAAE;IAAA;EAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}