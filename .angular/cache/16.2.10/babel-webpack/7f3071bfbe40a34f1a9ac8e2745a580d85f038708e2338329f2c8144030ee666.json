{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { CoreConfig } from '@services/config';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreForms } from '@singletons/form';\nimport { CorePlatform } from '@services/platform';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"messageForm\"];\n/**\n * Component to display a \"send message form\".\n *\n * @description\n * This component will display a standalone send message form in order to have a better UX.\n *\n * Example usage:\n * <core-send-message-form (onSubmit)=\"sendMessage($event)\" [placeholder]=\"'core.messages.newmessage' | translate\"\n * [show-keyboard]=\"showKeyboard\"></core-send-message-form>\n */\nexport class CoreSendMessageFormComponent {\n  constructor() {\n    this.message = ''; // Input text.\n    this.placeholder = ''; // Placeholder for the input area.\n    this.showKeyboard = false; // If keyboard is shown or not.\n    this.sendDisabled = false; // If send is disabled.\n    this.sendOnEnter = false;\n    this.onSubmit = new EventEmitter();\n    this.onResize = new EventEmitter();\n    CoreConfig.get(CoreConstants.SETTINGS_SEND_ON_ENTER, !CorePlatform.isMobile()).then(sendOnEnter => {\n      this.sendOnEnter = !!sendOnEnter;\n      return;\n    }).catch(() => {\n      // Nothing to do.\n    });\n    CoreEvents.on(CoreEvents.SEND_ON_ENTER_CHANGED, data => {\n      this.sendOnEnter = data.sendOnEnter;\n    }, CoreSites.getCurrentSiteId());\n  }\n  ngOnInit() {\n    this.showKeyboard = CoreUtils.isTrueOrOne(this.showKeyboard);\n  }\n  /**\n   * Form submitted.\n   *\n   * @param $event Mouse event.\n   */\n  submitForm($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    let value = this.message.trim();\n    if (!value) {\n      // Silent error.\n      return;\n    }\n    this.message = ''; // Reset the form.\n    CoreForms.triggerFormSubmittedEvent(this.formElement, false, CoreSites.getCurrentSiteId());\n    value = CoreTextUtils.replaceNewLines(value, '<br>');\n    this.onSubmit.emit(value);\n  }\n  /**\n   * Textarea resized.\n   */\n  textareaResized() {\n    this.onResize.emit();\n  }\n  /**\n   * A11y key functionality that prevents keyDown events.\n   *\n   * @param e Event.\n   */\n  enterKeyDown(e, other) {\n    if (this.sendDisabled) {\n      return;\n    }\n    if (this.sendOnEnter && !other) {\n      // Enter clicked, send the message.\n      e.preventDefault();\n      e.stopPropagation();\n    } else if (!this.sendOnEnter && !CorePlatform.isMobile() && other == 'control') {\n      // Cmd+Enter or Ctrl+Enter, send message.\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n  /**\n   * Enter key clicked.\n   *\n   * @param e Event.\n   * @param other The name of the other key that was clicked, undefined if no other key.\n   */\n  enterKeyUp(e, other) {\n    if (this.sendDisabled) {\n      return;\n    }\n    if (this.sendOnEnter && !other) {\n      // Enter clicked, send the message.\n      this.submitForm(e);\n    } else if (!this.sendOnEnter && !CorePlatform.isMobile() && other == 'control') {\n      // Cmd+Enter or Ctrl+Enter, send message.\n      this.submitForm(e);\n    }\n  }\n}\n_class = CoreSendMessageFormComponent;\n_class.ɵfac = function CoreSendMessageFormComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-send-message-form\"]],\n  viewQuery: function CoreSendMessageFormComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formElement = _t.first);\n    }\n  },\n  inputs: {\n    message: \"message\",\n    placeholder: \"placeholder\",\n    showKeyboard: \"showKeyboard\",\n    sendDisabled: \"sendDisabled\"\n  },\n  outputs: {\n    onSubmit: \"onSubmit\",\n    onResize: \"onResize\"\n  },\n  decls: 7,\n  vars: 9,\n  consts: [[\"messageForm\", \"\"], [\"rows\", \"1\", \"name\", \"message\", 1, \"core-send-message-input\", 3, \"core-auto-focus\", \"placeholder\", \"core-auto-rows\", \"ngModel\", \"ngModelChange\", \"onResize\", \"keyup.enter\", \"keyup.control.enter\", \"keyup.meta.enter\", \"keydown.enter\", \"keydown.control.enter\", \"keydown.meta.enter\"], [\"fill\", \"clear\", \"size\", \"large\", \"type\", \"submit\", 3, \"disabled\", \"core-suppress-events\", \"onClick\"], [\"name\", \"send\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\", \"flip-rtl\", \"\"]],\n  template: function CoreSendMessageFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", null, 0)(2, \"textarea\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function CoreSendMessageFormComponent_Template_textarea_ngModelChange_2_listener($event) {\n        return ctx.message = $event;\n      })(\"onResize\", function CoreSendMessageFormComponent_Template_textarea_onResize_2_listener() {\n        return ctx.textareaResized();\n      })(\"keyup.enter\", function CoreSendMessageFormComponent_Template_textarea_keyup_enter_2_listener($event) {\n        return ctx.enterKeyUp($event);\n      })(\"keyup.control.enter\", function CoreSendMessageFormComponent_Template_textarea_keyup_control_enter_2_listener($event) {\n        return ctx.enterKeyUp($event, \"control\");\n      })(\"keyup.meta.enter\", function CoreSendMessageFormComponent_Template_textarea_keyup_meta_enter_2_listener($event) {\n        return ctx.enterKeyUp($event, \"meta\");\n      })(\"keydown.enter\", function CoreSendMessageFormComponent_Template_textarea_keydown_enter_2_listener($event) {\n        return ctx.enterKeyDown($event);\n      })(\"keydown.control.enter\", function CoreSendMessageFormComponent_Template_textarea_keydown_control_enter_2_listener($event) {\n        return ctx.enterKeyDown($event, \"control\");\n      })(\"keydown.meta.enter\", function CoreSendMessageFormComponent_Template_textarea_keydown_meta_enter_2_listener($event) {\n        return ctx.enterKeyDown($event, \"meta\");\n      });\n      i0.ɵɵtext(3, \"    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-button\", 2);\n      i0.ɵɵlistener(\"onClick\", function CoreSendMessageFormComponent_Template_ion_button_onClick_4_listener($event) {\n        return ctx.submitForm($event);\n      });\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelement(6, \"ion-icon\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"core-auto-focus\", ctx.showKeyboard)(\"placeholder\", ctx.placeholder)(\"core-auto-rows\", ctx.message)(\"ngModel\", ctx.message);\n      i0.ɵɵattribute(\"aria-label\", ctx.placeholder);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.message || ctx.sendDisabled);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(5, 7, \"core.send\"));\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n  --textarea-background: var(--core-input-background);\\n  --textarea-color: var(--core-input-text);\\n  --textarea-border-width: var(--core-input-border-width);\\n  --textarea-border-color: var(--core-input-stroke);\\n  --textarea-radius: var(--radius-xl);\\n}\\n[_nghost-%COMP%]   form[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  background: var(--ion-item-background);\\n}\\n[_nghost-%COMP%]   .core-send-message-input[_ngcontent-%COMP%] {\\n  -webkit-appearance: none;\\n          appearance: none;\\n  display: block;\\n  width: 100%;\\n  font-family: inherit;\\n  background: var(--textarea-background);\\n  color: var(--textarea-color);\\n  border: var(--textarea-border-width) solid var(--textarea-border-color);\\n  border-radius: var(--textarea-radius);\\n  min-height: var(--a11y-min-target-size);\\n  line-height: 20px;\\n  padding: 10px;\\n  margin: 4px 8px;\\n  resize: vertical;\\n}\\n[_nghost-%COMP%]   .core-send-message-input[_ngcontent-%COMP%]::placeholder {\\n  color: var(--ion-placeholder-color);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2NvbXBvbmVudHMvc2VuZC1tZXNzYWdlLWZvcm0vc2VuZC1tZXNzYWdlLWZvcm0uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1EQUFBO0VBQ0Esd0NBQUE7RUFDQSx1REFBQTtFQUNBLGlEQUFBO0VBQ0EsbUNBQUE7QUFDSjtBQUNJO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0Esc0NBQUE7QUFDUjtBQUVJO0VBQ0ksd0JBQUE7VUFBQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxXQUFBO0VBQ0Esb0JBQUE7RUFFQSxzQ0FBQTtFQUNBLDRCQUFBO0VBQ0EsdUVBQUE7RUFDQSxxQ0FBQTtFQUVBLHVDQUFBO0VBQ0EsaUJBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FBRlI7QUFLSTtFQUNJLG1DQUFBO0FBSFIiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgLS10ZXh0YXJlYS1iYWNrZ3JvdW5kOiB2YXIoLS1jb3JlLWlucHV0LWJhY2tncm91bmQpO1xuICAgIC0tdGV4dGFyZWEtY29sb3I6IHZhcigtLWNvcmUtaW5wdXQtdGV4dCk7XG4gICAgLS10ZXh0YXJlYS1ib3JkZXItd2lkdGg6IHZhcigtLWNvcmUtaW5wdXQtYm9yZGVyLXdpZHRoKTtcbiAgICAtLXRleHRhcmVhLWJvcmRlci1jb2xvcjogdmFyKC0tY29yZS1pbnB1dC1zdHJva2UpO1xuICAgIC0tdGV4dGFyZWEtcmFkaXVzOiB2YXIoLS1yYWRpdXMteGwpO1xuXG4gICAgZm9ybSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWlvbi1pdGVtLWJhY2tncm91bmQpO1xuICAgIH1cblxuICAgIC5jb3JlLXNlbmQtbWVzc2FnZS1pbnB1dCB7XG4gICAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cbiAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tdGV4dGFyZWEtYmFja2dyb3VuZCk7XG4gICAgICAgIGNvbG9yOiB2YXIoLS10ZXh0YXJlYS1jb2xvcik7XG4gICAgICAgIGJvcmRlcjogdmFyKC0tdGV4dGFyZWEtYm9yZGVyLXdpZHRoKSBzb2xpZCB2YXIoLS10ZXh0YXJlYS1ib3JkZXItY29sb3IpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiB2YXIoLS10ZXh0YXJlYS1yYWRpdXMpO1xuXG4gICAgICAgIG1pbi1oZWlnaHQ6IHZhcigtLWExMXktbWluLXRhcmdldC1zaXplKTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgIG1hcmdpbjogNHB4IDhweDtcbiAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgICB9XG5cbiAgICAuY29yZS1zZW5kLW1lc3NhZ2UtaW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgY29sb3I6IHZhcigtLWlvbi1wbGFjZWhvbGRlci1jb2xvcik7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","CoreConfig","CoreEvents","CoreSites","CoreUtils","CoreTextUtils","CoreConstants","CoreForms","CorePlatform","CoreSendMessageFormComponent","constructor","message","placeholder","showKeyboard","sendDisabled","sendOnEnter","onSubmit","onResize","get","SETTINGS_SEND_ON_ENTER","isMobile","then","catch","on","SEND_ON_ENTER_CHANGED","data","getCurrentSiteId","ngOnInit","isTrueOrOne","submitForm","$event","preventDefault","stopPropagation","value","trim","triggerFormSubmittedEvent","formElement","replaceNewLines","emit","textareaResized","enterKeyDown","e","other","enterKeyUp","selectors","viewQuery","CoreSendMessageFormComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","CoreSendMessageFormComponent_Template_textarea_ngModelChange_2_listener","CoreSendMessageFormComponent_Template_textarea_onResize_2_listener","CoreSendMessageFormComponent_Template_textarea_keyup_enter_2_listener","CoreSendMessageFormComponent_Template_textarea_keyup_control_enter_2_listener","CoreSendMessageFormComponent_Template_textarea_keyup_meta_enter_2_listener","CoreSendMessageFormComponent_Template_textarea_keydown_enter_2_listener","CoreSendMessageFormComponent_Template_textarea_keydown_control_enter_2_listener","CoreSendMessageFormComponent_Template_textarea_keydown_meta_enter_2_listener","ɵɵtext","ɵɵelementEnd","CoreSendMessageFormComponent_Template_ion_button_onClick_4_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵattribute","ɵɵpipeBind1"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/send-message-form/send-message-form.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/send-message-form/core-send-message-form.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { CoreConfig } from '@services/config';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreForms } from '@singletons/form';\nimport { CorePlatform } from '@services/platform';\n\n/**\n * Component to display a \"send message form\".\n *\n * @description\n * This component will display a standalone send message form in order to have a better UX.\n *\n * Example usage:\n * <core-send-message-form (onSubmit)=\"sendMessage($event)\" [placeholder]=\"'core.messages.newmessage' | translate\"\n * [show-keyboard]=\"showKeyboard\"></core-send-message-form>\n */\n@Component({\n    selector: 'core-send-message-form',\n    templateUrl: 'core-send-message-form.html',\n    styleUrls: ['send-message-form.scss'],\n})\nexport class CoreSendMessageFormComponent implements OnInit {\n\n    @Input() message = ''; // Input text.\n    @Input() placeholder = ''; // Placeholder for the input area.\n    @Input() showKeyboard = false; // If keyboard is shown or not.\n    @Input() sendDisabled = false; // If send is disabled.\n    @Output() onSubmit: EventEmitter<string>; // Send data when submitting the message form.\n    @Output() onResize: EventEmitter<void>; // Emit when resizing the textarea.\n\n    @ViewChild('messageForm') formElement!: ElementRef;\n\n    protected sendOnEnter = false;\n\n    constructor() {\n\n        this.onSubmit = new EventEmitter();\n        this.onResize = new EventEmitter();\n\n        CoreConfig.get(CoreConstants.SETTINGS_SEND_ON_ENTER, !CorePlatform.isMobile()).then((sendOnEnter) => {\n            this.sendOnEnter = !!sendOnEnter;\n\n            return;\n        }).catch(() => {\n            // Nothing to do.\n        });\n\n        CoreEvents.on(CoreEvents.SEND_ON_ENTER_CHANGED, (data) => {\n            this.sendOnEnter = data.sendOnEnter;\n        }, CoreSites.getCurrentSiteId());\n    }\n\n    ngOnInit(): void {\n        this.showKeyboard = CoreUtils.isTrueOrOne(this.showKeyboard);\n    }\n\n    /**\n     * Form submitted.\n     *\n     * @param $event Mouse event.\n     */\n    submitForm($event: Event): void {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        let value = this.message.trim();\n\n        if (!value) {\n            // Silent error.\n            return;\n        }\n\n        this.message = ''; // Reset the form.\n\n        CoreForms.triggerFormSubmittedEvent(this.formElement, false, CoreSites.getCurrentSiteId());\n\n        value = CoreTextUtils.replaceNewLines(value, '<br>');\n        this.onSubmit.emit(value);\n    }\n\n    /**\n     * Textarea resized.\n     */\n    textareaResized(): void {\n        this.onResize.emit();\n    }\n\n    /**\n     * A11y key functionality that prevents keyDown events.\n     *\n     * @param e Event.\n     */\n    enterKeyDown(e: KeyboardEvent, other?: string): void {\n        if (this.sendDisabled) {\n            return;\n        }\n\n        if (this.sendOnEnter && !other) {\n            // Enter clicked, send the message.\n            e.preventDefault();\n            e.stopPropagation();\n        } else if (!this.sendOnEnter && !CorePlatform.isMobile() && other == 'control') {\n            // Cmd+Enter or Ctrl+Enter, send message.\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    /**\n     * Enter key clicked.\n     *\n     * @param e Event.\n     * @param other The name of the other key that was clicked, undefined if no other key.\n     */\n    enterKeyUp(e: Event, other?: string): void {\n        if (this.sendDisabled) {\n            return;\n        }\n\n        if (this.sendOnEnter && !other) {\n            // Enter clicked, send the message.\n            this.submitForm(e);\n        } else if (!this.sendOnEnter && !CorePlatform.isMobile() && other == 'control') {\n            // Cmd+Enter or Ctrl+Enter, send message.\n            this.submitForm(e);\n        }\n    }\n\n}\n","<form #messageForm>\n    <textarea class=\"core-send-message-input\" [attr.aria-label]=\"placeholder\" [core-auto-focus]=\"showKeyboard\" [placeholder]=\"placeholder\"\n        rows=\"1\" [core-auto-rows]=\"message\" [(ngModel)]=\"message\" name=\"message\" (onResize)=\"textareaResized()\"\n        (keyup.enter)=\"enterKeyUp($event)\" (keyup.control.enter)=\"enterKeyUp($event, 'control')\"\n        (keyup.meta.enter)=\"enterKeyUp($event, 'meta')\" (keydown.enter)=\"enterKeyDown($event)\"\n        (keydown.control.enter)=\"enterKeyDown($event, 'control')\" (keydown.meta.enter)=\"enterKeyDown($event, 'meta')\">\n    </textarea>\n    <ion-button fill=\"clear\" size=\"large\" type=\"submit\" [disabled]=\"!message || sendDisabled\" [attr.aria-label]=\"'core.send' | translate\"\n        [core-suppress-events] (onClick)=\"submitForm($event)\">\n        <ion-icon name=\"send\" slot=\"icon-only\" aria-hidden=\"true\" flip-rtl />\n    </ion-button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}