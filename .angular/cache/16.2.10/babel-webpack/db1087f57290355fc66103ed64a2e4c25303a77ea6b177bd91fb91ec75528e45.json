{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ADDON_COMPETENCY_COMPETENCIES_PAGE, ADDON_COMPETENCY_LEARNING_PLANS_PAGE } from '@addons/competency/competency.module';\nimport { COURSE_PAGE_NAME } from '@features/course/course.module';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonCompetency } from '../competency';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for competencies push notifications clicks.\n */\nexport class AddonCompetencyPushClickHandlerService {\n  constructor() {\n    this.name = 'AddonCompetencyPushClickHandler';\n    this.priority = 200;\n  }\n  /**\n   * @inheritdoc\n   */\n  handles(notification) {\n    return _asyncToGenerator(function* () {\n      if (CoreUtils.isTrueOrOne(notification.notif) && notification.moodlecomponent == 'moodle' && (notification.name == 'competencyplancomment' || notification.name == 'competencyusercompcomment')) {\n        // If all competency features are disabled, don't handle the click.\n        return AddonCompetency.allCompetenciesDisabled(notification.site).then(disabled => !disabled);\n      }\n      return false;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  handleClick(notification) {\n    return _asyncToGenerator(function* () {\n      const contextUrlParams = CoreUrlUtils.extractUrlParams(notification.contexturl);\n      if (notification.name == 'competencyplancomment') {\n        // Open the learning plan.\n        const planId = Number(contextUrlParams.id);\n        yield CoreUtils.ignoreErrors(AddonCompetency.invalidateLearningPlan(planId, notification.site));\n        yield CoreNavigator.navigateToSitePath(`${ADDON_COMPETENCY_LEARNING_PLANS_PAGE}/${planId}`, {\n          siteId: notification.site\n        });\n        return;\n      }\n      if (notification.contexturl && notification.contexturl.indexOf('user_competency_in_plan.php') != -1) {\n        // Open the competency.\n        const courseId = Number(notification.course);\n        const competencyId = Number(contextUrlParams.competencyid);\n        const planId = Number(contextUrlParams.planid);\n        const userId = Number(contextUrlParams.userid);\n        yield CoreUtils.ignoreErrors(AddonCompetency.invalidateCompetencyInPlan(planId, competencyId, notification.site));\n        if (courseId) {\n          yield CoreNavigator.navigateToSitePath(`${COURSE_PAGE_NAME}/${courseId}/${ADDON_COMPETENCY_COMPETENCIES_PAGE}/${competencyId}`, {\n            params: {\n              userId\n            },\n            siteId: notification.site\n          });\n          return;\n        }\n        if (planId) {\n          yield CoreNavigator.navigateToSitePath(`${ADDON_COMPETENCY_LEARNING_PLANS_PAGE}/competencies/${planId}/${competencyId}`, {\n            params: {\n              userId\n            },\n            siteId: notification.site\n          });\n          return;\n        }\n      }\n      // Open the list of plans.\n      const userId = Number(contextUrlParams.userid);\n      yield CoreUtils.ignoreErrors(AddonCompetency.invalidateLearningPlans(userId, notification.site));\n      yield CoreNavigator.navigateToSitePath(ADDON_COMPETENCY_LEARNING_PLANS_PAGE, {\n        params: {\n          userId\n        },\n        siteId: notification.site\n      });\n    })();\n  }\n}\n_class = AddonCompetencyPushClickHandlerService;\n_class.ɵfac = function AddonCompetencyPushClickHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonCompetencyPushClickHandler = makeSingleton(AddonCompetencyPushClickHandlerService);","map":{"version":3,"names":["ADDON_COMPETENCY_COMPETENCIES_PAGE","ADDON_COMPETENCY_LEARNING_PLANS_PAGE","COURSE_PAGE_NAME","CoreNavigator","CoreUrlUtils","CoreUtils","makeSingleton","AddonCompetency","AddonCompetencyPushClickHandlerService","constructor","name","priority","handles","notification","_asyncToGenerator","isTrueOrOne","notif","moodlecomponent","allCompetenciesDisabled","site","then","disabled","handleClick","contextUrlParams","extractUrlParams","contexturl","planId","Number","id","ignoreErrors","invalidateLearningPlan","navigateToSitePath","siteId","indexOf","courseId","course","competencyId","competencyid","planid","userId","userid","invalidateCompetencyInPlan","params","invalidateLearningPlans","factory","ɵfac","providedIn","AddonCompetencyPushClickHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/services/handlers/push-click.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ADDON_COMPETENCY_COMPETENCIES_PAGE, ADDON_COMPETENCY_LEARNING_PLANS_PAGE } from '@addons/competency/competency.module';\nimport { Injectable } from '@angular/core';\nimport { COURSE_PAGE_NAME } from '@features/course/course.module';\nimport { CorePushNotificationsClickHandler } from '@features/pushnotifications/services/push-delegate';\nimport { CorePushNotificationsNotificationBasicData } from '@features/pushnotifications/services/pushnotifications';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonCompetency } from '../competency';\n\n/**\n * Handler for competencies push notifications clicks.\n */\n@Injectable( { providedIn: 'root' })\nexport class AddonCompetencyPushClickHandlerService implements CorePushNotificationsClickHandler {\n\n    name = 'AddonCompetencyPushClickHandler';\n    priority = 200;\n\n    /**\n     * @inheritdoc\n     */\n    async handles(notification: AddonCompetencyPushNotificationData): Promise<boolean> {\n        if (CoreUtils.isTrueOrOne(notification.notif) && notification.moodlecomponent == 'moodle' &&\n                (notification.name == 'competencyplancomment' || notification.name == 'competencyusercompcomment')) {\n            // If all competency features are disabled, don't handle the click.\n            return AddonCompetency.allCompetenciesDisabled(notification.site).then((disabled) => !disabled);\n        }\n\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async handleClick(notification: AddonCompetencyPushNotificationData): Promise<void> {\n        const contextUrlParams = CoreUrlUtils.extractUrlParams(notification.contexturl);\n\n        if (notification.name == 'competencyplancomment') {\n            // Open the learning plan.\n            const planId = Number(contextUrlParams.id);\n\n            await CoreUtils.ignoreErrors(AddonCompetency.invalidateLearningPlan(planId, notification.site));\n\n            await CoreNavigator.navigateToSitePath(`${ADDON_COMPETENCY_LEARNING_PLANS_PAGE}/${planId}`, {\n                siteId: notification.site,\n            });\n\n            return;\n        }\n\n        if (notification.contexturl && notification.contexturl.indexOf('user_competency_in_plan.php') != -1) {\n            // Open the competency.\n            const courseId = Number(notification.course);\n            const competencyId = Number(contextUrlParams.competencyid);\n            const planId = Number(contextUrlParams.planid);\n            const userId = Number(contextUrlParams.userid);\n\n            await CoreUtils.ignoreErrors(AddonCompetency.invalidateCompetencyInPlan(planId, competencyId, notification.site));\n\n            if (courseId) {\n                await CoreNavigator.navigateToSitePath(\n                    `${COURSE_PAGE_NAME}/${courseId}/${ADDON_COMPETENCY_COMPETENCIES_PAGE}/${competencyId}`,\n                    {\n                        params: { userId },\n                        siteId: notification.site,\n                    },\n                );\n\n                return;\n            }\n\n            if (planId) {\n                await CoreNavigator.navigateToSitePath(\n                    `${ADDON_COMPETENCY_LEARNING_PLANS_PAGE}/competencies/${planId}/${competencyId}`,\n                    {\n                        params: { userId },\n                        siteId: notification.site,\n                    },\n                );\n\n                return;\n            }\n        }\n\n        // Open the list of plans.\n        const userId = Number(contextUrlParams.userid);\n\n        await CoreUtils.ignoreErrors(AddonCompetency.invalidateLearningPlans(userId, notification.site));\n\n        await CoreNavigator.navigateToSitePath(ADDON_COMPETENCY_LEARNING_PLANS_PAGE, {\n            params: { userId },\n            siteId: notification.site,\n        });\n    }\n\n}\nexport const AddonCompetencyPushClickHandler = makeSingleton(AddonCompetencyPushClickHandlerService);\n\ntype AddonCompetencyPushNotificationData = CorePushNotificationsNotificationBasicData & {\n    contexturl: string;\n    course: number;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}