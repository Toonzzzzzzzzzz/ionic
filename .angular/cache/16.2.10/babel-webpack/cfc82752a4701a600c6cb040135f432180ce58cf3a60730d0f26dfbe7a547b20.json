{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Base handler for blocks.\n *\n * This class is needed because parent classes cannot have @Injectable in Angular v6, so the default handler cannot be a\n * parent class.\n */\nexport class CoreBlockBaseHandler {\n  constructor() {\n    this.name = 'CoreBlockBase';\n    this.blockName = 'base';\n  }\n  /**\n   * Whether or not the handler is enabled on a site level.\n   *\n   * @returns True or promise resolved with true if enabled.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * Returns the data needed to render the block.\n   *\n   * @param block The block to render.\n   * @param contextLevel The context where the block will be used.\n   * @param instanceId The instance ID associated with the context level.\n   * @returns Data or promise resolved with the data.\n   */\n  getDisplayData(block,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  contextLevel,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  instanceId) {\n    // To be overridden.\n    return undefined;\n  }\n}","map":{"version":3,"names":["CoreBlockBaseHandler","constructor","name","blockName","isEnabled","_asyncToGenerator","getDisplayData","block","contextLevel","instanceId","undefined"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/block/classes/base-block-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreCourseBlock } from '@features/course/services/course';\nimport { CoreBlockHandler, CoreBlockHandlerData } from '../services/block-delegate';\n\n/**\n * Base handler for blocks.\n *\n * This class is needed because parent classes cannot have @Injectable in Angular v6, so the default handler cannot be a\n * parent class.\n */\nexport class CoreBlockBaseHandler implements CoreBlockHandler {\n\n    name = 'CoreBlockBase';\n    blockName = 'base';\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @returns True or promise resolved with true if enabled.\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Returns the data needed to render the block.\n     *\n     * @param block The block to render.\n     * @param contextLevel The context where the block will be used.\n     * @param instanceId The instance ID associated with the context level.\n     * @returns Data or promise resolved with the data.\n     */\n    getDisplayData(\n        block: CoreCourseBlock, // eslint-disable-line @typescript-eslint/no-unused-vars\n        contextLevel: string, // eslint-disable-line @typescript-eslint/no-unused-vars\n        instanceId: number, // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): undefined | CoreBlockHandlerData | Promise<CoreBlockHandlerData> {\n        // To be overridden.\n        return undefined;\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;;AAMA,OAAM,MAAOA,oBAAoB;EAAjCC,YAAA;IAEI,KAAAC,IAAI,GAAG,eAAe;IACtB,KAAAC,SAAS,GAAG,MAAM;EA4BtB;EA1BI;;;;;EAKMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;;;;;;EAQAC,cAAcA,CACVC,KAAsB;EAAE;EACxBC,YAAoB;EAAE;EACtBC,UAAkB;IAElB;IACA,OAAOC,SAAS;EACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}