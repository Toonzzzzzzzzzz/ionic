{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreConstants } from '@/core/constants';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreSwipeSlidesItemsManager } from '@classes/items-management/swipe-slides-items-manager';\nimport { CoreSwipeSlidesItemsManagerSource } from '@classes/items-management/swipe-slides-items-manager-source';\nimport { CoreSwipeSlidesComponent } from '@components/swipe-slides/swipe-slides';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModulePrefetchDelegate } from '@features/course/services/module-prefetch-delegate';\nimport { CoreTag } from '@features/tag/services/tag';\nimport { CoreNetwork } from '@services/network';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { AddonModBookTocComponent } from '../../components/toc/toc';\nimport { AddonModBook, AddonModBookNavStyle, AddonModBookProvider } from '../../services/book';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { IonicSlides } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/loading/loading\";\nimport * as i3 from \"../../../../../core/components/navigation-bar/navigation-bar\";\nimport * as i4 from \"../../../../../core/components/swipe-slides/swipe-slides\";\nimport * as i5 from \"../../../../../core/directives/fa-icon\";\nimport * as i6 from \"../../../../../core/directives/format-text\";\nimport * as i7 from \"../../../../../core/directives/collapsible-footer\";\nimport * as i8 from \"../../../../../core/directives/content\";\nimport * as i9 from \"../../../../../core/directives/update-non-reactive-attributes\";\nimport * as i10 from \"@ionic/angular\";\nimport * as i11 from \"../../../../../core/features/tag/components/list/list\";\nimport * as i12 from \"@ngx-translate/core\";\nfunction AddonModBookContentsPage_ion_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 12);\n    i0.ɵɵlistener(\"click\", function AddonModBookContentsPage_ion_button_9_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showToc());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"addon.mod_book.toc\"));\n  }\n}\nfunction AddonModBookContentsPage_ion_card_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 14)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 15);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵelement(4, \"span\", 16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.warning, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AddonModBookContentsPage_ng_template_18_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"core-tag-list\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chapter_r6 = i0.ɵɵnextContext().item;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(3, 2, \"core.tag.tags\"), \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"tags\", chapter_r6.tags);\n  }\n}\nfunction AddonModBookContentsPage_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"core-format-text\", 18);\n    i0.ɵɵtemplate(2, AddonModBookContentsPage_ng_template_18_div_2_Template, 5, 4, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chapter_r6 = ctx.item;\n    const active_r7 = ctx.active;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"component\", ctx_r2.component)(\"componentId\", ctx_r2.cmId)(\"text\", chapter_r6.content)(\"contextInstanceId\", ctx_r2.cmId)(\"courseId\", ctx_r2.courseId)(\"disabled\", !active_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (chapter_r6.tags == null ? null : chapter_r6.tags.length) > 0);\n  }\n}\nfunction AddonModBookContentsPage_core_navigation_bar_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-navigation-bar\", 22);\n    i0.ɵɵlistener(\"action\", function AddonModBookContentsPage_core_navigation_bar_19_Template_core_navigation_bar_action_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.changeChapter($event.id));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"items\", ctx_r3.navigationItems);\n  }\n}\n/**\n * Page that displays a book contents.\n */\nexport class AddonModBookContentsPage {\n  constructor() {\n    this.title = '';\n    this.component = AddonModBookProvider.COMPONENT;\n    this.warning = '';\n    this.displayNavBar = true;\n    this.navigationItems = [];\n    this.swiperOpts = {\n      modules: [IonicSlides],\n      autoHeight: true,\n      observer: true,\n      observeParents: true,\n      scrollOnChange: 'top'\n    };\n    this.loaded = false;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    try {\n      this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n      this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n      this.initialChapterId = CoreNavigator.getRouteNumberParam('chapterId');\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n      return;\n    }\n    const source = new AddonModBookSlidesItemsManagerSource(this.courseId, this.cmId, CoreTag.areTagsAvailableInSite(), this.initialChapterId);\n    this.manager = new CoreSwipeSlidesItemsManager(source);\n    this.managerUnsubscribe = this.manager.addListener({\n      onSelectedItemUpdated: item => {\n        this.onChapterViewed(item.id);\n      }\n    });\n    this.fetchContent();\n  }\n  get module() {\n    var _this$manager;\n    return (_this$manager = this.manager) === null || _this$manager === void 0 ? void 0 : _this$manager.getSource().module;\n  }\n  get book() {\n    var _this$manager2;\n    return (_this$manager2 = this.manager) === null || _this$manager2 === void 0 ? void 0 : _this$manager2.getSource().book;\n  }\n  get chapters() {\n    var _this$manager3;\n    return ((_this$manager3 = this.manager) === null || _this$manager3 === void 0 ? void 0 : _this$manager3.getSource().chapters) || [];\n  }\n  /**\n   * Download book contents and load the current chapter.\n   *\n   * @param refresh Whether we're refreshing data.\n   * @returns Promise resolved when done.\n   */\n  fetchContent(refresh = false) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var _this$manager4;\n        const source = (_this$manager4 = _this.manager) === null || _this$manager4 === void 0 ? void 0 : _this$manager4.getSource();\n        if (!source) {\n          return;\n        }\n        const {\n          module,\n          book\n        } = yield source.loadBookData();\n        const downloadResult = yield _this.downloadResourceIfNeeded(module, refresh);\n        _this.displayNavBar = book.navstyle != 0 /* AddonModBookNavStyle.TOC_ONLY */;\n        _this.title = book.name;\n        // Get contents. No need to refresh, it has been done in downloadResourceIfNeeded.\n        yield source.loadContents();\n        yield source.load();\n        if (downloadResult !== null && downloadResult !== void 0 && downloadResult.failed) {\n          const error = CoreTextUtils.getErrorMessageFromError(downloadResult.error) || downloadResult.error;\n          _this.warning = Translate.instant('core.errordownloadingsomefiles') + (error ? ' ' + error : '');\n        } else {\n          _this.warning = '';\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n      } finally {\n        _this.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Download a resource if needed.\n   * If the download call fails the promise won't be rejected, but the error will be included in the returned object.\n   * If module.contents cannot be loaded then the Promise will be rejected.\n   *\n   * @param module Module to download.\n   * @param refresh Whether we're refreshing data.\n   * @returns Promise resolved when done.\n   */\n  downloadResourceIfNeeded(module, refresh = false) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _module$contents;\n      const result = {\n        failed: false\n      };\n      let contentsAlreadyLoaded = false;\n      // Get module status to determine if it needs to be downloaded.\n      const status = yield CoreCourseModulePrefetchDelegate.getModuleStatus(module, _this2.courseId, undefined, refresh);\n      if (status !== CoreConstants.DOWNLOADED) {\n        // Download content. This function also loads module contents if needed.\n        try {\n          yield CoreCourseModulePrefetchDelegate.downloadModule(module, _this2.courseId);\n          // If we reach here it means the download process already loaded the contents, no need to do it again.\n          contentsAlreadyLoaded = true;\n        } catch (error) {\n          // Mark download as failed but go on since the main files could have been downloaded.\n          result.failed = true;\n          result.error = error;\n        }\n      }\n      if (!((_module$contents = module.contents) !== null && _module$contents !== void 0 && _module$contents.length) || refresh && !contentsAlreadyLoaded) {\n        // Try to load the contents.\n        const ignoreCache = refresh && CoreNetwork.isOnline();\n        try {\n          yield CoreCourse.loadModuleContents(module, undefined, undefined, false, ignoreCache);\n        } catch (error) {\n          // Error loading contents. If we ignored cache, try to get the cached value.\n          if (ignoreCache && !module.contents) {\n            yield CoreCourse.loadModuleContents(module);\n          } else if (!module.contents) {\n            // Not able to load contents, throw the error.\n            throw error;\n          }\n        }\n      }\n      return result;\n    })();\n  }\n  /**\n   * Change the current chapter.\n   *\n   * @param chapterId Chapter to load.\n   */\n  changeChapter(chapterId) {\n    var _this$swipeSlidesComp;\n    if (!chapterId) {\n      return;\n    }\n    (_this$swipeSlidesComp = this.swipeSlidesComponent) === null || _this$swipeSlidesComp === void 0 || _this$swipeSlidesComp.slideToItem({\n      id: chapterId\n    });\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   * @returns Promise resolved when done.\n   */\n  doRefresh(refresher) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.manager) {\n        yield CoreUtils.ignoreErrors(Promise.all([_this3.manager.getSource().invalidateContent(), CoreCourseModulePrefetchDelegate.invalidateCourseUpdates(_this3.courseId) // To detect if book was updated.\n        ]));\n      }\n\n      yield CoreUtils.ignoreErrors(_this3.fetchContent(true));\n      refresher === null || refresher === void 0 || refresher.complete();\n    })();\n  }\n  /**\n   * Show the TOC.\n   */\n  showToc() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _this4$manager;\n      // Create the toc modal.\n      const visibleChapter = (_this4$manager = _this4.manager) === null || _this4$manager === void 0 ? void 0 : _this4$manager.getSelectedItem();\n      const modalData = yield CoreDomUtils.openSideModal({\n        component: AddonModBookTocComponent,\n        componentProps: {\n          moduleId: _this4.cmId,\n          chapters: _this4.chapters,\n          selected: visibleChapter === null || visibleChapter === void 0 ? void 0 : visibleChapter.id,\n          courseId: _this4.courseId,\n          book: _this4.book\n        }\n      });\n      if (modalData) {\n        _this4.changeChapter(modalData);\n      }\n    })();\n  }\n  /**\n   * Update data related to chapter being viewed.\n   *\n   * @param chapterId Chapter viewed.\n   * @returns Promise resolved when done.\n   */\n  onChapterViewed(chapterId) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (_this5.displayNavBar) {\n        _this5.navigationItems = _this5.getNavigationItems(chapterId);\n      }\n      if (_this5.book) {\n        AddonModBook.storeLastChapterViewed(_this5.book.id, chapterId, _this5.courseId);\n      }\n      if (!_this5.module) {\n        return;\n      }\n      // Chapter loaded, log view.\n      yield CoreUtils.ignoreErrors(AddonModBook.logView(_this5.module.instance, chapterId));\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'mod_book_view_book',\n        name: _this5.module.name,\n        data: {\n          id: _this5.module.instance,\n          category: 'book',\n          chapterid: chapterId\n        },\n        url: CoreUrlUtils.addParamsToUrl(`/mod/book/view.php?id=${_this5.module.id}`, {\n          chapterid: chapterId\n        })\n      });\n      const currentChapterIndex = _this5.chapters.findIndex(chapter => chapter.id == chapterId);\n      const isLastChapter = currentChapterIndex < 0 || _this5.chapters[currentChapterIndex + 1] === undefined;\n      // Module is completed when last chapter is viewed, so we only check completion if the last is reached.\n      if (isLastChapter) {\n        CoreCourse.checkModuleCompletion(_this5.courseId, _this5.module.completiondata);\n      }\n    })();\n  }\n  /**\n   * Converts chapters to navigation items.\n   *\n   * @param chapterId Current chapter Id.\n   * @returns Navigation items.\n   */\n  getNavigationItems(chapterId) {\n    return this.chapters.map(chapter => ({\n      item: chapter,\n      title: chapter.title,\n      current: chapter.id == chapterId,\n      enabled: true\n    }));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$manager5, _this$managerUnsubscr;\n    (_this$manager5 = this.manager) === null || _this$manager5 === void 0 || _this$manager5.destroy();\n    (_this$managerUnsubscr = this.managerUnsubscribe) === null || _this$managerUnsubscr === void 0 || _this$managerUnsubscr.call(this);\n    delete this.manager;\n  }\n}\n/**\n * Helper to manage swiping within a collection of chapters.\n */\n_class = AddonModBookContentsPage;\n_class.ɵfac = function AddonModBookContentsPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-book-contents\"]],\n  viewQuery: function AddonModBookContentsPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreSwipeSlidesComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.swipeSlidesComponent = _t.first);\n    }\n  },\n  decls: 20,\n  vars: 16,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [\"slot\", \"end\"], [\"aria-haspopup\", \"true\", 3, \"click\", 4, \"ngIf\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [1, \"safe-area-padding-horizontal\", \"core-swipe-slides-container\"], [\"class\", \"core-warning-card\", 4, \"ngIf\"], [3, \"manager\", \"options\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"previousTranslate\", \"addon.mod_book.navprevtitle\", \"nextTranslate\", \"addon.mod_book.navnexttitle\", \"slot\", \"fixed\", 3, \"items\", \"action\", 4, \"ngIf\"], [\"aria-haspopup\", \"true\", 3, \"click\"], [\"name\", \"fas-bookmark\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [1, \"core-warning-card\"], [\"name\", \"fas-triangle-exclamation\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [3, \"innerHTML\"], [1, \"ion-padding\"], [\"contextLevel\", \"module\", 3, \"component\", \"componentId\", \"text\", \"contextInstanceId\", \"courseId\", \"disabled\"], [\"class\", \"ion-margin-top\", 4, \"ngIf\"], [1, \"ion-margin-top\"], [3, \"tags\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"previousTranslate\", \"addon.mod_book.navprevtitle\", \"nextTranslate\", \"addon.mod_book.navnexttitle\", \"slot\", \"fixed\", 3, \"items\", \"action\"]],\n  template: function AddonModBookContentsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵelement(7, \"core-format-text\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"ion-buttons\", 3);\n      i0.ɵɵtemplate(9, AddonModBookContentsPage_ion_button_9_Template, 3, 3, \"ion-button\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"ion-content\")(11, \"ion-refresher\", 5);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModBookContentsPage_Template_ion_refresher_ionRefresh_11_listener($event) {\n        return ctx.doRefresh($event.target);\n      });\n      i0.ɵɵelement(12, \"ion-refresher-content\", 6);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"core-loading\", 7)(15, \"div\", 8);\n      i0.ɵɵtemplate(16, AddonModBookContentsPage_ion_card_16_Template, 5, 1, \"ion-card\", 9);\n      i0.ɵɵelementStart(17, \"core-swipe-slides\", 10);\n      i0.ɵɵtemplate(18, AddonModBookContentsPage_ng_template_18_Template, 3, 7, \"ng-template\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(19, AddonModBookContentsPage_core_navigation_bar_19_Template, 1, 1, \"core-navigation-bar\", 11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 12, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"text\", ctx.title)(\"contextInstanceId\", ctx.cmId)(\"courseId\", ctx.courseId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(13, 14, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.warning);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"manager\", ctx.manager)(\"options\", ctx.swiperOpts);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded && ctx.displayNavBar && ctx.navigationItems.length > 1);\n    }\n  },\n  dependencies: [i1.NgIf, i2.CoreLoadingComponent, i3.CoreNavigationBarComponent, i4.CoreSwipeSlidesComponent, i5.CoreFaIconDirective, i6.CoreFormatTextDirective, i7.CoreCollapsibleFooterDirective, i8.CoreContentDirective, i9.CoreUpdateNonReactiveAttributesDirective, i10.IonButton, i10.IonButtons, i10.IonCard, i10.IonContent, i10.IonHeader, i10.IonIcon, i10.IonItem, i10.IonLabel, i10.IonRefresher, i10.IonRefresherContent, i10.IonTitle, i10.IonToolbar, i10.IonBackButton, i11.CoreTagListComponent, i12.TranslatePipe],\n  styles: [\"[_nghost-%COMP%]   .core-swipe-slides-container[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%] {\\n  flex: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvbW9kL2Jvb2svcGFnZXMvY29udGVudHMvY29udGVudHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFUTtFQUNJLFVBQUE7QUFEWiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICAuY29yZS1zd2lwZS1zbGlkZXMtY29udGFpbmVyIHtcbiAgICAgICAgaW9uLWNhcmQge1xuICAgICAgICAgICAgZmxleDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nclass AddonModBookSlidesItemsManagerSource extends CoreSwipeSlidesItemsManagerSource {\n  constructor(courseId, cmId, tagsEnabled, initialChapterId) {\n    super(initialChapterId ? {\n      id: initialChapterId\n    } : undefined);\n    this.chapters = [];\n    this.contentsMap = {};\n    this.COURSE_ID = courseId;\n    this.CM_ID = cmId;\n    this.TAGS_ENABLED = tagsEnabled;\n  }\n  /**\n   * @inheritdoc\n   */\n  getItemId(item) {\n    return item.id;\n  }\n  /**\n   * Load book data from WS.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadBookData() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      _this6.module = yield CoreCourse.getModule(_this6.CM_ID, _this6.COURSE_ID);\n      _this6.book = yield AddonModBook.getBook(_this6.COURSE_ID, _this6.CM_ID);\n      if (!_this6.initialItem) {\n        // No chapter ID specified. Calculate last viewed.\n        const lastViewed = yield AddonModBook.getLastChapterViewed(_this6.book.id);\n        if (lastViewed) {\n          _this6.initialItem = {\n            id: lastViewed\n          };\n        }\n      }\n      return {\n        module: _this6.module,\n        book: _this6.book\n      };\n    })();\n  }\n  /**\n   * Load module contents.\n   */\n  loadContents() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this7.module) {\n        return;\n      }\n      const contents = yield CoreCourse.getModuleContents(_this7.module, _this7.COURSE_ID);\n      _this7.contentsMap = AddonModBook.getContentsMap(contents);\n      _this7.chapters = AddonModBook.getTocList(contents);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  loadItems() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const newChapters = yield Promise.all(_this8.chapters.map( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (chapter) {\n            const content = yield AddonModBook.getChapterContent(_this8.contentsMap, chapter.id, _this8.CM_ID);\n            return {\n              id: chapter.id,\n              content,\n              tags: _this8.TAGS_ENABLED ? _this8.contentsMap[chapter.id].tags : []\n            };\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()));\n        return newChapters;\n      } catch (error) {\n        if (!CoreTextUtils.getErrorMessageFromError(error)) {\n          throw new CoreError(Translate.instant('addon.mod_book.errorchapter'));\n        }\n        throw error;\n      }\n    })();\n  }\n  /**\n   * Perform the invalidate content function.\n   *\n   * @returns Resolved when done.\n   */\n  invalidateContent() {\n    return AddonModBook.invalidateContent(this.CM_ID, this.COURSE_ID);\n  }\n}","map":{"version":3,"names":["CoreConstants","CoreError","CoreSwipeSlidesItemsManager","CoreSwipeSlidesItemsManagerSource","CoreSwipeSlidesComponent","CoreCourse","CoreCourseModulePrefetchDelegate","CoreTag","CoreNetwork","CoreNavigator","CoreDomUtils","CoreTextUtils","CoreUtils","Translate","AddonModBookTocComponent","AddonModBook","AddonModBookNavStyle","AddonModBookProvider","CoreAnalytics","CoreAnalyticsEventType","CoreUrlUtils","IonicSlides","i0","ɵɵelementStart","ɵɵlistener","AddonModBookContentsPage_ion_button_9_Template_ion_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","showToc","ɵɵelement","ɵɵelementEnd","ɵɵattribute","ɵɵpipeBind1","ɵɵadvance","ɵɵproperty","ctx_r1","warning","ɵɵsanitizeHtml","ɵɵtext","ɵɵtextInterpolate1","chapter_r6","tags","ɵɵtemplate","AddonModBookContentsPage_ng_template_18_div_2_Template","ctx_r2","component","cmId","content","courseId","active_r7","length","AddonModBookContentsPage_core_navigation_bar_19_Template_core_navigation_bar_action_0_listener","$event","_r11","ctx_r10","changeChapter","id","ctx_r3","navigationItems","AddonModBookContentsPage","constructor","title","COMPONENT","displayNavBar","swiperOpts","modules","autoHeight","observer","observeParents","scrollOnChange","loaded","ngOnInit","getRequiredRouteNumberParam","initialChapterId","getRouteNumberParam","error","showErrorModal","back","source","AddonModBookSlidesItemsManagerSource","areTagsAvailableInSite","manager","managerUnsubscribe","addListener","onSelectedItemUpdated","item","onChapterViewed","fetchContent","module","_this$manager","getSource","book","_this$manager2","chapters","_this$manager3","refresh","_this","_asyncToGenerator","_this$manager4","loadBookData","downloadResult","downloadResourceIfNeeded","navstyle","name","loadContents","load","failed","getErrorMessageFromError","instant","showErrorModalDefault","_this2","_module$contents","result","contentsAlreadyLoaded","status","getModuleStatus","undefined","DOWNLOADED","downloadModule","contents","ignoreCache","isOnline","loadModuleContents","chapterId","_this$swipeSlidesComp","swipeSlidesComponent","slideToItem","doRefresh","refresher","_this3","ignoreErrors","Promise","all","invalidateContent","invalidateCourseUpdates","complete","_this4","_this4$manager","visibleChapter","getSelectedItem","modalData","openSideModal","componentProps","moduleId","selected","_this5","getNavigationItems","storeLastChapterViewed","logView","instance","logEvent","type","VIEW_ITEM","ws","data","category","chapterid","url","addParamsToUrl","currentChapterIndex","findIndex","chapter","isLastChapter","checkModuleCompletion","completiondata","map","current","enabled","ngOnDestroy","_this$manager5","_this$managerUnsubscr","destroy","call","_class","selectors","viewQuery","AddonModBookContentsPage_Query","rf","ctx","AddonModBookContentsPage_ion_button_9_Template","AddonModBookContentsPage_Template_ion_refresher_ionRefresh_11_listener","target","AddonModBookContentsPage_ion_card_16_Template","AddonModBookContentsPage_ng_template_18_Template","AddonModBookContentsPage_core_navigation_bar_19_Template","ɵɵpropertyInterpolate","tagsEnabled","contentsMap","COURSE_ID","CM_ID","TAGS_ENABLED","getItemId","_this6","getModule","getBook","initialItem","lastViewed","getLastChapterViewed","_this7","getModuleContents","getContentsMap","getTocList","loadItems","_this8","newChapters","_ref","getChapterContent","_x","apply","arguments"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/book/pages/contents/contents.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/book/pages/contents/contents.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreConstants } from '@/core/constants';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreSwipeSlidesItemsManager } from '@classes/items-management/swipe-slides-items-manager';\nimport { CoreSwipeSlidesItemsManagerSource } from '@classes/items-management/swipe-slides-items-manager-source';\nimport { CoreNavigationBarItem } from '@components/navigation-bar/navigation-bar';\nimport { CoreSwipeSlidesComponent, CoreSwipeSlidesOptions } from '@components/swipe-slides/swipe-slides';\nimport { CoreCourseResourceDownloadResult } from '@features/course/classes/main-resource-component';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModuleData } from '@features/course/services/course-helper';\nimport { CoreCourseModulePrefetchDelegate } from '@features/course/services/module-prefetch-delegate';\nimport { CoreTag, CoreTagItem } from '@features/tag/services/tag';\nimport { CoreNetwork } from '@services/network';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { AddonModBookTocComponent } from '../../components/toc/toc';\nimport {\n    AddonModBook,\n    AddonModBookBookWSData,\n    AddonModBookContentsMap,\n    AddonModBookNavStyle,\n    AddonModBookProvider,\n    AddonModBookTocChapter,\n} from '../../services/book';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { IonicSlides } from '@ionic/angular';\n\n/**\n * Page that displays a book contents.\n */\n@Component({\n    selector: 'page-addon-mod-book-contents',\n    templateUrl: 'contents.html',\n    styleUrls: ['contents.scss'],\n})\nexport class AddonModBookContentsPage implements OnInit, OnDestroy {\n\n    @ViewChild(CoreSwipeSlidesComponent) swipeSlidesComponent?: CoreSwipeSlidesComponent;\n\n    title = '';\n    cmId!: number;\n    courseId!: number;\n    initialChapterId?: number;\n    component = AddonModBookProvider.COMPONENT;\n    manager?: CoreSwipeSlidesItemsManager<LoadedChapter, AddonModBookSlidesItemsManagerSource>;\n    warning = '';\n    displayNavBar = true;\n    navigationItems: CoreNavigationBarItem<AddonModBookTocChapter>[] = [];\n    swiperOpts: CoreSwipeSlidesOptions = {\n        modules: [IonicSlides],\n        autoHeight: true,\n        observer: true,\n        observeParents: true,\n        scrollOnChange: 'top',\n    };\n\n    loaded = false;\n\n    protected managerUnsubscribe?: () => void;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.initialChapterId = CoreNavigator.getRouteNumberParam('chapterId');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        const source = new AddonModBookSlidesItemsManagerSource(\n            this.courseId,\n            this.cmId,\n            CoreTag.areTagsAvailableInSite(),\n            this.initialChapterId,\n        );\n        this.manager = new CoreSwipeSlidesItemsManager(source);\n        this.managerUnsubscribe = this.manager.addListener({\n            onSelectedItemUpdated: (item) => {\n                this.onChapterViewed(item.id);\n            },\n        });\n\n        this.fetchContent();\n    }\n\n    get module(): CoreCourseModuleData | undefined {\n        return this.manager?.getSource().module;\n    }\n\n    get book(): AddonModBookBookWSData | undefined {\n        return this.manager?.getSource().book;\n    }\n\n    get chapters(): AddonModBookTocChapter[] {\n        return this.manager?.getSource().chapters || [];\n    }\n\n    /**\n     * Download book contents and load the current chapter.\n     *\n     * @param refresh Whether we're refreshing data.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchContent(refresh = false): Promise<void> {\n        try {\n            const source = this.manager?.getSource();\n            if (!source) {\n                return;\n            }\n\n            const { module, book } = await source.loadBookData();\n\n            const downloadResult = await this.downloadResourceIfNeeded(module, refresh);\n\n            this.displayNavBar = book.navstyle != AddonModBookNavStyle.TOC_ONLY;\n            this.title = book.name;\n\n            // Get contents. No need to refresh, it has been done in downloadResourceIfNeeded.\n            await source.loadContents();\n\n            await source.load();\n\n            if (downloadResult?.failed) {\n                const error = CoreTextUtils.getErrorMessageFromError(downloadResult.error) || downloadResult.error;\n                this.warning = Translate.instant('core.errordownloadingsomefiles') + (error ? ' ' + error : '');\n            } else {\n                this.warning = '';\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Download a resource if needed.\n     * If the download call fails the promise won't be rejected, but the error will be included in the returned object.\n     * If module.contents cannot be loaded then the Promise will be rejected.\n     *\n     * @param module Module to download.\n     * @param refresh Whether we're refreshing data.\n     * @returns Promise resolved when done.\n     */\n    protected async downloadResourceIfNeeded(\n        module: CoreCourseModuleData,\n        refresh = false,\n    ): Promise<CoreCourseResourceDownloadResult> {\n\n        const result: CoreCourseResourceDownloadResult = {\n            failed: false,\n        };\n        let contentsAlreadyLoaded = false;\n\n        // Get module status to determine if it needs to be downloaded.\n        const status = await CoreCourseModulePrefetchDelegate.getModuleStatus(module, this.courseId, undefined, refresh);\n\n        if (status !== CoreConstants.DOWNLOADED) {\n            // Download content. This function also loads module contents if needed.\n            try {\n                await CoreCourseModulePrefetchDelegate.downloadModule(module, this.courseId);\n\n                // If we reach here it means the download process already loaded the contents, no need to do it again.\n                contentsAlreadyLoaded = true;\n            } catch (error) {\n                // Mark download as failed but go on since the main files could have been downloaded.\n                result.failed = true;\n                result.error = error;\n            }\n        }\n\n        if (!module.contents?.length || (refresh && !contentsAlreadyLoaded)) {\n            // Try to load the contents.\n            const ignoreCache = refresh && CoreNetwork.isOnline();\n\n            try {\n                await CoreCourse.loadModuleContents(module, undefined, undefined, false, ignoreCache);\n            } catch (error) {\n                // Error loading contents. If we ignored cache, try to get the cached value.\n                if (ignoreCache && !module.contents) {\n                    await CoreCourse.loadModuleContents(module);\n                } else if (!module.contents) {\n                    // Not able to load contents, throw the error.\n                    throw error;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Change the current chapter.\n     *\n     * @param chapterId Chapter to load.\n     */\n    changeChapter(chapterId: number): void {\n        if (!chapterId) {\n            return;\n        }\n\n        this.swipeSlidesComponent?.slideToItem({ id: chapterId });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: HTMLIonRefresherElement): Promise<void> {\n        if (this.manager) {\n            await CoreUtils.ignoreErrors(Promise.all([\n                this.manager.getSource().invalidateContent(),\n                CoreCourseModulePrefetchDelegate.invalidateCourseUpdates(this.courseId), // To detect if book was updated.\n            ]));\n        }\n\n        await CoreUtils.ignoreErrors(this.fetchContent(true));\n\n        refresher?.complete();\n    }\n\n    /**\n     * Show the TOC.\n     */\n    async showToc(): Promise<void> {\n        // Create the toc modal.\n        const visibleChapter = this.manager?.getSelectedItem();\n\n        const modalData = await CoreDomUtils.openSideModal<number>({\n            component: AddonModBookTocComponent,\n            componentProps: {\n                moduleId: this.cmId,\n                chapters: this.chapters,\n                selected: visibleChapter?.id,\n                courseId: this.courseId,\n                book: this.book,\n            },\n        });\n\n        if (modalData) {\n            this.changeChapter(modalData);\n        }\n    }\n\n    /**\n     * Update data related to chapter being viewed.\n     *\n     * @param chapterId Chapter viewed.\n     * @returns Promise resolved when done.\n     */\n    protected async onChapterViewed(chapterId: number): Promise<void> {\n        if (this.displayNavBar) {\n            this.navigationItems = this.getNavigationItems(chapterId);\n        }\n\n        if (this.book) {\n            AddonModBook.storeLastChapterViewed(this.book.id, chapterId, this.courseId);\n        }\n\n        if (!this.module) {\n            return;\n        }\n\n        // Chapter loaded, log view.\n        await CoreUtils.ignoreErrors(AddonModBook.logView(this.module.instance, chapterId));\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_book_view_book',\n            name: this.module.name,\n            data: { id: this.module.instance, category: 'book', chapterid: chapterId },\n            url: CoreUrlUtils.addParamsToUrl(`/mod/book/view.php?id=${this.module.id}`, { chapterid: chapterId }),\n        });\n\n        const currentChapterIndex = this.chapters.findIndex((chapter) => chapter.id == chapterId);\n        const isLastChapter = currentChapterIndex < 0 || this.chapters[currentChapterIndex + 1] === undefined;\n\n        // Module is completed when last chapter is viewed, so we only check completion if the last is reached.\n        if (isLastChapter) {\n            CoreCourse.checkModuleCompletion(this.courseId, this.module.completiondata);\n        }\n    }\n\n    /**\n     * Converts chapters to navigation items.\n     *\n     * @param chapterId Current chapter Id.\n     * @returns Navigation items.\n     */\n    protected getNavigationItems(chapterId: number): CoreNavigationBarItem<AddonModBookTocChapter>[] {\n        return this.chapters.map((chapter) => ({\n            item: chapter,\n            title: chapter.title,\n            current: chapter.id == chapterId,\n            enabled: true,\n        }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.manager?.destroy();\n        this.managerUnsubscribe?.();\n\n        delete this.manager;\n    }\n\n}\n\ntype LoadedChapter = {\n    id: number;\n    content?: string;\n    tags?: CoreTagItem[];\n};\n\n/**\n * Helper to manage swiping within a collection of chapters.\n */\nclass AddonModBookSlidesItemsManagerSource extends CoreSwipeSlidesItemsManagerSource<LoadedChapter> {\n\n    readonly COURSE_ID: number;\n    readonly CM_ID: number;\n    readonly TAGS_ENABLED: boolean;\n\n    module?: CoreCourseModuleData;\n    book?: AddonModBookBookWSData;\n    chapters: AddonModBookTocChapter[] = [];\n    contentsMap: AddonModBookContentsMap = {};\n\n    constructor(courseId: number, cmId: number, tagsEnabled: boolean, initialChapterId?: number) {\n        super(initialChapterId ? { id: initialChapterId } : undefined);\n\n        this.COURSE_ID = courseId;\n        this.CM_ID = cmId;\n        this.TAGS_ENABLED = tagsEnabled;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemId(item: LoadedChapter): string | number {\n        return item.id;\n    }\n\n    /**\n     * Load book data from WS.\n     *\n     * @returns Promise resolved when done.\n     */\n    async loadBookData(): Promise<{ module: CoreCourseModuleData; book: AddonModBookBookWSData }> {\n        this.module = await CoreCourse.getModule(this.CM_ID, this.COURSE_ID);\n        this.book = await AddonModBook.getBook(this.COURSE_ID, this.CM_ID);\n\n        if (!this.initialItem) {\n            // No chapter ID specified. Calculate last viewed.\n            const lastViewed = await AddonModBook.getLastChapterViewed(this.book.id);\n\n            if (lastViewed) {\n                this.initialItem = { id: lastViewed };\n            }\n        }\n\n        return {\n            module: this.module,\n            book: this.book,\n        };\n    }\n\n    /**\n     * Load module contents.\n     */\n    async loadContents(): Promise<void> {\n        if (!this.module) {\n            return;\n        }\n\n        const contents = await CoreCourse.getModuleContents(this.module, this.COURSE_ID);\n\n        this.contentsMap = AddonModBook.getContentsMap(contents);\n        this.chapters = AddonModBook.getTocList(contents);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadItems(): Promise<LoadedChapter[]> {\n        try {\n            const newChapters = await Promise.all(this.chapters.map(async (chapter) => {\n                const content = await AddonModBook.getChapterContent(this.contentsMap, chapter.id, this.CM_ID);\n\n                return {\n                    id: chapter.id,\n                    content,\n                    tags: this.TAGS_ENABLED ? this.contentsMap[chapter.id].tags : [],\n                };\n            }));\n\n            return newChapters;\n        } catch (error) {\n            if (!CoreTextUtils.getErrorMessageFromError(error)) {\n                throw new CoreError(Translate.instant('addon.mod_book.errorchapter'));\n            }\n\n            throw error;\n        }\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @returns Resolved when done.\n     */\n    invalidateContent(): Promise<void> {\n        return AddonModBook.invalidateContent(this.CM_ID, this.COURSE_ID);\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                <core-format-text [text]=\"title\" contextLevel=\"module\" [contextInstanceId]=\"cmId\" [courseId]=\"courseId\" />\n            </h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button (click)=\"showToc()\" [attr.aria-label]=\"'addon.mod_book.toc' | translate\" aria-haspopup=\"true\" *ngIf=\"loaded\">\n                <ion-icon name=\"fas-bookmark\" slot=\"icon-only\" aria-hidden=\"true\" />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"doRefresh($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n\n    <core-loading [hideUntil]=\"loaded\">\n        <div class=\"safe-area-padding-horizontal core-swipe-slides-container\">\n            <ion-card class=\"core-warning-card\" *ngIf=\"warning\">\n                <ion-item>\n                    <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n                    <ion-label><span [innerHTML]=\"warning\"></span></ion-label>\n                </ion-item>\n            </ion-card>\n\n            <core-swipe-slides [manager]=\"manager\" [options]=\"swiperOpts\">\n                <ng-template let-chapter=\"item\" let-active=\"active\">\n                    <div class=\"ion-padding\">\n                        <core-format-text [component]=\"component\" [componentId]=\"cmId\" [text]=\"chapter.content\" contextLevel=\"module\"\n                            [contextInstanceId]=\"cmId\" [courseId]=\"courseId\" [disabled]=\"!active\" />\n                        <div class=\"ion-margin-top\" *ngIf=\"chapter.tags?.length > 0\">\n                            <strong>{{ 'core.tag.tags' | translate }}: </strong>\n                            <core-tag-list [tags]=\"chapter.tags\" />\n                        </div>\n                    </div>\n                </ng-template>\n            </core-swipe-slides>\n        </div>\n    </core-loading>\n\n    <core-navigation-bar collapsible-footer appearOnBottom *ngIf=\"loaded && displayNavBar && navigationItems.length > 1\"\n        [items]=\"navigationItems\" previousTranslate=\"addon.mod_book.navprevtitle\" nextTranslate=\"addon.mod_book.navnexttitle\"\n        (action)=\"changeChapter($event.id)\" slot=\"fixed\" />\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}