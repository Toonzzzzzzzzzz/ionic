{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonQtypeMultichoiceComponent } from '@addons/qtype/multichoice/component/multichoice';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support true/false question type.\n */\nexport class AddonQtypeTrueFalseHandlerService {\n  constructor() {\n    this.name = 'AddonQtypeTrueFalse';\n    this.type = 'qtype_truefalse';\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    // True/false behaves like a multichoice, use the same component.\n    return AddonQtypeMultichoiceComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isCompleteResponse(question, answers) {\n    return answers.answer ? 1 : 0;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isGradableResponse(question, answers) {\n    return this.isCompleteResponse(question, answers);\n  }\n  /**\n   * @inheritdoc\n   */\n  isSameResponse(question, prevAnswers, newAnswers) {\n    return CoreUtils.sameAtKeyMissingIsBlank(prevAnswers, newAnswers, 'answer');\n  }\n  /**\n   * @inheritdoc\n   */\n  prepareAnswers(question, answers) {\n    if (question && question.optionsName && answers[question.optionsName] !== undefined && !answers[question.optionsName]) {\n      // The user hasn't answered. Delete the answer to prevent marking one of the answers automatically.\n      delete answers[question.optionsName];\n    }\n  }\n}\n_class = AddonQtypeTrueFalseHandlerService;\n_class.ɵfac = function AddonQtypeTrueFalseHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonQtypeTrueFalseHandler = makeSingleton(AddonQtypeTrueFalseHandlerService);","map":{"version":3,"names":["AddonQtypeMultichoiceComponent","CoreUtils","makeSingleton","AddonQtypeTrueFalseHandlerService","constructor","name","type","getComponent","isCompleteResponse","question","answers","answer","isEnabled","_asyncToGenerator","isGradableResponse","isSameResponse","prevAnswers","newAnswers","sameAtKeyMissingIsBlank","prepareAnswers","optionsName","undefined","factory","ɵfac","providedIn","AddonQtypeTrueFalseHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qtype/truefalse/services/handlers/truefalse.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { AddonQtypeMultichoiceComponent } from '@addons/qtype/multichoice/component/multichoice';\nimport { CoreQuestionHandler } from '@features/question/services/question-delegate';\nimport { CoreQuestionQuestionParsed, CoreQuestionsAnswers } from '@features/question/services/question';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModQuizMultichoiceQuestion } from '@features/question/classes/base-question-component';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support true/false question type.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonQtypeTrueFalseHandlerService implements CoreQuestionHandler {\n\n    name = 'AddonQtypeTrueFalse';\n    type = 'qtype_truefalse';\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<unknown> {\n        // True/false behaves like a multichoice, use the same component.\n        return AddonQtypeMultichoiceComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isCompleteResponse(\n        question: CoreQuestionQuestionParsed,\n        answers: CoreQuestionsAnswers,\n    ): number {\n        return answers.answer ? 1 : 0;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isGradableResponse(\n        question: CoreQuestionQuestionParsed,\n        answers: CoreQuestionsAnswers,\n    ): number {\n        return this.isCompleteResponse(question, answers);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isSameResponse(\n        question: CoreQuestionQuestionParsed,\n        prevAnswers: CoreQuestionsAnswers,\n        newAnswers: CoreQuestionsAnswers,\n    ): boolean {\n        return CoreUtils.sameAtKeyMissingIsBlank(prevAnswers, newAnswers, 'answer');\n    }\n\n    /**\n     * @inheritdoc\n     */\n    prepareAnswers(\n        question: AddonModQuizMultichoiceQuestion,\n        answers: CoreQuestionsAnswers,\n    ): void | Promise<void> {\n        if (question && question.optionsName && answers[question.optionsName] !== undefined && !answers[question.optionsName]) {\n            // The user hasn't answered. Delete the answer to prevent marking one of the answers automatically.\n            delete answers[question.optionsName];\n        }\n    }\n\n}\n\nexport const AddonQtypeTrueFalseHandler = makeSingleton(AddonQtypeTrueFalseHandlerService);\n"],"mappings":";;AAgBA,SAASA,8BAA8B,QAAQ,iDAAiD;AAGhG,SAASC,SAAS,QAAQ,uBAAuB;AAEjD,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,iCAAiC;EAD9CC,YAAA;IAGI,KAAAC,IAAI,GAAG,qBAAqB;IAC5B,KAAAC,IAAI,GAAG,iBAAiB;;EAExB;;;EAGAC,YAAYA,CAAA;IACR;IACA,OAAOP,8BAA8B;EACzC;EAEA;;;EAGAQ,kBAAkBA,CACdC,QAAoC,EACpCC,OAA6B;IAE7B,OAAOA,OAAO,CAACC,MAAM,GAAG,CAAC,GAAG,CAAC;EACjC;EAEA;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGAC,kBAAkBA,CACdL,QAAoC,EACpCC,OAA6B;IAE7B,OAAO,IAAI,CAACF,kBAAkB,CAACC,QAAQ,EAAEC,OAAO,CAAC;EACrD;EAEA;;;EAGAK,cAAcA,CACVN,QAAoC,EACpCO,WAAiC,EACjCC,UAAgC;IAEhC,OAAOhB,SAAS,CAACiB,uBAAuB,CAACF,WAAW,EAAEC,UAAU,EAAE,QAAQ,CAAC;EAC/E;EAEA;;;EAGAE,cAAcA,CACVV,QAAyC,EACzCC,OAA6B;IAE7B,IAAID,QAAQ,IAAIA,QAAQ,CAACW,WAAW,IAAIV,OAAO,CAACD,QAAQ,CAACW,WAAW,CAAC,KAAKC,SAAS,IAAI,CAACX,OAAO,CAACD,QAAQ,CAACW,WAAW,CAAC,EAAE;MACnH;MACA,OAAOV,OAAO,CAACD,QAAQ,CAACW,WAAW,CAAC;;EAE5C;;SA9DSjB,iCAAiC;;mBAAjCA,MAAiC;AAAA;;SAAjCA,MAAiC;EAAAmB,OAAA,EAAjCnB,MAAiC,CAAAoB,IAAA;EAAAC,UAAA,EADpB;AAAM;AAmEhC,OAAO,MAAMC,0BAA0B,GAAGvB,aAAa,CAACC,iCAAiC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}