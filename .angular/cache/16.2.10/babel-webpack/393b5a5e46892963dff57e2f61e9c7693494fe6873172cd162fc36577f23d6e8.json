{"ast":null,"code":"var _class;\nimport { AddonModDataFieldPluginBaseComponent } from '../../../classes/base-field-plugin-component';\nimport { AddonModDataProvider } from '@addons/mod/data/services/data';\nimport { CoreTextUtils } from '@services/utils/text';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../../core/components/input-errors/input-errors\";\nimport * as i3 from \"../../../../../../core/components/mark-required/mark-required\";\nimport * as i4 from \"../../../../../../core/directives/format-text\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"../../../../../../core/features/editor/components/rich-text-editor/rich-text-editor\";\nfunction AddonModDataFieldTextareaComponent_span_0_ion_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-input\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.field.name)(\"formControlName\", \"f_\" + ctx_r2.field.id);\n  }\n}\nfunction AddonModDataFieldTextareaComponent_span_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"core-mark-required\", ctx_r3.field.required);\n  }\n}\nfunction AddonModDataFieldTextareaComponent_span_0_core_rich_text_editor_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-rich-text-editor\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"control\", ctx_r4.form.controls[\"f_\" + ctx_r4.field.id])(\"placeholder\", ctx_r4.field.name)(\"name\", \"f_\" + ctx_r4.field.id)(\"component\", ctx_r4.component)(\"componentId\", ctx_r4.componentId)(\"autoSave\", true)(\"contextInstanceId\", ctx_r4.componentId)(\"elementId\", \"field_\" + ctx_r4.field.id);\n  }\n}\nfunction AddonModDataFieldTextareaComponent_span_0_core_input_errors_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-input-errors\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"control\", ctx_r5.form.controls[\"f_\" + ctx_r5.field.id])(\"errorText\", ctx_r5.error);\n  }\n}\nfunction AddonModDataFieldTextareaComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtemplate(1, AddonModDataFieldTextareaComponent_span_0_ion_input_1_Template, 1, 2, \"ion-input\", 3);\n    i0.ɵɵtemplate(2, AddonModDataFieldTextareaComponent_span_0_span_2_Template, 1, 1, \"span\", 4);\n    i0.ɵɵtemplate(3, AddonModDataFieldTextareaComponent_span_0_core_rich_text_editor_3_Template, 1, 8, \"core-rich-text-editor\", 5);\n    i0.ɵɵtemplate(4, AddonModDataFieldTextareaComponent_span_0_core_input_errors_4_Template, 1, 2, \"core-input-errors\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.searchMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.error && ctx_r0.editMode);\n  }\n}\nfunction AddonModDataFieldTextareaComponent_core_format_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-format-text\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r1.format(ctx_r1.value))(\"component\", ctx_r1.component)(\"componentId\", ctx_r1.componentId)(\"contextInstanceId\", ctx_r1.componentId)(\"courseId\", ctx_r1.database.course);\n  }\n}\n/**\n * Component to render data number field.\n */\nexport class AddonModDataFieldTextareaComponent extends AddonModDataFieldPluginBaseComponent {\n  /**\n   * Format value to be shown. Replacing plugin file Urls.\n   *\n   * @param value Value to replace.\n   * @returns Replaced string to be rendered.\n   */\n  format(value) {\n    const files = value && value.files || [];\n    return value ? CoreTextUtils.replacePluginfileUrls(value.content || '', files) : '';\n  }\n  /**\n   * Initialize field.\n   */\n  init() {\n    var _this$database;\n    this.component = AddonModDataProvider.COMPONENT;\n    this.componentId = (_this$database = this.database) === null || _this$database === void 0 ? void 0 : _this$database.coursemodule;\n    if (this.displayMode) {\n      return;\n    }\n    let text;\n    // Check if rich text editor is enabled.\n    if (this.editMode) {\n      text = this.format(this.value);\n    }\n    this.addControl('f_' + this.field.id, text);\n  }\n}\n_class = AddonModDataFieldTextareaComponent;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModDataFieldTextareaComponent_BaseFactory;\n  return function AddonModDataFieldTextareaComponent_Factory(t) {\n    return (ɵAddonModDataFieldTextareaComponent_BaseFactory || (ɵAddonModDataFieldTextareaComponent_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-data-field-textarea\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"formGroup\", 4, \"ngIf\"], [\"contextLevel\", \"module\", 3, \"text\", \"component\", \"componentId\", \"contextInstanceId\", \"courseId\", 4, \"ngIf\"], [3, \"formGroup\"], [\"type\", \"text\", 3, \"placeholder\", \"formControlName\", 4, \"ngIf\"], [\"class\", \"core-mark-required\", 3, \"core-mark-required\", 4, \"ngIf\"], [\"contextLevel\", \"module\", \"ngDefaultControl\", \"\", 3, \"control\", \"placeholder\", \"name\", \"component\", \"componentId\", \"autoSave\", \"contextInstanceId\", \"elementId\", 4, \"ngIf\"], [3, \"control\", \"errorText\", 4, \"ngIf\"], [\"type\", \"text\", 3, \"placeholder\", \"formControlName\"], [1, \"core-mark-required\", 3, \"core-mark-required\"], [\"contextLevel\", \"module\", \"ngDefaultControl\", \"\", 3, \"control\", \"placeholder\", \"name\", \"component\", \"componentId\", \"autoSave\", \"contextInstanceId\", \"elementId\"], [3, \"control\", \"errorText\"], [\"contextLevel\", \"module\", 3, \"text\", \"component\", \"componentId\", \"contextInstanceId\", \"courseId\"]],\n  template: function AddonModDataFieldTextareaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddonModDataFieldTextareaComponent_span_0_Template, 5, 5, \"span\", 0);\n      i0.ɵɵtemplate(1, AddonModDataFieldTextareaComponent_core_format_text_1_Template, 1, 5, \"core-format-text\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.inputMode && ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.displayMode && ctx.value);\n    }\n  },\n  dependencies: [i1.NgIf, i2.CoreInputErrorsComponent, i3.CoreMarkRequiredComponent, i4.CoreFormatTextDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i6.IonInput, i6.TextValueAccessor, i5.FormGroupDirective, i5.FormControlName, i7.CoreEditorRichTextEditorComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonModDataFieldPluginBaseComponent","AddonModDataProvider","CoreTextUtils","i0","ɵɵelement","ɵɵproperty","ctx_r2","field","name","id","ctx_r3","required","ctx_r4","form","controls","component","componentId","ctx_r5","error","ɵɵelementStart","ɵɵtemplate","AddonModDataFieldTextareaComponent_span_0_ion_input_1_Template","AddonModDataFieldTextareaComponent_span_0_span_2_Template","AddonModDataFieldTextareaComponent_span_0_core_rich_text_editor_3_Template","AddonModDataFieldTextareaComponent_span_0_core_input_errors_4_Template","ɵɵelementEnd","ctx_r0","ɵɵadvance","searchMode","editMode","ctx_r1","format","value","database","course","AddonModDataFieldTextareaComponent","files","replacePluginfileUrls","content","init","_this$database","COMPONENT","coursemodule","displayMode","text","addControl","t","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonModDataFieldTextareaComponent_Template","rf","ctx","AddonModDataFieldTextareaComponent_span_0_Template","AddonModDataFieldTextareaComponent_core_format_text_1_Template","inputMode"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/textarea/component/textarea.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/textarea/component/addon-mod-data-field-textarea.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { AddonModDataFieldPluginBaseComponent } from '../../../classes/base-field-plugin-component';\nimport { AddonModDataEntryField, AddonModDataProvider } from '@addons/mod/data/services/data';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreWSFile } from '@services/ws';\n\n/**\n * Component to render data number field.\n */\n@Component({\n    selector: 'addon-mod-data-field-textarea',\n    templateUrl: 'addon-mod-data-field-textarea.html',\n})\nexport class AddonModDataFieldTextareaComponent extends AddonModDataFieldPluginBaseComponent {\n\n    component?: string;\n    componentId?: number;\n\n    /**\n     * Format value to be shown. Replacing plugin file Urls.\n     *\n     * @param value Value to replace.\n     * @returns Replaced string to be rendered.\n     */\n    format(value?: Partial<AddonModDataEntryField>): string {\n        const files: CoreWSFile[] = (value && <CoreWSFile[]>value.files) || [];\n\n        return value ? CoreTextUtils.replacePluginfileUrls(value.content || '', files) : '';\n    }\n\n    /**\n     * Initialize field.\n     */\n    protected init(): void {\n        this.component = AddonModDataProvider.COMPONENT;\n        this.componentId = this.database?.coursemodule;\n\n        if (this.displayMode) {\n            return;\n        }\n\n        let text: string | undefined;\n        // Check if rich text editor is enabled.\n        if (this.editMode) {\n            text = this.format(this.value);\n        }\n\n        this.addControl('f_' + this.field.id, text);\n    }\n\n}\n","<span *ngIf=\"inputMode && form\" [formGroup]=\"form\">\n    <ion-input *ngIf=\"searchMode\" type=\"text\" [placeholder]=\"field.name\" [formControlName]=\"'f_'+field.id\" />\n\n    <span *ngIf=\"editMode\" [core-mark-required]=\"field.required\" class=\"core-mark-required\"></span>\n    <core-rich-text-editor *ngIf=\"editMode\" [control]=\"form.controls['f_'+field.id]\" [placeholder]=\"field.name\" [name]=\"'f_'+field.id\"\n        [component]=\"component\" [componentId]=\"componentId\" [autoSave]=\"true\" contextLevel=\"module\" [contextInstanceId]=\"componentId\"\n        [elementId]=\"'field_'+field.id\" ngDefaultControl />\n    <core-input-errors *ngIf=\"error && editMode\" [control]=\"form.controls['f_'+field.id]\" [errorText]=\"error\" />\n</span>\n\n<core-format-text *ngIf=\"displayMode && value\" [text]=\"format(value)\" [component]=\"component\" [componentId]=\"componentId\"\n    contextLevel=\"module\" [contextInstanceId]=\"componentId\" [courseId]=\"database!.course\" />\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}