{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\nimport { CoreConfig } from '@services/config';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreConstants } from '../constants';\n/**\n * Singleton with helper functions for windows.\n */\nexport class CoreWindow {\n  // Avoid creating singleton instances.\n  constructor() {\n    // Nothing to do.\n  }\n  /**\n   * Show a confirm before opening a link in browser, unless the user previously marked to not show again.\n   *\n   * @param url URL to open.\n   * @returns Promise resolved if confirmed, rejected if rejected.\n   */\n  static confirmOpenBrowserIfNeeded(url) {\n    return _asyncToGenerator(function* () {\n      if (!CoreUrlUtils.isHttpURL(url)) {\n        // Only ask confirm for http(s), other cases usually launch external apps.\n        return;\n      }\n      // Check if the user decided not to see the warning.\n      const dontShowWarning = yield CoreConfig.get(CoreConstants.SETTINGS_DONT_SHOW_EXTERNAL_LINK_WARN, 0);\n      if (dontShowWarning) {\n        return;\n      }\n      // Remove common sensitive information from the URL.\n      url = url.replace(/token=[^&#]+/gi, 'token=secret').replace(/tokenpluginfile\\.php\\/[^/]+/gi, 'tokenpluginfile.php/secret');\n      const dontShowAgain = yield CoreDomUtils.showPrompt(Translate.instant('core.warnopeninbrowser', {\n        url\n      }), undefined, Translate.instant('core.dontshowagain'), 'checkbox');\n      if (dontShowAgain) {\n        CoreConfig.set(CoreConstants.SETTINGS_DONT_SHOW_EXTERNAL_LINK_WARN, 1);\n      }\n    })();\n  }\n  /**\n   * \"Safe\" implementation of window.open. It will open the URL without overriding the app.\n   *\n   * @param url URL to open.\n   * @param name Name of the browsing context into which to load the URL.\n   * @returns Promise resolved when done.\n   */\n  static open(url, name) {\n    return _asyncToGenerator(function* () {\n      if (CoreUrlUtils.isLocalFileUrl(url)) {\n        const filename = url.substring(url.lastIndexOf('/') + 1);\n        if (!CoreFileHelper.isOpenableInApp({\n          filename\n        })) {\n          try {\n            yield CoreFileHelper.showConfirmOpenUnsupportedFile(false, {\n              filename\n            });\n          } catch (error) {\n            return; // Cancelled, stop.\n          }\n        }\n\n        yield CoreUtils.openFile(url);\n      } else {\n        let treated = false;\n        if (name != '_system') {\n          // Check if it can be opened in the app.\n          treated = yield CoreContentLinksHelper.handleLink(url, undefined, true, true);\n        }\n        if (!treated) {\n          // Not opened in the app, open with browser. Check if we need to auto-login.\n          if (!CoreSites.isLoggedIn()) {\n            // Not logged in, cannot auto-login.\n            CoreUtils.openInBrowser(url);\n          } else {\n            yield CoreSites.getRequiredCurrentSite().openInBrowserWithAutoLogin(url);\n          }\n        }\n      }\n    })();\n  }\n}","map":{"version":3,"names":["CoreContentLinksHelper","CoreConfig","CoreFileHelper","CoreSites","CoreDomUtils","CoreUrlUtils","CoreUtils","Translate","CoreConstants","CoreWindow","constructor","confirmOpenBrowserIfNeeded","url","_asyncToGenerator","isHttpURL","dontShowWarning","get","SETTINGS_DONT_SHOW_EXTERNAL_LINK_WARN","replace","dontShowAgain","showPrompt","instant","undefined","set","open","name","isLocalFileUrl","filename","substring","lastIndexOf","isOpenableInApp","showConfirmOpenUnsupportedFile","error","openFile","treated","handleLink","isLoggedIn","openInBrowser","getRequiredCurrentSite","openInBrowserWithAutoLogin"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/singletons/window.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\nimport { CoreConfig } from '@services/config';\n\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreConstants } from '../constants';\n\n/**\n * Singleton with helper functions for windows.\n */\nexport class CoreWindow {\n\n    // Avoid creating singleton instances.\n    private constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Show a confirm before opening a link in browser, unless the user previously marked to not show again.\n     *\n     * @param url URL to open.\n     * @returns Promise resolved if confirmed, rejected if rejected.\n     */\n    static async confirmOpenBrowserIfNeeded(url: string): Promise<void> {\n        if (!CoreUrlUtils.isHttpURL(url)) {\n            // Only ask confirm for http(s), other cases usually launch external apps.\n            return;\n        }\n\n        // Check if the user decided not to see the warning.\n        const dontShowWarning = await CoreConfig.get(CoreConstants.SETTINGS_DONT_SHOW_EXTERNAL_LINK_WARN, 0);\n        if (dontShowWarning) {\n            return;\n        }\n\n        // Remove common sensitive information from the URL.\n        url = url\n            .replace(/token=[^&#]+/gi, 'token=secret')\n            .replace(/tokenpluginfile\\.php\\/[^/]+/gi, 'tokenpluginfile.php/secret');\n\n        const dontShowAgain = await CoreDomUtils.showPrompt(\n            Translate.instant('core.warnopeninbrowser', { url }),\n            undefined,\n            Translate.instant('core.dontshowagain'),\n            'checkbox',\n        );\n\n        if (dontShowAgain) {\n            CoreConfig.set(CoreConstants.SETTINGS_DONT_SHOW_EXTERNAL_LINK_WARN, 1);\n        }\n    }\n\n    /**\n     * \"Safe\" implementation of window.open. It will open the URL without overriding the app.\n     *\n     * @param url URL to open.\n     * @param name Name of the browsing context into which to load the URL.\n     * @returns Promise resolved when done.\n     */\n    static async open(url: string, name?: string): Promise<void> {\n        if (CoreUrlUtils.isLocalFileUrl(url)) {\n            const filename = url.substring(url.lastIndexOf('/') + 1);\n\n            if (!CoreFileHelper.isOpenableInApp({ filename })) {\n                try {\n                    await CoreFileHelper.showConfirmOpenUnsupportedFile(false, { filename });\n                } catch (error) {\n                    return; // Cancelled, stop.\n                }\n            }\n\n            await CoreUtils.openFile(url);\n        } else {\n            let treated = false;\n\n            if (name != '_system') {\n                // Check if it can be opened in the app.\n                treated = await CoreContentLinksHelper.handleLink(url, undefined, true, true);\n            }\n\n            if (!treated) {\n                // Not opened in the app, open with browser. Check if we need to auto-login.\n                if (!CoreSites.isLoggedIn()) {\n                    // Not logged in, cannot auto-login.\n                    CoreUtils.openInBrowser(url);\n                } else {\n                    await CoreSites.getRequiredCurrentSite().openInBrowserWithAutoLogin(url);\n                }\n            }\n        }\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,sBAAsB,QAAQ,qDAAqD;AAC5F,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,aAAa,QAAQ,cAAc;AAE5C;;;AAGA,OAAM,MAAOC,UAAU;EAEnB;EACAC,YAAA;IACI;EAAA;EAGJ;;;;;;EAMA,OAAaC,0BAA0BA,CAACC,GAAW;IAAA,OAAAC,iBAAA;MAC/C,IAAI,CAACR,YAAY,CAACS,SAAS,CAACF,GAAG,CAAC,EAAE;QAC9B;QACA;;MAGJ;MACA,MAAMG,eAAe,SAASd,UAAU,CAACe,GAAG,CAACR,aAAa,CAACS,qCAAqC,EAAE,CAAC,CAAC;MACpG,IAAIF,eAAe,EAAE;QACjB;;MAGJ;MACAH,GAAG,GAAGA,GAAG,CACJM,OAAO,CAAC,gBAAgB,EAAE,cAAc,CAAC,CACzCA,OAAO,CAAC,+BAA+B,EAAE,4BAA4B,CAAC;MAE3E,MAAMC,aAAa,SAASf,YAAY,CAACgB,UAAU,CAC/Cb,SAAS,CAACc,OAAO,CAAC,wBAAwB,EAAE;QAAET;MAAG,CAAE,CAAC,EACpDU,SAAS,EACTf,SAAS,CAACc,OAAO,CAAC,oBAAoB,CAAC,EACvC,UAAU,CACb;MAED,IAAIF,aAAa,EAAE;QACflB,UAAU,CAACsB,GAAG,CAACf,aAAa,CAACS,qCAAqC,EAAE,CAAC,CAAC;;IACzE;EACL;EAEA;;;;;;;EAOA,OAAaO,IAAIA,CAACZ,GAAW,EAAEa,IAAa;IAAA,OAAAZ,iBAAA;MACxC,IAAIR,YAAY,CAACqB,cAAc,CAACd,GAAG,CAAC,EAAE;QAClC,MAAMe,QAAQ,GAAGf,GAAG,CAACgB,SAAS,CAAChB,GAAG,CAACiB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAExD,IAAI,CAAC3B,cAAc,CAAC4B,eAAe,CAAC;UAAEH;QAAQ,CAAE,CAAC,EAAE;UAC/C,IAAI;YACA,MAAMzB,cAAc,CAAC6B,8BAA8B,CAAC,KAAK,EAAE;cAAEJ;YAAQ,CAAE,CAAC;WAC3E,CAAC,OAAOK,KAAK,EAAE;YACZ,OAAO,CAAC;;;;QAIhB,MAAM1B,SAAS,CAAC2B,QAAQ,CAACrB,GAAG,CAAC;OAChC,MAAM;QACH,IAAIsB,OAAO,GAAG,KAAK;QAEnB,IAAIT,IAAI,IAAI,SAAS,EAAE;UACnB;UACAS,OAAO,SAASlC,sBAAsB,CAACmC,UAAU,CAACvB,GAAG,EAAEU,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC;;QAGjF,IAAI,CAACY,OAAO,EAAE;UACV;UACA,IAAI,CAAC/B,SAAS,CAACiC,UAAU,EAAE,EAAE;YACzB;YACA9B,SAAS,CAAC+B,aAAa,CAACzB,GAAG,CAAC;WAC/B,MAAM;YACH,MAAMT,SAAS,CAACmC,sBAAsB,EAAE,CAACC,0BAA0B,CAAC3B,GAAG,CAAC;;;;IAGnF;EACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}