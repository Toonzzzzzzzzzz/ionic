{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { makeSingleton } from '@singletons';\nimport { CoreCourse } from '../../course/services/course';\nimport { CoreCourses } from '../../courses/services/courses';\nimport { AddonModForum } from '@addons/mod/forum/services/forum';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreBlockHelper } from '@features/block/services/block-helper';\nimport * as i0 from \"@angular/core\";\n/**\n * Items with index 1 and 3 were removed on 2.5 and not being supported in the app.\n */\nexport var FrontPageItemNames;\n(function (FrontPageItemNames) {\n  FrontPageItemNames[FrontPageItemNames[\"NEWS_ITEMS\"] = 0] = \"NEWS_ITEMS\";\n  FrontPageItemNames[FrontPageItemNames[\"LIST_OF_CATEGORIES\"] = 2] = \"LIST_OF_CATEGORIES\";\n  FrontPageItemNames[FrontPageItemNames[\"COMBO_LIST\"] = 4] = \"COMBO_LIST\";\n  FrontPageItemNames[FrontPageItemNames[\"ENROLLED_COURSES\"] = 5] = \"ENROLLED_COURSES\";\n  FrontPageItemNames[FrontPageItemNames[\"LIST_OF_COURSE\"] = 6] = \"LIST_OF_COURSE\";\n  FrontPageItemNames[FrontPageItemNames[\"COURSE_SEARCH_BOX\"] = 7] = \"COURSE_SEARCH_BOX\";\n})(FrontPageItemNames || (FrontPageItemNames = {}));\n/**\n * Service that provides some features regarding site home.\n */\nexport class CoreSiteHomeProvider {\n  /**\n   * Get the news forum for the Site Home.\n   *\n   * @param siteHomeId Site Home ID.\n   * @returns Promise resolved with the forum if found, rejected otherwise.\n   */\n  getNewsForum(siteHomeId) {\n    return _asyncToGenerator(function* () {\n      if (!siteHomeId) {\n        siteHomeId = CoreSites.getCurrentSiteHomeId();\n      }\n      const forums = yield AddonModForum.getCourseForums(siteHomeId);\n      const forum = forums.find(forum => forum.type == 'news');\n      if (forum) {\n        return forum;\n      }\n      throw new CoreError('No news forum found');\n    })();\n  }\n  /**\n   * Invalidate the WS call to get the news forum for the Site Home.\n   *\n   * @param siteHomeId Site Home ID.\n   * @returns Promise resolved when invalidated.\n   */\n  invalidateNewsForum(siteHomeId) {\n    return _asyncToGenerator(function* () {\n      yield AddonModForum.invalidateForumData(siteHomeId);\n    })();\n  }\n  /**\n   * Returns whether or not the frontpage is available for the current site.\n   *\n   * @param siteId The site ID. If not defined, current site.\n   * @returns Promise resolved with boolean: whether it's available.\n   */\n  isAvailable(siteId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const site = yield CoreSites.getSite(siteId);\n        // First check if it's disabled.\n        if (_this.isDisabledInSite(site)) {\n          return false;\n        }\n        // Use a WS call to check if there's content in the site home.\n        const siteHomeId = site.getSiteHomeId();\n        const preSets = {\n          emergencyCache: false\n        };\n        try {\n          const sections = yield CoreCourse.getSections(siteHomeId, false, true, preSets, site.id);\n          if (!sections || !sections.length) {\n            throw Error('No sections found');\n          }\n          const hasContent = sections.some(section => section.summary || section.modules && section.modules.length);\n          const hasCourseBlocks = yield CoreBlockHelper.hasCourseBlocks(siteHomeId);\n          if (hasContent || hasCourseBlocks) {\n            // There's a section with content.\n            return true;\n          }\n        } catch (_unused) {\n          // Ignore errors.\n        }\n        const config = site.getStoredConfig();\n        if (config && config.frontpageloggedin) {\n          const items = yield _this.getFrontPageItems(config.frontpageloggedin);\n          // There are items to show.\n          return items.length > 0;\n        }\n      } catch (_unused2) {\n        // Ignore errors.\n      }\n      return false;\n    })();\n  }\n  /**\n   * Check if Site Home is disabled in a certain site.\n   *\n   * @param siteId Site Id. If not defined, use current site.\n   * @returns Promise resolved with true if disabled, rejected or resolved with false otherwise.\n   */\n  isDisabled(siteId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const site = yield CoreSites.getSite(siteId);\n      return _this2.isDisabledInSite(site);\n    })();\n  }\n  /**\n   * Check if Site Home is disabled in a certain site.\n   *\n   * @param site Site. If not defined, use current site.\n   * @returns Whether it's disabled.\n   */\n  isDisabledInSite(site) {\n    site = site || CoreSites.getCurrentSite();\n    return site.isFeatureDisabled('CoreMainMenuDelegate_CoreSiteHome');\n  }\n  /**\n   * Get the nams of the valid frontpage items.\n   *\n   * @param frontpageItemIds CSV string with indexes of site home components.\n   * @returns Valid names for each item.\n   */\n  getFrontPageItems(frontpageItemIds) {\n    return _asyncToGenerator(function* () {\n      var _CoreSites$getCurrent;\n      if (!frontpageItemIds) {\n        return [];\n      }\n      const items = frontpageItemIds.split(',');\n      const filteredItems = [];\n      for (const item of items) {\n        let itemNumber = parseInt(item, 10);\n        let add = false;\n        switch (itemNumber) {\n          case FrontPageItemNames['NEWS_ITEMS']:\n            // Get number of news items to show.\n            add = !!((_CoreSites$getCurrent = CoreSites.getCurrentSite()) !== null && _CoreSites$getCurrent !== void 0 && _CoreSites$getCurrent.getStoredConfig('newsitems'));\n            break;\n          case FrontPageItemNames['COMBO_LIST']:\n            itemNumber = FrontPageItemNames['LIST_OF_CATEGORIES'];\n          // Do not break here.\n          case FrontPageItemNames['LIST_OF_CATEGORIES']:\n          case FrontPageItemNames['LIST_OF_COURSE']:\n          case FrontPageItemNames['ENROLLED_COURSES']:\n            add = true;\n            break;\n          case FrontPageItemNames['COURSE_SEARCH_BOX']:\n            add = !CoreCourses.isSearchCoursesDisabledInSite();\n            break;\n          default:\n            break;\n        }\n        // Do not add an item twice.\n        if (add && filteredItems.indexOf(FrontPageItemNames[itemNumber]) < 0) {\n          filteredItems.push(FrontPageItemNames[itemNumber]);\n        }\n      }\n      return filteredItems;\n    })();\n  }\n}\n_class = CoreSiteHomeProvider;\n_class.ɵfac = function CoreSiteHomeProvider_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreSiteHome = makeSingleton(CoreSiteHomeProvider);","map":{"version":3,"names":["CoreSites","makeSingleton","CoreCourse","CoreCourses","AddonModForum","CoreError","CoreBlockHelper","FrontPageItemNames","CoreSiteHomeProvider","getNewsForum","siteHomeId","_asyncToGenerator","getCurrentSiteHomeId","forums","getCourseForums","forum","find","type","invalidateNewsForum","invalidateForumData","isAvailable","siteId","_this","site","getSite","isDisabledInSite","getSiteHomeId","preSets","emergencyCache","sections","getSections","id","length","Error","hasContent","some","section","summary","modules","hasCourseBlocks","_unused","config","getStoredConfig","frontpageloggedin","items","getFrontPageItems","_unused2","isDisabled","_this2","getCurrentSite","isFeatureDisabled","frontpageItemIds","_CoreSites$getCurrent","split","filteredItems","item","itemNumber","parseInt","add","isSearchCoursesDisabledInSite","indexOf","push","factory","ɵfac","providedIn","CoreSiteHome"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/sitehome/services/sitehome.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreSite } from '@classes/sites/site';\nimport { makeSingleton } from '@singletons';\nimport { CoreCourse } from '../../course/services/course';\nimport { CoreCourses } from '../../courses/services/courses';\nimport { AddonModForum, AddonModForumData } from '@addons/mod/forum/services/forum';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreBlockHelper } from '@features/block/services/block-helper';\nimport { CoreSiteWSPreSets } from '@classes/sites/authenticated-site';\n\n/**\n * Items with index 1 and 3 were removed on 2.5 and not being supported in the app.\n */\nexport enum FrontPageItemNames {\n    NEWS_ITEMS = 0,\n    LIST_OF_CATEGORIES = 2,\n    COMBO_LIST = 4,\n    ENROLLED_COURSES = 5,\n    LIST_OF_COURSE = 6,\n    COURSE_SEARCH_BOX = 7,\n}\n\n/**\n * Service that provides some features regarding site home.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreSiteHomeProvider {\n\n    /**\n     * Get the news forum for the Site Home.\n     *\n     * @param siteHomeId Site Home ID.\n     * @returns Promise resolved with the forum if found, rejected otherwise.\n     */\n    async getNewsForum(siteHomeId?: number): Promise<AddonModForumData> {\n        if (!siteHomeId) {\n            siteHomeId = CoreSites.getCurrentSiteHomeId();\n        }\n\n        const forums = await AddonModForum.getCourseForums(siteHomeId);\n        const forum = forums.find((forum) => forum.type == 'news');\n\n        if (forum) {\n            return forum;\n        }\n\n        throw new CoreError('No news forum found');\n    }\n\n    /**\n     * Invalidate the WS call to get the news forum for the Site Home.\n     *\n     * @param siteHomeId Site Home ID.\n     * @returns Promise resolved when invalidated.\n     */\n    async invalidateNewsForum(siteHomeId: number): Promise<void> {\n        await AddonModForum.invalidateForumData(siteHomeId);\n    }\n\n    /**\n     * Returns whether or not the frontpage is available for the current site.\n     *\n     * @param siteId The site ID. If not defined, current site.\n     * @returns Promise resolved with boolean: whether it's available.\n     */\n    async isAvailable(siteId?: string): Promise<boolean> {\n        try {\n            const site = await CoreSites.getSite(siteId);\n\n            // First check if it's disabled.\n            if (this.isDisabledInSite(site)) {\n                return false;\n            }\n\n            // Use a WS call to check if there's content in the site home.\n            const siteHomeId = site.getSiteHomeId();\n            const preSets: CoreSiteWSPreSets = { emergencyCache: false };\n\n            try {\n                const sections = await CoreCourse.getSections(siteHomeId, false, true, preSets, site.id);\n\n                if (!sections || !sections.length) {\n                    throw Error('No sections found');\n                }\n\n                const hasContent = sections.some((section) => section.summary || (section.modules && section.modules.length));\n                const hasCourseBlocks = await CoreBlockHelper.hasCourseBlocks(siteHomeId);\n\n                if (hasContent || hasCourseBlocks) {\n                    // There's a section with content.\n                    return true;\n                }\n            } catch {\n                // Ignore errors.\n            }\n\n            const config = site.getStoredConfig();\n            if (config && config.frontpageloggedin) {\n                const items = await this.getFrontPageItems(config.frontpageloggedin);\n\n                // There are items to show.\n                return items.length > 0;\n            }\n        } catch {\n            // Ignore errors.\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if Site Home is disabled in a certain site.\n     *\n     * @param siteId Site Id. If not defined, use current site.\n     * @returns Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    async isDisabled(siteId?: string): Promise<boolean> {\n        const site = await CoreSites.getSite(siteId);\n\n        return this.isDisabledInSite(site);\n    }\n\n    /**\n     * Check if Site Home is disabled in a certain site.\n     *\n     * @param site Site. If not defined, use current site.\n     * @returns Whether it's disabled.\n     */\n    isDisabledInSite(site: CoreSite): boolean {\n        site = site || CoreSites.getCurrentSite();\n\n        return site.isFeatureDisabled('CoreMainMenuDelegate_CoreSiteHome');\n    }\n\n    /**\n     * Get the nams of the valid frontpage items.\n     *\n     * @param frontpageItemIds CSV string with indexes of site home components.\n     * @returns Valid names for each item.\n     */\n    async getFrontPageItems(frontpageItemIds?: string): Promise<string[]> {\n        if (!frontpageItemIds) {\n            return [];\n        }\n\n        const items = frontpageItemIds.split(',');\n\n        const filteredItems: string[] = [];\n\n        for (const item of items) {\n            let itemNumber = parseInt(item, 10);\n\n            let add = false;\n            switch (itemNumber) {\n                case FrontPageItemNames['NEWS_ITEMS']:\n                    // Get number of news items to show.\n                    add = !!CoreSites.getCurrentSite()?.getStoredConfig('newsitems');\n                    break;\n                case FrontPageItemNames['COMBO_LIST']:\n                    itemNumber = FrontPageItemNames['LIST_OF_CATEGORIES']; // Do not break here.\n                case FrontPageItemNames['LIST_OF_CATEGORIES']:\n                case FrontPageItemNames['LIST_OF_COURSE']:\n                case FrontPageItemNames['ENROLLED_COURSES']:\n                    add = true;\n                    break;\n                case FrontPageItemNames['COURSE_SEARCH_BOX']:\n                    add = !CoreCourses.isSearchCoursesDisabledInSite();\n                    break;\n                default:\n                    break;\n            }\n\n            // Do not add an item twice.\n            if (add && filteredItems.indexOf(FrontPageItemNames[itemNumber]) < 0) {\n                filteredItems.push(FrontPageItemNames[itemNumber]);\n            }\n        }\n\n        return filteredItems;\n    }\n\n}\n\nexport const CoreSiteHome = makeSingleton(CoreSiteHomeProvider);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}