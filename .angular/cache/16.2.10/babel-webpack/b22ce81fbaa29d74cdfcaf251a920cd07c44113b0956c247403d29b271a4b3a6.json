{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { makeSingleton } from '@singletons';\nimport { AddonCourseCompletion } from '../coursecompletion';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to treat links to user course completion status.\n */\nexport class AddonCourseCompletionStatusLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonCourseCompletionStatusLinkHandler';\n    this.pattern = /\\/blocks\\/completionstatus\\/details\\.php.*([?&](course|user)=\\d+)/;\n  }\n  /**\n   * @inheritdoc\n   */\n  getActions(siteIds, url, params) {\n    return [{\n      action: function () {\n        var _ref = _asyncToGenerator(function* (siteId) {\n          let userId = params.user ? parseInt(params.user, 10) : undefined;\n          const courseId = parseInt(params.course, 10);\n          if (!userId) {\n            const site = yield CoreSites.getSite(siteId);\n            userId = site.getUserId();\n          }\n          const pageParams = {\n            courseId,\n            userId\n          };\n          CoreNavigator.navigateToSitePath('/coursecompletion', {\n            params: pageParams,\n            siteId\n          });\n        });\n        return function action(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled(siteId, url, params) {\n    return _asyncToGenerator(function* () {\n      let userId = params.user ? parseInt(params.user, 10) : undefined;\n      const courseId = parseInt(params.course, 10);\n      if (!userId) {\n        const site = yield CoreSites.getSite(siteId);\n        userId = site.getUserId();\n      }\n      return AddonCourseCompletion.isPluginViewEnabledForUser(courseId, userId, siteId);\n    })();\n  }\n}\n_class = AddonCourseCompletionStatusLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonCourseCompletionStatusLinkHandlerService_BaseFactory;\n  return function AddonCourseCompletionStatusLinkHandlerService_Factory(t) {\n    return (ɵAddonCourseCompletionStatusLinkHandlerService_BaseFactory || (ɵAddonCourseCompletionStatusLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonCourseCompletionStatusLinkHandler = makeSingleton(AddonCourseCompletionStatusLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreNavigator","CoreSites","makeSingleton","AddonCourseCompletion","AddonCourseCompletionStatusLinkHandlerService","constructor","name","pattern","getActions","siteIds","url","params","action","_ref","_asyncToGenerator","siteId","userId","user","parseInt","undefined","courseId","course","site","getSite","getUserId","pageParams","navigateToSitePath","_x","apply","arguments","isEnabled","isPluginViewEnabledForUser","t","factory","ɵfac","providedIn","AddonCourseCompletionStatusLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/coursecompletion/services/handlers/completionstatus-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { makeSingleton } from '@singletons';\nimport { AddonCourseCompletion } from '../coursecompletion';\n\n/**\n * Handler to treat links to user course completion status.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonCourseCompletionStatusLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'AddonCourseCompletionStatusLinkHandler';\n    pattern = /\\/blocks\\/completionstatus\\/details\\.php.*([?&](course|user)=\\d+)/;\n\n    /**\n     * @inheritdoc\n     */\n    getActions(\n        siteIds: string[],\n        url: string,\n        params: Record<string, string>,\n    ): CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n\n        return [{\n            action: async (siteId): Promise<void> => {\n                let userId = params.user ? parseInt(params.user, 10) : undefined;\n                const courseId = parseInt(params.course, 10);\n                if (!userId) {\n                    const site = await CoreSites.getSite(siteId);\n                    userId = site.getUserId();\n                }\n\n                const pageParams = {\n                    courseId,\n                    userId,\n                };\n\n                CoreNavigator.navigateToSitePath(\n                    '/coursecompletion',\n                    { params: pageParams, siteId },\n                );\n            },\n        }];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(siteId: string, url: string, params: Record<string, string>): Promise<boolean> {\n        let userId = params.user ? parseInt(params.user, 10) : undefined;\n        const courseId = parseInt(params.course, 10);\n        if (!userId) {\n            const site = await CoreSites.getSite(siteId);\n            userId = site.getUserId();\n        }\n\n        return AddonCourseCompletion.isPluginViewEnabledForUser(courseId, userId, siteId);\n    }\n\n}\n\nexport const AddonCourseCompletionStatusLinkHandler = makeSingleton(AddonCourseCompletionStatusLinkHandlerService);\n"],"mappings":";;AAgBA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,qBAAqB,QAAQ,qBAAqB;;AAE3D;;;AAIA,OAAM,MAAOC,6CAA8C,SAAQL,2BAA2B;EAD9FM,YAAA;;IAGI,KAAAC,IAAI,GAAG,wCAAwC;IAC/C,KAAAC,OAAO,GAAG,mEAAmE;;EAE7E;;;EAGAC,UAAUA,CACNC,OAAiB,EACjBC,GAAW,EACXC,MAA8B;IAG9B,OAAO,CAAC;MACJC,MAAM;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,WAAOC,MAAM,EAAmB;UACpC,IAAIC,MAAM,GAAGL,MAAM,CAACM,IAAI,GAAGC,QAAQ,CAACP,MAAM,CAACM,IAAI,EAAE,EAAE,CAAC,GAAGE,SAAS;UAChE,MAAMC,QAAQ,GAAGF,QAAQ,CAACP,MAAM,CAACU,MAAM,EAAE,EAAE,CAAC;UAC5C,IAAI,CAACL,MAAM,EAAE;YACT,MAAMM,IAAI,SAASrB,SAAS,CAACsB,OAAO,CAACR,MAAM,CAAC;YAC5CC,MAAM,GAAGM,IAAI,CAACE,SAAS,EAAE;;UAG7B,MAAMC,UAAU,GAAG;YACfL,QAAQ;YACRJ;WACH;UAEDhB,aAAa,CAAC0B,kBAAkB,CAC5B,mBAAmB,EACnB;YAAEf,MAAM,EAAEc,UAAU;YAAEV;UAAM,CAAE,CACjC;QACL,CAAC;QAAA,gBAAAH,OAAAe,EAAA;UAAA,OAAAd,IAAA,CAAAe,KAAA,OAAAC,SAAA;QAAA;MAAA;KACJ,CAAC;EACN;EAEA;;;EAGMC,SAASA,CAACf,MAAc,EAAEL,GAAW,EAAEC,MAA8B;IAAA,OAAAG,iBAAA;MACvE,IAAIE,MAAM,GAAGL,MAAM,CAACM,IAAI,GAAGC,QAAQ,CAACP,MAAM,CAACM,IAAI,EAAE,EAAE,CAAC,GAAGE,SAAS;MAChE,MAAMC,QAAQ,GAAGF,QAAQ,CAACP,MAAM,CAACU,MAAM,EAAE,EAAE,CAAC;MAC5C,IAAI,CAACL,MAAM,EAAE;QACT,MAAMM,IAAI,SAASrB,SAAS,CAACsB,OAAO,CAACR,MAAM,CAAC;QAC5CC,MAAM,GAAGM,IAAI,CAACE,SAAS,EAAE;;MAG7B,OAAOrB,qBAAqB,CAAC4B,0BAA0B,CAACX,QAAQ,EAAEJ,MAAM,EAAED,MAAM,CAAC;IAAC;EACtF;;SAhDSX,6CAA8C;;;;iKAA9CA,MAA6C,IAAA4B,CAAA,IAA7C5B,MAA6C;EAAA;AAAA;;SAA7CA,MAA6C;EAAA6B,OAAA,EAA7C7B,MAA6C,CAAA8B,IAAA;EAAAC,UAAA,EADhC;AAAM;AAqDhC,OAAO,MAAMC,sCAAsC,GAAGlC,aAAa,CAACE,6CAA6C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}