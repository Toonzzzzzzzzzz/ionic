{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../directives/fa-icon\";\nimport * as i2 from \"../../../../directives/content\";\nimport * as i3 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@ngx-translate/core\";\n/**\n * Page to scan a QR code.\n */\nexport class CoreViewerQRScannerComponent {\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.title = _this.title || Translate.instant('core.scanqr');\n      try {\n        let text = yield CoreUtils.startScanQR();\n        // Text captured, return it.\n        text = typeof text == 'string' ? text.trim() : '';\n        _this.closeModal(text);\n      } catch (error) {\n        if (!CoreDomUtils.isCanceledError(error)) {\n          // Show error and stop scanning.\n          CoreDomUtils.showErrorModalDefault(error, 'An error occurred.');\n          CoreUtils.stopScanQR();\n        }\n        _this.closeModal();\n      }\n    })();\n  }\n  /**\n   * Cancel scanning.\n   */\n  cancel() {\n    CoreUtils.stopScanQR();\n  }\n  /**\n   * Close modal.\n   *\n   * @param text The text to return (if any).\n   */\n  closeModal(text) {\n    ModalController.dismiss(text);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    // If this code is reached and scan hasn't been stopped yet it means the user clicked the back button, cancel.\n    CoreUtils.stopScanQR();\n  }\n}\n_class = CoreViewerQRScannerComponent;\n_class.ɵfac = function CoreViewerQRScannerComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-viewer-qr-scanner\"]],\n  inputs: {\n    title: \"title\"\n  },\n  decls: 10,\n  vars: 4,\n  consts: [[\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"name\", \"fas-xmark\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"]],\n  template: function CoreViewerQRScannerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\")(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ion-buttons\", 0)(6, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function CoreViewerQRScannerComponent_Template_ion_button_click_6_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵpipe(7, \"translate\");\n      i0.ɵɵelement(8, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(9, \"ion-content\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(7, 2, \"core.close\"));\n    }\n  },\n  dependencies: [i1.CoreFaIconDirective, i2.CoreContentDirective, i3.CoreUpdateNonReactiveAttributesDirective, i4.IonButton, i4.IonButtons, i4.IonContent, i4.IonHeader, i4.IonIcon, i4.IonTitle, i4.IonToolbar, i5.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreDomUtils","CoreUtils","ModalController","Translate","CoreViewerQRScannerComponent","ngOnInit","_this","_asyncToGenerator","title","instant","text","startScanQR","trim","closeModal","error","isCanceledError","showErrorModalDefault","stopScanQR","cancel","dismiss","ngOnDestroy","selectors","inputs","decls","vars","consts","template","CoreViewerQRScannerComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CoreViewerQRScannerComponent_Template_ion_button_click_6_listener","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵattribute","ɵɵpipeBind1"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/viewer/components/qr-scanner/qr-scanner.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/viewer/components/qr-scanner/qr-scanner.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\n\n/**\n * Page to scan a QR code.\n */\n@Component({\n    selector: 'core-viewer-qr-scanner',\n    templateUrl: 'qr-scanner.html',\n})\nexport class CoreViewerQRScannerComponent implements OnInit, OnDestroy {\n\n    @Input() title?: string; // Page title.\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.title = this.title || Translate.instant('core.scanqr');\n\n        try {\n\n            let text = await CoreUtils.startScanQR();\n\n            // Text captured, return it.\n            text = typeof text == 'string' ? text.trim() : '';\n\n            this.closeModal(text);\n        } catch (error) {\n            if (!CoreDomUtils.isCanceledError(error)) {\n                // Show error and stop scanning.\n                CoreDomUtils.showErrorModalDefault(error, 'An error occurred.');\n                CoreUtils.stopScanQR();\n            }\n\n            this.closeModal();\n        }\n    }\n\n    /**\n     * Cancel scanning.\n     */\n    cancel(): void {\n        CoreUtils.stopScanQR();\n    }\n\n    /**\n     * Close modal.\n     *\n     * @param text The text to return (if any).\n     */\n    closeModal(text?: string): void {\n        ModalController.dismiss(text);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        // If this code is reached and scan hasn't been stopped yet it means the user clicked the back button, cancel.\n        CoreUtils.stopScanQR();\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-title>\n            <h1>{{ title }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"closeModal()\" [attr.aria-label]=\"'core.close' | translate\">\n                <ion-icon name=\"fas-xmark\" slot=\"icon-only\" aria-hidden=true />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content />\n"],"mappings":";;AAeA,SAASA,YAAY,QAAQ,qBAAqB;AAClD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,eAAe,EAAEC,SAAS,QAAQ,aAAa;;;;;;;AAExD;;;AAOA,OAAM,MAAOC,4BAA4B;EAIrC;;;EAGMC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACVD,KAAI,CAACE,KAAK,GAAGF,KAAI,CAACE,KAAK,IAAIL,SAAS,CAACM,OAAO,CAAC,aAAa,CAAC;MAE3D,IAAI;QAEA,IAAIC,IAAI,SAAST,SAAS,CAACU,WAAW,EAAE;QAExC;QACAD,IAAI,GAAG,OAAOA,IAAI,IAAI,QAAQ,GAAGA,IAAI,CAACE,IAAI,EAAE,GAAG,EAAE;QAEjDN,KAAI,CAACO,UAAU,CAACH,IAAI,CAAC;OACxB,CAAC,OAAOI,KAAK,EAAE;QACZ,IAAI,CAACd,YAAY,CAACe,eAAe,CAACD,KAAK,CAAC,EAAE;UACtC;UACAd,YAAY,CAACgB,qBAAqB,CAACF,KAAK,EAAE,oBAAoB,CAAC;UAC/Db,SAAS,CAACgB,UAAU,EAAE;;QAG1BX,KAAI,CAACO,UAAU,EAAE;;IACpB;EACL;EAEA;;;EAGAK,MAAMA,CAAA;IACFjB,SAAS,CAACgB,UAAU,EAAE;EAC1B;EAEA;;;;;EAKAJ,UAAUA,CAACH,IAAa;IACpBR,eAAe,CAACiB,OAAO,CAACT,IAAI,CAAC;EACjC;EAEA;;;EAGAU,WAAWA,CAAA;IACP;IACAnB,SAAS,CAACgB,UAAU,EAAE;EAC1B;;SAnDSb,4BAA4B;;mBAA5BA,MAA4B;AAAA;;QAA5BA,MAA4B;EAAAiB,SAAA;EAAAC,MAAA;IAAAd,KAAA;EAAA;EAAAe,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC1BzCE,EAAA,CAAAC,cAAA,iBAAY;MAGID,EAAA,CAAAE,MAAA,GAAW;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAExBH,EAAA,CAAAC,cAAA,qBAAwB;MACKD,EAAA,CAAAI,UAAA,mBAAAC,kEAAA;QAAA,OAASN,GAAA,CAAAhB,UAAA,EAAY;MAAA,EAAC;;MAC3CiB,EAAA,CAAAM,SAAA,kBAA+D;MACnEN,EAAA,CAAAG,YAAA,EAAa;MAIzBH,EAAA,CAAAM,SAAA,kBAAe;;;MATCN,EAAA,CAAAO,SAAA,GAAW;MAAXP,EAAA,CAAAQ,iBAAA,CAAAT,GAAA,CAAArB,KAAA,CAAW;MAGiCsB,EAAA,CAAAO,SAAA,GAA4C;MAA5CP,EAAA,CAAAS,WAAA,eAAAT,EAAA,CAAAU,WAAA,qBAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}