{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonCompetency } from '@addons/competency/services/competency';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ADDON_COMPETENCY_SUMMARY_PAGE } from '@addons/competency/competency.module';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../core/components/loading/loading\";\nimport * as i3 from \"../../../../core/directives/format-text\";\nimport * as i4 from \"../../../../core/directives/content\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@ngx-translate/core\";\nfunction AddonCompetencyCompetencySummaryPage_h1_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵelement(1, \"core-format-text\", 7);\n    i0.ɵɵelementStart(2, \"small\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", ctx_r0.competency.competency.shortname)(\"contextLevel\", ctx_r0.contextLevel)(\"contextInstanceId\", ctx_r0.contextInstanceId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.competency.competency.idnumber);\n  }\n}\nfunction AddonCompetencyCompetencySummaryPage_ion_card_12_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 9)(1, \"ion-label\");\n    i0.ɵɵelement(2, \"core-format-text\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", ctx_r2.competency.competency.description)(\"contextLevel\", ctx_r2.contextLevel)(\"contextInstanceId\", ctx_r2.contextInstanceId);\n  }\n}\nfunction AddonCompetencyCompetencySummaryPage_ion_card_12_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" \\u00A0/\\u00A0 \");\n    i0.ɵɵelementStart(2, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AddonCompetencyCompetencySummaryPage_ion_card_12_ng_container_9_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const ancestor_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.openCompetencySummary(ancestor_r4.id));\n    });\n    i0.ɵɵelement(3, \"core-format-text\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ancestor_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", ancestor_r4.name)(\"contextLevel\", ctx_r3.contextLevel)(\"contextInstanceId\", ctx_r3.contextInstanceId);\n  }\n}\nfunction AddonCompetencyCompetencySummaryPage_ion_card_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵtemplate(1, AddonCompetencyCompetencySummaryPage_ion_card_12_ion_item_1_Template, 3, 3, \"ion-item\", 8);\n    i0.ɵɵelementStart(2, \"ion-item\", 9)(3, \"ion-label\")(4, \"p\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵelement(8, \"core-format-text\", 7);\n    i0.ɵɵtemplate(9, AddonCompetencyCompetencySummaryPage_ion_card_12_ng_container_9_Template, 4, 3, \"ng-container\", 11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.competency.competency.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 6, \"addon.competency.path\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", ctx_r1.competency.comppath.framework.name)(\"contextLevel\", ctx_r1.contextLevel)(\"contextInstanceId\", ctx_r1.contextInstanceId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.competency.comppath.ancestors);\n  }\n}\n/**\n * Page that displays the competency summary.\n */\nexport class AddonCompetencyCompetencySummaryPage {\n  constructor() {\n    var _this = this;\n    this.competencyLoaded = false;\n    this.logView = CoreTime.once( /*#__PURE__*/_asyncToGenerator(function* () {\n      if (!_this.competency) {\n        return;\n      }\n      yield CoreUtils.ignoreErrors(AddonCompetency.logCompetencyView(_this.competencyId, _this.competency.competency.shortname));\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'core_competency_competency_viewed',\n        name: _this.competency.competency.shortname,\n        data: {\n          competencyId: _this.competencyId,\n          category: 'competency'\n        },\n        url: `/admin/tool/lp/user_competency.php?id=${_this.competencyId}`\n      });\n    }));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.competencyId = CoreNavigator.getRequiredRouteNumberParam('competencyId');\n        _this2.contextLevel = CoreNavigator.getRouteParam('contextLevel');\n        _this2.contextInstanceId = CoreNavigator.getRouteNumberParam('contextInstanceId');\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n        CoreNavigator.back();\n        return;\n      }\n      try {\n        yield _this2.fetchCompetency();\n      } finally {\n        _this2.competencyLoaded = true;\n      }\n    })();\n  }\n  /**\n   * Fetches the competency summary and updates the view.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchCompetency() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield AddonCompetency.getCompetencySummary(_this3.competencyId);\n        if (!_this3.contextLevel || _this3.contextInstanceId === undefined) {\n          var _result$usercompetenc;\n          // Context not specified, use user context.\n          _this3.contextLevel = \"user\" /* ContextLevel.USER */;\n          _this3.contextInstanceId = (_result$usercompetenc = result.usercompetency) === null || _result$usercompetenc === void 0 ? void 0 : _result$usercompetenc.userid;\n        }\n        _this3.competency = result.competency;\n        _this3.logView();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error getting competency summary data.');\n      }\n    })();\n  }\n  /**\n   * Refreshes the competency summary.\n   *\n   * @param refresher Refresher.\n   */\n  refreshCompetency(refresher) {\n    AddonCompetency.invalidateCompetencySummary(this.competencyId).finally(() => {\n      this.fetchCompetency().finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n      });\n    });\n  }\n  /**\n   * Opens the summary of a competency.\n   *\n   * @param competencyId Competency Id.\n   */\n  openCompetencySummary(competencyId) {\n    CoreNavigator.navigate(`../../${competencyId}/${ADDON_COMPETENCY_SUMMARY_PAGE}`, {\n      params: {\n        contextLevel: this.contextLevel,\n        contextInstanceId: this.contextInstanceId\n      }\n    });\n  }\n}\n_class = AddonCompetencyCompetencySummaryPage;\n_class.ɵfac = function AddonCompetencyCompetencySummaryPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-competency-competency-summary\"]],\n  decls: 13,\n  vars: 10,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [4, \"ngIf\"], [1, \"limited-width\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [3, \"text\", \"contextLevel\", \"contextInstanceId\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [1, \"ion-text-wrap\"], [1, \"item-heading\"], [4, \"ngFor\", \"ngForOf\"], [1, \"as-link\", 3, \"click\"]],\n  template: function AddonCompetencyCompetencySummaryPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\");\n      i0.ɵɵtemplate(6, AddonCompetencyCompetencySummaryPage_h1_6_Template, 4, 4, \"h1\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"ion-content\", 3)(8, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonCompetencyCompetencySummaryPage_Template_ion_refresher_ionRefresh_8_listener($event) {\n        return ctx.refreshCompetency($event.target);\n      });\n      i0.ɵɵelement(9, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(10, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"core-loading\", 6);\n      i0.ɵɵtemplate(12, AddonCompetencyCompetencySummaryPage_ion_card_12_Template, 10, 8, \"ion-card\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 6, \"core.back\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.competency);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.competencyLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(10, 8, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.competencyLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.competency);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreLoadingComponent, i3.CoreFormatTextDirective, i4.CoreContentDirective, i5.IonButtons, i5.IonCard, i5.IonContent, i5.IonHeader, i5.IonItem, i5.IonLabel, i5.IonRefresher, i5.IonRefresherContent, i5.IonTitle, i5.IonToolbar, i5.IonBackButton, i6.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonCompetency","CoreNavigator","CoreDomUtils","CoreUtils","ADDON_COMPETENCY_SUMMARY_PAGE","CoreTime","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","competency","shortname","contextLevel","contextInstanceId","ɵɵtextInterpolate","idnumber","ctx_r2","description","ɵɵelementContainerStart","ɵɵlistener","AddonCompetencyCompetencySummaryPage_ion_card_12_ng_container_9_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r6","ancestor_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","openCompetencySummary","id","ɵɵelementContainerEnd","name","ctx_r3","ɵɵtemplate","AddonCompetencyCompetencySummaryPage_ion_card_12_ion_item_1_Template","AddonCompetencyCompetencySummaryPage_ion_card_12_ng_container_9_Template","ctx_r1","ɵɵpipeBind1","comppath","framework","ancestors","AddonCompetencyCompetencySummaryPage","constructor","_this","competencyLoaded","logView","once","_asyncToGenerator","ignoreErrors","logCompetencyView","competencyId","logEvent","type","VIEW_ITEM_LIST","ws","data","category","url","ngOnInit","_this2","getRequiredRouteNumberParam","getRouteParam","getRouteNumberParam","error","showErrorModal","back","fetchCompetency","_this3","result","getCompetencySummary","undefined","_result$usercompetenc","usercompetency","userid","showErrorModalDefault","refreshCompetency","refresher","invalidateCompetencySummary","finally","complete","navigate","params","selectors","decls","vars","consts","template","AddonCompetencyCompetencySummaryPage_Template","rf","ctx","AddonCompetencyCompetencySummaryPage_h1_6_Template","AddonCompetencyCompetencySummaryPage_Template_ion_refresher_ionRefresh_8_listener","$event","target","AddonCompetencyCompetencySummaryPage_ion_card_12_Template","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/pages/competencysummary/competencysummary.page.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/pages/competencysummary/competencysummary.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { ContextLevel } from '@/core/constants';\nimport { AddonCompetencySummary, AddonCompetency } from '@addons/competency/services/competency';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ADDON_COMPETENCY_SUMMARY_PAGE } from '@addons/competency/competency.module';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that displays the competency summary.\n */\n@Component({\n    selector: 'page-addon-competency-competency-summary',\n    templateUrl: 'competencysummary.html',\n})\nexport class AddonCompetencyCompetencySummaryPage implements OnInit {\n\n    competencyLoaded = false;\n    competencyId!: number;\n    competency?: AddonCompetencySummary;\n    contextLevel?: ContextLevel;\n    contextInstanceId?: number;\n\n    protected logView: () => void;\n\n    constructor() {\n        this.logView = CoreTime.once(async () => {\n            if (!this.competency) {\n                return;\n            }\n\n            await CoreUtils.ignoreErrors(\n                AddonCompetency.logCompetencyView(this.competencyId, this.competency.competency.shortname),\n            );\n\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'core_competency_competency_viewed',\n                name: this.competency.competency.shortname,\n                data: {\n                    competencyId: this.competencyId,\n                    category: 'competency',\n                },\n                url: `/admin/tool/lp/user_competency.php?id=${this.competencyId}`,\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.competencyId = CoreNavigator.getRequiredRouteNumberParam('competencyId');\n            this.contextLevel = CoreNavigator.getRouteParam<ContextLevel>('contextLevel');\n            this.contextInstanceId = CoreNavigator.getRouteNumberParam('contextInstanceId');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        try {\n            await this.fetchCompetency();\n        } finally {\n            this.competencyLoaded = true;\n        }\n    }\n\n    /**\n     * Fetches the competency summary and updates the view.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchCompetency(): Promise<void> {\n        try {\n            const result = await AddonCompetency.getCompetencySummary(this.competencyId);\n            if (!this.contextLevel || this.contextInstanceId === undefined) {\n                // Context not specified, use user context.\n                this.contextLevel = ContextLevel.USER;\n                this.contextInstanceId = result.usercompetency?.userid;\n            }\n\n            this.competency = result.competency;\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting competency summary data.');\n        }\n    }\n\n    /**\n     * Refreshes the competency summary.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCompetency(refresher: HTMLIonRefresherElement): void {\n        AddonCompetency.invalidateCompetencySummary(this.competencyId).finally(() => {\n            this.fetchCompetency().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Opens the summary of a competency.\n     *\n     * @param competencyId Competency Id.\n     */\n    openCompetencySummary(competencyId: number): void {\n        CoreNavigator.navigate(\n            `../../${competencyId}/${ADDON_COMPETENCY_SUMMARY_PAGE}`,\n            {\n                params: { contextLevel: this.contextLevel, contextInstanceId: this.contextInstanceId },\n            },\n        );\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1 *ngIf=\"competency\">\n                <core-format-text [text]=\"competency.competency.shortname\" [contextLevel]=\"contextLevel\"\n                    [contextInstanceId]=\"contextInstanceId\" /> <small>{{ competency.competency.idnumber }}</small>\n            </h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!competencyLoaded\" (ionRefresh)=\"refreshCompetency($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"competencyLoaded\">\n        <ion-card *ngIf=\"competency\">\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"competency.competency.description\">\n                <ion-label>\n                    <core-format-text [text]=\"competency.competency.description\" [contextLevel]=\"contextLevel\"\n                        [contextInstanceId]=\"contextInstanceId\" />\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.competency.path' | translate }}</p>\n                    <p>\n                        <core-format-text [text]=\"competency.comppath.framework.name\" [contextLevel]=\"contextLevel\"\n                            [contextInstanceId]=\"contextInstanceId\" />\n                        <ng-container *ngFor=\"let ancestor of competency.comppath.ancestors\">\n                            &nbsp;/&nbsp;\n                            <button class=\"as-link\" (click)=\"openCompetencySummary(ancestor.id)\">\n                                <core-format-text [text]=\"ancestor.name\" [contextLevel]=\"contextLevel\"\n                                    [contextInstanceId]=\"contextInstanceId\" />\n                            </button>\n                        </ng-container>\n                    </p>\n                </ion-label>\n            </ion-item>\n        </ion-card>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}