{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { CoreUtils } from '@services/utils/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../directives/update-non-reactive-attributes\";\nimport * as i4 from \"@ngx-translate/core\";\nfunction CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_2_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r7.loadMore());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.loadmore\"), \" \");\n  }\n}\nfunction CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_3_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r9.loadMore());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.tryagain\"), \" \");\n  }\n}\nfunction CoreInfiniteLoadingComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4, 5);\n    i0.ɵɵtemplate(2, CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_2_Template, 3, 3, \"ion-button\", 6);\n    i0.ɵɵtemplate(3, CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_3_Template, 3, 3, \"ion-button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.error);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.error);\n  }\n}\nfunction CoreInfiniteLoadingComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreInfiniteLoadingComponent_ng_container_0_div_1_Template, 4, 2, \"div\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.enabled || ctx_r0.error);\n  }\n}\nfunction CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_2_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r15.loadMore());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.loadmore\"), \" \");\n  }\n}\nfunction CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_3_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r17.loadMore());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.tryagain\"), \" \");\n  }\n}\nfunction CoreInfiniteLoadingComponent_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4, 8);\n    i0.ɵɵtemplate(2, CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_2_Template, 3, 3, \"ion-button\", 6);\n    i0.ɵɵtemplate(3, CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_3_Template, 3, 3, \"ion-button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r11.error);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.error);\n  }\n}\nfunction CoreInfiniteLoadingComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreInfiniteLoadingComponent_ng_container_3_div_1_Template, 4, 2, \"div\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.enabled || ctx_r1.error);\n  }\n}\nfunction CoreInfiniteLoadingComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9, 10);\n    i0.ɵɵelement(2, \"ion-spinner\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(3, 1, \"core.loading\"));\n  }\n}\nconst THRESHOLD = .15; // % of the scroll element height that must be close to the edge to consider loading more items necessary.\n/**\n * Component to show a infinite loading trigger and spinner while more data is being loaded.\n *\n * Usage:\n * <core-infinite-loading [action]=\"loadingAction\" [enabled]=\"dataLoaded\"></core-infinite-loading>\n */\nexport class CoreInfiniteLoadingComponent {\n  constructor(element) {\n    this.error = false;\n    this.position = 'bottom';\n    this.loadingMore = false; // Hide button and avoid loading more.\n    this.action = new EventEmitter();\n    this.hostElement = element.nativeElement;\n  }\n  /**\n   * Detect changes on input properties.\n   *\n   * @param changes Changes.\n   */\n  ngOnChanges(changes) {\n    if (changes.enabled && this.enabled && this.position == 'bottom') {\n      // Infinite scroll enabled. If the list doesn't fill the full height, infinite scroll isn't triggered automatically.\n      this.checkScrollDistance();\n    }\n  }\n  /**\n   * Checks scroll distance to the beginning/end to load more items if needed.\n   *\n   * Previously, this function what firing an scroll event but now we have to calculate the distance\n   * like the Ionic component does.\n   */\n  checkScrollDistance() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.enabled || _this.error || _this.loadingMore) {\n        return;\n      }\n      // Wait until next tick to allow items to render and scroll content to grow.\n      yield CoreUtils.nextTick();\n      // Calculate distance from edge.\n      const content = _this.hostElement.closest('ion-content');\n      if (!content) {\n        return;\n      }\n      const scrollElement = yield content.getScrollElement();\n      const infiniteHeight = _this.hostElement.getBoundingClientRect().height;\n      const scrollTop = scrollElement.scrollTop;\n      const height = scrollElement.offsetHeight;\n      const threshold = height * THRESHOLD;\n      const distanceFromInfinite = _this.position === 'bottom' ? scrollElement.scrollHeight - infiniteHeight - scrollTop - threshold - height : scrollTop - infiniteHeight - threshold;\n      // If it's close enough the edge, trigger the action to load more items.\n      if (distanceFromInfinite < 0 && !_this.loadingMore && _this.enabled) {\n        _this.loadMore();\n      }\n    })();\n  }\n  /**\n   * Load More items calling the action provided.\n   */\n  loadMore() {\n    if (this.loadingMore) {\n      return;\n    }\n    this.loadingMore = true;\n    this.action.emit(() => this.complete());\n  }\n  /**\n   * Complete loading.\n   */\n  complete() {\n    if (this.position == 'top') {\n      // Wait a bit before allowing loading more, otherwise it could be re-triggered automatically when it shouldn't.\n      setTimeout(() => this.completeLoadMore(), 400);\n    } else {\n      this.completeLoadMore();\n    }\n  }\n  /**\n   * Complete loading.\n   */\n  completeLoadMore() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _this2$infiniteScroll;\n      _this2.loadingMore = false;\n      yield (_this2$infiniteScroll = _this2.infiniteScroll) === null || _this2$infiniteScroll === void 0 ? void 0 : _this2$infiniteScroll.complete();\n      // More items loaded. If the list doesn't fill the full height, infinite scroll isn't triggered automatically.\n      _this2.checkScrollDistance();\n    })();\n  }\n  /**\n   * Get the infinite scroll element.\n   *\n   * @returns Element or null.\n   */\n  get infiniteScrollElement() {\n    return this.hostElement.querySelector('ion-infinite-scroll');\n  }\n}\n_class = CoreInfiniteLoadingComponent;\n_class.ɵfac = function CoreInfiniteLoadingComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-infinite-loading\"]],\n  viewQuery: function CoreInfiniteLoadingComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(IonInfiniteScroll, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.infiniteScroll = _t.first);\n    }\n  },\n  inputs: {\n    enabled: \"enabled\",\n    error: \"error\",\n    position: \"position\"\n  },\n  outputs: {\n    action: \"action\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [3, \"disabled\", \"position\", \"ionInfinite\"], [\"class\", \"ion-padding ion-text-center\", 4, \"ngIf\"], [\"class\", \"ion-padding-horizontal\", 4, \"ngIf\"], [1, \"ion-padding-horizontal\"], [\"bottombutton\", \"\"], [\"expand\", \"block\", \"fill\", \"outline\", 3, \"click\", 4, \"ngIf\"], [\"expand\", \"block\", \"fill\", \"outline\", 3, \"click\"], [\"topbutton\", \"\"], [1, \"ion-padding\", \"ion-text-center\"], [\"spinnercontainer\", \"\"]],\n  template: function CoreInfiniteLoadingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoreInfiniteLoadingComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵelementStart(1, \"ion-infinite-scroll\", 1);\n      i0.ɵɵlistener(\"ionInfinite\", function CoreInfiniteLoadingComponent_Template_ion_infinite_scroll_ionInfinite_1_listener() {\n        return ctx.loadMore();\n      });\n      i0.ɵɵelement(2, \"ion-infinite-scroll-content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, CoreInfiniteLoadingComponent_ng_container_3_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(4, CoreInfiniteLoadingComponent_div_4_Template, 4, 3, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.loadingMore && ctx.position !== \"top\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.enabled || ctx.error || ctx.loadingMore)(\"position\", ctx.position);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loadingMore && ctx.position === \"top\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loadingMore);\n    }\n  },\n  dependencies: [i1.NgIf, i2.IonButton, i2.IonInfiniteScroll, i2.IonInfiniteScrollContent, i2.IonSpinner, i3.CoreUpdateNonReactiveAttributesDirective, i4.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","IonInfiniteScroll","CoreUtils","i0","ɵɵelementStart","ɵɵlistener","CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_2_Template_ion_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","loadMore","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_3_Template_ion_button_click_0_listener","_r10","ctx_r9","ɵɵtemplate","CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_2_Template","CoreInfiniteLoadingComponent_ng_container_0_div_1_ion_button_3_Template","ɵɵproperty","ctx_r3","error","ɵɵelementContainerStart","CoreInfiniteLoadingComponent_ng_container_0_div_1_Template","ɵɵelementContainerEnd","ctx_r0","enabled","CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_2_Template_ion_button_click_0_listener","_r16","ctx_r15","CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_3_Template_ion_button_click_0_listener","_r18","ctx_r17","CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_2_Template","CoreInfiniteLoadingComponent_ng_container_3_div_1_ion_button_3_Template","ctx_r11","CoreInfiniteLoadingComponent_ng_container_3_div_1_Template","ctx_r1","ɵɵelement","ɵɵattribute","THRESHOLD","CoreInfiniteLoadingComponent","constructor","element","position","loadingMore","action","hostElement","nativeElement","ngOnChanges","changes","checkScrollDistance","_this","_asyncToGenerator","nextTick","content","closest","scrollElement","getScrollElement","infiniteHeight","getBoundingClientRect","height","scrollTop","offsetHeight","threshold","distanceFromInfinite","scrollHeight","emit","complete","setTimeout","completeLoadMore","_this2","_this2$infiniteScroll","infiniteScroll","infiniteScrollElement","querySelector","ɵɵdirectiveInject","ElementRef","selectors","viewQuery","CoreInfiniteLoadingComponent_Query","rf","ctx","CoreInfiniteLoadingComponent_ng_container_0_Template","CoreInfiniteLoadingComponent_Template_ion_infinite_scroll_ionInfinite_1_listener","CoreInfiniteLoadingComponent_ng_container_3_Template","CoreInfiniteLoadingComponent_div_4_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/infinite-loading/infinite-loading.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/infinite-loading/core-infinite-loading.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, OnChanges, SimpleChange, ViewChild, ElementRef } from '@angular/core';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { CoreUtils } from '@services/utils/utils';\n\nconst THRESHOLD = .15; // % of the scroll element height that must be close to the edge to consider loading more items necessary.\n\n/**\n * Component to show a infinite loading trigger and spinner while more data is being loaded.\n *\n * Usage:\n * <core-infinite-loading [action]=\"loadingAction\" [enabled]=\"dataLoaded\"></core-infinite-loading>\n */\n@Component({\n    selector: 'core-infinite-loading',\n    templateUrl: 'core-infinite-loading.html',\n})\nexport class CoreInfiniteLoadingComponent implements OnChanges {\n\n    @Input() enabled!: boolean;\n    @Input() error = false;\n    @Input() position: 'top' | 'bottom' = 'bottom';\n    @Output() action: EventEmitter<() => void>; // Will emit an event when triggered.\n\n    @ViewChild(IonInfiniteScroll) infiniteScroll?: IonInfiniteScroll;\n\n    loadingMore = false; // Hide button and avoid loading more.\n    hostElement: HTMLElement;\n\n    constructor(element: ElementRef<HTMLElement>) {\n        this.action = new EventEmitter();\n        this.hostElement = element.nativeElement;\n    }\n\n    /**\n     * Detect changes on input properties.\n     *\n     * @param changes Changes.\n     */\n    ngOnChanges(changes: {[name: string]: SimpleChange}): void {\n        if (changes.enabled && this.enabled && this.position == 'bottom') {\n\n            // Infinite scroll enabled. If the list doesn't fill the full height, infinite scroll isn't triggered automatically.\n            this.checkScrollDistance();\n        }\n    }\n\n    /**\n     * Checks scroll distance to the beginning/end to load more items if needed.\n     *\n     * Previously, this function what firing an scroll event but now we have to calculate the distance\n     * like the Ionic component does.\n     */\n    protected async checkScrollDistance(): Promise<void> {\n        if (!this.enabled || this.error || this.loadingMore) {\n            return;\n        }\n\n        // Wait until next tick to allow items to render and scroll content to grow.\n        await CoreUtils.nextTick();\n\n        // Calculate distance from edge.\n        const content = this.hostElement.closest('ion-content');\n        if (!content) {\n            return;\n        }\n\n        const scrollElement = await content.getScrollElement();\n\n        const infiniteHeight = this.hostElement.getBoundingClientRect().height;\n        const scrollTop = scrollElement.scrollTop;\n        const height = scrollElement.offsetHeight;\n        const threshold = height * THRESHOLD;\n        const distanceFromInfinite = (this.position === 'bottom')\n            ? scrollElement.scrollHeight - infiniteHeight - scrollTop - threshold - height\n            : scrollTop - infiniteHeight - threshold;\n\n        // If it's close enough the edge, trigger the action to load more items.\n        if (distanceFromInfinite < 0 && !this.loadingMore && this.enabled) {\n            this.loadMore();\n        }\n    }\n\n    /**\n     * Load More items calling the action provided.\n     */\n    loadMore(): void {\n        if (this.loadingMore) {\n            return;\n        }\n\n        this.loadingMore = true;\n        this.action.emit(() => this.complete());\n    }\n\n    /**\n     * Complete loading.\n     */\n    complete(): void {\n        if (this.position == 'top') {\n            // Wait a bit before allowing loading more, otherwise it could be re-triggered automatically when it shouldn't.\n            setTimeout(() => this.completeLoadMore(), 400);\n        } else {\n            this.completeLoadMore();\n        }\n    }\n\n    /**\n     * Complete loading.\n     */\n    protected async completeLoadMore(): Promise<void> {\n        this.loadingMore = false;\n        await this.infiniteScroll?.complete();\n\n        // More items loaded. If the list doesn't fill the full height, infinite scroll isn't triggered automatically.\n        this.checkScrollDistance();\n    }\n\n    /**\n     * Get the infinite scroll element.\n     *\n     * @returns Element or null.\n     */\n    get infiniteScrollElement(): HTMLIonInfiniteScrollElement | null {\n        return this.hostElement.querySelector('ion-infinite-scroll');\n    }\n\n}\n","<ng-container *ngIf=\"!loadingMore && position !== 'top'\">\n    <div *ngIf=\"enabled || error\" class=\"ion-padding-horizontal\" #bottombutton>\n        <ion-button *ngIf=\"!error\" expand=\"block\" (click)=\"loadMore()\" fill=\"outline\">\n            {{ 'core.loadmore' | translate }}\n        </ion-button>\n        <ion-button *ngIf=\"error\" expand=\"block\" (click)=\"loadMore()\" fill=\"outline\">\n            {{ 'core.tryagain' | translate }}\n        </ion-button>\n    </div>\n</ng-container>\n\n<ion-infinite-scroll [disabled]=\"!enabled || error || loadingMore\" (ionInfinite)=\"loadMore()\" [position]=\"position\">\n    <ion-infinite-scroll-content />\n</ion-infinite-scroll>\n\n<ng-container *ngIf=\"!loadingMore && position === 'top'\">\n    <div *ngIf=\"enabled || error\" class=\"ion-padding-horizontal\" #topbutton>\n        <ion-button *ngIf=\"!error\" expand=\"block\" (click)=\"loadMore()\" fill=\"outline\">\n            {{ 'core.loadmore' | translate }}\n        </ion-button>\n        <ion-button *ngIf=\"error\" expand=\"block\" (click)=\"loadMore()\" fill=\"outline\">\n            {{ 'core.tryagain' | translate }}\n        </ion-button>\n    </div>\n</ng-container>\n\n<div *ngIf=\"loadingMore\" class=\"ion-padding ion-text-center\" #spinnercontainer>\n    <ion-spinner [attr.aria-label]=\"'core.loading' | translate\" />\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}