{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar Clipboard = /** @class */function (_super) {\n  __extends(Clipboard, _super);\n  function Clipboard() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Clipboard.prototype.copy = function (text) {\n    return cordova(this, \"copy\", {}, arguments);\n  };\n  Clipboard.prototype.paste = function () {\n    return cordova(this, \"paste\", {}, arguments);\n  };\n  Clipboard.prototype.clear = function () {\n    return cordova(this, \"clear\", {}, arguments);\n  };\n  Clipboard.ɵfac = /* @__PURE__ */function () {\n    let ɵClipboard_BaseFactory;\n    return function Clipboard_Factory(t) {\n      return (ɵClipboard_BaseFactory || (ɵClipboard_BaseFactory = i0.ɵɵgetInheritedFactory(Clipboard)))(t || Clipboard);\n    };\n  }();\n  Clipboard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Clipboard,\n    factory: Clipboard.ɵfac\n  });\n  Clipboard.pluginName = \"Clipboard\";\n  Clipboard.plugin = \"cordova-clipboard\";\n  Clipboard.pluginRef = \"cordova.plugins.clipboard\";\n  Clipboard.repo = \"https://github.com/ihadeed/cordova-clipboard\";\n  Clipboard.platforms = [\"Android\", \"iOS\", \"Windows Phone 8\"];\n  Clipboard = __decorate([], Clipboard);\n  return Clipboard;\n}(AwesomeCordovaNativePlugin);\nexport { Clipboard };\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Clipboard, [{\n    type: Injectable\n  }], null, {\n    copy: [],\n    paste: [],\n    clear: []\n  });\n})();","map":{"version":3,"names":["__decorate","__extends","Injectable","AwesomeCordovaNativePlugin","cordova","i0","Clipboard","_super","apply","arguments","prototype","copy","text","paste","clear","ɵfac","ɵClipboard_BaseFactory","Clipboard_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","pluginName","plugin","pluginRef","repo","platforms","ngDevMode","ɵsetClassMetadata","type"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@awesome-cordova-plugins/clipboard/ngx/index.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar Clipboard = /** @class */ (function (_super) {\n    __extends(Clipboard, _super);\n    function Clipboard() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Clipboard.prototype.copy = function (text) { return cordova(this, \"copy\", {}, arguments); };\n    Clipboard.prototype.paste = function () { return cordova(this, \"paste\", {}, arguments); };\n    Clipboard.prototype.clear = function () { return cordova(this, \"clear\", {}, arguments); };\n    Clipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Clipboard, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    Clipboard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Clipboard });\n    Clipboard.pluginName = \"Clipboard\";\n    Clipboard.plugin = \"cordova-clipboard\";\n    Clipboard.pluginRef = \"cordova.plugins.clipboard\";\n    Clipboard.repo = \"https://github.com/ihadeed/cordova-clipboard\";\n    Clipboard.platforms = [\"Android\", \"iOS\", \"Windows Phone 8\"];\n    Clipboard = __decorate([], Clipboard);\n    return Clipboard;\n}(AwesomeCordovaNativePlugin));\nexport { Clipboard };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable\n        }], propDecorators: { copy: [], paste: [], clear: [] } });\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,0BAA0B,EAAEC,OAAO,QAAQ,+BAA+B;AACnF,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,IAAIC,SAAS,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC7CN,SAAS,CAACK,SAAS,EAAEC,MAAM,CAAC;EAC5B,SAASD,SAASA,CAAA,EAAG;IACjB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAH,SAAS,CAACI,SAAS,CAACC,IAAI,GAAG,UAAUC,IAAI,EAAE;IAAE,OAAOR,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,EAAEK,SAAS,CAAC;EAAE,CAAC;EAC3FH,SAAS,CAACI,SAAS,CAACG,KAAK,GAAG,YAAY;IAAE,OAAOT,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,EAAEK,SAAS,CAAC;EAAE,CAAC;EACzFH,SAAS,CAACI,SAAS,CAACI,KAAK,GAAG,YAAY;IAAE,OAAOV,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,EAAEK,SAAS,CAAC;EAAE,CAAC;EACzFH,SAAS,CAACS,IAAI;IAAA,IAAAC,sBAAA;IAAA,gBAAAC,kBAAAC,CAAA;MAAA,QAAAF,sBAAA,KAAAA,sBAAA,GAA+EX,EAAE,CAAAc,qBAAA,CAAQb,SAAS,IAAAY,CAAA,IAATZ,SAAS;IAAA;EAAA,GAAsD;EACtKA,SAAS,CAACc,KAAK,kBAD8Ef,EAAE,CAAAgB,kBAAA;IAAAC,KAAA,EACYhB,SAAS;IAAAiB,OAAA,EAATjB,SAAS,CAAAS;EAAA,EAAG;EACvHT,SAAS,CAACkB,UAAU,GAAG,WAAW;EAClClB,SAAS,CAACmB,MAAM,GAAG,mBAAmB;EACtCnB,SAAS,CAACoB,SAAS,GAAG,2BAA2B;EACjDpB,SAAS,CAACqB,IAAI,GAAG,8CAA8C;EAC/DrB,SAAS,CAACsB,SAAS,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;EAC3DtB,SAAS,GAAGN,UAAU,CAAC,EAAE,EAAEM,SAAS,CAAC;EACrC,OAAOA,SAAS;AACpB,CAAC,CAACH,0BAA0B,CAAE;AAC9B,SAASG,SAAS;AAClB;EAAA,QAAAuB,SAAA,oBAAAA,SAAA,KAXiGxB,EAAE,CAAAyB,iBAAA,CAWPxB,SAAS,EAAc,CAAC;IACxGyB,IAAI,EAAE7B;EACV,CAAC,CAAC,QAAkB;IAAES,IAAI,EAAE,EAAE;IAAEE,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}