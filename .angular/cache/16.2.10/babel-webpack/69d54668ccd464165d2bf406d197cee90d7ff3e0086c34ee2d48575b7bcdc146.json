{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonMessagesProvider, AddonMessages } from '../../services/messages';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreConfig } from '@services/config';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreConstants } from '@/core/constants';\nimport { CorePlatform } from '@services/platform';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../core/components/button-with-spinner/button-with-spinner\";\nimport * as i3 from \"../../../../core/components/loading/loading\";\nimport * as i4 from \"../../../../core/directives/content\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@ngx-translate/core\";\nfunction AddonMessagesSettingsPage_ion_item_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 5)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-toggle\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonMessagesSettingsPage_ion_item_28_Template_ion_toggle_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.contactablePrivacy = $event);\n    })(\"ngModelChange\", function AddonMessagesSettingsPage_ion_item_28_Template_ion_toggle_ngModelChange_5_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.saveContactablePrivacy(ctx_r9.contactablePrivacy));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.messages.blocknoncontacts\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.contactablePrivacy);\n  }\n}\nfunction AddonMessagesSettingsPage_ion_list_29_ion_item_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"ion-radio\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.messages.contactableprivacy_site\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r10.siteValue);\n  }\n}\nfunction AddonMessagesSettingsPage_ion_list_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-list\")(1, \"ion-radio-group\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonMessagesSettingsPage_ion_list_29_Template_ion_radio_group_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.contactablePrivacy = $event);\n    })(\"ionChange\", function AddonMessagesSettingsPage_ion_list_29_Template_ion_radio_group_ionChange_1_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.saveContactablePrivacy(ctx_r13.contactablePrivacy));\n    });\n    i0.ɵɵelementStart(2, \"ion-item-divider\")(3, \"ion-label\")(4, \"h2\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"ion-item\", 5)(8, \"ion-label\")(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(12, \"ion-radio\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"ion-item\", 5)(14, \"ion-label\")(15, \"p\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(18, \"ion-radio\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, AddonMessagesSettingsPage_ion_list_29_ion_item_19_Template, 6, 4, \"ion-item\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.contactablePrivacy);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 7, \"addon.messages.contactableprivacy\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 9, \"addon.messages.contactableprivacy_onlycontacts\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.onlyContactsValue);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 11, \"addon.messages.contactableprivacy_coursemember\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.courseMemberValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.allowSiteMessaging);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_container_30_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    preferences: a0\n  };\n};\nfunction AddonMessagesSettingsPage_ng_container_30_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesSettingsPage_ng_container_30_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    const _r3 = i0.ɵɵreference(32);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r14.preferences));\n  }\n}\nfunction AddonMessagesSettingsPage_ng_container_30_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_container_30_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesSettingsPage_ng_container_30_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    const _r5 = i0.ɵɵreference(34);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r15.preferences));\n  }\n}\nfunction AddonMessagesSettingsPage_ng_container_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesSettingsPage_ng_container_30_ng_container_1_Template, 2, 4, \"ng-container\", 7);\n    i0.ɵɵtemplate(2, AddonMessagesSettingsPage_ng_container_30_ng_container_2_Template, 2, 4, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.groupMessagingEnabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.groupMessagingEnabled);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_core_button_with_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-button-with-spinner\", 20)(1, \"ion-toggle\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const state_r26 = i0.ɵɵnextContext(2).$implicit;\n      const processor_r24 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(processor_r24[state_r26].checked = $event);\n    })(\"ngModelChange\", function AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const state_r26 = i0.ɵɵnextContext(2).$implicit;\n      const processor_r24 = i0.ɵɵnextContext().$implicit;\n      const notification_r22 = i0.ɵɵnextContext().$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r36.changePreferenceLegacy(notification_r22, processor_r24, state_r26));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const state_r26 = i0.ɵɵnextContext(2).$implicit;\n    const processor_r24 = i0.ɵɵnextContext().$implicit;\n    const notification_r22 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"loading\", notification_r22[\"updating\" + state_r26]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", processor_r24[state_r26].checked);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.forced\"), \" \");\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.disallowed\"), \" \");\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_core_button_with_spinner_1_Template, 2, 2, \"core-button-with-spinner\", 18);\n    i0.ɵɵtemplate(2, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_span_2_Template, 3, 3, \"span\", 19);\n    i0.ɵɵtemplate(3, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_span_3_Template, 3, 3, \"span\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const state_r26 = i0.ɵɵnextContext().$implicit;\n    const processor_r24 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !processor_r24.locked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", processor_r24.locked && processor_r24[state_r26].checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", processor_r24.locked && !processor_r24[state_r26].checked);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.disabled\"));\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 5)(1, \"ion-label\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_Template, 4, 3, \"ng-container\", 7);\n    i0.ɵɵtemplate(6, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_span_6_Template, 3, 3, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r26 = ctx.$implicit;\n    const preferences_r18 = i0.ɵɵnextContext(4).preferences;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"core.settings.\" + state_r26));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !preferences_r18.disableall);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", preferences_r18.disableall);\n  }\n}\nconst _c1 = function () {\n  return [\"loggedin\", \"loggedoff\"];\n};\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\", 5)(2, \"ion-label\")(3, \"p\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(5, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_Template, 7, 5, \"ion-item\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processor_r24 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(processor_r24.displayname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(2, _c1));\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-header\", 15)(2, \"ion-item\", 5)(3, \"ion-label\")(4, \"h2\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(6, \"ion-card-content\", 15);\n    i0.ɵɵtemplate(7, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_Template, 6, 3, \"ng-container\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const notification_r22 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(notification_r22.displayname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", notification_r22.processors);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_Template, 8, 2, \"ion-card\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const component_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", component_r20.notifications);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddonMessagesSettingsPage_ng_template_31_ng_container_0_Template, 2, 1, \"ng-container\", 14);\n  }\n  if (rf & 2) {\n    const preferences_r18 = ctx.preferences;\n    i0.ɵɵproperty(\"ngForOf\", preferences_r18.components);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_core_button_with_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r59 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-button-with-spinner\", 20)(1, \"ion-toggle\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r59);\n      const processor_r52 = i0.ɵɵnextContext(2).$implicit;\n      return i0.ɵɵresetView(processor_r52.enabled = $event);\n    })(\"ngModelChange\", function AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const processor_r52 = i0.ɵɵnextContext(2).$implicit;\n      const notification_r50 = i0.ɵɵnextContext().$implicit;\n      const ctx_r60 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r60.changePreference(notification_r50, processor_r52));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const processor_r52 = i0.ɵɵnextContext(2).$implicit;\n    const notification_r50 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"loading\", notification_r50.updating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", processor_r52.enabled);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processor_r52 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", processor_r52.lockedmessage, \" \");\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_core_button_with_spinner_1_Template, 2, 2, \"core-button-with-spinner\", 18);\n    i0.ɵɵtemplate(2, AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_span_2_Template, 2, 1, \"span\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processor_r52 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !processor_r52.locked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", processor_r52.locked);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.disabled\"));\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 5)(2, \"ion-label\")(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_Template, 3, 2, \"ng-container\", 7);\n    i0.ɵɵtemplate(6, AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_span_6_Template, 3, 3, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processor_r52 = ctx.$implicit;\n    const preferences_r46 = i0.ɵɵnextContext(3).preferences;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(processor_r52.displayname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !preferences_r46.disableall);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", preferences_r46.disableall);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-item-divider\", 5)(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(6, AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_Template, 7, 3, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const notification_r50 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, \"addon.notifications.notificationpreferences\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", notification_r50.processors);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_Template, 7, 4, \"ion-card\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const component_r48 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", component_r48.notifications);\n  }\n}\nfunction AddonMessagesSettingsPage_ng_template_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddonMessagesSettingsPage_ng_template_33_ng_container_0_Template, 2, 1, \"ng-container\", 14);\n  }\n  if (rf & 2) {\n    const preferences_r46 = ctx.preferences;\n    i0.ɵɵproperty(\"ngForOf\", preferences_r46.components);\n  }\n}\n/**\n * Page that displays the messages settings page.\n */\nexport class AddonMessagesSettingsPage {\n  constructor() {\n    this.preferencesLoaded = false;\n    this.advancedContactable = false; // Whether the site supports \"advanced\" contactable privacy.\n    this.allowSiteMessaging = false;\n    this.onlyContactsValue = AddonMessagesProvider.MESSAGE_PRIVACY_ONLYCONTACTS;\n    this.courseMemberValue = AddonMessagesProvider.MESSAGE_PRIVACY_COURSEMEMBER;\n    this.siteValue = AddonMessagesProvider.MESSAGE_PRIVACY_SITE;\n    this.groupMessagingEnabled = false;\n    this.sendOnEnter = false;\n    this.loggedInOffLegacyMode = false;\n    const currentSite = CoreSites.getRequiredCurrentSite();\n    this.advancedContactable = !!currentSite.isVersionGreaterEqualThan('3.6');\n    this.allowSiteMessaging = !!currentSite.canUseAdvancedFeature('messagingallusers');\n    this.groupMessagingEnabled = AddonMessages.isGroupMessagingEnabled();\n    this.loggedInOffLegacyMode = !currentSite.isVersionGreaterEqualThan('4.0');\n    this.asyncInit();\n  }\n  asyncInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.sendOnEnter = !!(yield CoreConfig.get(CoreConstants.SETTINGS_SEND_ON_ENTER, !CorePlatform.isMobile()));\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.fetchPreferences();\n  }\n  /**\n   * Fetches preference data.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchPreferences() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const preferences = yield AddonMessages.getMessagePreferences();\n        if (_this2.groupMessagingEnabled) {\n          // Simplify the preferences.\n          for (const component of preferences.components) {\n            // Only display get the notification preferences.\n            component.notifications = component.notifications.filter(notification => notification.preferencekey == AddonMessagesProvider.NOTIFICATION_PREFERENCES_KEY);\n            if (_this2.loggedInOffLegacyMode) {\n              // Load enabled from loggedin / loggedoff values.\n              component.notifications.forEach(notification => {\n                notification.processors.forEach(processor => {\n                  processor.enabled = processor.loggedin.checked || processor.loggedoff.checked;\n                });\n              });\n            }\n          }\n        }\n        _this2.preferences = preferences;\n        _this2.contactablePrivacy = preferences.blocknoncontacts;\n        _this2.previousContactableValue = _this2.contactablePrivacy;\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n      } finally {\n        _this2.preferencesLoaded = true;\n      }\n    })();\n  }\n  /**\n   * Update preferences. The purpose is to store the updated data, it won't be reflected in the view.\n   */\n  updatePreferences() {\n    AddonMessages.invalidateMessagePreferences().finally(() => {\n      this.fetchPreferences();\n    });\n  }\n  /**\n   * Update preferences after a certain time. The purpose is to store the updated data, it won't be reflected in the view.\n   */\n  updatePreferencesAfterDelay() {\n    // Cancel pending updates.\n    clearTimeout(this.updateTimeout);\n    this.updateTimeout = window.setTimeout(() => {\n      this.updateTimeout = undefined;\n      this.updatePreferences();\n    }, 5000);\n  }\n  /**\n   * Save the contactable privacy setting..\n   *\n   * @param value The value to set.\n   */\n  saveContactablePrivacy(value) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.contactablePrivacy == _this3.previousContactableValue) {\n        // Value hasn't changed from previous, it probably means that we just fetched the value from the server.\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      if (!_this3.advancedContactable) {\n        // Convert from boolean to number.\n        value = value ? 1 : 0;\n      }\n      try {\n        yield CoreUser.updateUserPreference('message_blocknoncontacts', String(value));\n        // Update the preferences since they were modified.\n        _this3.updatePreferencesAfterDelay();\n        _this3.previousContactableValue = _this3.contactablePrivacy;\n      } catch (message) {\n        // Show error and revert change.\n        CoreDomUtils.showErrorModal(message);\n        _this3.contactablePrivacy = _this3.previousContactableValue;\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Change the value of a certain preference. Versions 3.6 onwards.\n   *\n   * @param notification Notification object.\n   * @param processor Notification processor.\n   */\n  changePreference(notification, processor) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      // Update both states at the same time.\n      let value = notification.processors.filter(processor => processor.enabled).map(processor => processor.name).join(',');\n      if (value == '') {\n        value = 'none';\n      }\n      notification.updating = true;\n      const promises = [];\n      if (_this4.loggedInOffLegacyMode) {\n        promises.push(CoreUser.updateUserPreference(notification.preferencekey + '_loggedin', value));\n        promises.push(CoreUser.updateUserPreference(notification.preferencekey + '_loggedoff', value));\n      } else {\n        promises.push(CoreUser.updateUserPreference(notification.preferencekey + '_enabled', value));\n      }\n      try {\n        yield Promise.all(promises);\n        // Update the preferences since they were modified.\n        _this4.updatePreferencesAfterDelay();\n      } catch (error) {\n        // Show error and revert change.\n        CoreDomUtils.showErrorModal(error);\n        processor.enabled = !processor.enabled;\n      } finally {\n        notification.updating = false;\n      }\n    })();\n  }\n  /**\n   * Change the value of a certain preference. Only on version 3.5.\n   *\n   * @param notification Notification object.\n   * @param processor Notification processor.\n   * @param state State name, ['loggedin', 'loggedoff'].\n   */\n  changePreferenceLegacy(notification, processor, state) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      // Update only the specified state.\n      const processorState = processor[state];\n      const preferenceName = notification.preferencekey + '_' + processorState.name;\n      const value = notification.processors.filter(processor => processor[state].checked).map(processor => processor.name).join(',');\n      notification['updating' + state] = true;\n      try {\n        yield CoreUser.updateUserPreference(preferenceName, value);\n        // Update the preferences since they were modified.\n        _this5.updatePreferencesAfterDelay();\n      } catch (error) {\n        // Show error and revert change.\n        CoreDomUtils.showErrorModal(error);\n        processorState.checked = !processorState.checked;\n      } finally {\n        notification['updating' + state] = false;\n      }\n    })();\n  }\n  /**\n   * Refresh the list of preferences.\n   *\n   * @param refresher Refresher.\n   */\n  refreshPreferences(refresher) {\n    AddonMessages.invalidateMessagePreferences().finally(() => {\n      this.fetchPreferences().finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n      });\n    });\n  }\n  /**\n   * Send on Enter toggle has changed.\n   */\n  sendOnEnterChanged() {\n    // Save the value.\n    CoreConfig.set(CoreConstants.SETTINGS_SEND_ON_ENTER, this.sendOnEnter ? 1 : 0);\n    // Notify the app.\n    CoreEvents.trigger(CoreEvents.SEND_ON_ENTER_CHANGED, {\n      sendOnEnter: !!this.sendOnEnter\n    }, CoreSites.getCurrentSiteId());\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    // If there is a pending action to update preferences, execute it right now.\n    if (this.updateTimeout) {\n      clearTimeout(this.updateTimeout);\n      this.updatePreferences();\n    }\n  }\n}\n_class = AddonMessagesSettingsPage;\n_class.ɵfac = function AddonMessagesSettingsPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-messages-settings\"]],\n  decls: 35,\n  vars: 21,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [1, \"ion-text-wrap\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"legacySettings\", \"\"], [\"settings\", \"\"], [3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"slot\", \"start\", 3, \"value\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ion-no-padding\"], [1, \"item-heading\"], [\"class\", \"ion-text-wrap\", 4, \"ngFor\", \"ngForOf\"], [\"slot\", \"end\", 3, \"loading\", 4, \"ngIf\"], [\"class\", \"text-gray\", \"slot\", \"end\", 4, \"ngIf\"], [\"slot\", \"end\", 3, \"loading\"], [3, \"ngModel\", \"ngModelChange\"], [\"slot\", \"end\", 1, \"text-gray\"]],\n  template: function AddonMessagesSettingsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"ion-refresher\", 2);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonMessagesSettingsPage_Template_ion_refresher_ionRefresh_10_listener($event) {\n        return ctx.refreshPreferences($event.target);\n      });\n      i0.ɵɵelement(11, \"ion-refresher-content\", 3);\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"core-loading\", 4)(14, \"ion-card\")(15, \"ion-list\")(16, \"ion-item-divider\", 5)(17, \"ion-label\")(18, \"h2\");\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"ion-item\", 5)(22, \"ion-label\")(23, \"p\");\n      i0.ɵɵtext(24);\n      i0.ɵɵpipe(25, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"ion-toggle\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddonMessagesSettingsPage_Template_ion_toggle_ngModelChange_26_listener($event) {\n        return ctx.sendOnEnter = $event;\n      })(\"ngModelChange\", function AddonMessagesSettingsPage_Template_ion_toggle_ngModelChange_26_listener() {\n        return ctx.sendOnEnterChanged();\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(27, \"ion-card\");\n      i0.ɵɵtemplate(28, AddonMessagesSettingsPage_ion_item_28_Template, 6, 4, \"ion-item\", 7);\n      i0.ɵɵtemplate(29, AddonMessagesSettingsPage_ion_list_29_Template, 20, 13, \"ion-list\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, AddonMessagesSettingsPage_ng_container_30_Template, 3, 2, \"ng-container\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(31, AddonMessagesSettingsPage_ng_template_31_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(33, AddonMessagesSettingsPage_ng_template_33_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 11, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 13, \"addon.messages.messages\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.preferencesLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(12, 15, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.preferencesLoaded);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 17, \"core.settings.general\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 19, \"addon.messages.useentertosend\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.sendOnEnter);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.advancedContactable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.advancedContactable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.preferences);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i2.CoreButtonWithSpinnerComponent, i3.CoreLoadingComponent, i4.CoreContentDirective, i5.NgControlStatus, i5.NgModel, i6.IonButtons, i6.IonCard, i6.IonCardContent, i6.IonCardHeader, i6.IonContent, i6.IonHeader, i6.IonItem, i6.IonItemDivider, i6.IonLabel, i6.IonList, i6.IonRadio, i6.IonRadioGroup, i6.IonRefresher, i6.IonRefresherContent, i6.IonTitle, i6.IonToggle, i6.IonToolbar, i6.BooleanValueAccessor, i6.RadioValueAccessor, i6.SelectValueAccessor, i6.IonBackButton, i7.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonMessagesProvider","AddonMessages","CoreUser","CoreConfig","CoreEvents","CoreSites","CoreDomUtils","CoreConstants","CorePlatform","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddonMessagesSettingsPage_ion_item_28_Template_ion_toggle_ngModelChange_5_listener","$event","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","contactablePrivacy","ctx_r9","saveContactablePrivacy","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","ctx_r0","ɵɵelement","ctx_r10","siteValue","AddonMessagesSettingsPage_ion_list_29_Template_ion_radio_group_ngModelChange_1_listener","_r12","ctx_r11","AddonMessagesSettingsPage_ion_list_29_Template_ion_radio_group_ionChange_1_listener","ctx_r13","ɵɵtemplate","AddonMessagesSettingsPage_ion_list_29_ion_item_19_Template","ctx_r1","onlyContactsValue","courseMemberValue","allowSiteMessaging","ɵɵelementContainer","ɵɵelementContainerStart","AddonMessagesSettingsPage_ng_container_30_ng_container_1_ng_container_1_Template","ɵɵelementContainerEnd","_r3","ɵɵpureFunction1","_c0","ctx_r14","preferences","AddonMessagesSettingsPage_ng_container_30_ng_container_2_ng_container_1_Template","_r5","ctx_r15","AddonMessagesSettingsPage_ng_container_30_ng_container_1_Template","AddonMessagesSettingsPage_ng_container_30_ng_container_2_Template","ctx_r2","groupMessagingEnabled","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener","_r34","state_r26","$implicit","processor_r24","checked","notification_r22","ctx_r36","changePreferenceLegacy","ɵɵtextInterpolate1","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_core_button_with_spinner_1_Template","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_span_2_Template","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_span_3_Template","locked","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_ng_container_5_Template","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_span_6_Template","preferences_r18","disableall","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_ion_item_5_Template","displayname","ɵɵpureFunction0","_c1","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_ng_container_7_Template","processors","AddonMessagesSettingsPage_ng_template_31_ng_container_0_ion_card_1_Template","component_r20","notifications","AddonMessagesSettingsPage_ng_template_31_ng_container_0_Template","components","AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener","_r59","processor_r52","enabled","notification_r50","ctx_r60","changePreference","updating","lockedmessage","AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_core_button_with_spinner_1_Template","AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_span_2_Template","AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_ng_container_5_Template","AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_span_6_Template","preferences_r46","AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_ng_container_6_Template","AddonMessagesSettingsPage_ng_template_33_ng_container_0_ion_card_1_Template","component_r48","AddonMessagesSettingsPage_ng_template_33_ng_container_0_Template","AddonMessagesSettingsPage","constructor","preferencesLoaded","advancedContactable","MESSAGE_PRIVACY_ONLYCONTACTS","MESSAGE_PRIVACY_COURSEMEMBER","MESSAGE_PRIVACY_SITE","sendOnEnter","loggedInOffLegacyMode","currentSite","getRequiredCurrentSite","isVersionGreaterEqualThan","canUseAdvancedFeature","isGroupMessagingEnabled","asyncInit","_this","_asyncToGenerator","get","SETTINGS_SEND_ON_ENTER","isMobile","ngOnInit","fetchPreferences","_this2","getMessagePreferences","component","filter","notification","preferencekey","NOTIFICATION_PREFERENCES_KEY","forEach","processor","loggedin","loggedoff","blocknoncontacts","previousContactableValue","error","showErrorModal","updatePreferences","invalidateMessagePreferences","finally","updatePreferencesAfterDelay","clearTimeout","updateTimeout","window","setTimeout","undefined","value","_this3","modal","showModalLoading","updateUserPreference","String","message","dismiss","_this4","map","name","join","promises","push","Promise","all","state","_this5","processorState","preferenceName","refreshPreferences","refresher","complete","sendOnEnterChanged","set","trigger","SEND_ON_ENTER_CHANGED","getCurrentSiteId","ngOnDestroy","selectors","decls","vars","consts","template","AddonMessagesSettingsPage_Template","rf","ctx","AddonMessagesSettingsPage_Template_ion_refresher_ionRefresh_10_listener","target","AddonMessagesSettingsPage_Template_ion_toggle_ngModelChange_26_listener","AddonMessagesSettingsPage_ion_item_28_Template","AddonMessagesSettingsPage_ion_list_29_Template","AddonMessagesSettingsPage_ng_container_30_Template","AddonMessagesSettingsPage_ng_template_31_Template","ɵɵtemplateRefExtractor","AddonMessagesSettingsPage_ng_template_33_Template","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messages/pages/settings/settings.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messages/pages/settings/settings.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    AddonMessagesProvider, AddonMessagesMessagePreferences,\n    AddonMessagesMessagePreferencesNotification,\n    AddonMessagesMessagePreferencesNotificationProcessor,\n    AddonMessages,\n} from '../../services/messages';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreConfig } from '@services/config';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreConstants } from '@/core/constants';\nimport { AddonNotificationsPreferencesNotificationProcessorState } from '@addons/notifications/services/notifications';\nimport { CorePlatform } from '@services/platform';\n\n/**\n * Page that displays the messages settings page.\n */\n@Component({\n    selector: 'page-addon-messages-settings',\n    templateUrl: 'settings.html',\n})\nexport class AddonMessagesSettingsPage implements OnInit, OnDestroy {\n\n    protected updateTimeout?: number;\n\n    preferences?: AddonMessagesMessagePreferences;\n    preferencesLoaded = false;\n    contactablePrivacy?: number | boolean;\n    advancedContactable = false; // Whether the site supports \"advanced\" contactable privacy.\n    allowSiteMessaging = false;\n    onlyContactsValue = AddonMessagesProvider.MESSAGE_PRIVACY_ONLYCONTACTS;\n    courseMemberValue = AddonMessagesProvider.MESSAGE_PRIVACY_COURSEMEMBER;\n    siteValue = AddonMessagesProvider.MESSAGE_PRIVACY_SITE;\n    groupMessagingEnabled = false;\n    sendOnEnter = false;\n\n    protected loggedInOffLegacyMode = false;\n    protected previousContactableValue?: number | boolean;\n\n    constructor() {\n\n        const currentSite = CoreSites.getRequiredCurrentSite();\n        this.advancedContactable = !!currentSite.isVersionGreaterEqualThan('3.6');\n        this.allowSiteMessaging = !!currentSite.canUseAdvancedFeature('messagingallusers');\n        this.groupMessagingEnabled = AddonMessages.isGroupMessagingEnabled();\n        this.loggedInOffLegacyMode = !currentSite.isVersionGreaterEqualThan('4.0');\n\n        this.asyncInit();\n    }\n\n    protected async asyncInit(): Promise<void> {\n        this.sendOnEnter = !!(await CoreConfig.get(CoreConstants.SETTINGS_SEND_ON_ENTER, !CorePlatform.isMobile()));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.fetchPreferences();\n    }\n\n    /**\n     * Fetches preference data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchPreferences(): Promise<void> {\n        try {\n            const preferences = await AddonMessages.getMessagePreferences();\n            if (this.groupMessagingEnabled) {\n                // Simplify the preferences.\n                for (const component of preferences.components) {\n                    // Only display get the notification preferences.\n                    component.notifications = component.notifications.filter((notification) =>\n                        notification.preferencekey == AddonMessagesProvider.NOTIFICATION_PREFERENCES_KEY);\n\n                    if (this.loggedInOffLegacyMode) {\n                        // Load enabled from loggedin / loggedoff values.\n                        component.notifications.forEach((notification) => {\n                            notification.processors.forEach(\n                                (processor) => {\n                                    processor.enabled = processor.loggedin.checked || processor.loggedoff.checked;\n                                },\n                            );\n                        });\n                    }\n                }\n            }\n\n            this.preferences = preferences;\n            this.contactablePrivacy = preferences.blocknoncontacts;\n            this.previousContactableValue = this.contactablePrivacy;\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            this.preferencesLoaded = true;\n        }\n    }\n\n    /**\n     * Update preferences. The purpose is to store the updated data, it won't be reflected in the view.\n     */\n    protected updatePreferences(): void {\n        AddonMessages.invalidateMessagePreferences().finally(() => {\n            this.fetchPreferences();\n        });\n    }\n\n    /**\n     * Update preferences after a certain time. The purpose is to store the updated data, it won't be reflected in the view.\n     */\n    protected updatePreferencesAfterDelay(): void {\n        // Cancel pending updates.\n        clearTimeout(this.updateTimeout);\n\n        this.updateTimeout = window.setTimeout(() => {\n            this.updateTimeout = undefined;\n            this.updatePreferences();\n        }, 5000);\n    }\n\n    /**\n     * Save the contactable privacy setting..\n     *\n     * @param value The value to set.\n     */\n    async saveContactablePrivacy(value?: number | boolean): Promise<void> {\n        if (this.contactablePrivacy == this.previousContactableValue) {\n            // Value hasn't changed from previous, it probably means that we just fetched the value from the server.\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        if (!this.advancedContactable) {\n            // Convert from boolean to number.\n            value = value ? 1 : 0;\n        }\n\n        try {\n            await CoreUser.updateUserPreference('message_blocknoncontacts', String(value));\n            // Update the preferences since they were modified.\n            this.updatePreferencesAfterDelay();\n            this.previousContactableValue = this.contactablePrivacy;\n        } catch (message) {\n            // Show error and revert change.\n            CoreDomUtils.showErrorModal(message);\n            this.contactablePrivacy = this.previousContactableValue;\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Change the value of a certain preference. Versions 3.6 onwards.\n     *\n     * @param notification Notification object.\n     * @param processor Notification processor.\n     */\n    async changePreference(\n        notification: AddonMessagesMessagePreferencesNotificationFormatted,\n        processor: AddonMessagesMessagePreferencesNotificationProcessor,\n    ): Promise<void> {\n        // Update both states at the same time.\n        let value = notification.processors\n            .filter((processor) => processor.enabled)\n            .map((processor) => processor.name)\n            .join(',');\n\n        if (value == '') {\n            value = 'none';\n        }\n\n        notification.updating = true;\n\n        const promises: Promise<void>[] = [];\n        if (this.loggedInOffLegacyMode) {\n            promises.push(CoreUser.updateUserPreference(notification.preferencekey + '_loggedin', value));\n            promises.push(CoreUser.updateUserPreference(notification.preferencekey + '_loggedoff', value));\n        }  else {\n            promises.push(CoreUser.updateUserPreference(notification.preferencekey + '_enabled', value));\n        }\n\n        try {\n            await Promise.all(promises);\n            // Update the preferences since they were modified.\n            this.updatePreferencesAfterDelay();\n        } catch (error) {\n            // Show error and revert change.\n            CoreDomUtils.showErrorModal(error);\n            processor.enabled = !processor.enabled;\n        } finally {\n            notification.updating = false;\n        }\n    }\n\n    /**\n     * Change the value of a certain preference. Only on version 3.5.\n     *\n     * @param notification Notification object.\n     * @param processor Notification processor.\n     * @param state State name, ['loggedin', 'loggedoff'].\n     */\n    async changePreferenceLegacy(\n        notification: AddonMessagesMessagePreferencesNotificationFormatted,\n        processor: AddonMessagesMessagePreferencesNotificationProcessor,\n        state: 'loggedin' | 'loggedoff',\n    ): Promise<void> {\n        // Update only the specified state.\n        const processorState: AddonNotificationsPreferencesNotificationProcessorState = processor[state];\n        const preferenceName = notification.preferencekey + '_' + processorState.name;\n\n        const value = notification.processors\n            .filter((processor) => processor[state].checked)\n            .map((processor) => processor.name)\n            .join(',');\n\n        notification['updating'+state] = true;\n        try {\n            await CoreUser.updateUserPreference(preferenceName, value);\n            // Update the preferences since they were modified.\n            this.updatePreferencesAfterDelay();\n        } catch (error) {\n            // Show error and revert change.\n            CoreDomUtils.showErrorModal(error);\n            processorState.checked = !processorState.checked;\n        } finally {\n            notification['updating'+state] = false;\n        }\n    }\n\n    /**\n     * Refresh the list of preferences.\n     *\n     * @param refresher Refresher.\n     */\n    refreshPreferences(refresher?: HTMLIonRefresherElement): void {\n        AddonMessages.invalidateMessagePreferences().finally(() => {\n            this.fetchPreferences().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Send on Enter toggle has changed.\n     */\n    sendOnEnterChanged(): void {\n        // Save the value.\n        CoreConfig.set(CoreConstants.SETTINGS_SEND_ON_ENTER, this.sendOnEnter ? 1 : 0);\n\n        // Notify the app.\n        CoreEvents.trigger(\n            CoreEvents.SEND_ON_ENTER_CHANGED,\n            { sendOnEnter: !!this.sendOnEnter },\n            CoreSites.getCurrentSiteId(),\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        // If there is a pending action to update preferences, execute it right now.\n        if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n            this.updatePreferences();\n        }\n    }\n\n}\n\n/**\n * Message preferences notification with some caclulated data.\n */\ntype AddonMessagesMessagePreferencesNotificationFormatted = AddonMessagesMessagePreferencesNotification & {\n    updating?: boolean; // Calculated in the app. Whether the notification is being updated.\n    updatingloggedin?: boolean; // Calculated in the app. Whether the notification is being updated.\n    updatingloggedoff?: boolean; // Calculated in the app. Whether the notification is being updated.\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.messages.messages' | translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!preferencesLoaded\" (ionRefresh)=\"refreshPreferences($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"preferencesLoaded\">\n        <!-- General settings. -->\n        <ion-card>\n            <ion-list>\n                <ion-item-divider class=\"ion-text-wrap\">\n                    <ion-label>\n                        <h2>{{ 'core.settings.general' | translate }}</h2>\n                    </ion-label>\n                </ion-item-divider>\n                <ion-item class=\"ion-text-wrap\">\n                    <ion-label>\n                        <p>{{ 'addon.messages.useentertosend' | translate }}</p>\n                    </ion-label>\n                    <ion-toggle [(ngModel)]=\"sendOnEnter\" (ngModelChange)=\"sendOnEnterChanged()\" slot=\"end\" />\n                </ion-item>\n            </ion-list>\n        </ion-card>\n\n        <!-- Contactable privacy. -->\n        <ion-card>\n            <ion-item *ngIf=\"!advancedContactable\">\n                <ion-label class=\"ion-text-wrap\">\n                    <p>{{ 'addon.messages.blocknoncontacts' | translate }}</p>\n                </ion-label>\n                <ion-toggle [(ngModel)]=\"contactablePrivacy\" (ngModelChange)=\"saveContactablePrivacy(contactablePrivacy)\" slot=\"end\" />\n            </ion-item>\n\n            <ion-list *ngIf=\"advancedContactable\">\n                <ion-radio-group [(ngModel)]=\"contactablePrivacy\" (ionChange)=\"saveContactablePrivacy(contactablePrivacy)\">\n                    <ion-item-divider>\n                        <ion-label>\n                            <h2>{{ 'addon.messages.contactableprivacy' | translate }}</h2>\n                        </ion-label>\n                    </ion-item-divider>\n                    <ion-item class=\"ion-text-wrap\">\n                        <ion-label>\n                            <p>{{ 'addon.messages.contactableprivacy_onlycontacts' | translate }}</p>\n                        </ion-label>\n                        <ion-radio slot=\"start\" [value]=\"onlyContactsValue\" />\n                    </ion-item>\n                    <ion-item class=\"ion-text-wrap\">\n                        <ion-label>\n                            <p>{{ 'addon.messages.contactableprivacy_coursemember' | translate }}</p>\n                        </ion-label>\n                        <ion-radio slot=\"start\" [value]=\"courseMemberValue\" />\n                    </ion-item>\n                    <ion-item *ngIf=\"allowSiteMessaging\" class=\"ion-text-wrap\">\n                        <ion-label>\n                            <p>{{ 'addon.messages.contactableprivacy_site' | translate }}</p>\n                        </ion-label>\n                        <ion-radio slot=\"start\" [value]=\"siteValue\" />\n                    </ion-item>\n                </ion-radio-group>\n            </ion-list>\n        </ion-card>\n\n        <!-- Notifications. -->\n        <ng-container *ngIf=\"preferences\">\n            <ng-container *ngIf=\"!groupMessagingEnabled\">\n                <ng-container *ngTemplateOutlet=\"legacySettings; context: {preferences: preferences}\" />\n            </ng-container>\n            <ng-container *ngIf=\"groupMessagingEnabled\">\n                <ng-container *ngTemplateOutlet=\"settings; context: {preferences: preferences}\" />\n            </ng-container>\n        </ng-container>\n    </core-loading>\n</ion-content>\n\n<!-- Only 3.5 version -->\n<ng-template #legacySettings let-preferences=\"preferences\">\n    <ng-container *ngFor=\"let component of preferences.components\">\n        <ion-card *ngFor=\"let notification of component.notifications\">\n            <ion-card-header class=\"ion-no-padding\">\n                <ion-item class=\"ion-text-wrap\">\n                    <ion-label>\n                        <h2>{{ notification.displayname }}</h2>\n                    </ion-label>\n                </ion-item>\n            </ion-card-header>\n            <ion-card-content class=\"ion-no-padding\">\n                <ng-container *ngFor=\"let processor of notification.processors\">\n                    <ion-item-divider class=\"ion-text-wrap\">\n                        <ion-label>\n                            <p class=\"item-heading\">{{ processor.displayname }}</p>\n                        </ion-label>\n                    </ion-item-divider>\n                    <!-- If notifications not disabled, show toggles.\n                        If notifications are disabled, show \"Disabled\" instead of toggle. -->\n                    <ion-item *ngFor=\"let state of ['loggedin', 'loggedoff']\" class=\"ion-text-wrap\">\n                        <ion-label>\n                            <p>{{ 'core.settings.' + state | translate }}</p>\n                        </ion-label>\n                        <ng-container *ngIf=\"!preferences.disableall\">\n                            <!-- If notifications enabled, show toggle. -->\n                            <core-button-with-spinner *ngIf=\"!processor.locked\" [loading]=\"notification['updating'+state]\" slot=\"end\">\n                                <ion-toggle [(ngModel)]=\"processor[state].checked\"\n                                    (ngModelChange)=\"changePreferenceLegacy(notification, processor, state)\" />\n                            </core-button-with-spinner>\n                            <span *ngIf=\"processor.locked && processor[state].checked\" class=\"text-gray\" slot=\"end\">\n                                {{'core.settings.forced' | translate }}\n                            </span>\n                            <span *ngIf=\"processor.locked && !processor[state].checked\" class=\"text-gray\" slot=\"end\">\n                                {{'core.settings.disallowed' | translate }}\n                            </span>\n                        </ng-container>\n                        <span *ngIf=\"preferences.disableall\">{{ 'core.settings.disabled' | translate }}</span>\n                    </ion-item>\n                </ng-container>\n            </ion-card-content>\n        </ion-card>\n    </ng-container>\n</ng-template>\n\n\n<ng-template #settings let-preferences=\"preferences\">\n    <ng-container *ngFor=\"let component of preferences.components\">\n        <ion-card *ngFor=\"let notification of component.notifications\">\n            <ion-item-divider class=\"ion-text-wrap\">\n                <ion-label>\n                    <h2>{{ 'addon.notifications.notificationpreferences' | translate }}</h2>\n                </ion-label>\n            </ion-item-divider>\n            <ng-container *ngFor=\"let processor of notification.processors\">\n                <!-- If group messaging is enabled, display a simplified view. -->\n                <ion-item class=\"ion-text-wrap\">\n                    <ion-label>\n                        <p>{{ processor.displayname }}</p>\n                    </ion-label>\n                    <ng-container *ngIf=\"!preferences.disableall\">\n                        <!-- If notifications enabled, show toggle. -->\n                        <core-button-with-spinner *ngIf=\"!processor.locked\" [loading]=\"notification.updating\" slot=\"end\">\n                            <ion-toggle [(ngModel)]=\"processor.enabled\" (ngModelChange)=\"changePreference(notification, processor)\" />\n                        </core-button-with-spinner>\n                        <span class=\"text-gray\" *ngIf=\"processor.locked\" slot=\"end\">\n                            {{ processor.lockedmessage }}\n                        </span>\n                    </ng-container>\n                    <span *ngIf=\"preferences.disableall\" class=\"text-gray\" slot=\"end\">{{ 'core.settings.disabled' | translate }}</span>\n                </ion-item>\n            </ng-container>\n        </ion-card>\n    </ng-container>\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}