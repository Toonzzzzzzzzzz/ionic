{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { CoreNetwork } from '@services/network';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonPrivateFiles, AddonPrivateFilesProvider } from '@addons/privatefiles/services/privatefiles';\nimport { AddonPrivateFilesHelper } from '@addons/privatefiles/services/privatefiles-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../core/components/empty-box/empty-box\";\nimport * as i3 from \"../../../../core/components/file/file\";\nimport * as i4 from \"../../../../core/components/loading/loading\";\nimport * as i5 from \"../../../../core/components/combobox/combobox\";\nimport * as i6 from \"../../../../core/directives/fab\";\nimport * as i7 from \"../../../../core/directives/fa-icon\";\nimport * as i8 from \"../../../../core/directives/content\";\nimport * as i9 from \"@ionic/angular\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction AddonPrivateFilesIndexPage_core_loading_12_core_combobox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-combobox\", 12);\n    i0.ɵɵlistener(\"onChange\", function AddonPrivateFilesIndexPage_core_loading_12_core_combobox_1_Template_core_combobox_onChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.rootChanged($event));\n    });\n    i0.ɵɵelementStart(1, \"ion-select-option\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-select-option\", 14);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"selection\", ctx_r2.root);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"addon.privatefiles.privatefiles\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 5, \"addon.privatefiles.sitefiles\"), \" \");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    used: a0,\n    total: a1\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonPrivateFilesIndexPage_core_loading_12_ion_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 15)(1, \"ion-item\")(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 1, \"core.quotausage\", i0.ɵɵpureFunction1(7, _c1, i0.ɵɵpureFunction2(4, _c0, ctx_r3.spaceUsed, ctx_r3.userQuotaReadable))), \" \");\n  }\n}\nfunction AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 19);\n    i0.ɵɵlistener(\"click\", function AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_ion_item_1_Template_ion_item_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const file_r9 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.openFolder(file_r9));\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 20);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 3, \"core.folder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(file_r9.filename);\n  }\n}\nfunction AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_core_file_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-file\", 21);\n  }\n  if (rf & 2) {\n    const file_r9 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"file\", file_r9)(\"component\", ctx_r11.component)(\"componentId\", file_r9.contextid);\n  }\n}\nfunction AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_ion_item_1_Template, 5, 5, \"ion-item\", 17);\n    i0.ɵɵtemplate(2, AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_core_file_2_Template, 1, 3, \"core-file\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const file_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", file_r9.isdir);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !file_r9.isdir);\n  }\n}\nfunction AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_Template, 3, 2, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.files);\n  }\n}\nfunction AddonPrivateFilesIndexPage_core_loading_12_core_empty_box_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 22);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"addon.privatefiles.emptyfilelist\"));\n  }\n}\nfunction AddonPrivateFilesIndexPage_core_loading_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"core-loading\", 7);\n    i0.ɵɵtemplate(1, AddonPrivateFilesIndexPage_core_loading_12_core_combobox_1_Template, 7, 7, \"core-combobox\", 8);\n    i0.ɵɵtemplate(2, AddonPrivateFilesIndexPage_core_loading_12_ion_card_2_Template, 5, 9, \"ion-card\", 9);\n    i0.ɵɵtemplate(3, AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_Template, 2, 1, \"ion-list\", 10);\n    i0.ɵɵtemplate(4, AddonPrivateFilesIndexPage_core_loading_12_core_empty_box_4_Template, 2, 3, \"core-empty-box\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hideUntil\", ctx_r0.filesLoaded);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showPrivateFiles && ctx_r0.showSiteFiles && !ctx_r0.path);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.userQuota && ctx_r0.filesInfo && ctx_r0.filesInfo.filecount > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.files && ctx_r0.files.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.files || !ctx_r0.files.length);\n  }\n}\nfunction AddonPrivateFilesIndexPage_ion_fab_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-fab\", 23)(1, \"ion-fab-button\", 24);\n    i0.ɵɵlistener(\"click\", function AddonPrivateFilesIndexPage_ion_fab_13_Template_ion_fab_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.uploadFile());\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 25);\n    i0.ɵɵelementStart(4, \"span\", 26);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 2, \"core.fileuploader.uploadafile\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 4, \"core.fileuploader.uploadafile\"));\n  }\n}\n/**\n * Page that displays the list of files.\n */\nexport class AddonPrivateFilesIndexPage {\n  constructor() {\n    this.filesLoaded = false; // Whether the files are loaded.\n    // Update visibility if current site info is updated.\n    this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n      this.setVisibility();\n    }, CoreSites.getCurrentSiteId());\n    this.logView = CoreTime.once( /*#__PURE__*/_asyncToGenerator(function* () {\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'core_files_get_files',\n        name: Translate.instant('addon.privatefiles.files'),\n        data: {\n          category: 'files'\n        },\n        url: '/user/files.php'\n      });\n    }));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this$path, _CoreSites$getCurrent;\n    try {\n      this.root = CoreNavigator.getRouteParam('root');\n      const contextId = CoreNavigator.getRouteNumberParam('contextid');\n      if (contextId) {\n        // Loading a certain folder.\n        this.path = {\n          contextid: contextId,\n          component: CoreNavigator.getRequiredRouteParam('component'),\n          filearea: CoreNavigator.getRequiredRouteParam('filearea'),\n          itemid: CoreNavigator.getRequiredRouteNumberParam('itemid'),\n          filepath: CoreNavigator.getRequiredRouteParam('filepath'),\n          filename: CoreNavigator.getRequiredRouteParam('filename')\n        };\n      }\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n      return;\n    }\n    this.title = ((_this$path = this.path) === null || _this$path === void 0 ? void 0 : _this$path.filename) || Translate.instant('addon.privatefiles.files');\n    this.setVisibility();\n    this.userQuota = (_CoreSites$getCurrent = CoreSites.getCurrentSite()) === null || _CoreSites$getCurrent === void 0 || (_CoreSites$getCurrent = _CoreSites$getCurrent.getInfo()) === null || _CoreSites$getCurrent === void 0 ? void 0 : _CoreSites$getCurrent.userquota;\n    if (!this.root) {\n      // Load private files by default.\n      if (this.showPrivateFiles) {\n        this.root = 'my';\n      } else if (this.showSiteFiles) {\n        this.root = 'site';\n      }\n    }\n    if (this.root) {\n      this.rootChanged(this.root);\n    } else {\n      this.filesLoaded = true;\n    }\n  }\n  /**\n   * Set visibility of some items based on site data.\n   */\n  setVisibility() {\n    this.showPrivateFiles = AddonPrivateFiles.canViewPrivateFiles();\n    this.showSiteFiles = AddonPrivateFiles.canViewSiteFiles();\n    this.showUpload = AddonPrivateFiles.canUploadFiles();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   */\n  refreshData(refresher) {\n    this.refreshFiles().finally(() => {\n      refresher === null || refresher === void 0 || refresher.complete();\n    });\n  }\n  /**\n   * Function called when the root has changed.\n   *\n   * @param root New root.\n   */\n  rootChanged(root) {\n    this.root = root;\n    this.filesLoaded = false;\n    this.component = this.root == 'my' ? AddonPrivateFilesProvider.PRIVATE_FILES_COMPONENT : AddonPrivateFilesProvider.SITE_FILES_COMPONENT;\n    this.fetchFiles().finally(() => {\n      this.filesLoaded = true;\n    });\n  }\n  /**\n   * Upload a new file.\n   */\n  uploadFile() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!CoreNetwork.isOnline()) {\n        CoreDomUtils.showErrorModal('core.fileuploader.errormustbeonlinetoupload', true);\n        return;\n      }\n      try {\n        yield AddonPrivateFilesHelper.uploadPrivateFile(_this.filesInfo);\n        // File uploaded, refresh the list.\n        _this.filesLoaded = false;\n        yield CoreUtils.ignoreErrors(_this.refreshFiles());\n        _this.filesLoaded = true;\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.fileuploader.errorwhileuploading', true);\n      }\n    })();\n  }\n  /**\n   * Fetch the files.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchFiles() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this2.path) {\n          // Path is set, serve the files the user requested.\n          _this2.files = yield AddonPrivateFiles.getFiles(_this2.path);\n          return;\n        }\n        // The path is unknown, the user must be requesting a root.\n        if (_this2.root == 'site') {\n          _this2.title = Translate.instant('addon.privatefiles.sitefiles');\n          _this2.files = yield AddonPrivateFiles.getSiteFiles();\n        } else if (_this2.root == 'my') {\n          _this2.title = Translate.instant('addon.privatefiles.files');\n          _this2.files = yield AddonPrivateFiles.getPrivateFiles();\n          if (_this2.showUpload && _this2.userQuota && _this2.userQuota > 0) {\n            // Get the info to calculate the available size.\n            _this2.filesInfo = yield AddonPrivateFiles.getPrivateFilesInfo();\n            _this2.spaceUsed = CoreTextUtils.bytesToSize(_this2.filesInfo.filesizewithoutreferences, 1);\n            _this2.userQuotaReadable = CoreTextUtils.bytesToSize(_this2.userQuota, 1);\n          } else {\n            // User quota isn't useful, delete it.\n            delete _this2.userQuota;\n          }\n          _this2.logView();\n        } else {\n          // Unknown root.\n          CoreDomUtils.showErrorModal('addon.privatefiles.couldnotloadfiles', true);\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.privatefiles.couldnotloadfiles', true);\n      }\n    })();\n  }\n  /**\n   * Refresh the displayed files.\n   *\n   * @returns Promise resolved when done.\n   */\n  refreshFiles() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield Promise.all([AddonPrivateFiles.invalidateDirectory(_this3.root, _this3.path), AddonPrivateFiles.invalidatePrivateFilesInfoForUser()]);\n      } finally {\n        yield _this3.fetchFiles();\n      }\n    })();\n  }\n  /**\n   * Open a folder.\n   *\n   * @param folder Folder to open.\n   */\n  openFolder(folder) {\n    const params = {\n      contextid: folder.contextid,\n      component: folder.component || '',\n      filearea: folder.filearea || '',\n      itemid: folder.itemid || 0,\n      filepath: folder.filepath || '',\n      filename: folder.filename || ''\n    };\n    if (folder.component) {\n      // Delete unused elements that may break the request.\n      params.filename = '';\n    }\n    const hash = Md5.hashAsciiStr(JSON.stringify(params));\n    CoreNavigator.navigate(`../${hash}`, {\n      params\n    });\n  }\n  /**\n   * Page destroyed.\n   */\n  ngOnDestroy() {\n    var _this$updateSiteObser;\n    (_this$updateSiteObser = this.updateSiteObserver) === null || _this$updateSiteObser === void 0 || _this$updateSiteObser.off();\n  }\n}\n_class = AddonPrivateFilesIndexPage;\n_class.ɵfac = function AddonPrivateFilesIndexPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-privatefiles-index\"]],\n  decls: 14,\n  vars: 10,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [1, \"limited-width\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\", 4, \"ngIf\"], [\"slot\", \"fixed\", \"core-fab\", \"\", \"vertical\", \"bottom\", \"horizontal\", \"end\", 4, \"ngIf\"], [3, \"hideUntil\"], [3, \"selection\", \"onChange\", 4, \"ngIf\"], [\"class\", \"core-info-card\", 4, \"ngIf\"], [4, \"ngIf\"], [\"icon\", \"far-folder-open\", 3, \"message\", 4, \"ngIf\"], [3, \"selection\", \"onChange\"], [\"value\", \"my\", 1, \"ion-text-wrap\"], [\"value\", \"site\", 1, \"ion-text-wrap\"], [1, \"core-info-card\"], [4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", \"class\", \"ion-text-wrap item-file item-directory\", 3, \"detail\", \"click\", 4, \"ngIf\"], [3, \"file\", \"component\", \"componentId\", 4, \"ngIf\"], [\"button\", \"\", 1, \"ion-text-wrap\", \"item-file\", \"item-directory\", 3, \"detail\", \"click\"], [\"name\", \"fas-folder\", \"slot\", \"start\"], [3, \"file\", \"component\", \"componentId\"], [\"icon\", \"far-folder-open\", 3, \"message\"], [\"slot\", \"fixed\", \"core-fab\", \"\", \"vertical\", \"bottom\", \"horizontal\", \"end\"], [3, \"click\"], [\"name\", \"fas-plus\", \"aria-hidden\", \"true\"], [1, \"sr-only\"]],\n  template: function AddonPrivateFilesIndexPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(8, \"ion-content\", 2)(9, \"ion-refresher\", 3);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonPrivateFilesIndexPage_Template_ion_refresher_ionRefresh_9_listener($event) {\n        return ctx.refreshData($event.target);\n      });\n      i0.ɵɵelement(10, \"ion-refresher-content\", 4);\n      i0.ɵɵpipe(11, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AddonPrivateFilesIndexPage_core_loading_12_Template, 5, 5, \"core-loading\", 5);\n      i0.ɵɵtemplate(13, AddonPrivateFilesIndexPage_ion_fab_13_Template, 7, 6, \"ion-fab\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 6, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.filesLoaded || !ctx.showPrivateFiles && !ctx.showSiteFiles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(11, 8, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPrivateFiles || ctx.showSiteFiles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showUpload && ctx.root !== \"site\" && !ctx.path);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreEmptyBoxComponent, i3.CoreFileComponent, i4.CoreLoadingComponent, i5.CoreComboboxComponent, i6.CoreFabDirective, i7.CoreFaIconDirective, i8.CoreContentDirective, i9.IonButtons, i9.IonCard, i9.IonContent, i9.IonFab, i9.IonFabButton, i9.IonHeader, i9.IonIcon, i9.IonItem, i9.IonLabel, i9.IonList, i9.IonRefresher, i9.IonRefresherContent, i9.IonSelectOption, i9.IonTitle, i9.IonToolbar, i9.IonBackButton, i10.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["Md5","CoreNetwork","CoreSites","CoreDomUtils","CoreTextUtils","Translate","CoreEvents","AddonPrivateFiles","AddonPrivateFilesProvider","AddonPrivateFilesHelper","CoreUtils","CoreNavigator","CoreTime","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵlistener","AddonPrivateFilesIndexPage_core_loading_12_core_combobox_1_Template_core_combobox_onChange_0_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","rootChanged","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r2","root","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵpipeBind2","ɵɵpureFunction1","_c1","ɵɵpureFunction2","_c0","ctx_r3","spaceUsed","userQuotaReadable","AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_ion_item_1_Template_ion_item_click_0_listener","_r14","file_r9","$implicit","ctx_r12","openFolder","ɵɵelement","ɵɵattribute","ɵɵtextInterpolate","filename","ctx_r11","component","contextid","ɵɵelementContainerStart","ɵɵtemplate","AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_ion_item_1_Template","AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_core_file_2_Template","ɵɵelementContainerEnd","isdir","AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_ng_container_1_Template","ctx_r4","files","AddonPrivateFilesIndexPage_core_loading_12_core_combobox_1_Template","AddonPrivateFilesIndexPage_core_loading_12_ion_card_2_Template","AddonPrivateFilesIndexPage_core_loading_12_ion_list_3_Template","AddonPrivateFilesIndexPage_core_loading_12_core_empty_box_4_Template","ctx_r0","filesLoaded","showPrivateFiles","showSiteFiles","path","userQuota","filesInfo","filecount","length","AddonPrivateFilesIndexPage_ion_fab_13_Template_ion_fab_button_click_1_listener","_r18","ctx_r17","uploadFile","AddonPrivateFilesIndexPage","constructor","updateSiteObserver","on","SITE_UPDATED","setVisibility","getCurrentSiteId","logView","once","_asyncToGenerator","logEvent","type","VIEW_ITEM_LIST","ws","name","instant","data","category","url","ngOnInit","_this$path","_CoreSites$getCurrent","getRouteParam","contextId","getRouteNumberParam","getRequiredRouteParam","filearea","itemid","getRequiredRouteNumberParam","filepath","error","showErrorModal","back","title","getCurrentSite","getInfo","userquota","canViewPrivateFiles","canViewSiteFiles","showUpload","canUploadFiles","refreshData","refresher","refreshFiles","finally","complete","PRIVATE_FILES_COMPONENT","SITE_FILES_COMPONENT","fetchFiles","_this","isOnline","uploadPrivateFile","ignoreErrors","showErrorModalDefault","_this2","getFiles","getSiteFiles","getPrivateFiles","getPrivateFilesInfo","bytesToSize","filesizewithoutreferences","_this3","Promise","all","invalidateDirectory","invalidatePrivateFilesInfoForUser","folder","params","hash","hashAsciiStr","JSON","stringify","navigate","ngOnDestroy","_this$updateSiteObser","off","selectors","decls","vars","consts","template","AddonPrivateFilesIndexPage_Template","rf","ctx","AddonPrivateFilesIndexPage_Template_ion_refresher_ionRefresh_9_listener","target","AddonPrivateFilesIndexPage_core_loading_12_Template","AddonPrivateFilesIndexPage_ion_fab_13_Template","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/privatefiles/pages/index/index.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/privatefiles/pages/index/index.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { CoreNetwork } from '@services/network';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { Translate } from '@singletons';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport {\n    AddonPrivateFiles,\n    AddonPrivateFilesProvider,\n    AddonPrivateFilesFile,\n    AddonPrivateFilesGetUserInfoWSResult,\n    AddonPrivateFilesGetFilesWSParams,\n} from '@addons/privatefiles/services/privatefiles';\nimport { AddonPrivateFilesHelper } from '@addons/privatefiles/services/privatefiles-helper';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that displays the list of files.\n */\n@Component({\n    selector: 'page-addon-privatefiles-index',\n    templateUrl: 'index.html',\n})\nexport class AddonPrivateFilesIndexPage implements OnInit, OnDestroy {\n\n    title!: string; // Page title.\n    root?: 'my' | 'site'; // The root of the files loaded: 'my' or 'site'.\n    path?: AddonPrivateFilesGetFilesWSParams; // The path of the directory being loaded. If empty path it means load the root.\n    showPrivateFiles!: boolean; // Whether the user can view private files.\n    showSiteFiles!: boolean; // Whether the user can view site files.\n    showUpload!: boolean; // Whether the user can upload files.\n    userQuota?: number; // The user quota (in bytes).\n    filesInfo?: AddonPrivateFilesGetUserInfoWSResult; // Info about private files (size, number of files, etc.).\n    spaceUsed?: string; // Space used in a readable format.\n    userQuotaReadable?: string; // User quota in a readable format.\n    files?: AddonPrivateFilesFile[]; // List of files.\n    component!: string; // Component to link the file downloads to.\n    filesLoaded = false; // Whether the files are loaded.\n\n    protected updateSiteObserver: CoreEventObserver;\n    protected logView: () => void;\n\n    constructor() {\n        // Update visibility if current site info is updated.\n        this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.setVisibility();\n        }, CoreSites.getCurrentSiteId());\n\n        this.logView = CoreTime.once(async () => {\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'core_files_get_files',\n                name: Translate.instant('addon.privatefiles.files'),\n                data: { category: 'files' },\n                url: '/user/files.php',\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.root = CoreNavigator.getRouteParam('root');\n            const contextId = CoreNavigator.getRouteNumberParam('contextid');\n\n            if (contextId) {\n                // Loading a certain folder.\n                this.path = {\n                    contextid: contextId,\n                    component: CoreNavigator.getRequiredRouteParam<string>('component'),\n                    filearea: CoreNavigator.getRequiredRouteParam<string>('filearea'),\n                    itemid: CoreNavigator.getRequiredRouteNumberParam('itemid'),\n                    filepath: CoreNavigator.getRequiredRouteParam<string>('filepath'),\n                    filename: CoreNavigator.getRequiredRouteParam<string>('filename'),\n                };\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.title = this.path?.filename || Translate.instant('addon.privatefiles.files');\n\n        this.setVisibility();\n        this.userQuota = CoreSites.getCurrentSite()?.getInfo()?.userquota;\n\n        if (!this.root) {\n            // Load private files by default.\n            if (this.showPrivateFiles) {\n                this.root = 'my';\n            } else if (this.showSiteFiles) {\n                this.root = 'site';\n            }\n        }\n\n        if (this.root) {\n            this.rootChanged(this.root);\n        } else {\n            this.filesLoaded = true;\n        }\n    }\n\n    /**\n     * Set visibility of some items based on site data.\n     */\n    protected setVisibility(): void {\n        this.showPrivateFiles = AddonPrivateFiles.canViewPrivateFiles();\n        this.showSiteFiles = AddonPrivateFiles.canViewSiteFiles();\n        this.showUpload = AddonPrivateFiles.canUploadFiles();\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    refreshData(refresher?: HTMLIonRefresherElement): void {\n        this.refreshFiles().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Function called when the root has changed.\n     *\n     * @param root New root.\n     */\n    rootChanged(root: 'my' | 'site'): void {\n        this.root = root;\n\n        this.filesLoaded = false;\n        this.component = this.root == 'my' ? AddonPrivateFilesProvider.PRIVATE_FILES_COMPONENT :\n            AddonPrivateFilesProvider.SITE_FILES_COMPONENT;\n\n        this.fetchFiles().finally(() => {\n            this.filesLoaded = true;\n        });\n    }\n\n    /**\n     * Upload a new file.\n     */\n    async uploadFile(): Promise<void> {\n        if (!CoreNetwork.isOnline()) {\n            CoreDomUtils.showErrorModal('core.fileuploader.errormustbeonlinetoupload', true);\n\n            return;\n        }\n\n        try {\n            await AddonPrivateFilesHelper.uploadPrivateFile(this.filesInfo);\n\n            // File uploaded, refresh the list.\n            this.filesLoaded = false;\n\n            await CoreUtils.ignoreErrors(this.refreshFiles());\n\n            this.filesLoaded = true;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.fileuploader.errorwhileuploading', true);\n        }\n    }\n\n    /**\n     * Fetch the files.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchFiles(): Promise<void> {\n        try {\n            if (this.path) {\n                // Path is set, serve the files the user requested.\n                this.files = await AddonPrivateFiles.getFiles(this.path);\n\n                return;\n            }\n\n            // The path is unknown, the user must be requesting a root.\n            if (this.root == 'site') {\n                this.title = Translate.instant('addon.privatefiles.sitefiles');\n\n                this.files = await AddonPrivateFiles.getSiteFiles();\n            } else if (this.root == 'my') {\n                this.title = Translate.instant('addon.privatefiles.files');\n\n                this.files = await AddonPrivateFiles.getPrivateFiles();\n\n                if (this.showUpload && this.userQuota && this.userQuota > 0) {\n                    // Get the info to calculate the available size.\n                    this.filesInfo = await AddonPrivateFiles.getPrivateFilesInfo();\n\n                    this.spaceUsed = CoreTextUtils.bytesToSize(this.filesInfo.filesizewithoutreferences, 1);\n                    this.userQuotaReadable = CoreTextUtils.bytesToSize(this.userQuota, 1);\n                } else {\n                    // User quota isn't useful, delete it.\n                    delete this.userQuota;\n                }\n\n                this.logView();\n            } else {\n                // Unknown root.\n                CoreDomUtils.showErrorModal('addon.privatefiles.couldnotloadfiles', true);\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.privatefiles.couldnotloadfiles', true);\n        }\n    }\n\n    /**\n     * Refresh the displayed files.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async refreshFiles(): Promise<void> {\n        try {\n            await Promise.all([\n                AddonPrivateFiles.invalidateDirectory(this.root, this.path),\n                AddonPrivateFiles.invalidatePrivateFilesInfoForUser(),\n            ]);\n        } finally {\n            await this.fetchFiles();\n        }\n    }\n\n    /**\n     * Open a folder.\n     *\n     * @param folder Folder to open.\n     */\n    openFolder(folder: AddonPrivateFilesFile): void {\n        const params = {\n            contextid: folder.contextid,\n            component: folder.component || '',\n            filearea: folder.filearea || '',\n            itemid: folder.itemid || 0,\n            filepath: folder.filepath || '',\n            filename: folder.filename || '',\n        };\n\n        if (folder.component) {\n            // Delete unused elements that may break the request.\n            params.filename = '';\n        }\n\n        const hash = <string> Md5.hashAsciiStr(JSON.stringify(params));\n\n        CoreNavigator.navigate(`../${hash}`, { params });\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.updateSiteObserver?.off();\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ title }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!filesLoaded || (!showPrivateFiles && !showSiteFiles)\"\n        (ionRefresh)=\"refreshData($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n\n    <core-loading [hideUntil]=\"filesLoaded\" *ngIf=\"showPrivateFiles || showSiteFiles\">\n        <!-- Allow selecting the files to see: private or site. -->\n        <core-combobox [selection]=\"root\" (onChange)=\"rootChanged($event)\" *ngIf=\"showPrivateFiles && showSiteFiles && !path\">\n            <ion-select-option class=\"ion-text-wrap\" value=\"my\">\n                {{ 'addon.privatefiles.privatefiles' | translate }}\n            </ion-select-option>\n            <ion-select-option class=\"ion-text-wrap\" value=\"site\">\n                {{ 'addon.privatefiles.sitefiles' | translate }}\n            </ion-select-option>\n        </core-combobox>\n\n        <!-- Display info about space used and space left. -->\n        <ion-card class=\"core-info-card\" *ngIf=\"userQuota && filesInfo && filesInfo.filecount > 0\">\n            <ion-item>\n                <ion-label>\n                    {{ 'core.quotausage' | translate:{$a: {used: spaceUsed, total: userQuotaReadable} } }}\n                </ion-label>\n            </ion-item>\n        </ion-card>\n\n        <!-- List of files. -->\n        <ion-list *ngIf=\"files && files.length > 0\">\n            <ng-container *ngFor=\"let file of files\">\n                <ion-item button *ngIf=\"file.isdir\" class=\"ion-text-wrap item-file item-directory\" (click)=\"openFolder(file)\"\n                    [detail]=\"true\">\n                    <ion-icon name=\"fas-folder\" slot=\"start\" [attr.aria-label]=\"'core.folder' | translate\" />\n                    <ion-label>{{file.filename}}</ion-label>\n                </ion-item>\n                <core-file *ngIf=\"!file.isdir\" [file]=\"file\" [component]=\"component\" [componentId]=\"file.contextid\" />\n            </ng-container>\n        </ion-list>\n\n        <!-- Message telling there are no files. -->\n        <core-empty-box *ngIf=\"!files || !files.length\" icon=\"far-folder-open\" [message]=\"'addon.privatefiles.emptyfilelist' | translate\" />\n    </core-loading>\n\n    <!-- Upload a private file. -->\n    <ion-fab slot=\"fixed\" core-fab vertical=\"bottom\" horizontal=\"end\" *ngIf=\"showUpload && root !== 'site' && !path\">\n        <ion-fab-button (click)=\"uploadFile()\" [attr.aria-label]=\"'core.fileuploader.uploadafile' | translate\">\n            <ion-icon name=\"fas-plus\" aria-hidden=\"true\" />\n            <span class=\"sr-only\">{{ 'core.fileuploader.uploadafile' | translate }}</span>\n        </ion-fab-button>\n    </ion-fab>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}