{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModScorm, AddonModScormProvider } from '../services/scorm';\n// Standard Data Type Definition.\nlet CMI_STRING_256 = '^[\\\\u0000-\\\\uFFFF]{0,255}$';\nlet CMI_STRING_4096 = '^[\\\\u0000-\\\\uFFFF]{0,4096}$';\nconst CMI_TIME = '^([0-2]{1}[0-9]{1}):([0-5]{1}[0-9]{1}):([0-5]{1}[0-9]{1})(.[0-9]{1,2})?$';\nconst CMI_TIMESPAN = '^([0-9]{2,4}):([0-9]{2}):([0-9]{2})(.[0-9]{1,2})?$';\nconst CMI_INTEGER = '^\\\\d+$'; // eslint-disable-line @typescript-eslint/no-unused-vars\nconst CMI_SINTEGER = '^-?([0-9]+)$';\nconst CMI_DECIMAL = '^-?([0-9]{0,3})(.[0-9]*)?$';\nconst CMI_IDENTIFIER = '^[\\\\u0021-\\\\u007E]{0,255}$';\nconst CMI_FEEDBACK = CMI_STRING_256; // This must be redefined.\nconst CMI_INDEX = '[._](\\\\d+).';\n// Vocabulary Data Type Definition.\nconst CMI_STATUS = '^passed$|^completed$|^failed$|^incomplete$|^browsed$';\nconst CMI_STATUS_2 = '^passed$|^completed$|^failed$|^incomplete$|^browsed$|^not attempted$';\nconst CMI_EXIT = '^time-out$|^suspend$|^logout$|^$';\nconst CMI_TYPE = '^true-false$|^choice$|^fill-in$|^matching$|^performance$|^sequencing$|^likert$|^numeric$';\nconst CMI_RESULT = '^correct$|^wrong$|^unanticipated$|^neutral$|^([0-9]{0,3})?(.[0-9]*)?$';\nconst NAV_EVENT = '^previous$|^continue$';\n// Children lists.\nconst CMI_CHILDREN = 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions';\nconst CORE_CHILDREN = 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,' + 'exit,session_time';\nconst SCORE_CHILDREN = 'raw,min,max';\nconst COMMENTS_CHILDREN = 'content,location,time';\nconst OBJECTIVES_CHILDREN = 'id,score,status';\nconst CORRECT_RESPONSES_CHILDREN = 'pattern'; // eslint-disable-line @typescript-eslint/no-unused-vars\nconst STUDENT_DATA_CHILDREN = 'mastery_score,max_time_allowed,time_limit_action';\nconst STUDENT_PREFERENCE_CHILDREN = 'audio,language,speed,text';\nconst INTERACTIONS_CHILDREN = 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency';\n// Data ranges.\nconst SCORE_RANGE = '0#100';\nconst AUDIO_RANGE = '-1#100';\nconst SPEED_RANGE = '-100#100';\nconst WEIGHTING_RANGE = '-100#100';\nconst TEXT_RANGE = '-1#1';\n// Error messages.\nconst ERROR_STRINGS = {\n  0: 'No error',\n  101: 'General exception',\n  201: 'Invalid argument error',\n  202: 'Element cannot have children',\n  203: 'Element not an array - cannot have count',\n  301: 'Not initialized',\n  401: 'Not implemented error',\n  402: 'Invalid set value, element is a keyword',\n  403: 'Element is read only',\n  404: 'Element is write only',\n  405: 'Incorrect data type'\n};\n/**\n * SCORM data model implementation for version 1.2.\n */\nexport class AddonModScormDataModel12 {\n  /**\n   * Constructor.\n   *\n   * @param siteId Site ID.\n   * @param scorm SCORM.\n   * @param scoId Current SCO ID.\n   * @param attempt Attempt number.\n   * @param userData The user default data.\n   * @param mode Mode being played. By default, MODENORMAL.\n   * @param offline Whether the attempt is offline.\n   * @param canSaveTracks Whether the user can save tracks.\n   */\n  constructor(siteId, scorm, scoId, attempt, userData, mode = AddonModScormProvider.MODENORMAL, offline = false, canSaveTracks = true) {\n    this.siteId = siteId;\n    this.scorm = scorm;\n    this.scoId = scoId;\n    this.attempt = attempt;\n    this.userData = userData;\n    this.mode = mode;\n    this.offline = offline;\n    this.canSaveTracks = canSaveTracks;\n    this.currentUserData = {}; // Current user data.\n    this.def = {}; // Object containing the default values.\n    this.defExtra = {}; // Objectives and interactions (all .n. elems).\n    this.dataModel = {}; // The SCORM 1.2 data model.\n    this.initialized = false; // Whether LMSInitialize has been called.\n    this.errorCode = '0'; // Last error.\n    this.init(userData);\n  }\n  /**\n   * Utility function for adding two times in format hh:mm:ss.\n   *\n   * @param first First time.\n   * @param second Second time.\n   * @returns Total time.\n   */\n  addTime(first, second) {\n    const sFirst = first.split(':');\n    const sSecond = second.split(':');\n    const cFirst = sFirst[2].split('.');\n    const cSecond = sSecond[2].split('.');\n    let change = 0;\n    let firstCents = 0; // Cents.\n    if (cFirst.length > 1) {\n      firstCents = parseInt(cFirst[1], 10);\n    }\n    let secondCents = 0;\n    if (cSecond.length > 1) {\n      secondCents = parseInt(cSecond[1], 10);\n    }\n    let cents = firstCents + secondCents;\n    change = Math.floor(cents / 100);\n    cents = cents - change * 100;\n    if (Math.floor(cents) < 10) {\n      cents = '0' + cents.toString();\n    }\n    let secs = parseInt(cFirst[0], 10) + parseInt(cSecond[0], 10) + change; // Seconds.\n    change = Math.floor(secs / 60);\n    secs = secs - change * 60;\n    if (Math.floor(secs) < 10) {\n      secs = '0' + secs.toString();\n    }\n    let mins = parseInt(sFirst[1], 10) + parseInt(sSecond[1], 10) + change; // Minutes.\n    change = Math.floor(mins / 60);\n    mins = mins - change * 60;\n    if (mins < 10) {\n      mins = '0' + mins.toString();\n    }\n    let hours = parseInt(sFirst[0], 10) + parseInt(sSecond[0], 10) + change; // Hours.\n    if (hours < 10) {\n      hours = '0' + hours.toString();\n    }\n    if (cents != '0') {\n      return hours + ':' + mins + ':' + secs + '.' + cents;\n    } else {\n      return hours + ':' + mins + ':' + secs;\n    }\n  }\n  /**\n   * Collect all the user tracking data that must be persisted in the system, this is usually called by LMSCommit().\n   *\n   * @returns Collected data.\n   */\n  collectData() {\n    if (!this.currentUserData[this.scoId]) {\n      return [];\n    }\n    const data = [];\n    for (const element in this.currentUserData[this.scoId].userdata) {\n      // Ommit for example the nav. elements and the session time element.\n      if (element.substring(0, 3) != 'cmi' || element == 'cmi.core.session_time') {\n        continue;\n      }\n      // Get the generic name for this element (e.g. convert 'cmi.interactions.1.id' to 'cmi.interactions.n.id')\n      const expression = new RegExp(CMI_INDEX, 'g');\n      const elementModel = element.replace(expression, '.n.');\n      // Check if this specific element is not defined in the datamodel, but the generic element name is.\n      if (this.dataModel[this.scoId][element] === undefined && this.dataModel[this.scoId][elementModel] !== undefined) {\n        // Add this element to the data model (by cloning the generic element) so we can track changes to it.\n        this.dataModel[this.scoId][element] = CoreUtils.clone(this.dataModel[this.scoId][elementModel]);\n      }\n      // Check if the current element exists in the datamodel and it's not a read only element.\n      if (this.dataModel[this.scoId][element] === undefined || this.dataModel[this.scoId][element].mod == 'r') {\n        continue;\n      }\n      const el = {\n        // Moodle stores the organizations and interactions using _n. instead .n.\n        element: element.replace(expression, '_$1.'),\n        value: this.getEl(element)\n      };\n      // Check if the element has a default value.\n      if (this.dataModel[this.scoId][element].defaultvalue !== undefined) {\n        // Check if the default value is different from the current value.\n        if (this.dataModel[this.scoId][element].defaultvalue !== el.value) {\n          data.push(el);\n          // Update the element default to reflect the current committed value.\n          this.dataModel[this.scoId][element].defaultvalue = el.value;\n        }\n      } else {\n        data.push(el);\n        // No default value for the element, so set it now.\n        this.dataModel[this.scoId][element].defaultvalue = el.value;\n      }\n    }\n    return data;\n  }\n  /**\n   * Get the value of the given element from the non-persistent (current) user data.\n   *\n   * @param el The element\n   * @returns The element value\n   */\n  getEl(el) {\n    if (this.currentUserData[this.scoId] && this.currentUserData[this.scoId].userdata[el] !== undefined) {\n      return this.currentUserData[this.scoId].userdata[el];\n    }\n    return '';\n  }\n  /**\n   * Initialize the model.\n   *\n   * @param userData The user default data.\n   */\n  init(userData) {\n    if (!this.scorm.scormStandard) {\n      CMI_STRING_256 = '^[\\\\u0000-\\\\uFFFF]{0,64000}$';\n      CMI_STRING_4096 = CMI_STRING_256;\n    }\n    // Prepare the definition array containing the default values.\n    for (const scoId in userData) {\n      const sco = userData[scoId];\n      this.def[scoId] = sco.defaultdata;\n      this.defExtra[scoId] = sco.userdata;\n    }\n    // Set up data model for each SCO.\n    for (const scoId in this.def) {\n      this.dataModel[scoId] = {\n        'cmi._children': {\n          defaultvalue: CMI_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi._version': {\n          defaultvalue: '3.4',\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.core._children': {\n          defaultvalue: CORE_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.core.student_id': {\n          defaultvalue: this.def[scoId]['cmi.core.student_id'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.core.student_name': {\n          defaultvalue: this.def[scoId]['cmi.core.student_name'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.core.lesson_location': {\n          defaultvalue: this.def[scoId]['cmi.core.lesson_location'],\n          format: CMI_STRING_256,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.core.credit': {\n          defaultvalue: this.def[scoId]['cmi.core.credit'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.core.lesson_status': {\n          defaultvalue: this.def[scoId]['cmi.core.lesson_status'],\n          format: CMI_STATUS,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.core.entry': {\n          defaultvalue: this.def[scoId]['cmi.core.entry'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.core.score._children': {\n          defaultvalue: SCORE_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.core.score.raw': {\n          defaultvalue: this.def[scoId]['cmi.core.score.raw'],\n          format: CMI_DECIMAL,\n          range: SCORE_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.core.score.max': {\n          defaultvalue: this.def[scoId]['cmi.core.score.max'],\n          format: CMI_DECIMAL,\n          range: SCORE_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.core.score.min': {\n          defaultvalue: this.def[scoId]['cmi.core.score.min'],\n          format: CMI_DECIMAL,\n          range: SCORE_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.core.total_time': {\n          defaultvalue: this.def[scoId]['cmi.core.total_time'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.core.lesson_mode': {\n          defaultvalue: this.def[scoId]['cmi.core.lesson_mode'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.core.exit': {\n          defaultvalue: this.def[scoId]['cmi.core.exit'],\n          format: CMI_EXIT,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.core.session_time': {\n          format: CMI_TIMESPAN,\n          mod: 'w',\n          defaultvalue: '00:00:00',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.suspend_data': {\n          defaultvalue: this.def[scoId]['cmi.suspend_data'],\n          format: CMI_STRING_4096,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.launch_data': {\n          defaultvalue: this.def[scoId]['cmi.launch_data'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.comments': {\n          defaultvalue: this.def[scoId]['cmi.comments'],\n          format: CMI_STRING_4096,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        // Deprecated evaluation attributes.\n        'cmi.evaluation.comments._count': {\n          defaultvalue: '0',\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.evaluation.comments._children': {\n          defaultvalue: COMMENTS_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.evaluation.comments.n.content': {\n          defaultvalue: '',\n          pattern: CMI_INDEX,\n          format: CMI_STRING_256,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.evaluation.comments.n.location': {\n          defaultvalue: '',\n          pattern: CMI_INDEX,\n          format: CMI_STRING_256,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.evaluation.comments.n.time': {\n          defaultvalue: '',\n          pattern: CMI_INDEX,\n          format: CMI_TIME,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.comments_from_lms': {\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.objectives._children': {\n          defaultvalue: OBJECTIVES_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.objectives._count': {\n          mod: 'r',\n          defaultvalue: '0',\n          writeerror: '402'\n        },\n        'cmi.objectives.n.id': {\n          pattern: CMI_INDEX,\n          format: CMI_IDENTIFIER,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.objectives.n.score._children': {\n          pattern: CMI_INDEX,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.objectives.n.score.raw': {\n          defaultvalue: '',\n          pattern: CMI_INDEX,\n          format: CMI_DECIMAL,\n          range: SCORE_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.objectives.n.score.min': {\n          defaultvalue: '',\n          pattern: CMI_INDEX,\n          format: CMI_DECIMAL,\n          range: SCORE_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.objectives.n.score.max': {\n          defaultvalue: '',\n          pattern: CMI_INDEX,\n          format: CMI_DECIMAL,\n          range: SCORE_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.objectives.n.status': {\n          pattern: CMI_INDEX,\n          format: CMI_STATUS_2,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.student_data._children': {\n          defaultvalue: STUDENT_DATA_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.student_data.mastery_score': {\n          defaultvalue: this.def[scoId]['cmi.student_data.mastery_score'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.student_data.max_time_allowed': {\n          defaultvalue: this.def[scoId]['cmi.student_data.max_time_allowed'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.student_data.time_limit_action': {\n          defaultvalue: this.def[scoId]['cmi.student_data.time_limit_action'],\n          mod: 'r',\n          writeerror: '403'\n        },\n        'cmi.student_preference._children': {\n          defaultvalue: STUDENT_PREFERENCE_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.student_preference.audio': {\n          defaultvalue: this.def[scoId]['cmi.student_preference.audio'],\n          format: CMI_SINTEGER,\n          range: AUDIO_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.student_preference.language': {\n          defaultvalue: this.def[scoId]['cmi.student_preference.language'],\n          format: CMI_STRING_256,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.student_preference.speed': {\n          defaultvalue: this.def[scoId]['cmi.student_preference.speed'],\n          format: CMI_SINTEGER,\n          range: SPEED_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.student_preference.text': {\n          defaultvalue: this.def[scoId]['cmi.student_preference.text'],\n          format: CMI_SINTEGER,\n          range: TEXT_RANGE,\n          mod: 'rw',\n          writeerror: '405'\n        },\n        'cmi.interactions._children': {\n          defaultvalue: INTERACTIONS_CHILDREN,\n          mod: 'r',\n          writeerror: '402'\n        },\n        'cmi.interactions._count': {\n          mod: 'r',\n          defaultvalue: '0',\n          writeerror: '402'\n        },\n        'cmi.interactions.n.id': {\n          pattern: CMI_INDEX,\n          format: CMI_IDENTIFIER,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.objectives._count': {\n          pattern: CMI_INDEX,\n          mod: 'r',\n          defaultvalue: '0',\n          writeerror: '402'\n        },\n        'cmi.interactions.n.objectives.n.id': {\n          pattern: CMI_INDEX,\n          format: CMI_IDENTIFIER,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.time': {\n          pattern: CMI_INDEX,\n          format: CMI_TIME,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.type': {\n          pattern: CMI_INDEX,\n          format: CMI_TYPE,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.correct_responses._count': {\n          pattern: CMI_INDEX,\n          mod: 'r',\n          defaultvalue: '0',\n          writeerror: '402'\n        },\n        'cmi.interactions.n.correct_responses.n.pattern': {\n          pattern: CMI_INDEX,\n          format: CMI_FEEDBACK,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.weighting': {\n          pattern: CMI_INDEX,\n          format: CMI_DECIMAL,\n          range: WEIGHTING_RANGE,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.student_response': {\n          pattern: CMI_INDEX,\n          format: CMI_FEEDBACK,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.result': {\n          pattern: CMI_INDEX,\n          format: CMI_RESULT,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'cmi.interactions.n.latency': {\n          pattern: CMI_INDEX,\n          format: CMI_TIMESPAN,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        },\n        'nav.event': {\n          defaultvalue: '',\n          format: NAV_EVENT,\n          mod: 'w',\n          readerror: '404',\n          writeerror: '405'\n        }\n      };\n      this.currentUserData[scoId] = {\n        scoid: Number(scoId),\n        userdata: {},\n        defaultdata: {}\n      };\n      // Load default values.\n      for (const element in this.dataModel[scoId]) {\n        if (element.match(/\\.n\\./) === null) {\n          const defaultValue = this.dataModel[scoId][element].defaultvalue;\n          if (defaultValue !== undefined) {\n            this.currentUserData[scoId].userdata[element] = defaultValue;\n          }\n        }\n      }\n      // Load initial user data for current SCO.\n      for (const element in this.def[scoId]) {\n        if (element.match(/\\.n\\./) === null) {\n          const defaultValue = this.dataModel[scoId][element].defaultvalue;\n          if (defaultValue !== undefined) {\n            this.currentUserData[scoId].userdata[element] = defaultValue;\n          } else if (this.defExtra[scoId][element] !== undefined) {\n            // Check in user data values.\n            this.currentUserData[scoId].userdata[element] = this.defExtra[scoId][element];\n          } else {\n            this.currentUserData[scoId].userdata[element] = '';\n          }\n        }\n      }\n      // Load interactions and objectives, and init the counters.\n      const expression = new RegExp(CMI_INDEX, 'g');\n      for (const element in this.defExtra[scoId]) {\n        let counterElement = '';\n        let currentCounterIndex = '0';\n        // This check for an indexed element. cmi.objectives.1.id or cmi.objectives_1.id.\n        if (element.match(expression)) {\n          // Normalize to the expected value according the standard.\n          // Moodle stores this values using _n. instead .n.\n          const elementDotFormat = element.replace(expression, '.$1.');\n          this.currentUserData[scoId].userdata[elementDotFormat] = this.defExtra[scoId][element];\n          // Get the correct counter and current index.\n          if (elementDotFormat.indexOf('cmi.evaluation.comments') === 0) {\n            var _elementDotFormat$mat;\n            counterElement = 'cmi.evaluation.comments._count';\n            currentCounterIndex = ((_elementDotFormat$mat = elementDotFormat.match(/.(\\d+)./)) === null || _elementDotFormat$mat === void 0 ? void 0 : _elementDotFormat$mat[1]) || '0';\n          } else if (elementDotFormat.indexOf('cmi.objectives') === 0) {\n            var _elementDotFormat$mat2;\n            counterElement = 'cmi.objectives._count';\n            currentCounterIndex = ((_elementDotFormat$mat2 = elementDotFormat.match(/.(\\d+)./)) === null || _elementDotFormat$mat2 === void 0 ? void 0 : _elementDotFormat$mat2[1]) || '0';\n          } else if (elementDotFormat.indexOf('cmi.interactions') === 0) {\n            if (elementDotFormat.indexOf('.objectives.') > 0) {\n              var _elementDotFormat$mat3, _elementDotFormat$mat4;\n              const currentN = (_elementDotFormat$mat3 = elementDotFormat.match(/cmi.interactions.(\\d+)./)) === null || _elementDotFormat$mat3 === void 0 ? void 0 : _elementDotFormat$mat3[1];\n              currentCounterIndex = ((_elementDotFormat$mat4 = elementDotFormat.match(/objectives.(\\d+)./)) === null || _elementDotFormat$mat4 === void 0 ? void 0 : _elementDotFormat$mat4[1]) || '0';\n              counterElement = 'cmi.interactions.' + currentN + '.objectives._count';\n            } else if (elementDotFormat.indexOf('.correct_responses.') > 0) {\n              var _elementDotFormat$mat5, _elementDotFormat$mat6;\n              const currentN = (_elementDotFormat$mat5 = elementDotFormat.match(/cmi.interactions.(\\d+)./)) === null || _elementDotFormat$mat5 === void 0 ? void 0 : _elementDotFormat$mat5[1];\n              currentCounterIndex = ((_elementDotFormat$mat6 = elementDotFormat.match(/correct_responses.(\\d+)./)) === null || _elementDotFormat$mat6 === void 0 ? void 0 : _elementDotFormat$mat6[1]) || '0';\n              counterElement = 'cmi.interactions.' + currentN + '.correct_responses._count';\n            } else {\n              var _elementDotFormat$mat7;\n              counterElement = 'cmi.interactions._count';\n              currentCounterIndex = ((_elementDotFormat$mat7 = elementDotFormat.match(/.(\\d+)./)) === null || _elementDotFormat$mat7 === void 0 ? void 0 : _elementDotFormat$mat7[1]) || '0';\n            }\n          }\n          if (counterElement) {\n            const counterData = this.currentUserData[scoId].userdata[counterElement];\n            if (counterData === undefined) {\n              this.currentUserData[scoId].userdata[counterElement] = 0;\n            }\n            // Check if we need to sum.\n            if (Number(currentCounterIndex) == Number(counterData)) {\n              this.currentUserData[scoId].userdata[counterElement] = Number(counterData) + 1;\n            }\n            if (Number(currentCounterIndex) > Number(counterData)) {\n              this.currentUserData[scoId].userdata[counterElement] = Number(currentCounterIndex) - 1;\n            }\n          }\n        }\n      }\n      // Set default status.\n      if (this.currentUserData[scoId].userdata['cmi.core.lesson_status'] === '') {\n        this.currentUserData[scoId].userdata['cmi.core.lesson_status'] = 'not attempted';\n      }\n      // Define mode and credit.\n      this.currentUserData[scoId].userdata['cmi.core.credit'] = this.mode == AddonModScormProvider.MODENORMAL ? 'credit' : 'no-credit';\n      this.currentUserData[scoId].userdata['cmi.core.lesson_mode'] = this.mode;\n    }\n  }\n  /**\n   * Commit the changes.\n   *\n   * @param param Param.\n   * @returns \"true\" if success, \"false\" otherwise.\n   */\n  LMSCommit(param) {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = undefined;\n    }\n    this.errorCode = '0';\n    if (param == '') {\n      if (this.initialized) {\n        const result = this.storeData(false);\n        // Trigger TOC update.\n        this.triggerEvent(AddonModScormProvider.UPDATE_TOC_EVENT);\n        this.errorCode = result ? '0' : '101';\n        // Conver to string representing a boolean.\n        return result ? 'true' : 'false';\n      } else {\n        this.errorCode = '301';\n      }\n    } else {\n      this.errorCode = '201';\n    }\n    return 'false';\n  }\n  /**\n   * Finish the data model.\n   *\n   * @param param Param.\n   * @returns \"true\" if success, \"false\" otherwise.\n   */\n  LMSFinish(param) {\n    this.errorCode = '0';\n    if (param == '') {\n      if (this.initialized) {\n        this.initialized = false;\n        const result = this.storeData(true);\n        if (this.getEl('nav.event') != '') {\n          if (this.getEl('nav.event') == 'continue') {\n            this.triggerEvent(AddonModScormProvider.LAUNCH_NEXT_SCO_EVENT);\n          } else {\n            this.triggerEvent(AddonModScormProvider.LAUNCH_PREV_SCO_EVENT);\n          }\n        } else {\n          if (this.scorm.auto) {\n            this.triggerEvent(AddonModScormProvider.LAUNCH_NEXT_SCO_EVENT);\n          }\n        }\n        this.errorCode = result ? '0' : '101';\n        // Trigger TOC update.\n        this.triggerEvent(AddonModScormProvider.UPDATE_TOC_EVENT);\n        // Conver to string representing a boolean.\n        return result ? 'true' : 'false';\n      } else {\n        this.errorCode = '301';\n      }\n    } else {\n      this.errorCode = '201';\n    }\n    return 'false';\n  }\n  /**\n   * Get diagnostic.\n   *\n   * @param param Param.\n   * @returns Result.\n   */\n  LMSGetDiagnostic(param) {\n    if (param == '') {\n      param = this.errorCode;\n    }\n    return param;\n  }\n  /**\n   * Get the error message for a certain code.\n   *\n   * @param param Error code.\n   * @returns Error message.\n   */\n  LMSGetErrorString(param) {\n    if (param != '') {\n      return ERROR_STRINGS[param];\n    } else {\n      return '';\n    }\n  }\n  /**\n   * Get the last error code.\n   *\n   * @returns Last error code.\n   */\n  LMSGetLastError() {\n    return this.errorCode;\n  }\n  /**\n   * Get the value of a certain element.\n   *\n   * @param element Name of the element to get.\n   * @returns Value.\n   */\n  LMSGetValue(element) {\n    this.errorCode = '0';\n    if (this.initialized) {\n      if (element != '') {\n        const expression = new RegExp(CMI_INDEX, 'g');\n        const elementModel = String(element).replace(expression, '.n.');\n        if (this.dataModel[this.scoId][elementModel] !== undefined) {\n          if (this.dataModel[this.scoId][elementModel].mod != 'w') {\n            this.errorCode = '0';\n            return this.getEl(element);\n          } else {\n            this.errorCode = this.dataModel[this.scoId][elementModel].readerror || '0';\n          }\n        } else {\n          const childrenStr = '._children';\n          const countStr = '._count';\n          if (elementModel.substring(elementModel.length - childrenStr.length) == childrenStr) {\n            const parentModel = elementModel.substring(0, elementModel.length - childrenStr.length);\n            if (this.dataModel[this.scoId][parentModel] !== undefined) {\n              this.errorCode = '202';\n            } else {\n              this.errorCode = '201';\n            }\n          } else if (elementModel.substring(elementModel.length - countStr.length) == countStr) {\n            const parentModel = elementModel.substring(0, elementModel.length - countStr.length);\n            if (this.dataModel[this.scoId][parentModel] !== undefined) {\n              this.errorCode = '203';\n            } else {\n              this.errorCode = '201';\n            }\n          } else {\n            this.errorCode = '201';\n          }\n        }\n      } else {\n        this.errorCode = '201';\n      }\n    } else {\n      this.errorCode = '301';\n    }\n    return '';\n  }\n  /**\n   * Initialize the data model.\n   *\n   * @param param Param.\n   * @returns \"true\" if initialized, \"false\" otherwise.\n   */\n  LMSInitialize(param) {\n    this.errorCode = '0';\n    if (param == '') {\n      if (!this.initialized) {\n        this.initialized = true;\n        this.errorCode = '0';\n        return 'true';\n      } else {\n        this.errorCode = '101';\n      }\n    } else {\n      this.errorCode = '201';\n    }\n    return 'false';\n  }\n  /**\n   * Set the value of a certain element.\n   *\n   * @param element Name of the element to set.\n   * @param value Value to set.\n   * @returns \"true\" if success, \"false\" otherwise.\n   */\n  LMSSetValue(element, value) {\n    this.errorCode = '0';\n    if (this.initialized) {\n      if (element != '') {\n        let expression = new RegExp(CMI_INDEX, 'g');\n        const elementModel = String(element).replace(expression, '.n.');\n        if (this.dataModel[this.scoId][elementModel] !== undefined) {\n          if (this.dataModel[this.scoId][elementModel].mod != 'r') {\n            var _this$dataModel$this$;\n            expression = new RegExp((_this$dataModel$this$ = this.dataModel[this.scoId][elementModel].format) !== null && _this$dataModel$this$ !== void 0 ? _this$dataModel$this$ : '');\n            value = value + '';\n            const matches = value.match(expression);\n            if (matches != null) {\n              // Create dynamic data model element.\n              if (element != elementModel) {\n                // Init default counters and values.\n                if (element.indexOf('cmi.objectives') === 0) {\n                  var _element$match;\n                  const currentN = (_element$match = element.match(/cmi.objectives.(\\d+)./)) === null || _element$match === void 0 ? void 0 : _element$match[1];\n                  const counterElement = 'cmi.objectives.' + currentN + '.score';\n                  if (this.currentUserData[this.scoId].userdata[counterElement + '._children'] === undefined) {\n                    this.setEl(this.currentUserData[this.scoId].userdata[counterElement + '._children'], SCORE_CHILDREN);\n                    this.setEl(this.currentUserData[this.scoId].userdata[counterElement + '.raw'], '');\n                    this.setEl(this.currentUserData[this.scoId].userdata[counterElement + '.min'], '');\n                    this.setEl(this.currentUserData[this.scoId].userdata[counterElement + '.max'], '');\n                  }\n                } else if (element.indexOf('cmi.interactions') === 0) {\n                  var _element$match2;\n                  const currentN = (_element$match2 = element.match(/cmi.interactions.(\\d+)./)) === null || _element$match2 === void 0 ? void 0 : _element$match2[1];\n                  let counterElement = 'cmi.interactions.' + currentN + '.objectives._count';\n                  if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                    this.setEl(counterElement, 0);\n                  }\n                  counterElement = 'cmi.interactions.' + currentN + '.correct_responses._count';\n                  if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                    this.setEl(counterElement, 0);\n                  }\n                }\n                const elementIndexes = element.split('.');\n                let subElement = 'cmi';\n                for (let i = 1; i < elementIndexes.length - 1; i++) {\n                  const elementIndex = elementIndexes[i];\n                  if (elementIndexes[i + 1].match(/^\\d+$/)) {\n                    const counterElement = subElement + '.' + elementIndex + '._count';\n                    if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                      this.setEl(counterElement, 0);\n                    }\n                    if (elementIndexes[i + 1] == this.getEl(counterElement)) {\n                      const count = this.getEl(counterElement);\n                      this.setEl(counterElement, Number(count) + 1);\n                    }\n                    if (elementIndexes[i + 1] > this.getEl(counterElement)) {\n                      this.errorCode = '201';\n                    }\n                    subElement = subElement.concat('.' + elementIndex + '.' + elementIndexes[i + 1]);\n                    i++;\n                  } else {\n                    subElement = subElement.concat('.' + elementIndex);\n                  }\n                }\n                element = subElement.concat('.' + elementIndexes[elementIndexes.length - 1]);\n              }\n              // Store data.\n              if (this.errorCode == '0') {\n                if (this.scorm.autocommit && !this.timeout) {\n                  this.timeout = window.setTimeout(() => this.LMSCommit(''), 60000);\n                }\n                const range = this.dataModel[this.scoId][elementModel].range;\n                if (range !== undefined) {\n                  const ranges = range.split('#');\n                  value = Number(value);\n                  if (value >= Number(ranges[0]) && value <= Number(ranges[1])) {\n                    this.setEl(element, Number(value));\n                    this.errorCode = '0';\n                    return 'true';\n                  } else {\n                    this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n                  }\n                } else {\n                  if (element == 'cmi.comments') {\n                    this.setEl('cmi.comments', this.getEl('cmi.comments') + value);\n                  } else {\n                    this.setEl(element, value);\n                  }\n                  this.errorCode = '0';\n                  return 'true';\n                }\n              }\n            } else {\n              this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n            }\n          } else {\n            this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n          }\n        } else {\n          this.errorCode = '201';\n        }\n      } else {\n        this.errorCode = '201';\n      }\n    } else {\n      this.errorCode = '301';\n    }\n    return 'false';\n  }\n  /**\n   * Set a SCO ID.\n   * The scoId is like a pointer to be able to retrieve the SCO default values and set the new ones in the overall SCORM\n   * data structure.\n   *\n   * @param scoId The new SCO id.\n   */\n  loadSco(scoId) {\n    this.scoId = scoId;\n  }\n  /**\n   * Set the value of the given element in the non-persistent (current) user data.\n   *\n   * @param el The element.\n   * @param value The value.\n   */\n  setEl(el, value) {\n    this.currentUserData[this.scoId] = this.currentUserData[this.scoId] || {\n      scoid: this.scoId,\n      userdata: {},\n      defaultdata: {}\n    };\n    this.currentUserData[this.scoId].userdata[el] = value;\n  }\n  /**\n   * Set offline mode to true or false.\n   *\n   * @param offline True if offline, false otherwise.\n   */\n  setOffline(offline) {\n    this.offline = offline;\n  }\n  /**\n   * Persist the current user data (this is usually called by LMSCommit).\n   *\n   * @param storeTotalTime If true, we need to calculate the total time too.\n   * @returns True if success, false otherwise.\n   */\n  storeData(storeTotalTime) {\n    if (!this.canSaveTracks) {\n      return true;\n    }\n    let tracks;\n    if (storeTotalTime) {\n      if (this.getEl('cmi.core.lesson_status') == 'not attempted') {\n        this.setEl('cmi.core.lesson_status', 'completed');\n      }\n      if (this.getEl('cmi.core.lesson_mode') == AddonModScormProvider.MODENORMAL) {\n        if (this.getEl('cmi.core.credit') == 'credit') {\n          if (this.getEl('cmi.student_data.mastery_score') !== '' && this.getEl('cmi.core.score.raw') !== '') {\n            if (parseFloat(this.getEl('cmi.core.score.raw')) >= parseFloat(this.getEl('cmi.student_data.mastery_score'))) {\n              this.setEl('cmi.core.lesson_status', 'passed');\n            } else {\n              this.setEl('cmi.core.lesson_status', 'failed');\n            }\n          }\n        }\n      }\n      if (this.getEl('cmi.core.lesson_mode') == AddonModScormProvider.MODEBROWSE) {\n        if (this.dataModel[this.scoId]['cmi.core.lesson_status'].defaultvalue == '' && this.getEl('cmi.core.lesson_status') == 'not attempted') {\n          this.setEl('cmi.core.lesson_status', 'browsed');\n        }\n      }\n      tracks = this.collectData();\n      tracks.push(this.totalTime());\n    } else {\n      tracks = this.collectData();\n    }\n    const ok = AddonModScorm.saveTracksSync(this.scoId, this.attempt, tracks, this.scorm, this.offline, this.currentUserData);\n    if (this.offline || ok) {\n      return ok;\n    }\n    // Failure storing data in online. Go offline.\n    this.offline = true;\n    this.triggerEvent(AddonModScormProvider.GO_OFFLINE_EVENT);\n    return AddonModScorm.saveTracksSync(this.scoId, this.attempt, tracks, this.scorm, this.offline, this.currentUserData);\n  }\n  /**\n   * Utility function for calculating the total time spent in the SCO.\n   *\n   * @returns Total time element.\n   */\n  totalTime() {\n    const totalTime = this.addTime(this.getEl('cmi.core.total_time'), this.getEl('cmi.core.session_time'));\n    return {\n      element: 'cmi.core.total_time',\n      value: totalTime\n    };\n  }\n  /**\n   * Convenience function to trigger events.\n   *\n   * @param name Name of the event to trigger.\n   */\n  triggerEvent(name) {\n    CoreEvents.trigger(name, {\n      scormId: this.scorm.id,\n      scoId: this.scoId,\n      attempt: this.attempt\n    }, this.siteId);\n  }\n}","map":{"version":3,"names":["CoreUtils","CoreEvents","AddonModScorm","AddonModScormProvider","CMI_STRING_256","CMI_STRING_4096","CMI_TIME","CMI_TIMESPAN","CMI_INTEGER","CMI_SINTEGER","CMI_DECIMAL","CMI_IDENTIFIER","CMI_FEEDBACK","CMI_INDEX","CMI_STATUS","CMI_STATUS_2","CMI_EXIT","CMI_TYPE","CMI_RESULT","NAV_EVENT","CMI_CHILDREN","CORE_CHILDREN","SCORE_CHILDREN","COMMENTS_CHILDREN","OBJECTIVES_CHILDREN","CORRECT_RESPONSES_CHILDREN","STUDENT_DATA_CHILDREN","STUDENT_PREFERENCE_CHILDREN","INTERACTIONS_CHILDREN","SCORE_RANGE","AUDIO_RANGE","SPEED_RANGE","WEIGHTING_RANGE","TEXT_RANGE","ERROR_STRINGS","AddonModScormDataModel12","constructor","siteId","scorm","scoId","attempt","userData","mode","MODENORMAL","offline","canSaveTracks","currentUserData","def","defExtra","dataModel","initialized","errorCode","init","addTime","first","second","sFirst","split","sSecond","cFirst","cSecond","change","firstCents","length","parseInt","secondCents","cents","Math","floor","toString","secs","mins","hours","collectData","data","element","userdata","substring","expression","RegExp","elementModel","replace","undefined","clone","mod","el","value","getEl","defaultvalue","push","scormStandard","sco","defaultdata","writeerror","format","range","readerror","pattern","scoid","Number","match","defaultValue","counterElement","currentCounterIndex","elementDotFormat","indexOf","_elementDotFormat$mat","_elementDotFormat$mat2","_elementDotFormat$mat3","_elementDotFormat$mat4","currentN","_elementDotFormat$mat5","_elementDotFormat$mat6","_elementDotFormat$mat7","counterData","LMSCommit","param","timeout","clearTimeout","result","storeData","triggerEvent","UPDATE_TOC_EVENT","LMSFinish","LAUNCH_NEXT_SCO_EVENT","LAUNCH_PREV_SCO_EVENT","auto","LMSGetDiagnostic","LMSGetErrorString","LMSGetLastError","LMSGetValue","String","childrenStr","countStr","parentModel","LMSInitialize","LMSSetValue","_this$dataModel$this$","matches","_element$match","setEl","_element$match2","elementIndexes","subElement","i","elementIndex","count","concat","autocommit","window","setTimeout","ranges","loadSco","setOffline","storeTotalTime","tracks","parseFloat","MODEBROWSE","totalTime","ok","saveTracksSync","GO_OFFLINE_EVENT","name","trigger","scormId","id"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/scorm/classes/data-model-12.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEvents } from '@singletons/events';\nimport {\n    AddonModScorm,\n    AddonModScormCommonEventData,\n    AddonModScormDataEntry,\n    AddonModScormDataValue,\n    AddonModScormProvider,\n    AddonModScormScorm,\n    AddonModScormUserDataMap,\n} from '../services/scorm';\n\n// Standard Data Type Definition.\nlet CMI_STRING_256 = '^[\\\\u0000-\\\\uFFFF]{0,255}$';\nlet CMI_STRING_4096 = '^[\\\\u0000-\\\\uFFFF]{0,4096}$';\nconst CMI_TIME = '^([0-2]{1}[0-9]{1}):([0-5]{1}[0-9]{1}):([0-5]{1}[0-9]{1})(.[0-9]{1,2})?$';\nconst CMI_TIMESPAN = '^([0-9]{2,4}):([0-9]{2}):([0-9]{2})(.[0-9]{1,2})?$';\nconst CMI_INTEGER = '^\\\\d+$'; // eslint-disable-line @typescript-eslint/no-unused-vars\nconst CMI_SINTEGER = '^-?([0-9]+)$';\nconst CMI_DECIMAL = '^-?([0-9]{0,3})(.[0-9]*)?$';\nconst CMI_IDENTIFIER = '^[\\\\u0021-\\\\u007E]{0,255}$';\nconst CMI_FEEDBACK = CMI_STRING_256; // This must be redefined.\nconst CMI_INDEX = '[._](\\\\d+).';\n\n// Vocabulary Data Type Definition.\nconst CMI_STATUS = '^passed$|^completed$|^failed$|^incomplete$|^browsed$';\nconst CMI_STATUS_2 = '^passed$|^completed$|^failed$|^incomplete$|^browsed$|^not attempted$';\nconst CMI_EXIT = '^time-out$|^suspend$|^logout$|^$';\nconst CMI_TYPE = '^true-false$|^choice$|^fill-in$|^matching$|^performance$|^sequencing$|^likert$|^numeric$';\nconst CMI_RESULT = '^correct$|^wrong$|^unanticipated$|^neutral$|^([0-9]{0,3})?(.[0-9]*)?$';\nconst NAV_EVENT = '^previous$|^continue$';\n\n// Children lists.\nconst CMI_CHILDREN = 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions';\nconst CORE_CHILDREN = 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,' +\n        'exit,session_time';\nconst SCORE_CHILDREN = 'raw,min,max';\nconst COMMENTS_CHILDREN = 'content,location,time';\nconst OBJECTIVES_CHILDREN = 'id,score,status';\nconst CORRECT_RESPONSES_CHILDREN = 'pattern'; // eslint-disable-line @typescript-eslint/no-unused-vars\nconst STUDENT_DATA_CHILDREN = 'mastery_score,max_time_allowed,time_limit_action';\nconst STUDENT_PREFERENCE_CHILDREN = 'audio,language,speed,text';\nconst INTERACTIONS_CHILDREN = 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency';\n\n// Data ranges.\nconst SCORE_RANGE = '0#100';\nconst AUDIO_RANGE = '-1#100';\nconst SPEED_RANGE = '-100#100';\nconst WEIGHTING_RANGE = '-100#100';\nconst TEXT_RANGE = '-1#1';\n\n// Error messages.\nconst ERROR_STRINGS = {\n    0: 'No error',\n    101: 'General exception',\n    201: 'Invalid argument error',\n    202: 'Element cannot have children',\n    203: 'Element not an array - cannot have count',\n    301: 'Not initialized',\n    401: 'Not implemented error',\n    402: 'Invalid set value, element is a keyword',\n    403: 'Element is read only',\n    404: 'Element is write only',\n    405: 'Incorrect data type',\n};\n\n/**\n * SCORM data model implementation for version 1.2.\n */\nexport class AddonModScormDataModel12 {\n\n    protected currentUserData: AddonModScormUserDataMap = {}; // Current user data.\n    protected def: Record<number, Record<string, AddonModScormDataValue>> = {}; // Object containing the default values.\n    protected defExtra: Record<number, Record<string, AddonModScormDataValue>> = {}; // Objectives and interactions (all .n. elems).\n    protected dataModel: Record<number, Record<string, DataModelEntry>> = {}; // The SCORM 1.2 data model.\n\n    protected initialized = false; // Whether LMSInitialize has been called.\n    protected errorCode = '0'; // Last error.\n    protected timeout?: number; // Timeout to commit changes.\n\n    /**\n     * Constructor.\n     *\n     * @param siteId Site ID.\n     * @param scorm SCORM.\n     * @param scoId Current SCO ID.\n     * @param attempt Attempt number.\n     * @param userData The user default data.\n     * @param mode Mode being played. By default, MODENORMAL.\n     * @param offline Whether the attempt is offline.\n     * @param canSaveTracks Whether the user can save tracks.\n     */\n    constructor(\n        protected siteId: string,\n        protected scorm: AddonModScormScorm,\n        protected scoId: number,\n        protected attempt: number,\n        protected userData: AddonModScormUserDataMap,\n        protected mode = AddonModScormProvider.MODENORMAL,\n        protected offline = false,\n        protected canSaveTracks = true,\n    ) {\n        this.init(userData);\n    }\n\n    /**\n     * Utility function for adding two times in format hh:mm:ss.\n     *\n     * @param first First time.\n     * @param second Second time.\n     * @returns Total time.\n     */\n    protected addTime(first: string, second: string): string {\n        const sFirst = first.split(':');\n        const sSecond = second.split(':');\n        const cFirst = sFirst[2].split('.');\n        const cSecond = sSecond[2].split('.');\n        let change = 0;\n\n        let firstCents = 0; // Cents.\n        if (cFirst.length > 1) {\n            firstCents = parseInt(cFirst[1], 10);\n        }\n\n        let secondCents = 0;\n        if (cSecond.length > 1) {\n            secondCents = parseInt(cSecond[1], 10);\n        }\n\n        let cents: string | number = firstCents + secondCents;\n        change = Math.floor(cents / 100);\n        cents = cents - (change * 100);\n        if (Math.floor(cents) < 10) {\n            cents = '0' + cents.toString();\n        }\n\n        let secs: string | number = parseInt(cFirst[0], 10) + parseInt(cSecond[0], 10) + change; // Seconds.\n        change = Math.floor(secs / 60);\n        secs = secs - (change * 60);\n        if (Math.floor(secs) < 10) {\n            secs = '0' + secs.toString();\n        }\n\n        let mins: string | number = parseInt(sFirst[1], 10) + parseInt(sSecond[1], 10) + change; // Minutes.\n        change = Math.floor(mins / 60);\n        mins = mins - (change * 60);\n        if (mins < 10) {\n            mins = '0' + mins.toString();\n        }\n\n        let hours: string | number = parseInt(sFirst[0], 10) + parseInt(sSecond[0], 10) + change; // Hours.\n        if (hours < 10) {\n            hours = '0' + hours.toString();\n        }\n\n        if (cents != '0') {\n            return hours + ':' + mins + ':' + secs + '.' + cents;\n        } else {\n            return hours + ':' + mins + ':' + secs;\n        }\n    }\n\n    /**\n     * Collect all the user tracking data that must be persisted in the system, this is usually called by LMSCommit().\n     *\n     * @returns Collected data.\n     */\n    protected collectData(): AddonModScormDataEntry[] {\n        if (!this.currentUserData[this.scoId]) {\n            return [];\n        }\n\n        const data: AddonModScormDataEntry[] = [];\n\n        for (const element in this.currentUserData[this.scoId].userdata) {\n            // Ommit for example the nav. elements and the session time element.\n            if (element.substring(0, 3) != 'cmi' || element == 'cmi.core.session_time') {\n                continue;\n            }\n\n            // Get the generic name for this element (e.g. convert 'cmi.interactions.1.id' to 'cmi.interactions.n.id')\n            const expression = new RegExp(CMI_INDEX, 'g');\n            const elementModel = element.replace(expression, '.n.');\n\n            // Check if this specific element is not defined in the datamodel, but the generic element name is.\n            if (this.dataModel[this.scoId][element] === undefined && this.dataModel[this.scoId][elementModel] !== undefined) {\n                // Add this element to the data model (by cloning the generic element) so we can track changes to it.\n                this.dataModel[this.scoId][element] = CoreUtils.clone(this.dataModel[this.scoId][elementModel]);\n            }\n\n            // Check if the current element exists in the datamodel and it's not a read only element.\n            if (this.dataModel[this.scoId][element] === undefined || this.dataModel[this.scoId][element].mod == 'r') {\n                continue;\n            }\n\n            const el: AddonModScormDataEntry = {\n                // Moodle stores the organizations and interactions using _n. instead .n.\n                element: element.replace(expression, '_$1.'),\n                value: this.getEl(element),\n            };\n\n            // Check if the element has a default value.\n            if (this.dataModel[this.scoId][element].defaultvalue !== undefined) {\n\n                // Check if the default value is different from the current value.\n                if (this.dataModel[this.scoId][element].defaultvalue !== el.value) {\n                    data.push(el);\n\n                    // Update the element default to reflect the current committed value.\n                    this.dataModel[this.scoId][element].defaultvalue = el.value;\n                }\n            } else {\n                data.push(el);\n\n                // No default value for the element, so set it now.\n                this.dataModel[this.scoId][element].defaultvalue = el.value;\n            }\n        }\n\n        return data;\n    }\n\n    /**\n     * Get the value of the given element from the non-persistent (current) user data.\n     *\n     * @param el The element\n     * @returns The element value\n     */\n    protected getEl(el: string): string | number {\n        if (this.currentUserData[this.scoId] && this.currentUserData[this.scoId].userdata[el] !== undefined) {\n            return this.currentUserData[this.scoId].userdata[el];\n        }\n\n        return '';\n    }\n\n    /**\n     * Initialize the model.\n     *\n     * @param userData The user default data.\n     */\n    protected init(userData: AddonModScormUserDataMap): void {\n        if (!this.scorm.scormStandard) {\n            CMI_STRING_256 = '^[\\\\u0000-\\\\uFFFF]{0,64000}$';\n            CMI_STRING_4096 = CMI_STRING_256;\n        }\n\n        // Prepare the definition array containing the default values.\n        for (const scoId in userData) {\n            const sco = userData[scoId];\n            this.def[scoId] = sco.defaultdata;\n            this.defExtra[scoId] = sco.userdata;\n        }\n\n        // Set up data model for each SCO.\n        for (const scoId in this.def) {\n            this.dataModel[scoId] = {\n                'cmi._children': { defaultvalue: CMI_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi._version': { defaultvalue: '3.4', mod: 'r', writeerror: '402' },\n                'cmi.core._children': { defaultvalue: CORE_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.core.student_id': { defaultvalue: this.def[scoId]['cmi.core.student_id'], mod: 'r', writeerror: '403' },\n                'cmi.core.student_name': { defaultvalue: this.def[scoId]['cmi.core.student_name'], mod: 'r', writeerror: '403' },\n                'cmi.core.lesson_location': {\n                    defaultvalue: this.def[scoId]['cmi.core.lesson_location'],\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.credit': { defaultvalue: this.def[scoId]['cmi.core.credit'], mod: 'r', writeerror: '403' },\n                'cmi.core.lesson_status': {\n                    defaultvalue: this.def[scoId]['cmi.core.lesson_status'],\n                    format: CMI_STATUS,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.entry': { defaultvalue: this.def[scoId]['cmi.core.entry'], mod: 'r', writeerror: '403' },\n                'cmi.core.score._children': { defaultvalue: SCORE_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.core.score.raw': {\n                    defaultvalue: this.def[scoId]['cmi.core.score.raw'],\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.score.max': {\n                    defaultvalue: this.def[scoId]['cmi.core.score.max'],\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.score.min': {\n                    defaultvalue: this.def[scoId]['cmi.core.score.min'],\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.core.total_time': { defaultvalue: this.def[scoId]['cmi.core.total_time'], mod: 'r', writeerror: '403' },\n                'cmi.core.lesson_mode': { defaultvalue: this.def[scoId]['cmi.core.lesson_mode'], mod: 'r', writeerror: '403' },\n                'cmi.core.exit': {\n                    defaultvalue: this.def[scoId]['cmi.core.exit'],\n                    format: CMI_EXIT,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.core.session_time': {\n                    format: CMI_TIMESPAN,\n                    mod: 'w',\n                    defaultvalue: '00:00:00',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.suspend_data': {\n                    defaultvalue: this.def[scoId]['cmi.suspend_data'],\n                    format: CMI_STRING_4096,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.launch_data': { defaultvalue: this.def[scoId]['cmi.launch_data'], mod: 'r', writeerror: '403' },\n                'cmi.comments': {\n                    defaultvalue: this.def[scoId]['cmi.comments'],\n                    format: CMI_STRING_4096,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                // Deprecated evaluation attributes.\n                'cmi.evaluation.comments._count': { defaultvalue: '0', mod: 'r', writeerror: '402' },\n                'cmi.evaluation.comments._children': { defaultvalue: COMMENTS_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.evaluation.comments.n.content': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.evaluation.comments.n.location': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.evaluation.comments.n.time': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_TIME,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.comments_from_lms': { mod: 'r', writeerror: '403' },\n                'cmi.objectives._children': { defaultvalue: OBJECTIVES_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.objectives._count': { mod: 'r', defaultvalue: '0', writeerror: '402' },\n                'cmi.objectives.n.id': { pattern: CMI_INDEX, format: CMI_IDENTIFIER, mod: 'rw', writeerror: '405' },\n                'cmi.objectives.n.score._children': { pattern: CMI_INDEX, mod: 'r', writeerror: '402' },\n                'cmi.objectives.n.score.raw': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.objectives.n.score.min': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.objectives.n.score.max': {\n                    defaultvalue: '',\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: SCORE_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.objectives.n.status': { pattern: CMI_INDEX, format: CMI_STATUS_2, mod: 'rw', writeerror: '405' },\n                'cmi.student_data._children': { defaultvalue: STUDENT_DATA_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.student_data.mastery_score': {\n                    defaultvalue: this.def[scoId]['cmi.student_data.mastery_score'],\n                    mod: 'r',\n                    writeerror: '403',\n                },\n                'cmi.student_data.max_time_allowed': {\n                    defaultvalue: this.def[scoId]['cmi.student_data.max_time_allowed'],\n                    mod: 'r',\n                    writeerror: '403',\n                },\n                'cmi.student_data.time_limit_action': {\n                    defaultvalue: this.def[scoId]['cmi.student_data.time_limit_action'],\n                    mod: 'r',\n                    writeerror: '403',\n                },\n                'cmi.student_preference._children': {\n                    defaultvalue: STUDENT_PREFERENCE_CHILDREN,\n                    mod: 'r',\n                    writeerror: '402',\n                },\n                'cmi.student_preference.audio': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.audio'],\n                    format: CMI_SINTEGER,\n                    range: AUDIO_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.student_preference.language': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.language'],\n                    format: CMI_STRING_256,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.student_preference.speed': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.speed'],\n                    format: CMI_SINTEGER,\n                    range: SPEED_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.student_preference.text': {\n                    defaultvalue: this.def[scoId]['cmi.student_preference.text'],\n                    format: CMI_SINTEGER,\n                    range: TEXT_RANGE,\n                    mod: 'rw',\n                    writeerror: '405',\n                },\n                'cmi.interactions._children': { defaultvalue: INTERACTIONS_CHILDREN, mod: 'r', writeerror: '402' },\n                'cmi.interactions._count': { mod: 'r', defaultvalue: '0', writeerror: '402' },\n                'cmi.interactions.n.id': {\n                    pattern: CMI_INDEX,\n                    format: CMI_IDENTIFIER,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.objectives._count': { pattern: CMI_INDEX, mod: 'r', defaultvalue: '0', writeerror: '402' },\n                'cmi.interactions.n.objectives.n.id': {\n                    pattern: CMI_INDEX,\n                    format: CMI_IDENTIFIER,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.time': { pattern: CMI_INDEX, format: CMI_TIME, mod: 'w', readerror: '404', writeerror: '405' },\n                'cmi.interactions.n.type': { pattern: CMI_INDEX, format: CMI_TYPE, mod: 'w', readerror: '404', writeerror: '405' },\n                'cmi.interactions.n.correct_responses._count': {\n                    pattern: CMI_INDEX,\n                    mod: 'r',\n                    defaultvalue: '0',\n                    writeerror: '402',\n                },\n                'cmi.interactions.n.correct_responses.n.pattern': {\n                    pattern: CMI_INDEX,\n                    format: CMI_FEEDBACK,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.weighting': {\n                    pattern: CMI_INDEX,\n                    format: CMI_DECIMAL,\n                    range: WEIGHTING_RANGE,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.student_response': {\n                    pattern: CMI_INDEX,\n                    format: CMI_FEEDBACK,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.result': {\n                    pattern: CMI_INDEX,\n                    format: CMI_RESULT,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'cmi.interactions.n.latency': {\n                    pattern: CMI_INDEX,\n                    format: CMI_TIMESPAN,\n                    mod: 'w',\n                    readerror: '404',\n                    writeerror: '405',\n                },\n                'nav.event': { defaultvalue: '', format: NAV_EVENT, mod: 'w', readerror: '404', writeerror: '405' },\n            };\n\n            this.currentUserData[scoId] = {\n                scoid: Number(scoId),\n                userdata: {},\n                defaultdata: {},\n            };\n\n            // Load default values.\n            for (const element in this.dataModel[scoId]) {\n                if (element.match(/\\.n\\./) === null) {\n                    const defaultValue = this.dataModel[scoId][element].defaultvalue;\n                    if (defaultValue !== undefined) {\n                        this.currentUserData[scoId].userdata[element] = defaultValue;\n                    }\n                }\n            }\n\n            // Load initial user data for current SCO.\n            for (const element in this.def[scoId]) {\n                if (element.match(/\\.n\\./) === null) {\n                    const defaultValue = this.dataModel[scoId][element].defaultvalue;\n                    if (defaultValue !== undefined) {\n                        this.currentUserData[scoId].userdata[element] = defaultValue;\n                    } else if (this.defExtra[scoId][element] !== undefined) {\n                        // Check in user data values.\n                        this.currentUserData[scoId].userdata[element] = this.defExtra[scoId][element];\n                    } else {\n                        this.currentUserData[scoId].userdata[element] = '';\n                    }\n                }\n            }\n\n            // Load interactions and objectives, and init the counters.\n            const expression = new RegExp(CMI_INDEX, 'g');\n\n            for (const element in this.defExtra[scoId]) {\n                let counterElement = '';\n                let currentCounterIndex = '0';\n\n                // This check for an indexed element. cmi.objectives.1.id or cmi.objectives_1.id.\n                if (element.match(expression)) {\n                    // Normalize to the expected value according the standard.\n                    // Moodle stores this values using _n. instead .n.\n                    const elementDotFormat = element.replace(expression, '.$1.');\n                    this.currentUserData[scoId].userdata[elementDotFormat] = this.defExtra[scoId][element];\n\n                    // Get the correct counter and current index.\n                    if (elementDotFormat.indexOf('cmi.evaluation.comments') === 0) {\n                        counterElement = 'cmi.evaluation.comments._count';\n                        currentCounterIndex = elementDotFormat.match(/.(\\d+)./)?.[1] || '0';\n                    } else if (elementDotFormat.indexOf('cmi.objectives') === 0) {\n                        counterElement = 'cmi.objectives._count';\n                        currentCounterIndex = elementDotFormat.match(/.(\\d+)./)?.[1] || '0';\n                    } else if (elementDotFormat.indexOf('cmi.interactions') === 0) {\n                        if (elementDotFormat.indexOf('.objectives.') > 0) {\n                            const currentN = elementDotFormat.match(/cmi.interactions.(\\d+)./)?.[1];\n                            currentCounterIndex = elementDotFormat.match(/objectives.(\\d+)./)?.[1] || '0';\n                            counterElement = 'cmi.interactions.' + currentN + '.objectives._count';\n                        } else if (elementDotFormat.indexOf('.correct_responses.') > 0) {\n                            const currentN = elementDotFormat.match(/cmi.interactions.(\\d+)./)?.[1];\n                            currentCounterIndex = elementDotFormat.match(/correct_responses.(\\d+)./)?.[1] || '0';\n                            counterElement = 'cmi.interactions.' + currentN + '.correct_responses._count';\n                        } else {\n                            counterElement = 'cmi.interactions._count';\n                            currentCounterIndex = elementDotFormat.match(/.(\\d+)./)?.[1] || '0';\n                        }\n                    }\n\n                    if (counterElement) {\n                        const counterData = this.currentUserData[scoId].userdata[counterElement];\n                        if (counterData === undefined) {\n                            this.currentUserData[scoId].userdata[counterElement] = 0;\n                        }\n                        // Check if we need to sum.\n                        if (Number(currentCounterIndex) == Number(counterData)) {\n                            this.currentUserData[scoId].userdata[counterElement] = Number(counterData) + 1;\n                        }\n                        if (Number(currentCounterIndex) > Number(counterData)) {\n                            this.currentUserData[scoId].userdata[counterElement] = Number(currentCounterIndex) - 1;\n                        }\n                    }\n\n                }\n            }\n\n            // Set default status.\n            if (this.currentUserData[scoId].userdata['cmi.core.lesson_status'] === '') {\n                this.currentUserData[scoId].userdata['cmi.core.lesson_status'] = 'not attempted';\n            }\n\n            // Define mode and credit.\n            this.currentUserData[scoId].userdata['cmi.core.credit'] = this.mode == AddonModScormProvider.MODENORMAL ?\n                'credit' :\n                'no-credit';\n            this.currentUserData[scoId].userdata['cmi.core.lesson_mode'] = this.mode;\n        }\n    }\n\n    /**\n     * Commit the changes.\n     *\n     * @param param Param.\n     * @returns \"true\" if success, \"false\" otherwise.\n     */\n    LMSCommit(param: string): string {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = undefined;\n        }\n\n        this.errorCode = '0';\n        if (param == '') {\n            if (this.initialized) {\n                const result = this.storeData(false);\n\n                // Trigger TOC update.\n                this.triggerEvent(AddonModScormProvider.UPDATE_TOC_EVENT);\n\n                this.errorCode = result ? '0' : '101';\n\n                // Conver to string representing a boolean.\n                return result ? 'true' : 'false';\n            } else {\n                this.errorCode = '301';\n            }\n        } else {\n            this.errorCode = '201';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Finish the data model.\n     *\n     * @param param Param.\n     * @returns \"true\" if success, \"false\" otherwise.\n     */\n    LMSFinish(param: string): string {\n        this.errorCode = '0';\n\n        if (param == '') {\n            if (this.initialized) {\n                this.initialized = false;\n\n                const result = this.storeData(true);\n                if (this.getEl('nav.event') != '') {\n                    if (this.getEl('nav.event') == 'continue') {\n                        this.triggerEvent(AddonModScormProvider.LAUNCH_NEXT_SCO_EVENT);\n                    } else {\n                        this.triggerEvent(AddonModScormProvider.LAUNCH_PREV_SCO_EVENT);\n                    }\n                } else {\n                    if (this.scorm.auto) {\n                        this.triggerEvent(AddonModScormProvider.LAUNCH_NEXT_SCO_EVENT);\n                    }\n                }\n\n                this.errorCode = result ? '0' : '101';\n\n                // Trigger TOC update.\n                this.triggerEvent(AddonModScormProvider.UPDATE_TOC_EVENT);\n\n                // Conver to string representing a boolean.\n                return result ? 'true' : 'false';\n            } else {\n                this.errorCode = '301';\n            }\n        } else {\n            this.errorCode = '201';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Get diagnostic.\n     *\n     * @param param Param.\n     * @returns Result.\n     */\n    LMSGetDiagnostic(param: string): string {\n        if (param == '') {\n            param = this.errorCode;\n        }\n\n        return param;\n    }\n\n    /**\n     * Get the error message for a certain code.\n     *\n     * @param param Error code.\n     * @returns Error message.\n     */\n    LMSGetErrorString(param: string): string {\n        if (param != '') {\n            return ERROR_STRINGS[param];\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Get the last error code.\n     *\n     * @returns Last error code.\n     */\n    LMSGetLastError(): string {\n        return this.errorCode;\n    }\n\n    /**\n     * Get the value of a certain element.\n     *\n     * @param element Name of the element to get.\n     * @returns Value.\n     */\n    LMSGetValue(element: string): AddonModScormDataValue {\n        this.errorCode = '0';\n\n        if (this.initialized) {\n            if (element != '') {\n                const expression = new RegExp(CMI_INDEX, 'g');\n                const elementModel = String(element).replace(expression, '.n.');\n\n                if (this.dataModel[this.scoId][elementModel] !== undefined) {\n                    if (this.dataModel[this.scoId][elementModel].mod != 'w') {\n                        this.errorCode = '0';\n\n                        return this.getEl(element);\n                    } else {\n                        this.errorCode = this.dataModel[this.scoId][elementModel].readerror || '0';\n                    }\n                } else {\n                    const childrenStr = '._children';\n                    const countStr = '._count';\n\n                    if (elementModel.substring(elementModel.length - childrenStr.length) == childrenStr) {\n                        const parentModel = elementModel.substring(0, elementModel.length - childrenStr.length);\n\n                        if (this.dataModel[this.scoId][parentModel] !== undefined) {\n                            this.errorCode = '202';\n                        } else {\n                            this.errorCode = '201';\n                        }\n                    } else if (elementModel.substring(elementModel.length - countStr.length) == countStr) {\n                        const parentModel = elementModel.substring(0, elementModel.length - countStr.length);\n\n                        if (this.dataModel[this.scoId][parentModel] !== undefined) {\n                            this.errorCode = '203';\n                        } else {\n                            this.errorCode = '201';\n                        }\n                    } else {\n                        this.errorCode = '201';\n                    }\n                }\n            } else {\n                this.errorCode = '201';\n            }\n        } else {\n            this.errorCode = '301';\n        }\n\n        return '';\n    }\n\n    /**\n     * Initialize the data model.\n     *\n     * @param param Param.\n     * @returns \"true\" if initialized, \"false\" otherwise.\n     */\n    LMSInitialize(param: string): string {\n        this.errorCode = '0';\n\n        if (param == '') {\n            if (!this.initialized) {\n                this.initialized = true;\n                this.errorCode = '0';\n\n                return 'true';\n            } else {\n                this.errorCode = '101';\n            }\n        } else {\n            this.errorCode = '201';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Set the value of a certain element.\n     *\n     * @param element Name of the element to set.\n     * @param value Value to set.\n     * @returns \"true\" if success, \"false\" otherwise.\n     */\n    LMSSetValue(element: string, value: AddonModScormDataValue): string {\n        this.errorCode = '0';\n\n        if (this.initialized) {\n            if (element != '') {\n                let expression = new RegExp(CMI_INDEX, 'g');\n                const elementModel = String(element).replace(expression, '.n.');\n\n                if (this.dataModel[this.scoId][elementModel] !== undefined) {\n                    if (this.dataModel[this.scoId][elementModel].mod != 'r') {\n                        expression = new RegExp(this.dataModel[this.scoId][elementModel].format ?? '');\n                        value = value + '';\n\n                        const matches = value.match(expression);\n\n                        if (matches != null) {\n                            // Create dynamic data model element.\n                            if (element != elementModel) {\n\n                                // Init default counters and values.\n                                if (element.indexOf('cmi.objectives') === 0) {\n                                    const currentN = element.match(/cmi.objectives.(\\d+)./)?.[1];\n                                    const counterElement = 'cmi.objectives.' + currentN + '.score';\n\n                                    if (this.currentUserData[this.scoId].userdata[counterElement + '._children'] === undefined) {\n                                        this.setEl(\n                                            <string> this.currentUserData[this.scoId].userdata[counterElement + '._children'],\n                                            SCORE_CHILDREN,\n                                        );\n                                        this.setEl(<string> this.currentUserData[this.scoId].userdata[counterElement + '.raw'], '');\n                                        this.setEl(<string> this.currentUserData[this.scoId].userdata[counterElement + '.min'], '');\n                                        this.setEl(<string> this.currentUserData[this.scoId].userdata[counterElement + '.max'], '');\n                                    }\n\n                                } else if (element.indexOf('cmi.interactions') === 0) {\n                                    const currentN = element.match(/cmi.interactions.(\\d+)./)?.[1];\n                                    let counterElement = 'cmi.interactions.' + currentN + '.objectives._count';\n\n                                    if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                                        this.setEl(counterElement, 0);\n                                    }\n\n                                    counterElement = 'cmi.interactions.' + currentN + '.correct_responses._count';\n                                    if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                                        this.setEl(counterElement, 0);\n                                    }\n                                }\n\n                                const elementIndexes = element.split('.');\n                                let subElement = 'cmi';\n\n                                for (let i = 1; i < elementIndexes.length - 1; i++) {\n                                    const elementIndex = elementIndexes[i];\n\n                                    if (elementIndexes[i + 1].match(/^\\d+$/)) {\n                                        const counterElement = subElement + '.' + elementIndex + '._count';\n\n                                        if (this.currentUserData[this.scoId].userdata[counterElement] === undefined) {\n                                            this.setEl(counterElement, 0);\n                                        }\n\n                                        if (elementIndexes[i + 1] == this.getEl(counterElement)) {\n                                            const count = this.getEl(counterElement);\n                                            this.setEl(counterElement, Number(count) + 1);\n                                        }\n\n                                        if (elementIndexes[i + 1] > this.getEl(counterElement)) {\n                                            this.errorCode = '201';\n                                        }\n\n                                        subElement = subElement.concat('.' + elementIndex + '.' + elementIndexes[i + 1]);\n                                        i++;\n                                    } else {\n                                        subElement = subElement.concat('.' + elementIndex);\n                                    }\n                                }\n\n                                element = subElement.concat('.' + elementIndexes[elementIndexes.length - 1]);\n                            }\n\n                            // Store data.\n                            if (this.errorCode == '0') {\n                                if (this.scorm.autocommit && !this.timeout) {\n                                    this.timeout = window.setTimeout(() => this.LMSCommit(''), 60000);\n                                }\n\n                                const range = this.dataModel[this.scoId][elementModel].range;\n                                if (range !== undefined) {\n                                    const ranges = range.split('#');\n                                    value = Number(value);\n\n                                    if (value >= Number(ranges[0]) && value <= Number(ranges[1])) {\n                                        this.setEl(element, Number(value));\n                                        this.errorCode = '0';\n\n                                        return 'true';\n                                    } else {\n                                        this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n                                    }\n                                } else {\n                                    if (element == 'cmi.comments') {\n                                        this.setEl('cmi.comments', this.getEl('cmi.comments') + value);\n                                    } else {\n                                        this.setEl(element, value);\n                                    }\n                                    this.errorCode = '0';\n\n                                    return 'true';\n                                }\n                            }\n                        } else {\n                            this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n                        }\n                    } else {\n                        this.errorCode = this.dataModel[this.scoId][elementModel].writeerror;\n                    }\n                } else {\n                    this.errorCode = '201';\n                }\n            } else {\n                this.errorCode = '201';\n            }\n        } else {\n            this.errorCode = '301';\n        }\n\n        return 'false';\n    }\n\n    /**\n     * Set a SCO ID.\n     * The scoId is like a pointer to be able to retrieve the SCO default values and set the new ones in the overall SCORM\n     * data structure.\n     *\n     * @param scoId The new SCO id.\n     */\n    loadSco(scoId: number): void {\n        this.scoId = scoId;\n    }\n\n    /**\n     * Set the value of the given element in the non-persistent (current) user data.\n     *\n     * @param el The element.\n     * @param value The value.\n     */\n    protected setEl(el: string, value: AddonModScormDataValue): void {\n        this.currentUserData[this.scoId] = this.currentUserData[this.scoId] || {\n            scoid: this.scoId,\n            userdata: {},\n            defaultdata: {},\n        };\n        this.currentUserData[this.scoId].userdata[el] = value;\n    }\n\n    /**\n     * Set offline mode to true or false.\n     *\n     * @param offline True if offline, false otherwise.\n     */\n    setOffline(offline: boolean): void {\n        this.offline = offline;\n    }\n\n    /**\n     * Persist the current user data (this is usually called by LMSCommit).\n     *\n     * @param storeTotalTime If true, we need to calculate the total time too.\n     * @returns True if success, false otherwise.\n     */\n    protected storeData(storeTotalTime?: boolean): boolean {\n        if (!this.canSaveTracks) {\n            return true;\n        }\n\n        let tracks: AddonModScormDataEntry[];\n\n        if (storeTotalTime) {\n            if (this.getEl('cmi.core.lesson_status') == 'not attempted') {\n                this.setEl('cmi.core.lesson_status', 'completed');\n            }\n\n            if (this.getEl('cmi.core.lesson_mode') == AddonModScormProvider.MODENORMAL) {\n                if (this.getEl('cmi.core.credit') == 'credit') {\n                    if (this.getEl('cmi.student_data.mastery_score') !== '' && this.getEl('cmi.core.score.raw') !== '') {\n                        if (parseFloat(<string> this.getEl('cmi.core.score.raw')) >=\n                                parseFloat(<string> this.getEl('cmi.student_data.mastery_score'))) {\n                            this.setEl('cmi.core.lesson_status', 'passed');\n                        } else {\n                            this.setEl('cmi.core.lesson_status', 'failed');\n                        }\n                    }\n                }\n            }\n\n            if (this.getEl('cmi.core.lesson_mode') == AddonModScormProvider.MODEBROWSE) {\n                if (this.dataModel[this.scoId]['cmi.core.lesson_status'].defaultvalue == '' &&\n                        this.getEl('cmi.core.lesson_status') == 'not attempted') {\n                    this.setEl('cmi.core.lesson_status', 'browsed');\n                }\n            }\n\n            tracks = this.collectData();\n            tracks.push(this.totalTime());\n        } else {\n            tracks = this.collectData();\n        }\n\n        const ok = AddonModScorm.saveTracksSync(this.scoId, this.attempt, tracks, this.scorm, this.offline, this.currentUserData);\n\n        if (this.offline || ok) {\n            return ok;\n        }\n\n        // Failure storing data in online. Go offline.\n        this.offline = true;\n        this.triggerEvent(AddonModScormProvider.GO_OFFLINE_EVENT);\n\n        return AddonModScorm.saveTracksSync(this.scoId, this.attempt, tracks, this.scorm, this.offline, this.currentUserData);\n\n    }\n\n    /**\n     * Utility function for calculating the total time spent in the SCO.\n     *\n     * @returns Total time element.\n     */\n    protected totalTime(): AddonModScormDataEntry {\n        const totalTime = this.addTime(<string> this.getEl('cmi.core.total_time'), <string> this.getEl('cmi.core.session_time'));\n\n        return { element: 'cmi.core.total_time', value: totalTime };\n    }\n\n    /**\n     * Convenience function to trigger events.\n     *\n     * @param name Name of the event to trigger.\n     */\n    protected triggerEvent(name: string): void {\n        CoreEvents.trigger(name, <AddonModScormCommonEventData> {\n            scormId: this.scorm.id,\n            scoId: this.scoId,\n            attempt: this.attempt,\n        }, this.siteId);\n    }\n\n}\n\ntype DataModelEntry = ReadOnlyDataModelEntry | WritableDataModelEntry;\n\ntype ReadOnlyDataModelEntry = DataModelCommonProperties & {\n    mod: 'r';\n    format?: string;\n};\n\ntype WritableDataModelEntry = DataModelCommonProperties & {\n    mod: 'w' | 'rw';\n    format: string;\n};\n\ntype DataModelCommonProperties = {\n    writeerror: string;\n    readerror?: string;\n    defaultvalue?: string | number;\n    range?: string;\n    pattern?: string;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}