{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport * as i0 from \"@angular/core\";\n/**\n * Directive to allow downloading and open a file. When the item with this directive is clicked, the file will be\n * downloaded (if needed) and opened.\n */\nexport class CoreDownloadFileDirective {\n  constructor(element) {\n    this.element = element.nativeElement;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    this.element.addEventListener('click', /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (ev) {\n        if (!_this.file) {\n          return;\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n        const modal = yield CoreDomUtils.showModalLoading();\n        try {\n          yield CoreFileHelper.downloadAndOpenFile(_this.file, _this.component, _this.componentId);\n        } catch (error) {\n          CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        } finally {\n          modal.dismiss();\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n}\n_class = CoreDownloadFileDirective;\n_class.ɵfac = function CoreDownloadFileDirective_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: _class,\n  selectors: [[\"\", \"core-download-file\", \"\"]],\n  inputs: {\n    file: [\"core-download-file\", \"file\"],\n    component: \"component\",\n    componentId: \"componentId\"\n  }\n});","map":{"version":3,"names":["CoreFileHelper","CoreDomUtils","CoreDownloadFileDirective","constructor","element","nativeElement","ngOnInit","_this","addEventListener","_ref","_asyncToGenerator","ev","file","preventDefault","stopPropagation","modal","showModalLoading","downloadAndOpenFile","component","componentId","error","showErrorModalDefault","dismiss","_x","apply","arguments","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/directives/download-file.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef } from '@angular/core';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreWSFile } from '@services/ws';\n\n/**\n * Directive to allow downloading and open a file. When the item with this directive is clicked, the file will be\n * downloaded (if needed) and opened.\n */\n@Directive({\n    selector: '[core-download-file]',\n})\nexport class CoreDownloadFileDirective implements OnInit {\n\n    @Input('core-download-file') file?: CoreWSFile; // The file to download.\n    @Input() component?: string; // Component to link the file to.\n    @Input() componentId?: string | number; // Component ID to use in conjunction with the component.\n\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef) {\n        this.element = element.nativeElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.element.addEventListener('click', async (ev: Event) => {\n            if (!this.file) {\n                return;\n            }\n\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            const modal = await CoreDomUtils.showModalLoading();\n\n            try {\n                await CoreFileHelper.downloadAndOpenFile(this.file, this.component, this.componentId);\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            } finally {\n                modal.dismiss();\n            }\n        });\n    }\n\n}\n"],"mappings":";;AAeA,SAASA,cAAc,QAAQ,uBAAuB;AACtD,SAASC,YAAY,QAAQ,qBAAqB;;AAGlD;;;;AAOA,OAAM,MAAOC,yBAAyB;EAQlCC,YAAYC,OAAmB;IAC3B,IAAI,CAACA,OAAO,GAAGA,OAAO,CAACC,aAAa;EACxC;EAEA;;;EAGAC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IACJ,IAAI,CAACH,OAAO,CAACI,gBAAgB,CAAC,OAAO;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,WAAOC,EAAS,EAAI;QACvD,IAAI,CAACJ,KAAI,CAACK,IAAI,EAAE;UACZ;;QAGJD,EAAE,CAACE,cAAc,EAAE;QACnBF,EAAE,CAACG,eAAe,EAAE;QAEpB,MAAMC,KAAK,SAASd,YAAY,CAACe,gBAAgB,EAAE;QAEnD,IAAI;UACA,MAAMhB,cAAc,CAACiB,mBAAmB,CAACV,KAAI,CAACK,IAAI,EAAEL,KAAI,CAACW,SAAS,EAAEX,KAAI,CAACY,WAAW,CAAC;SACxF,CAAC,OAAOC,KAAK,EAAE;UACZnB,YAAY,CAACoB,qBAAqB,CAACD,KAAK,EAAE,uBAAuB,EAAE,IAAI,CAAC;SAC3E,SAAS;UACNL,KAAK,CAACO,OAAO,EAAE;;MAEvB,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAd,IAAA,CAAAe,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EACN;;SAlCSvB,yBAAyB;;mBAAzBA,MAAyB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;;QAAzB1B,MAAyB;EAAA2B,SAAA;EAAAC,MAAA;IAAAlB,IAAA;IAAAM,SAAA;IAAAC,WAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}