{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourseResourcePrefetchHandlerBase } from '@features/course/classes/resource-prefetch-handler';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonModLabel, AddonModLabelProvider } from '../label';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to prefetch labels.\n */\nexport class AddonModLabelPrefetchHandlerService extends CoreCourseResourcePrefetchHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModLabel';\n    this.modName = 'label';\n    this.component = AddonModLabelProvider.COMPONENT;\n    this.updatesNames = /^.*files$/;\n  }\n  /**\n   * @inheritdoc\n   */\n  getIntroFiles(module, courseId, ignoreCache) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const label = yield AddonModLabel.getLabel(courseId, module.id, {\n        readingStrategy: ignoreCache ? 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */ : undefined\n      });\n      return _this.getIntroFilesFromInstance(module, label);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateContent(moduleId, courseId) {\n    return _asyncToGenerator(function* () {\n      yield AddonModLabel.invalidateContent(moduleId, courseId);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateModule(module, courseId) {\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonModLabel.invalidateLabelData(courseId));\n      promises.push(CoreCourse.invalidateModule(module.id));\n      yield CoreUtils.allPromises(promises);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  loadContents(module) {\n    return _asyncToGenerator(function* () {\n      // Labels don't have contents.\n      module.contents = [];\n    })();\n  }\n}\n_class = AddonModLabelPrefetchHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModLabelPrefetchHandlerService_BaseFactory;\n  return function AddonModLabelPrefetchHandlerService_Factory(t) {\n    return (ɵAddonModLabelPrefetchHandlerService_BaseFactory || (ɵAddonModLabelPrefetchHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModLabelPrefetchHandler = makeSingleton(AddonModLabelPrefetchHandlerService);","map":{"version":3,"names":["CoreCourseResourcePrefetchHandlerBase","CoreCourse","CoreUtils","makeSingleton","AddonModLabel","AddonModLabelProvider","AddonModLabelPrefetchHandlerService","constructor","name","modName","component","COMPONENT","updatesNames","getIntroFiles","module","courseId","ignoreCache","_this","_asyncToGenerator","label","getLabel","id","readingStrategy","undefined","getIntroFilesFromInstance","invalidateContent","moduleId","invalidateModule","promises","push","invalidateLabelData","allPromises","loadContents","contents","t","factory","ɵfac","providedIn","AddonModLabelPrefetchHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/label/services/handlers/prefetch.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourseResourcePrefetchHandlerBase } from '@features/course/classes/resource-prefetch-handler';\nimport { CoreCourse, CoreCourseAnyModuleData } from '@features/course/services/course';\nimport { CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreWSFile } from '@services/ws';\nimport { makeSingleton } from '@singletons';\nimport { AddonModLabel, AddonModLabelProvider } from '../label';\n\n/**\n * Handler to prefetch labels.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModLabelPrefetchHandlerService extends CoreCourseResourcePrefetchHandlerBase {\n\n    name = 'AddonModLabel';\n    modName = 'label';\n    component = AddonModLabelProvider.COMPONENT;\n    updatesNames = /^.*files$/;\n\n    /**\n     * @inheritdoc\n     */\n    async getIntroFiles(module: CoreCourseAnyModuleData, courseId: number, ignoreCache?: boolean): Promise<CoreWSFile[]> {\n        const label = await AddonModLabel.getLabel(courseId, module.id, {\n            readingStrategy: ignoreCache ? CoreSitesReadingStrategy.ONLY_NETWORK : undefined,\n        });\n\n        return this.getIntroFilesFromInstance(module, label);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidateContent(moduleId: number, courseId: number): Promise<void> {\n        await AddonModLabel.invalidateContent(moduleId, courseId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidateModule(module: CoreCourseAnyModuleData, courseId: number): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModLabel.invalidateLabelData(courseId));\n        promises.push(CoreCourse.invalidateModule(module.id));\n\n        await CoreUtils.allPromises(promises);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async loadContents(module: CoreCourseAnyModuleData): Promise<void> {\n        // Labels don't have contents.\n        module.contents = [];\n    }\n\n}\nexport const AddonModLabelPrefetchHandler = makeSingleton(AddonModLabelPrefetchHandlerService);\n"],"mappings":";;AAeA,SAASA,qCAAqC,QAAQ,oDAAoD;AAC1G,SAASC,UAAU,QAAiC,kCAAkC;AAEtF,SAASC,SAAS,QAAQ,uBAAuB;AAEjD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,aAAa,EAAEC,qBAAqB,QAAQ,UAAU;;AAE/D;;;AAIA,OAAM,MAAOC,mCAAoC,SAAQN,qCAAqC;EAD9FO,YAAA;;IAGI,KAAAC,IAAI,GAAG,eAAe;IACtB,KAAAC,OAAO,GAAG,OAAO;IACjB,KAAAC,SAAS,GAAGL,qBAAqB,CAACM,SAAS;IAC3C,KAAAC,YAAY,GAAG,WAAW;;EAE1B;;;EAGMC,aAAaA,CAACC,MAA+B,EAAEC,QAAgB,EAAEC,WAAqB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACxF,MAAMC,KAAK,SAASf,aAAa,CAACgB,QAAQ,CAACL,QAAQ,EAAED,MAAM,CAACO,EAAE,EAAE;QAC5DC,eAAe,EAAEN,WAAW,GAAE,gDAAyCO;OAC1E,CAAC;MAEF,OAAON,KAAI,CAACO,yBAAyB,CAACV,MAAM,EAAEK,KAAK,CAAC;IAAC;EACzD;EAEA;;;EAGMM,iBAAiBA,CAACC,QAAgB,EAAEX,QAAgB;IAAA,OAAAG,iBAAA;MACtD,MAAMd,aAAa,CAACqB,iBAAiB,CAACC,QAAQ,EAAEX,QAAQ,CAAC;IAAC;EAC9D;EAEA;;;EAGMY,gBAAgBA,CAACb,MAA+B,EAAEC,QAAgB;IAAA,OAAAG,iBAAA;MACpE,MAAMU,QAAQ,GAAoB,EAAE;MAEpCA,QAAQ,CAACC,IAAI,CAACzB,aAAa,CAAC0B,mBAAmB,CAACf,QAAQ,CAAC,CAAC;MAC1Da,QAAQ,CAACC,IAAI,CAAC5B,UAAU,CAAC0B,gBAAgB,CAACb,MAAM,CAACO,EAAE,CAAC,CAAC;MAErD,MAAMnB,SAAS,CAAC6B,WAAW,CAACH,QAAQ,CAAC;IAAC;EAC1C;EAEA;;;EAGMI,YAAYA,CAAClB,MAA+B;IAAA,OAAAI,iBAAA;MAC9C;MACAJ,MAAM,CAACmB,QAAQ,GAAG,EAAE;IAAC;EACzB;;SA3CS3B,mCAAoC;;;;6IAApCA,MAAmC,IAAA4B,CAAA,IAAnC5B,MAAmC;EAAA;AAAA;;SAAnCA,MAAmC;EAAA6B,OAAA,EAAnC7B,MAAmC,CAAA8B,IAAA;EAAAC,UAAA,EADtB;AAAM;AA+ChC,OAAO,MAAMC,4BAA4B,GAAGnC,aAAa,CAACG,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}