{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { AddonModDataProvider } from '@addons/mod/data/services/data';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreFileSession } from '@services/file-session';\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldFileComponent } from '../component/file';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for file data field plugin.\n */\nexport class AddonModDataFieldFileHandlerService {\n  constructor() {\n    this.name = 'AddonModDataFieldFileHandler';\n    this.type = 'file';\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return AddonModDataFieldFileComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldSearchData(field, inputData) {\n    const fieldName = 'f_' + field.id;\n    if (inputData[fieldName]) {\n      return [{\n        name: fieldName,\n        value: inputData[fieldName]\n      }];\n    }\n    return [];\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldEditData(field) {\n    const files = this.getFieldEditFiles(field);\n    return [{\n      fieldid: field.id,\n      subfield: 'file',\n      files: files\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldEditFiles(field) {\n    return CoreFileSession.getFiles(AddonModDataProvider.COMPONENT, field.dataid + '_' + field.id);\n  }\n  /**\n   * @inheritdoc\n   */\n  hasFieldDataChanged(field, inputData, originalFieldData) {\n    const files = CoreFileSession.getFiles(AddonModDataProvider.COMPONENT, field.dataid + '_' + field.id) || [];\n    let originalFiles = originalFieldData && originalFieldData.files || [];\n    if (originalFiles.length) {\n      originalFiles = [originalFiles[0]];\n    }\n    return CoreFileUploader.areFileListDifferent(files, originalFiles);\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldsNotifications(field, inputData) {\n    if (field.required && (!inputData || !inputData.length || !inputData[0].value)) {\n      return Translate.instant('addon.mod_data.errormustsupplyvalue');\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  overrideData(originalContent, offlineContent, offlineFiles) {\n    const uploadedFilesResult = offlineContent === null || offlineContent === void 0 ? void 0 : offlineContent.file;\n    if (uploadedFilesResult && uploadedFilesResult.offline > 0 && offlineFiles && (offlineFiles === null || offlineFiles === void 0 ? void 0 : offlineFiles.length) > 0) {\n      originalContent.content = offlineFiles[0].name;\n      originalContent.files = [offlineFiles[0]];\n    } else if (uploadedFilesResult && uploadedFilesResult.online && uploadedFilesResult.online.length > 0) {\n      originalContent.content = uploadedFilesResult.online[0].filename || '';\n      originalContent.files = [uploadedFilesResult.online[0]];\n    }\n    return originalContent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n}\n_class = AddonModDataFieldFileHandlerService;\n_class.ɵfac = function AddonModDataFieldFileHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModDataFieldFileHandler = makeSingleton(AddonModDataFieldFileHandlerService);","map":{"version":3,"names":["AddonModDataProvider","CoreFileUploader","CoreFileSession","makeSingleton","Translate","AddonModDataFieldFileComponent","AddonModDataFieldFileHandlerService","constructor","name","type","getComponent","getFieldSearchData","field","inputData","fieldName","id","value","getFieldEditData","files","getFieldEditFiles","fieldid","subfield","getFiles","COMPONENT","dataid","hasFieldDataChanged","originalFieldData","originalFiles","length","areFileListDifferent","getFieldsNotifications","required","instant","overrideData","originalContent","offlineContent","offlineFiles","uploadedFilesResult","file","offline","content","online","filename","isEnabled","_asyncToGenerator","factory","ɵfac","providedIn","AddonModDataFieldFileHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/file/services/handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    AddonModDataEntryField,\n    AddonModDataField,\n    AddonModDataProvider,\n    AddonModDataSearchEntriesAdvancedFieldFormatted,\n    AddonModDataSubfieldData,\n} from '@addons/mod/data/services/data';\nimport { AddonModDataFieldHandler } from '@addons/mod/data/services/data-fields-delegate';\nimport { Injectable, Type } from '@angular/core';\nimport { CoreFileUploader, CoreFileUploaderStoreFilesResult } from '@features/fileuploader/services/fileuploader';\nimport { FileEntry } from '@awesome-cordova-plugins/file/ngx';\nimport { CoreFileSession } from '@services/file-session';\nimport { CoreFormFields } from '@singletons/form';\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldFileComponent } from '../component/file';\nimport { CoreFileEntry } from '@services/file-helper';\nimport type { AddonModDataFieldPluginBaseComponent } from '@addons/mod/data/classes/base-field-plugin-component';\n\n/**\n * Handler for file data field plugin.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModDataFieldFileHandlerService implements AddonModDataFieldHandler {\n\n    name = 'AddonModDataFieldFileHandler';\n    type = 'file';\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<AddonModDataFieldPluginBaseComponent> {\n        return AddonModDataFieldFileComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldSearchData(field: AddonModDataField, inputData: CoreFormFields): AddonModDataSearchEntriesAdvancedFieldFormatted[] {\n        const fieldName = 'f_' + field.id;\n\n        if (inputData[fieldName]) {\n            return [{\n                name: fieldName,\n                value: inputData[fieldName],\n            }];\n        }\n\n        return [];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldEditData(field: AddonModDataField): AddonModDataSubfieldData[] {\n        const files = this.getFieldEditFiles(field);\n\n        return [{\n            fieldid: field.id,\n            subfield: 'file',\n            files: files,\n        }];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldEditFiles(field: AddonModDataField): CoreFileEntry[] {\n        return CoreFileSession.getFiles(AddonModDataProvider.COMPONENT, field.dataid + '_' + field.id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    hasFieldDataChanged(field: AddonModDataField, inputData: CoreFormFields, originalFieldData: AddonModDataEntryField): boolean {\n        const files = CoreFileSession.getFiles(AddonModDataProvider.COMPONENT, field.dataid + '_' + field.id) || [];\n        let originalFiles = (originalFieldData && originalFieldData.files) || [];\n\n        if (originalFiles.length) {\n            originalFiles = [originalFiles[0]];\n        }\n\n        return CoreFileUploader.areFileListDifferent(files, originalFiles);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldsNotifications(field: AddonModDataField, inputData: AddonModDataSubfieldData[]): string | undefined {\n        if (field.required && (!inputData || !inputData.length || !inputData[0].value)) {\n            return Translate.instant('addon.mod_data.errormustsupplyvalue');\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    overrideData(\n        originalContent: AddonModDataEntryField,\n        offlineContent: CoreFormFields,\n        offlineFiles?: FileEntry[],\n    ): AddonModDataEntryField {\n        const uploadedFilesResult: CoreFileUploaderStoreFilesResult | undefined =\n            <CoreFileUploaderStoreFilesResult | undefined> offlineContent?.file;\n\n        if (uploadedFilesResult && uploadedFilesResult.offline > 0 && offlineFiles && offlineFiles?.length > 0) {\n            originalContent.content = offlineFiles[0].name;\n            originalContent.files = [offlineFiles[0]];\n        } else if (uploadedFilesResult && uploadedFilesResult.online && uploadedFilesResult.online.length > 0) {\n            originalContent.content = uploadedFilesResult.online[0].filename || '';\n            originalContent.files = [uploadedFilesResult.online[0]];\n        }\n\n        return originalContent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n}\nexport const AddonModDataFieldFileHandler = makeSingleton(AddonModDataFieldFileHandlerService);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}