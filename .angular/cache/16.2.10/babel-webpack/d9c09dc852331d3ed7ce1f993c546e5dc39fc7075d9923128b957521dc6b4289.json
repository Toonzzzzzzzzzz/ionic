{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreBlockDelegate } from './block-delegate';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Service that provides helper functions for blocks.\n */\nexport class CoreBlockHelperProvider {\n  /**\n   * Return if it get course blocks options is enabled for the current site.\n   *\n   * @returns true if enabled, false otherwise.\n   */\n  canGetCourseBlocks() {\n    return CoreCourse.canGetCourseBlocks() && !CoreBlockDelegate.areBlocksDisabledInCourses();\n  }\n  /**\n   * Returns the list of blocks for the selected course.\n   *\n   * @param courseId Course ID.\n   * @returns List of supported blocks.\n   */\n  getCourseBlocks(courseId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const canGetBlocks = _this.canGetCourseBlocks();\n      if (!canGetBlocks) {\n        return [];\n      }\n      const blocks = yield CoreCourse.getCourseBlocks(courseId);\n      const hasSupportedBlock = CoreBlockDelegate.hasSupportedBlock(blocks);\n      if (!hasSupportedBlock) {\n        return [];\n      }\n      return blocks;\n    })();\n  }\n  /**\n   * Returns if the course has any block.\n   *\n   * @param courseId Course ID.\n   * @returns Wether course has blocks.\n   */\n  hasCourseBlocks(courseId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const blocks = yield _this2.getCourseBlocks(courseId);\n        return blocks.length > 0;\n      } catch (_unused) {\n        return false;\n      }\n    })();\n  }\n}\n_class = CoreBlockHelperProvider;\n_class.ɵfac = function CoreBlockHelperProvider_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreBlockHelper = makeSingleton(CoreBlockHelperProvider);","map":{"version":3,"names":["CoreCourse","CoreBlockDelegate","makeSingleton","CoreBlockHelperProvider","canGetCourseBlocks","areBlocksDisabledInCourses","getCourseBlocks","courseId","_this","_asyncToGenerator","canGetBlocks","blocks","hasSupportedBlock","hasCourseBlocks","_this2","length","_unused","factory","ɵfac","providedIn","CoreBlockHelper"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/block/services/block-helper.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourse, CoreCourseBlock } from '@features/course/services/course';\nimport { CoreBlockDelegate } from './block-delegate';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Service that provides helper functions for blocks.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreBlockHelperProvider {\n\n    /**\n     * Return if it get course blocks options is enabled for the current site.\n     *\n     * @returns true if enabled, false otherwise.\n     */\n    canGetCourseBlocks(): boolean {\n        return CoreCourse.canGetCourseBlocks() && !CoreBlockDelegate.areBlocksDisabledInCourses();\n    }\n\n    /**\n     * Returns the list of blocks for the selected course.\n     *\n     * @param courseId Course ID.\n     * @returns List of supported blocks.\n     */\n    async getCourseBlocks(courseId: number): Promise<CoreCourseBlock[]> {\n        const canGetBlocks = this.canGetCourseBlocks();\n\n        if (!canGetBlocks) {\n            return [];\n        }\n\n        const blocks = await CoreCourse.getCourseBlocks(courseId);\n        const hasSupportedBlock = CoreBlockDelegate.hasSupportedBlock(blocks);\n        if (!hasSupportedBlock) {\n            return [];\n        }\n\n        return blocks;\n    }\n\n    /**\n     * Returns if the course has any block.\n     *\n     * @param courseId Course ID.\n     * @returns Wether course has blocks.\n     */\n    async hasCourseBlocks(courseId: number): Promise<boolean> {\n        try {\n            const blocks = await this.getCourseBlocks(courseId);\n\n            return blocks.length > 0;\n        } catch {\n            return false;\n        }\n    }\n\n}\n\nexport const CoreBlockHelper = makeSingleton(CoreBlockHelperProvider);\n"],"mappings":";;AAeA,SAASA,UAAU,QAAyB,kCAAkC;AAC9E,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,uBAAuB;EAEhC;;;;;EAKAC,kBAAkBA,CAAA;IACd,OAAOJ,UAAU,CAACI,kBAAkB,EAAE,IAAI,CAACH,iBAAiB,CAACI,0BAA0B,EAAE;EAC7F;EAEA;;;;;;EAMMC,eAAeA,CAACC,QAAgB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClC,MAAMC,YAAY,GAAGF,KAAI,CAACJ,kBAAkB,EAAE;MAE9C,IAAI,CAACM,YAAY,EAAE;QACf,OAAO,EAAE;;MAGb,MAAMC,MAAM,SAASX,UAAU,CAACM,eAAe,CAACC,QAAQ,CAAC;MACzD,MAAMK,iBAAiB,GAAGX,iBAAiB,CAACW,iBAAiB,CAACD,MAAM,CAAC;MACrE,IAAI,CAACC,iBAAiB,EAAE;QACpB,OAAO,EAAE;;MAGb,OAAOD,MAAM;IAAC;EAClB;EAEA;;;;;;EAMME,eAAeA,CAACN,QAAgB;IAAA,IAAAO,MAAA;IAAA,OAAAL,iBAAA;MAClC,IAAI;QACA,MAAME,MAAM,SAASG,MAAI,CAACR,eAAe,CAACC,QAAQ,CAAC;QAEnD,OAAOI,MAAM,CAACI,MAAM,GAAG,CAAC;OAC3B,CAAC,OAAAC,OAAA,EAAM;QACJ,OAAO,KAAK;;IACf;EACL;;SA/CSb,uBAAuB;;mBAAvBA,MAAuB;AAAA;;SAAvBA,MAAuB;EAAAc,OAAA,EAAvBd,MAAuB,CAAAe,IAAA;EAAAC,UAAA,EADV;AAAM;AAoDhC,OAAO,MAAMC,eAAe,GAAGlB,aAAa,CAACC,uBAAuB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}