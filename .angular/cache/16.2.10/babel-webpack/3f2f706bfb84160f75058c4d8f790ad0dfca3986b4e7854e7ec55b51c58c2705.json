{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourseProvider } from '@features/course/services/course';\nimport { makeSingleton } from '@singletons';\nimport { AddonCourseCompletion } from '../coursecompletion';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to inject an option into the course main menu.\n */\nexport class AddonCourseCompletionCourseOptionHandlerService {\n  constructor() {\n    this.name = 'AddonCourseCompletion';\n    this.priority = 200;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return AddonCourseCompletion.isPluginViewEnabled();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabledForCourse(courseId, accessData) {\n    return _asyncToGenerator(function* () {\n      if (accessData && accessData.type === CoreCourseProvider.ACCESS_GUEST) {\n        return false; // Not enabled for guest access.\n      }\n\n      const courseEnabled = yield AddonCourseCompletion.isPluginViewEnabledForCourse(courseId);\n      // If is not enabled in the course, is not enabled for the user.\n      if (!courseEnabled) {\n        return false;\n      }\n      return AddonCourseCompletion.isPluginViewEnabledForUser(courseId);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getDisplayData() {\n    return {\n      title: 'addon.coursecompletion.completionmenuitem',\n      class: 'addon-coursecompletion-course-handler',\n      page: 'coursecompletion'\n    };\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateEnabledForCourse(courseId) {\n    return _asyncToGenerator(function* () {\n      yield AddonCourseCompletion.invalidateCourseCompletion(courseId);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  prefetch(course) {\n    return _asyncToGenerator(function* () {\n      try {\n        yield AddonCourseCompletion.getCompletion(course.id, undefined, {\n          getFromCache: false,\n          emergencyCache: false\n        });\n      } catch (error) {\n        if (error && error.errorcode == 'notenroled') {\n          // Not enrolled error, probably a teacher. Ignore error.\n        } else {\n          throw error;\n        }\n      }\n    })();\n  }\n}\n_class = AddonCourseCompletionCourseOptionHandlerService;\n_class.ɵfac = function AddonCourseCompletionCourseOptionHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonCourseCompletionCourseOptionHandler = makeSingleton(AddonCourseCompletionCourseOptionHandlerService);","map":{"version":3,"names":["CoreCourseProvider","makeSingleton","AddonCourseCompletion","AddonCourseCompletionCourseOptionHandlerService","constructor","name","priority","isEnabled","_asyncToGenerator","isPluginViewEnabled","isEnabledForCourse","courseId","accessData","type","ACCESS_GUEST","courseEnabled","isPluginViewEnabledForCourse","isPluginViewEnabledForUser","getDisplayData","title","class","page","invalidateEnabledForCourse","invalidateCourseCompletion","prefetch","course","getCompletion","id","undefined","getFromCache","emergencyCache","error","errorcode","factory","ɵfac","providedIn","AddonCourseCompletionCourseOptionHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/coursecompletion/services/handlers/course-option.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourseProvider } from '@features/course/services/course';\nimport {\n    CoreCourseAccess,\n    CoreCourseOptionsHandler,\n    CoreCourseOptionsHandlerData,\n} from '@features/course/services/course-options-delegate';\nimport { CoreCourseAnyCourseData } from '@features/courses/services/courses';\nimport { makeSingleton } from '@singletons';\nimport { AddonCourseCompletion } from '../coursecompletion';\n\n/**\n * Handler to inject an option into the course main menu.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonCourseCompletionCourseOptionHandlerService implements CoreCourseOptionsHandler {\n\n    name = 'AddonCourseCompletion';\n    priority = 200;\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return AddonCourseCompletion.isPluginViewEnabled();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabledForCourse(courseId: number, accessData: CoreCourseAccess): Promise<boolean> {\n        if (accessData && accessData.type === CoreCourseProvider.ACCESS_GUEST) {\n            return false; // Not enabled for guest access.\n        }\n\n        const courseEnabled = await AddonCourseCompletion.isPluginViewEnabledForCourse(courseId);\n        // If is not enabled in the course, is not enabled for the user.\n        if (!courseEnabled) {\n            return false;\n        }\n\n        return AddonCourseCompletion.isPluginViewEnabledForUser(courseId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getDisplayData(): CoreCourseOptionsHandlerData | Promise<CoreCourseOptionsHandlerData> {\n        return {\n            title: 'addon.coursecompletion.completionmenuitem',\n            class: 'addon-coursecompletion-course-handler',\n            page: 'coursecompletion',\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidateEnabledForCourse(courseId: number): Promise<void> {\n        await AddonCourseCompletion.invalidateCourseCompletion(courseId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async prefetch(course: CoreCourseAnyCourseData): Promise<void> {\n        try {\n            await AddonCourseCompletion.getCompletion(course.id, undefined, {\n                getFromCache: false,\n                emergencyCache: false,\n            });\n        } catch (error) {\n            if (error && error.errorcode == 'notenroled') {\n                // Not enrolled error, probably a teacher. Ignore error.\n            } else {\n                throw error;\n            }\n        }\n    }\n\n}\nexport const AddonCourseCompletionCourseOptionHandler = makeSingleton(AddonCourseCompletionCourseOptionHandlerService);\n"],"mappings":";;AAeA,SAASA,kBAAkB,QAAQ,kCAAkC;AAOrE,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,qBAAqB,QAAQ,qBAAqB;;AAE3D;;;AAIA,OAAM,MAAOC,+CAA+C;EAD5DC,YAAA;IAGI,KAAAC,IAAI,GAAG,uBAAuB;IAC9B,KAAAC,QAAQ,GAAG,GAAG;;EAEd;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAON,qBAAqB,CAACO,mBAAmB,EAAE;IAAC;EACvD;EAEA;;;EAGMC,kBAAkBA,CAACC,QAAgB,EAAEC,UAA4B;IAAA,OAAAJ,iBAAA;MACnE,IAAII,UAAU,IAAIA,UAAU,CAACC,IAAI,KAAKb,kBAAkB,CAACc,YAAY,EAAE;QACnE,OAAO,KAAK,CAAC,CAAC;;;MAGlB,MAAMC,aAAa,SAASb,qBAAqB,CAACc,4BAA4B,CAACL,QAAQ,CAAC;MACxF;MACA,IAAI,CAACI,aAAa,EAAE;QAChB,OAAO,KAAK;;MAGhB,OAAOb,qBAAqB,CAACe,0BAA0B,CAACN,QAAQ,CAAC;IAAC;EACtE;EAEA;;;EAGAO,cAAcA,CAAA;IACV,OAAO;MACHC,KAAK,EAAE,2CAA2C;MAClDC,KAAK,EAAE,uCAAuC;MAC9CC,IAAI,EAAE;KACT;EACL;EAEA;;;EAGMC,0BAA0BA,CAACX,QAAgB;IAAA,OAAAH,iBAAA;MAC7C,MAAMN,qBAAqB,CAACqB,0BAA0B,CAACZ,QAAQ,CAAC;IAAC;EACrE;EAEA;;;EAGMa,QAAQA,CAACC,MAA+B;IAAA,OAAAjB,iBAAA;MAC1C,IAAI;QACA,MAAMN,qBAAqB,CAACwB,aAAa,CAACD,MAAM,CAACE,EAAE,EAAEC,SAAS,EAAE;UAC5DC,YAAY,EAAE,KAAK;UACnBC,cAAc,EAAE;SACnB,CAAC;OACL,CAAC,OAAOC,KAAK,EAAE;QACZ,IAAIA,KAAK,IAAIA,KAAK,CAACC,SAAS,IAAI,YAAY,EAAE;UAC1C;QAAA,CACH,MAAM;UACH,MAAMD,KAAK;;;IAElB;EACL;;SA/DS5B,+CAA+C;;mBAA/CA,MAA+C;AAAA;;SAA/CA,MAA+C;EAAA8B,OAAA,EAA/C9B,MAA+C,CAAA+B,IAAA;EAAAC,UAAA,EADlC;AAAM;AAmEhC,OAAO,MAAMC,wCAAwC,GAAGnC,aAAa,CAACE,+CAA+C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}