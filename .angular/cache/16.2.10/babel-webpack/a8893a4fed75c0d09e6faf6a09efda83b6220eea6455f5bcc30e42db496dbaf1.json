{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { APP_INITIALIZER } from '@angular/core';\n/**\n * Get the providers for the initializers.\n * Please use the APP_INITIALIZER token to provide the initializers.\n *\n * @returns List of providers.\n */\nexport function getInitializerProviders() {\n  if (!import.meta.webpackContext) {\n    return [];\n  }\n  const context = import.meta.webpackContext('./', {\n    recursive: false,\n    regExp: /\\.\\/.*\\.ts$/\n  });\n  return context.keys().reduce((providers, fileName) => {\n    const name = (fileName.match(/^(?:\\.\\/)?(.+)\\.ts$/) || [])[1];\n    if (name !== undefined && name !== 'index') {\n      providers.push({\n        provide: APP_INITIALIZER,\n        useValue: context(fileName).default,\n        multi: true\n      });\n    }\n    return providers;\n  }, []);\n}","map":{"version":3,"names":["APP_INITIALIZER","getInitializerProviders","import","meta","webpackContext","context","recursive","regExp","keys","reduce","providers","fileName","name","match","undefined","push","provide","useValue","default","multi"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/initializers/index.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { APP_INITIALIZER, Provider } from '@angular/core';\n\n/**\n * Get the providers for the initializers.\n * Please use the APP_INITIALIZER token to provide the initializers.\n *\n * @returns List of providers.\n */\nexport function getInitializerProviders(): Provider[] {\n    if (!import.meta.webpackContext) {\n        return [];\n    }\n\n    const context = import.meta.webpackContext(\n        './',\n        {\n            recursive: false,\n            regExp: /\\.\\/.*\\.ts$/,\n        },\n    );\n\n    return context.keys().reduce((providers, fileName) => {\n        const name = (fileName.match(/^(?:\\.\\/)?(.+)\\.ts$/) || [])[1];\n\n        if (name !== undefined && name !== 'index') {\n            providers.push({\n                provide: APP_INITIALIZER,\n                useValue: context(fileName).default,\n                multi: true,\n            });\n        }\n\n        return providers;\n    }, [] as Provider[]);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAe,QAAkB,eAAe;AAEzD;;;;;;AAMA,OAAM,SAAUC,uBAAuBA,CAAA;EACnC,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,cAAc,EAAE;IAC7B,OAAO,EAAE;;EAGb,MAAMC,OAAO,GAAGH,MAAM,CAACC,IAAI,CAACC,cAAc,CACtC,IAAI,EACJ;IACIE,SAAS,EAAE,KAAK;IAChBC,MAAM,EAAE;GACX,CACJ;EAED,OAAOF,OAAO,CAACG,IAAI,EAAE,CAACC,MAAM,CAAC,CAACC,SAAS,EAAEC,QAAQ,KAAI;IACjD,MAAMC,IAAI,GAAG,CAACD,QAAQ,CAACE,KAAK,CAAC,qBAAqB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAE7D,IAAID,IAAI,KAAKE,SAAS,IAAIF,IAAI,KAAK,OAAO,EAAE;MACxCF,SAAS,CAACK,IAAI,CAAC;QACXC,OAAO,EAAEhB,eAAe;QACxBiB,QAAQ,EAAEZ,OAAO,CAACM,QAAQ,CAAC,CAACO,OAAO;QACnCC,KAAK,EAAE;OACV,CAAC;;IAGN,OAAOT,SAAS;EACpB,CAAC,EAAE,EAAgB,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}