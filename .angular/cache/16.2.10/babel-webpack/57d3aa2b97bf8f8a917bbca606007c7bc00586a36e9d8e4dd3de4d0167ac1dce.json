{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreApp } from '@services/app';\nimport { NgZone, Keyboard } from '@singletons';\n/**\n * Initializes keyboard event listeners and ensures Angular zone is properly managed for change detection.\n */\nexport default function () {\n  const zone = NgZone.instance;\n  const app = CoreApp.instance;\n  const keyboard = Keyboard.instance;\n  // Execute callbacks in the Angular zone, so change detection doesn't stop working.\n  keyboard.onKeyboardShow().subscribe(data => zone.run(() => app.onKeyboardShow(data.keyboardHeight)));\n  keyboard.onKeyboardHide().subscribe(() => zone.run(() => app.onKeyboardHide()));\n  keyboard.onKeyboardWillShow().subscribe(() => zone.run(() => app.onKeyboardWillShow()));\n  keyboard.onKeyboardWillHide().subscribe(() => zone.run(() => app.onKeyboardWillHide()));\n}","map":{"version":3,"names":["CoreApp","NgZone","Keyboard","zone","instance","app","keyboard","onKeyboardShow","subscribe","data","run","keyboardHeight","onKeyboardHide","onKeyboardWillShow","onKeyboardWillHide"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/initializers/subscribe-to-keyboard-events.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreApp } from '@services/app';\nimport { NgZone, Keyboard } from '@singletons';\n\n/**\n * Initializes keyboard event listeners and ensures Angular zone is properly managed for change detection.\n */\nexport default function(): void {\n    const zone = NgZone.instance;\n    const app = CoreApp.instance;\n    const keyboard = Keyboard.instance;\n\n    // Execute callbacks in the Angular zone, so change detection doesn't stop working.\n    keyboard.onKeyboardShow().subscribe(data => zone.run(() => app.onKeyboardShow(data.keyboardHeight)));\n    keyboard.onKeyboardHide().subscribe(() => zone.run(() => app.onKeyboardHide()));\n    keyboard.onKeyboardWillShow().subscribe(() => zone.run(() => app.onKeyboardWillShow()));\n    keyboard.onKeyboardWillHide().subscribe(() => zone.run(() => app.onKeyboardWillHide()));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAO,QAAQ,eAAe;AACvC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,aAAa;AAE9C;;;AAGA,eAAc;EACV,MAAMC,IAAI,GAAGF,MAAM,CAACG,QAAQ;EAC5B,MAAMC,GAAG,GAAGL,OAAO,CAACI,QAAQ;EAC5B,MAAME,QAAQ,GAAGJ,QAAQ,CAACE,QAAQ;EAElC;EACAE,QAAQ,CAACC,cAAc,EAAE,CAACC,SAAS,CAACC,IAAI,IAAIN,IAAI,CAACO,GAAG,CAAC,MAAML,GAAG,CAACE,cAAc,CAACE,IAAI,CAACE,cAAc,CAAC,CAAC,CAAC;EACpGL,QAAQ,CAACM,cAAc,EAAE,CAACJ,SAAS,CAAC,MAAML,IAAI,CAACO,GAAG,CAAC,MAAML,GAAG,CAACO,cAAc,EAAE,CAAC,CAAC;EAC/EN,QAAQ,CAACO,kBAAkB,EAAE,CAACL,SAAS,CAAC,MAAML,IAAI,CAACO,GAAG,CAAC,MAAML,GAAG,CAACQ,kBAAkB,EAAE,CAAC,CAAC;EACvFP,QAAQ,CAACQ,kBAAkB,EAAE,CAACN,SAAS,CAAC,MAAML,IAAI,CAACO,GAAG,CAAC,MAAML,GAAG,CAACS,kBAAkB,EAAE,CAAC,CAAC;AAC3F"},"metadata":{},"sourceType":"module","externalDependencies":[]}