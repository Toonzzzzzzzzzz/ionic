{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreFile, CoreFileProvider } from '@services/file';\nimport { CoreSites } from '@services/sites';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreH5P } from '../services/h5p';\nimport { CoreH5PCore } from './core';\nimport { CoreError } from '@classes/errors/error';\nimport { CorePath } from '@singletons/path';\n/**\n * Equivalent to Moodle's H5P helper class.\n */\nexport class CoreH5PHelper {\n  /**\n   * Add the resizer script if it hasn't been added already.\n   */\n  static addResizerScript() {\n    if (document.head.querySelector('#core-h5p-resizer-script') != null) {\n      // Script already added, don't add it again.\n      return;\n    }\n    const script = document.createElement('script');\n    script.id = 'core-h5p-resizer-script';\n    script.type = 'text/javascript';\n    script.src = CoreH5P.h5pPlayer.getResizerScriptUrl();\n    document.head.appendChild(script);\n  }\n  /**\n   * Convert the number representation of display options into an object.\n   *\n   * @param displayOptions Number representing display options.\n   * @returns Object with display options.\n   */\n  static decodeDisplayOptions(displayOptions) {\n    const displayOptionsObject = CoreH5P.h5pCore.getDisplayOptionsAsObject(displayOptions);\n    const config = {\n      export: false,\n      embed: false,\n      copyright: CoreUtils.notNullOrUndefined(displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT]) ? displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT] : false,\n      icon: CoreUtils.notNullOrUndefined(displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_ABOUT]) ? displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_ABOUT] : false\n    };\n    config.frame = config.copyright || config.export || config.embed;\n    return config;\n  }\n  /**\n   * Get the core H5P assets, including all core H5P JavaScript and CSS.\n   *\n   * @returns Array core H5P assets.\n   */\n  static getCoreAssets(siteId) {\n    return _asyncToGenerator(function* () {\n      // Get core settings.\n      const settings = yield CoreH5PHelper.getCoreSettings(siteId);\n      settings.core = {\n        styles: [],\n        scripts: []\n      };\n      settings.loadedJs = [];\n      settings.loadedCss = [];\n      const libUrl = CoreH5P.h5pCore.h5pFS.getCoreH5PPath();\n      const cssRequires = [];\n      const jsRequires = [];\n      // Add core stylesheets.\n      CoreH5PCore.STYLES.forEach(style => {\n        settings.core.styles.push(libUrl + style);\n        cssRequires.push(libUrl + style);\n      });\n      // Add core JavaScript.\n      CoreH5PCore.getScripts().forEach(script => {\n        settings.core.scripts.push(script);\n        jsRequires.push(script);\n      });\n      return {\n        settings,\n        cssRequires,\n        jsRequires\n      };\n    })();\n  }\n  /**\n   * Get the settings needed by the H5P library.\n   *\n   * @param siteId The site ID. If not defined, current site.\n   * @returns Promise resolved with the settings.\n   */\n  static getCoreSettings(siteId) {\n    return _asyncToGenerator(function* () {\n      const site = yield CoreSites.getSite(siteId);\n      const info = site.getInfo();\n      if (!info) {\n        // Shouldn't happen for authenticated sites.\n        throw new CoreError('Site info could not be fetched.');\n      }\n      // H5P doesn't currently support xAPI State. It implements a mechanism in contentUserDataAjax() in h5p.js to update user\n      // data. However, in our case, we're overriding this method to call the xAPI State web services.\n      const basePath = CoreFile.getBasePathInstant();\n      const ajaxPaths = {\n        contentUserData: ''\n      };\n      return {\n        baseUrl: CoreFile.getWWWPath(),\n        url: CoreFile.convertFileSrc(CorePath.concatenatePaths(basePath, CoreH5P.h5pCore.h5pFS.getExternalH5PFolderPath(site.getId()))),\n        urlLibraries: CoreFile.convertFileSrc(CorePath.concatenatePaths(basePath, CoreH5P.h5pCore.h5pFS.getLibrariesFolderPath(site.getId()))),\n        postUserStatistics: false,\n        ajax: ajaxPaths,\n        saveFreq: false,\n        siteUrl: site.getURL(),\n        l10n: {\n          H5P: CoreH5P.h5pCore.getLocalization() // eslint-disable-line @typescript-eslint/naming-convention\n        },\n\n        user: {\n          name: info.username,\n          id: info.userid\n        },\n        hubIsEnabled: false,\n        reportingIsEnabled: false,\n        crossorigin: null,\n        libraryConfig: null,\n        pluginCacheBuster: '',\n        libraryUrl: CorePath.concatenatePaths(CoreH5P.h5pCore.h5pFS.getCoreH5PPath(), 'js')\n      };\n    })();\n  }\n  /**\n   * Extract and store an H5P file.\n   * This function won't validate most things because it should've been done by the server already.\n   *\n   * @param fileUrl The file URL used to download the file.\n   * @param file The file entry of the downloaded file.\n   * @param siteId Site ID. If not defined, current site.\n   * @param onProgress Function to call on progress.\n   * @returns Promise resolved when done.\n   */\n  static saveH5P(fileUrl, file, siteId, onProgress) {\n    return _asyncToGenerator(function* () {\n      siteId = siteId || CoreSites.getCurrentSiteId();\n      // Notify that the unzip is starting.\n      onProgress && onProgress({\n        message: 'core.unzipping'\n      });\n      const queueId = siteId + ':saveH5P:' + fileUrl;\n      yield CoreH5P.queueRunner.run(queueId, () => CoreH5PHelper.performSave(fileUrl, file, siteId, onProgress));\n    })();\n  }\n  /**\n   * Extract and store an H5P file.\n   *\n   * @param fileUrl The file URL used to download the file.\n   * @param file The file entry of the downloaded file.\n   * @param siteId Site ID. If not defined, current site.\n   * @param onProgress Function to call on progress.\n   * @returns Promise resolved when done.\n   */\n  static performSave(fileUrl, file, siteId, onProgress) {\n    return _asyncToGenerator(function* () {\n      const folderName = CoreMimetypeUtils.removeExtension(file.name);\n      const destFolder = CorePath.concatenatePaths(CoreFileProvider.TMPFOLDER, 'h5p/' + folderName);\n      // Unzip the file.\n      yield CoreFile.unzipFile(file.toURL(), destFolder, onProgress);\n      try {\n        // Notify that the unzip is starting.\n        onProgress && onProgress({\n          message: 'core.storingfiles'\n        });\n        // Read the contents of the unzipped dir, process them and store them.\n        const contents = yield CoreFile.getDirectoryContents(destFolder);\n        const filesData = yield CoreH5P.h5pValidator.processH5PFiles(destFolder, contents, siteId);\n        const content = yield CoreH5P.h5pStorage.savePackage(filesData, folderName, fileUrl, false, siteId);\n        // Create the content player.\n        const contentData = yield CoreH5P.h5pCore.loadContent(content.id, undefined, siteId);\n        const embedType = CoreH5PCore.determineEmbedType(contentData.embedType, contentData.library.embedTypes);\n        yield CoreH5P.h5pPlayer.createContentIndex(content.id, fileUrl, contentData, embedType, siteId);\n      } finally {\n        // Remove tmp folder.\n        try {\n          yield CoreFile.removeDir(destFolder);\n        } catch (_unused) {\n          // Ignore errors, it will be deleted eventually.\n        }\n      }\n    })();\n  }\n}","map":{"version":3,"names":["CoreFile","CoreFileProvider","CoreSites","CoreMimetypeUtils","CoreUtils","CoreH5P","CoreH5PCore","CoreError","CorePath","CoreH5PHelper","addResizerScript","document","head","querySelector","script","createElement","id","type","src","h5pPlayer","getResizerScriptUrl","appendChild","decodeDisplayOptions","displayOptions","displayOptionsObject","h5pCore","getDisplayOptionsAsObject","config","export","embed","copyright","notNullOrUndefined","DISPLAY_OPTION_COPYRIGHT","icon","DISPLAY_OPTION_ABOUT","frame","getCoreAssets","siteId","_asyncToGenerator","settings","getCoreSettings","core","styles","scripts","loadedJs","loadedCss","libUrl","h5pFS","getCoreH5PPath","cssRequires","jsRequires","STYLES","forEach","style","push","getScripts","site","getSite","info","getInfo","basePath","getBasePathInstant","ajaxPaths","contentUserData","baseUrl","getWWWPath","url","convertFileSrc","concatenatePaths","getExternalH5PFolderPath","getId","urlLibraries","getLibrariesFolderPath","postUserStatistics","ajax","saveFreq","siteUrl","getURL","l10n","H5P","getLocalization","user","name","username","userid","hubIsEnabled","reportingIsEnabled","crossorigin","libraryConfig","pluginCacheBuster","libraryUrl","saveH5P","fileUrl","file","onProgress","getCurrentSiteId","message","queueId","queueRunner","run","performSave","folderName","removeExtension","destFolder","TMPFOLDER","unzipFile","toURL","contents","getDirectoryContents","filesData","h5pValidator","processH5PFiles","content","h5pStorage","savePackage","contentData","loadContent","undefined","embedType","determineEmbedType","library","embedTypes","createContentIndex","removeDir","_unused"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/h5p/classes/helper.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { FileEntry } from '@awesome-cordova-plugins/file/ngx';\n\nimport { CoreFile, CoreFileProvider } from '@services/file';\nimport { CoreSites } from '@services/sites';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreH5P } from '../services/h5p';\nimport { CoreH5PCore, CoreH5PDisplayOptions, CoreH5PLocalization } from './core';\nimport { CoreError } from '@classes/errors/error';\nimport { CorePath } from '@singletons/path';\n\n/**\n * Equivalent to Moodle's H5P helper class.\n */\nexport class CoreH5PHelper {\n\n    /**\n     * Add the resizer script if it hasn't been added already.\n     */\n    static addResizerScript(): void {\n        if (document.head.querySelector('#core-h5p-resizer-script') != null) {\n            // Script already added, don't add it again.\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.id = 'core-h5p-resizer-script';\n        script.type = 'text/javascript';\n        script.src = CoreH5P.h5pPlayer.getResizerScriptUrl();\n        document.head.appendChild(script);\n    }\n\n    /**\n     * Convert the number representation of display options into an object.\n     *\n     * @param displayOptions Number representing display options.\n     * @returns Object with display options.\n     */\n    static decodeDisplayOptions(displayOptions: number): CoreH5PDisplayOptions {\n        const displayOptionsObject = CoreH5P.h5pCore.getDisplayOptionsAsObject(displayOptions);\n\n        const config: CoreH5PDisplayOptions = {\n            export: false, // Don't allow downloading in the app.\n            embed: false, // Don't display the embed button in the app.\n            copyright: CoreUtils.notNullOrUndefined(displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT]) ?\n                displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_COPYRIGHT] : false,\n            icon: CoreUtils.notNullOrUndefined(displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_ABOUT]) ?\n                displayOptionsObject[CoreH5PCore.DISPLAY_OPTION_ABOUT] : false,\n        };\n\n        config.frame = config.copyright || config.export || config.embed;\n\n        return config;\n    }\n\n    /**\n     * Get the core H5P assets, including all core H5P JavaScript and CSS.\n     *\n     * @returns Array core H5P assets.\n     */\n    static async getCoreAssets(\n        siteId?: string,\n    ): Promise<{settings: CoreH5PCoreSettings; cssRequires: string[]; jsRequires: string[]}> {\n\n        // Get core settings.\n        const settings = await CoreH5PHelper.getCoreSettings(siteId);\n\n        settings.core = {\n            styles: [],\n            scripts: [],\n        };\n        settings.loadedJs = [];\n        settings.loadedCss = [];\n\n        const libUrl = CoreH5P.h5pCore.h5pFS.getCoreH5PPath();\n        const cssRequires: string[] = [];\n        const jsRequires: string[] = [];\n\n        // Add core stylesheets.\n        CoreH5PCore.STYLES.forEach((style) => {\n            settings.core!.styles.push(libUrl + style);\n            cssRequires.push(libUrl + style);\n        });\n\n        // Add core JavaScript.\n        CoreH5PCore.getScripts().forEach((script) => {\n            settings.core!.scripts.push(script);\n            jsRequires.push(script);\n        });\n\n        return { settings, cssRequires, jsRequires };\n    }\n\n    /**\n     * Get the settings needed by the H5P library.\n     *\n     * @param siteId The site ID. If not defined, current site.\n     * @returns Promise resolved with the settings.\n     */\n    static async getCoreSettings(siteId?: string): Promise<CoreH5PCoreSettings> {\n\n        const site = await CoreSites.getSite(siteId);\n\n        const info = site.getInfo();\n\n        if (!info) {\n            // Shouldn't happen for authenticated sites.\n            throw new CoreError('Site info could not be fetched.');\n        }\n\n        // H5P doesn't currently support xAPI State. It implements a mechanism in contentUserDataAjax() in h5p.js to update user\n        // data. However, in our case, we're overriding this method to call the xAPI State web services.\n        const basePath = CoreFile.getBasePathInstant();\n        const ajaxPaths = {\n            contentUserData: '',\n        };\n\n        return {\n            baseUrl: CoreFile.getWWWPath(),\n            url: CoreFile.convertFileSrc(\n                CorePath.concatenatePaths(\n                    basePath,\n                    CoreH5P.h5pCore.h5pFS.getExternalH5PFolderPath(site.getId()),\n                ),\n            ),\n            urlLibraries: CoreFile.convertFileSrc(\n                CorePath.concatenatePaths(\n                    basePath,\n                    CoreH5P.h5pCore.h5pFS.getLibrariesFolderPath(site.getId()),\n                ),\n            ),\n            postUserStatistics: false,\n            ajax: ajaxPaths,\n            saveFreq: false, // saveFreq will be overridden in params.js.\n            siteUrl: site.getURL(),\n            l10n: {\n                H5P: CoreH5P.h5pCore.getLocalization(), // eslint-disable-line @typescript-eslint/naming-convention\n            },\n            user: { name: info.username, id: info.userid },\n            hubIsEnabled: false,\n            reportingIsEnabled: false,\n            crossorigin: null,\n            libraryConfig: null,\n            pluginCacheBuster: '',\n            libraryUrl: CorePath.concatenatePaths(CoreH5P.h5pCore.h5pFS.getCoreH5PPath(), 'js'),\n        };\n    }\n\n    /**\n     * Extract and store an H5P file.\n     * This function won't validate most things because it should've been done by the server already.\n     *\n     * @param fileUrl The file URL used to download the file.\n     * @param file The file entry of the downloaded file.\n     * @param siteId Site ID. If not defined, current site.\n     * @param onProgress Function to call on progress.\n     * @returns Promise resolved when done.\n     */\n    static async saveH5P(fileUrl: string, file: FileEntry, siteId?: string, onProgress?: CoreH5PSaveOnProgress): Promise<void> {\n        siteId = siteId || CoreSites.getCurrentSiteId();\n\n        // Notify that the unzip is starting.\n        onProgress && onProgress({ message: 'core.unzipping' });\n\n        const queueId = siteId + ':saveH5P:' + fileUrl;\n\n        await CoreH5P.queueRunner.run(queueId, () => CoreH5PHelper.performSave(fileUrl, file, siteId, onProgress));\n    }\n\n    /**\n     * Extract and store an H5P file.\n     *\n     * @param fileUrl The file URL used to download the file.\n     * @param file The file entry of the downloaded file.\n     * @param siteId Site ID. If not defined, current site.\n     * @param onProgress Function to call on progress.\n     * @returns Promise resolved when done.\n     */\n    protected static async performSave(\n        fileUrl: string,\n        file: FileEntry,\n        siteId?: string,\n        onProgress?: CoreH5PSaveOnProgress,\n    ): Promise<void> {\n\n        const folderName = CoreMimetypeUtils.removeExtension(file.name);\n        const destFolder = CorePath.concatenatePaths(CoreFileProvider.TMPFOLDER, 'h5p/' + folderName);\n\n        // Unzip the file.\n        await CoreFile.unzipFile(file.toURL(), destFolder, onProgress);\n\n        try {\n            // Notify that the unzip is starting.\n            onProgress && onProgress({ message: 'core.storingfiles' });\n\n            // Read the contents of the unzipped dir, process them and store them.\n            const contents = await CoreFile.getDirectoryContents(destFolder);\n\n            const filesData = await CoreH5P.h5pValidator.processH5PFiles(destFolder, contents, siteId);\n\n            const content = await CoreH5P.h5pStorage.savePackage(filesData, folderName, fileUrl, false, siteId);\n\n            // Create the content player.\n            const contentData = await CoreH5P.h5pCore.loadContent(content.id, undefined, siteId);\n\n            const embedType = CoreH5PCore.determineEmbedType(contentData.embedType, contentData.library.embedTypes);\n\n            await CoreH5P.h5pPlayer.createContentIndex(content.id!, fileUrl, contentData, embedType, siteId);\n        } finally {\n            // Remove tmp folder.\n            try {\n                await CoreFile.removeDir(destFolder);\n            } catch {\n                // Ignore errors, it will be deleted eventually.\n            }\n        }\n    }\n\n}\n\n/**\n * Core settings for H5P.\n */\nexport type CoreH5PCoreSettings = {\n    baseUrl: string;\n    url: string;\n    urlLibraries: string;\n    postUserStatistics: boolean;\n    ajax: {\n        xAPIResult?: string;\n        contentUserData: string;\n    };\n    saveFreq: boolean;\n    siteUrl: string;\n    l10n: {\n        H5P: CoreH5PLocalization; // eslint-disable-line @typescript-eslint/naming-convention\n    };\n    user: {\n        name: string;\n        id?: number;\n        mail?: string;\n    };\n    hubIsEnabled: boolean;\n    reportingIsEnabled: boolean;\n    crossorigin: null;\n    libraryConfig: null;\n    pluginCacheBuster: string;\n    libraryUrl: string;\n    core?: {\n        styles: string[];\n        scripts: string[];\n    };\n    loadedJs?: string[];\n    loadedCss?: string[];\n};\n\nexport type CoreH5PSaveOnProgress = (event?: ProgressEvent | { message: string }) => void;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}