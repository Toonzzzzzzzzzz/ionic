{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreDelegate } from '@classes/delegate';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Delegate to register tag area handlers.\n */\nexport class CoreTagAreaDelegateService extends CoreDelegate {\n  constructor() {\n    super('CoreTagAreaDelegate', true);\n    this.handlerNameProperty = 'type';\n  }\n  /**\n   * Returns the display name string for this area.\n   *\n   * @param component Component name.\n   * @param itemType Item type.\n   * @returns String key.\n   */\n  getDisplayNameKey(component, itemType) {\n    return (component == 'core' ? 'core.tag' : 'addon.' + component) + '.tagarea_' + itemType;\n  }\n  /**\n   * Parses the rendered content of a tag index and returns the items.\n   *\n   * @param component Component name.\n   * @param itemType Item type.\n   * @param content Rendered content.\n   * @returns Promise resolved with the area items, or undefined if not found.\n   */\n  parseContent(component, itemType, content) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const type = component + '/' + itemType;\n      return _this.executeFunctionOnEnabled(type, 'parseContent', [content]);\n    })();\n  }\n  /**\n   * Get the component to use to display an area item.\n   *\n   * @param component Component name.\n   * @param itemType Item type.\n   * @returns The component (or promise resolved with component) to use, undefined if not found.\n   */\n  getComponent(component, itemType) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const type = component + '/' + itemType;\n      return _this2.executeFunctionOnEnabled(type, 'getComponent');\n    })();\n  }\n}\n_class = CoreTagAreaDelegateService;\n_class.ɵfac = function CoreTagAreaDelegateService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreTagAreaDelegate = makeSingleton(CoreTagAreaDelegateService);","map":{"version":3,"names":["CoreDelegate","makeSingleton","CoreTagAreaDelegateService","constructor","handlerNameProperty","getDisplayNameKey","component","itemType","parseContent","content","_this","_asyncToGenerator","type","executeFunctionOnEnabled","getComponent","_this2","factory","ɵfac","providedIn","CoreTagAreaDelegate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/tag/services/tag-area-delegate.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Interface that all tag area handlers must implement.\n */\nexport interface CoreTagAreaHandler extends CoreDelegateHandler {\n    /**\n     * Component and item type separated by a slash. E.g. 'core/course_modules'.\n     */\n    type: string;\n\n    /**\n     * Parses the rendered content of a tag index and returns the items.\n     *\n     * @param content Rendered content.\n     * @returns Area items (or promise resolved with the items).\n     */\n    parseContent(content: string): unknown[] | Promise<unknown[]>;\n\n    /**\n     * Get the component to use to display items.\n     *\n     * @returns The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(): Type<unknown> | Promise<Type<unknown>>;\n}\n\n/**\n * Delegate to register tag area handlers.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreTagAreaDelegateService extends CoreDelegate<CoreTagAreaHandler> {\n\n    protected handlerNameProperty = 'type';\n\n    constructor() {\n        super('CoreTagAreaDelegate', true);\n    }\n\n    /**\n     * Returns the display name string for this area.\n     *\n     * @param component Component name.\n     * @param itemType Item type.\n     * @returns String key.\n     */\n    getDisplayNameKey(component: string, itemType: string): string {\n        return (component == 'core' ? 'core.tag' : 'addon.' + component) + '.tagarea_' + itemType;\n    }\n\n    /**\n     * Parses the rendered content of a tag index and returns the items.\n     *\n     * @param component Component name.\n     * @param itemType Item type.\n     * @param content Rendered content.\n     * @returns Promise resolved with the area items, or undefined if not found.\n     */\n    async parseContent(component: string, itemType: string, content: string): Promise<unknown[] | undefined> {\n        const type = component + '/' + itemType;\n\n        return this.executeFunctionOnEnabled(type, 'parseContent', [content]);\n    }\n\n    /**\n     * Get the component to use to display an area item.\n     *\n     * @param component Component name.\n     * @param itemType Item type.\n     * @returns The component (or promise resolved with component) to use, undefined if not found.\n     */\n    async getComponent(component: string, itemType: string): Promise<Type<unknown> | undefined> {\n        const type = component + '/' + itemType;\n\n        return this.executeFunctionOnEnabled(type, 'getComponent');\n    }\n\n}\n\nexport const CoreTagAreaDelegate = makeSingleton(CoreTagAreaDelegateService);\n"],"mappings":";;AAeA,SAASA,YAAY,QAA6B,mBAAmB;AACrE,SAASC,aAAa,QAAQ,aAAa;;AA2B3C;;;AAIA,OAAM,MAAOC,0BAA2B,SAAQF,YAAgC;EAI5EG,YAAA;IACI,KAAK,CAAC,qBAAqB,EAAE,IAAI,CAAC;IAH5B,KAAAC,mBAAmB,GAAG,MAAM;EAItC;EAEA;;;;;;;EAOAC,iBAAiBA,CAACC,SAAiB,EAAEC,QAAgB;IACjD,OAAO,CAACD,SAAS,IAAI,MAAM,GAAG,UAAU,GAAG,QAAQ,GAAGA,SAAS,IAAI,WAAW,GAAGC,QAAQ;EAC7F;EAEA;;;;;;;;EAQMC,YAAYA,CAACF,SAAiB,EAAEC,QAAgB,EAAEE,OAAe;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACnE,MAAMC,IAAI,GAAGN,SAAS,GAAG,GAAG,GAAGC,QAAQ;MAEvC,OAAOG,KAAI,CAACG,wBAAwB,CAACD,IAAI,EAAE,cAAc,EAAE,CAACH,OAAO,CAAC,CAAC;IAAC;EAC1E;EAEA;;;;;;;EAOMK,YAAYA,CAACR,SAAiB,EAAEC,QAAgB;IAAA,IAAAQ,MAAA;IAAA,OAAAJ,iBAAA;MAClD,MAAMC,IAAI,GAAGN,SAAS,GAAG,GAAG,GAAGC,QAAQ;MAEvC,OAAOQ,MAAI,CAACF,wBAAwB,CAACD,IAAI,EAAE,cAAc,CAAC;IAAC;EAC/D;;SA5CSV,0BAA2B;;mBAA3BA,MAA0B;AAAA;;SAA1BA,MAA0B;EAAAc,OAAA,EAA1Bd,MAA0B,CAAAe,IAAA;EAAAC,UAAA,EADb;AAAM;AAiDhC,OAAO,MAAMC,mBAAmB,GAAGlB,aAAa,CAACC,0BAA0B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}