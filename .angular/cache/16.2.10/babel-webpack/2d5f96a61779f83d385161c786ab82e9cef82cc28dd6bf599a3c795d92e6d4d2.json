{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreError } from '@classes/errors/error';\nimport { AddonCompetencyPlanCompetenciesSource } from '@addons/competency/classes/competency-plan-competencies-source';\nimport { AddonCompetencyCourseCompetenciesSource } from '@addons/competency/classes/competency-course-competencies-source';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreSites } from '@services/sites';\nimport { CoreTime } from '@singletons/time';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../core/components/loading/loading\";\nimport * as i3 from \"../../../../core/components/split-view/split-view\";\nimport * as i4 from \"../../../../core/directives/format-text\";\nimport * as i5 from \"../../../../core/directives/content\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@ngx-translate/core\";\nfunction AddonCompetencyCompetenciesPage_ion_item_15_ion_badge_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const competency_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"color\", competency_r1.usercompetency.proficiency ? \"success\" : \"danger\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", competency_r1.usercompetency.gradename, \" \");\n  }\n}\nfunction AddonCompetencyCompetenciesPage_ion_item_15_ion_badge_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const competency_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"color\", competency_r1.usercompetencycourse.proficiency ? \"success\" : \"danger\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", competency_r1.usercompetencycourse.gradename, \" \");\n  }\n}\nfunction AddonCompetencyCompetenciesPage_ion_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 7);\n    i0.ɵɵlistener(\"click\", function AddonCompetencyCompetenciesPage_ion_item_15_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const competency_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.competencies.select(competency_r1));\n    });\n    i0.ɵɵelementStart(1, \"ion-label\")(2, \"p\", 8);\n    i0.ɵɵelement(3, \"core-format-text\", 2);\n    i0.ɵɵelementStart(4, \"em\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(6, AddonCompetencyCompetenciesPage_ion_item_15_ion_badge_6_Template, 2, 2, \"ion-badge\", 9);\n    i0.ɵɵtemplate(7, AddonCompetencyCompetenciesPage_ion_item_15_ion_badge_7_Template, 2, 2, \"ion-badge\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const competency_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵattribute(\"aria-label\", competency_r1.competency.shortname)(\"aria-current\", ctx_r0.competencies.getItemAriaCurrent(competency_r1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", competency_r1.competency.shortname)(\"contextLevel\", ctx_r0.contextLevel)(\"contextInstanceId\", ctx_r0.contextInstanceId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(competency_r1.competency.idnumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", competency_r1.usercompetency);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", competency_r1.usercompetencycourse);\n  }\n}\n/**\n * Page that displays the list of competencies of a learning plan.\n */\nexport class AddonCompetencyCompetenciesPage {\n  constructor() {\n    this.title = '';\n    const planId = CoreNavigator.getRouteNumberParam('planId');\n    this.logView = CoreTime.once(() => this.performLogView());\n    if (!planId) {\n      const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n      const userId = CoreNavigator.getRouteNumberParam('userId');\n      const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonCompetencyCourseCompetenciesSource, [courseId, userId]);\n      this.competencies = new CoreListItemsManager(source, AddonCompetencyCompetenciesPage);\n      return;\n    }\n    const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonCompetencyPlanCompetenciesSource, [planId]);\n    this.competencies = new CoreListItemsManager(source, AddonCompetencyCompetenciesPage);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.fetchCompetencies();\n      _this.competencies.start(_this.splitView);\n    })();\n  }\n  /**\n   * Fetches the competencies and updates the view.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchCompetencies() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const source = _this2.competencies.getSource();\n        yield _this2.competencies.load();\n        if (source instanceof AddonCompetencyPlanCompetenciesSource) {\n          var _source$user;\n          if (!source.plan || source.plan && source.plan.competencycount <= 0) {\n            throw new CoreError(Translate.instant('addon.competency.errornocompetenciesfound'));\n          }\n          _this2.title = source.plan.plan.name;\n          _this2.contextLevel = \"user\" /* ContextLevel.USER */;\n          _this2.contextInstanceId = ((_source$user = source.user) === null || _source$user === void 0 ? void 0 : _source$user.id) || source.plan.plan.userid;\n        } else {\n          _this2.title = Translate.instant('addon.competency.coursecompetencies');\n          _this2.contextLevel = \"course\" /* ContextLevel.COURSE */;\n          _this2.contextInstanceId = source.COURSE_ID;\n        }\n        _this2.logView();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error getting competencies data.');\n      }\n    })();\n  }\n  /**\n   * Refreshes the competencies.\n   *\n   * @param refresher Refresher.\n   */\n  refreshCompetencies(refresher) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.competencies.getSource().invalidateCache();\n      _this3.competencies.getSource().setDirty(true);\n      _this3.fetchCompetencies().finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n      });\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.competencies.destroy();\n  }\n  /**\n   * Log view.\n   */\n  performLogView() {\n    const source = this.competencies.getSource();\n    if (source instanceof AddonCompetencyPlanCompetenciesSource) {\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'tool_lp_data_for_plan_page',\n        name: this.title,\n        data: {\n          category: 'competency',\n          planid: source.PLAN_ID\n        },\n        url: `/admin/tool/lp/plan.php?id=${source.PLAN_ID}`\n      });\n      return;\n    }\n    if (source.USER_ID && source.USER_ID !== CoreSites.getCurrentSiteUserId()) {\n      // Only log event when viewing own competencies. In LMS viewing students competencies uses a different view.\n      return;\n    }\n    CoreAnalytics.logEvent({\n      type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n      ws: 'tool_lp_data_for_course_competencies_page',\n      name: this.title,\n      data: {\n        category: 'competency',\n        courseid: source.COURSE_ID\n      },\n      url: `/admin/tool/lp/coursecompetencies.php?courseid=${source.COURSE_ID}`\n    });\n  }\n}\n_class = AddonCompetencyCompetenciesPage;\n_class.ɵfac = function AddonCompetencyCompetenciesPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-competency-competencies\"]],\n  viewQuery: function AddonCompetencyCompetenciesPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreSplitViewComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.splitView = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 12,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [3, \"text\", \"contextLevel\", \"contextInstanceId\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [\"class\", \"ion-text-wrap\", \"button\", \"\", 3, \"detail\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", 1, \"ion-text-wrap\", 3, \"detail\", \"click\"], [1, \"item-heading\"], [\"slot\", \"end\", 3, \"color\", 4, \"ngIf\"], [\"slot\", \"end\", 3, \"color\"]],\n  template: function AddonCompetencyCompetenciesPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵelement(7, \"core-format-text\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(8, \"ion-content\")(9, \"core-split-view\")(10, \"ion-refresher\", 3);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonCompetencyCompetenciesPage_Template_ion_refresher_ionRefresh_10_listener($event) {\n        return ctx.refreshCompetencies($event.target);\n      });\n      i0.ɵɵelement(11, \"ion-refresher-content\", 4);\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"core-loading\", 5)(14, \"ion-list\");\n      i0.ɵɵtemplate(15, AddonCompetencyCompetenciesPage_ion_item_15_Template, 8, 9, \"ion-item\", 6);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 8, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"text\", ctx.title)(\"contextLevel\", ctx.contextLevel)(\"contextInstanceId\", ctx.contextInstanceId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.competencies.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(12, 10, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.competencies.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.competencies.items);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreLoadingComponent, i3.CoreSplitViewComponent, i4.CoreFormatTextDirective, i5.CoreContentDirective, i6.IonBadge, i6.IonButtons, i6.IonContent, i6.IonHeader, i6.IonItem, i6.IonLabel, i6.IonList, i6.IonRefresher, i6.IonRefresherContent, i6.IonTitle, i6.IonToolbar, i6.IonBackButton, i7.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreDomUtils","CoreSplitViewComponent","Translate","CoreNavigator","CoreError","AddonCompetencyPlanCompetenciesSource","AddonCompetencyCourseCompetenciesSource","CoreListItemsManager","CoreRoutedItemsManagerSourcesTracker","CoreAnalytics","CoreAnalyticsEventType","CoreSites","CoreTime","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","competency_r1","usercompetency","proficiency","ɵɵadvance","ɵɵtextInterpolate1","gradename","usercompetencycourse","ɵɵlistener","AddonCompetencyCompetenciesPage_ion_item_15_Template_ion_item_click_0_listener","restoredCtx","ɵɵrestoreView","_r7","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","competencies","select","ɵɵelement","ɵɵtemplate","AddonCompetencyCompetenciesPage_ion_item_15_ion_badge_6_Template","AddonCompetencyCompetenciesPage_ion_item_15_ion_badge_7_Template","ɵɵattribute","competency","shortname","ctx_r0","getItemAriaCurrent","contextLevel","contextInstanceId","ɵɵtextInterpolate","idnumber","AddonCompetencyCompetenciesPage","constructor","title","planId","getRouteNumberParam","logView","once","performLogView","courseId","getRequiredRouteNumberParam","userId","source","getOrCreateSource","ngAfterViewInit","_this","_asyncToGenerator","fetchCompetencies","start","splitView","_this2","getSource","load","_source$user","plan","competencycount","instant","name","user","id","userid","COURSE_ID","error","showErrorModalDefault","refreshCompetencies","refresher","_this3","invalidateCache","setDirty","finally","complete","ngOnDestroy","destroy","logEvent","type","VIEW_ITEM_LIST","ws","data","category","planid","PLAN_ID","url","USER_ID","getCurrentSiteUserId","courseid","selectors","viewQuery","AddonCompetencyCompetenciesPage_Query","rf","ctx","AddonCompetencyCompetenciesPage_Template_ion_refresher_ionRefresh_10_listener","$event","target","AddonCompetencyCompetenciesPage_ion_item_15_Template","ɵɵpipeBind1","loaded","ɵɵpropertyInterpolate","items"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/pages/competencies/competencies.page.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/pages/competencies/competencies.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport {\n    AddonCompetencyDataForPlanPageCompetency,\n    AddonCompetencyDataForCourseCompetenciesPageCompetency,\n} from '../../services/competency';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreError } from '@classes/errors/error';\nimport { AddonCompetencyPlanCompetenciesSource } from '@addons/competency/classes/competency-plan-competencies-source';\nimport { AddonCompetencyCourseCompetenciesSource } from '@addons/competency/classes/competency-course-competencies-source';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreSites } from '@services/sites';\nimport { CoreTime } from '@singletons/time';\nimport { ContextLevel } from '@/core/constants';\n\n/**\n * Page that displays the list of competencies of a learning plan.\n */\n@Component({\n    selector: 'page-addon-competency-competencies',\n    templateUrl: 'competencies.html',\n})\nexport class AddonCompetencyCompetenciesPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    competencies: CoreListItemsManager<\n        AddonCompetencyDataForPlanPageCompetency | AddonCompetencyDataForCourseCompetenciesPageCompetency,\n        AddonCompetencyPlanCompetenciesSource | AddonCompetencyCourseCompetenciesSource\n    >;\n\n    title = '';\n    contextLevel?: string;\n    contextInstanceId?: number;\n\n    protected logView: () => void;\n\n    constructor() {\n        const planId = CoreNavigator.getRouteNumberParam('planId');\n        this.logView = CoreTime.once(() => this.performLogView());\n\n        if (!planId) {\n            const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            const userId = CoreNavigator.getRouteNumberParam('userId');\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                AddonCompetencyCourseCompetenciesSource,\n                [courseId, userId],\n            );\n\n            this.competencies = new CoreListItemsManager(source, AddonCompetencyCompetenciesPage);\n\n            return;\n        }\n\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonCompetencyPlanCompetenciesSource, [planId]);\n\n        this.competencies = new CoreListItemsManager(source, AddonCompetencyCompetenciesPage);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.fetchCompetencies();\n\n        this.competencies.start(this.splitView);\n    }\n\n    /**\n     * Fetches the competencies and updates the view.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchCompetencies(): Promise<void> {\n        try {\n            const source = this.competencies.getSource();\n\n            await this.competencies.load();\n\n            if (source instanceof AddonCompetencyPlanCompetenciesSource) {\n                if (!source.plan || source.plan && source.plan.competencycount <= 0) {\n                    throw new CoreError(Translate.instant('addon.competency.errornocompetenciesfound'));\n                }\n\n                this.title = source.plan.plan.name;\n                this.contextLevel = ContextLevel.USER;\n                this.contextInstanceId = source.user?.id || source.plan.plan.userid;\n            } else {\n                this.title = Translate.instant('addon.competency.coursecompetencies');\n                this.contextLevel = ContextLevel.COURSE;\n                this.contextInstanceId = source.COURSE_ID;\n            }\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting competencies data.');\n        }\n    }\n\n    /**\n     * Refreshes the competencies.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshCompetencies(refresher?: HTMLIonRefresherElement): Promise<void> {\n        await this.competencies.getSource().invalidateCache();\n\n        this.competencies.getSource().setDirty(true);\n        this.fetchCompetencies().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.competencies.destroy();\n    }\n\n    /**\n     * Log view.\n     */\n    protected performLogView(): void {\n        const source = this.competencies.getSource();\n\n        if (source instanceof AddonCompetencyPlanCompetenciesSource) {\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'tool_lp_data_for_plan_page',\n                name: this.title,\n                data: {\n                    category: 'competency',\n                    planid: source.PLAN_ID,\n                },\n                url: `/admin/tool/lp/plan.php?id=${source.PLAN_ID}`,\n            });\n\n            return;\n        }\n\n        if (source.USER_ID && source.USER_ID !== CoreSites.getCurrentSiteUserId()) {\n            // Only log event when viewing own competencies. In LMS viewing students competencies uses a different view.\n            return;\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n            ws: 'tool_lp_data_for_course_competencies_page',\n            name: this.title,\n            data: {\n                category: 'competency',\n                courseid: source.COURSE_ID,\n            },\n            url: `/admin/tool/lp/coursecompetencies.php?courseid=${source.COURSE_ID}`,\n        });\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                <core-format-text [text]=\"title\" [contextLevel]=\"contextLevel\" [contextInstanceId]=\"contextInstanceId\" />\n            </h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-split-view>\n        <ion-refresher slot=\"fixed\" [disabled]=\"!competencies.loaded\" (ionRefresh)=\"refreshCompetencies($event.target)\">\n            <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n        </ion-refresher>\n        <core-loading [hideUntil]=\"competencies.loaded\">\n            <ion-list>\n                <ion-item class=\"ion-text-wrap\" *ngFor=\"let competency of competencies.items\"\n                    [attr.aria-label]=\"competency.competency.shortname\" (click)=\"competencies.select(competency)\"\n                    [attr.aria-current]=\"competencies.getItemAriaCurrent(competency)\" button [detail]=\"true\">\n                    <ion-label>\n                        <p class=\"item-heading\">\n                            <core-format-text [text]=\"competency.competency.shortname\" [contextLevel]=\"contextLevel\"\n                                [contextInstanceId]=\"contextInstanceId\" /> <em>{{competency.competency.idnumber}}</em>\n                        </p>\n                    </ion-label>\n                    <ion-badge slot=\"end\" *ngIf=\"competency.usercompetency\"\n                        [color]=\"competency.usercompetency.proficiency ? 'success' : 'danger'\">\n                        {{ competency.usercompetency.gradename }}\n                    </ion-badge>\n                    <ion-badge slot=\"end\" *ngIf=\"competency.usercompetencycourse\"\n                        [color]=\"competency.usercompetencycourse.proficiency ? 'success' : 'danger'\">\n                        {{ competency.usercompetencycourse.gradename }}\n                    </ion-badge>\n                </ion-item>\n            </ion-list>\n        </core-loading>\n    </core-split-view>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}