{"ast":null,"code":"import _objectSpread from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourses } from '@features/courses/services/courses';\nimport { CoreSearchGlobalSearch, CORE_SEARCH_GLOBAL_SEARCH_FILTERS_UPDATED } from '@features/search/services/global-search';\nimport { CoreEvents } from '@singletons/events';\nimport { ModalController } from '@singletons';\nimport { CoreUtils } from '@services/utils/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/spacer/spacer\";\nimport * as i3 from \"../../../../directives/fa-icon\";\nimport * as i4 from \"../../../../directives/format-text\";\nimport * as i5 from \"../../../../directives/content\";\nimport * as i6 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@ionic/angular\";\nimport * as i9 from \"@ngx-translate/core\";\nfunction CoreSearchGlobalSearchFiltersComponent_ng_container_15_ion_item_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 8)(1, \"ion-label\");\n    i0.ɵɵelement(2, \"core-format-text\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-checkbox\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_15_ion_item_11_Template_ion_checkbox_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const searchAreaCategory_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(searchAreaCategory_r3.checked = $event);\n    })(\"ionChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_15_ion_item_11_Template_ion_checkbox_ionChange_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const searchAreaCategory_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onSearchAreaCategoryInputChanged(searchAreaCategory_r3));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const searchAreaCategory_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", searchAreaCategory_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", searchAreaCategory_r3.checked);\n  }\n}\nfunction CoreSearchGlobalSearchFiltersComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"core-spacer\");\n    i0.ɵɵelementStart(2, \"ion-item\", 7)(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-item\", 8)(7, \"ion-label\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-checkbox\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_15_Template_ion_checkbox_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.allSearchAreaCategories = $event);\n    })(\"ionChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_15_Template_ion_checkbox_ionChange_10_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.allSearchAreaCategoriesUpdated());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, CoreSearchGlobalSearchFiltersComponent_ng_container_15_ion_item_11_Template, 4, 2, \"ion-item\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 5, \"core.search.filtercategories\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 7, \"core.search.allcategories\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.allSearchAreaCategories)(\"indeterminate\", ctx_r0.allSearchAreaCategories === null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.searchAreaCategories);\n  }\n}\nfunction CoreSearchGlobalSearchFiltersComponent_ng_container_16_ion_item_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 8)(1, \"ion-label\");\n    i0.ɵɵelement(2, \"core-format-text\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-checkbox\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_16_ion_item_11_Template_ion_checkbox_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const course_r11 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(course_r11.checked = $event);\n    })(\"ionChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_16_ion_item_11_Template_ion_checkbox_ionChange_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const course_r11 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onCourseInputChanged(course_r11));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const course_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", course_r11.shortname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", course_r11.checked);\n  }\n}\nfunction CoreSearchGlobalSearchFiltersComponent_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"core-spacer\");\n    i0.ɵɵelementStart(2, \"ion-item\", 7)(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-item\", 8)(7, \"ion-label\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-checkbox\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_16_Template_ion_checkbox_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.allCourses = $event);\n    })(\"ionChange\", function CoreSearchGlobalSearchFiltersComponent_ng_container_16_Template_ion_checkbox_ionChange_10_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.allCoursesUpdated());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(11, CoreSearchGlobalSearchFiltersComponent_ng_container_16_ion_item_11_Template, 4, 2, \"ion-item\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 5, \"core.search.filtercourses\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 7, \"core.search.allcourses\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.allCourses)(\"indeterminate\", ctx_r1.allCourses === null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.courses);\n  }\n}\nexport class CoreSearchGlobalSearchFiltersComponent {\n  constructor() {\n    this.allSearchAreaCategories = true;\n    this.searchAreaCategories = [];\n    this.allCourses = true;\n    this.courses = [];\n    this.newFilters = {};\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$filters;\n      _this.newFilters = (_this$filters = _this.filters) !== null && _this$filters !== void 0 ? _this$filters : {};\n      yield _this.updateSearchAreaCategories();\n      yield _this.updateCourses();\n    })();\n  }\n  /**\n   * Close popover.\n   */\n  close() {\n    ModalController.dismiss();\n  }\n  /**\n   * Checkbox for all search area categories has been updated.\n   */\n  allSearchAreaCategoriesUpdated() {\n    if (this.allSearchAreaCategories === null) {\n      return;\n    }\n    const checked = this.allSearchAreaCategories;\n    this.searchAreaCategories.forEach(searchAreaCategory => {\n      if (searchAreaCategory.checked === checked) {\n        return;\n      }\n      searchAreaCategory.checked = checked;\n    });\n  }\n  /**\n   * Checkbox for one search area category has been updated.\n   *\n   * @param searchAreaCategory Filter status.\n   */\n  onSearchAreaCategoryInputChanged(searchAreaCategory) {\n    if (!searchAreaCategory.checked && this.newFilters.searchAreaCategoryIds && !this.newFilters.searchAreaCategoryIds.includes(searchAreaCategory.id)) {\n      return;\n    }\n    if (searchAreaCategory.checked && (!this.newFilters.searchAreaCategoryIds || this.newFilters.searchAreaCategoryIds.includes(searchAreaCategory.id))) {\n      return;\n    }\n    this.searchAreaCategoryUpdated();\n  }\n  /**\n   * Checkbox for all courses has been updated.\n   */\n  allCoursesUpdated() {\n    if (this.allCourses === null) {\n      return;\n    }\n    const checked = this.allCourses;\n    this.courses.forEach(course => {\n      if (course.checked === checked) {\n        return;\n      }\n      course.checked = checked;\n    });\n  }\n  /**\n   * Checkbox for one course has been updated.\n   *\n   * @param course Filter status.\n   */\n  onCourseInputChanged(course) {\n    if (!course.checked && this.newFilters.courseIds && !this.newFilters.courseIds.includes(course.id)) {\n      return;\n    }\n    if (course.checked && (!this.newFilters.courseIds || this.newFilters.courseIds.includes(course.id))) {\n      return;\n    }\n    this.courseUpdated();\n  }\n  /**\n   * Refresh filters.\n   *\n   * @param refresher Refresher.\n   */\n  refreshFilters(refresher) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(Promise.all([CoreSearchGlobalSearch.invalidateSearchAreas(), CoreCourses.invalidateUserCourses()]));\n      yield _this2.updateSearchAreaCategories();\n      yield _this2.updateCourses();\n      refresher === null || refresher === void 0 || refresher.complete();\n    })();\n  }\n  /**\n   * Update search area categories.\n   */\n  updateSearchAreaCategories() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const searchAreas = yield CoreSearchGlobalSearch.getSearchAreas();\n      const searchAreaCategoryIds = new Set();\n      _this3.searchAreaCategories = [];\n      for (const searchArea of searchAreas) {\n        var _this3$filters$search, _this3$filters;\n        if (searchAreaCategoryIds.has(searchArea.category.id)) {\n          continue;\n        }\n        searchAreaCategoryIds.add(searchArea.category.id);\n        _this3.searchAreaCategories.push(_objectSpread(_objectSpread({}, searchArea.category), {}, {\n          checked: (_this3$filters$search = (_this3$filters = _this3.filters) === null || _this3$filters === void 0 || (_this3$filters = _this3$filters.searchAreaCategoryIds) === null || _this3$filters === void 0 ? void 0 : _this3$filters.includes(searchArea.category.id)) !== null && _this3$filters$search !== void 0 ? _this3$filters$search : true\n        }));\n      }\n      _this3.allSearchAreaCategories = _this3.getGroupFilterStatus(_this3.searchAreaCategories);\n    })();\n  }\n  /**\n   * Update courses.\n   */\n  updateCourses() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const courses = yield CoreCourses.getUserCourses();\n      _this4.courses = courses.sort((a, b) => {\n        var _a$shortname$toLowerC, _a$shortname, _b$shortname$toLowerC, _b$shortname;\n        return ((_a$shortname$toLowerC = (_a$shortname = a.shortname) === null || _a$shortname === void 0 ? void 0 : _a$shortname.toLowerCase()) !== null && _a$shortname$toLowerC !== void 0 ? _a$shortname$toLowerC : '').localeCompare((_b$shortname$toLowerC = (_b$shortname = b.shortname) === null || _b$shortname === void 0 ? void 0 : _b$shortname.toLowerCase()) !== null && _b$shortname$toLowerC !== void 0 ? _b$shortname$toLowerC : '');\n      }).map(course => {\n        var _this4$filters$course, _this4$filters;\n        return _objectSpread(_objectSpread({}, course), {}, {\n          checked: (_this4$filters$course = (_this4$filters = _this4.filters) === null || _this4$filters === void 0 || (_this4$filters = _this4$filters.courseIds) === null || _this4$filters === void 0 ? void 0 : _this4$filters.includes(course.id)) !== null && _this4$filters$course !== void 0 ? _this4$filters$course : true\n        });\n      });\n      _this4.allCourses = _this4.getGroupFilterStatus(_this4.courses);\n    })();\n  }\n  /**\n   * Checkbox for one search area category has been updated.\n   */\n  searchAreaCategoryUpdated() {\n    const filterStatus = this.getGroupFilterStatus(this.searchAreaCategories);\n    if (filterStatus !== this.allSearchAreaCategories) {\n      this.allSearchAreaCategories = filterStatus;\n    }\n    this.emitFiltersUpdated();\n  }\n  /**\n   * Course filter status has been updated.\n   */\n  courseUpdated() {\n    const filterStatus = this.getGroupFilterStatus(this.courses);\n    if (filterStatus !== this.allCourses) {\n      this.allCourses = filterStatus;\n    }\n    this.emitFiltersUpdated();\n  }\n  /**\n   * Get the status for a filter representing a group of filters.\n   *\n   * @param filters Filters in the group.\n   * @returns Group filter status. This will be true if all filters are checked, false if all filters are unchecked,\n   *          or null if filters have mixed states.\n   */\n  getGroupFilterStatus(filters) {\n    if (filters.length === 0) {\n      return null;\n    }\n    const firstChecked = filters[0].checked;\n    for (const filter of filters) {\n      if (filter.checked === firstChecked) {\n        continue;\n      }\n      return null;\n    }\n    return firstChecked;\n  }\n  /**\n   * Emit filters updated event.\n   */\n  emitFiltersUpdated() {\n    this.newFilters = {};\n    if (!this.allSearchAreaCategories) {\n      this.newFilters.searchAreaCategoryIds = this.searchAreaCategories.filter(({\n        checked\n      }) => checked).map(({\n        id\n      }) => id);\n    }\n    if (!this.allCourses) {\n      this.newFilters.courseIds = this.courses.filter(({\n        checked\n      }) => checked).map(({\n        id\n      }) => id);\n    }\n    CoreEvents.trigger(CORE_SEARCH_GLOBAL_SEARCH_FILTERS_UPDATED, this.newFilters);\n  }\n}\n_class = CoreSearchGlobalSearchFiltersComponent;\n_class.ɵfac = function CoreSearchGlobalSearchFiltersComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-search-global-search-filters\"]],\n  inputs: {\n    hideCourses: \"hideCourses\",\n    filters: \"filters\"\n  },\n  decls: 17,\n  vars: 12,\n  consts: [[\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"name\", \"fas-xmark\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"fullscreen\"], [\"slot\", \"fixed\", 3, \"ionRefresh\"], [3, \"pullingText\"], [4, \"ngIf\"], [1, \"ion-text-wrap\", \"help\"], [1, \"ion-text-wrap\"], [\"slot\", \"end\", 3, \"ngModel\", \"indeterminate\", \"ngModelChange\", \"ionChange\"], [\"class\", \"ion-text-wrap\", 4, \"ngFor\", \"ngForOf\"], [3, \"text\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"]],\n  template: function CoreSearchGlobalSearchFiltersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\")(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"ion-buttons\", 0)(7, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function CoreSearchGlobalSearchFiltersComponent_Template_ion_button_click_7_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelement(9, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"ion-content\", 3)(11, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function CoreSearchGlobalSearchFiltersComponent_Template_ion_refresher_ionRefresh_11_listener($event) {\n        return ctx.refreshFilters($event.target);\n      });\n      i0.ɵɵelement(12, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-list\");\n      i0.ɵɵtemplate(15, CoreSearchGlobalSearchFiltersComponent_ng_container_15_Template, 12, 9, \"ng-container\", 6);\n      i0.ɵɵtemplate(16, CoreSearchGlobalSearchFiltersComponent_ng_container_16_Template, 12, 9, \"ng-container\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 6, \"core.search.filterheader\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(8, 8, \"core.close\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(13, 10, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.searchAreaCategories.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.hideCourses && ctx.courses.length > 0);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreSpacerComponent, i3.CoreFaIconDirective, i4.CoreFormatTextDirective, i5.CoreContentDirective, i6.CoreUpdateNonReactiveAttributesDirective, i7.NgControlStatus, i7.NgModel, i8.IonButton, i8.IonButtons, i8.IonCheckbox, i8.IonContent, i8.IonHeader, i8.IonIcon, i8.IonItem, i8.IonLabel, i8.IonList, i8.IonRefresher, i8.IonRefresherContent, i8.IonTitle, i8.IonToolbar, i8.BooleanValueAccessor, i9.TranslatePipe],\n  styles: [\"[_nghost-%COMP%] {\\n  --help-text-color: var(--gray-700);\\n}\\n[_nghost-%COMP%]   ion-item.help[_ngcontent-%COMP%] {\\n  color: var(--help-text-color);\\n}\\n[_nghost-%COMP%]   ion-item.help[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n}\\n[_nghost-%COMP%]   ion-item[_ngcontent-%COMP%]:not(.help) {\\n  font-size: 16px;\\n}\\n\\nhtml.dark[_nghost-%COMP%], html.dark   [_nghost-%COMP%] {\\n  --help-text-color: var(--gray-400);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL3NlYXJjaC9jb21wb25lbnRzL2dsb2JhbC1zZWFyY2gtZmlsdGVycy9nbG9iYWwtc2VhcmNoLWZpbHRlcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtDQUFBO0FBQ0o7QUFDSTtFQUNJLDZCQUFBO0FBQ1I7QUFDUTtFQUNJLGdCQUFBO0FBQ1o7QUFJSTtFQUNJLGVBQUE7QUFGUjs7QUFPQTtFQUNJLGtDQUFBO0FBSkoiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgLS1oZWxwLXRleHQtY29sb3I6IHZhcigtLWdyYXktNzAwKTtcblxuICAgIGlvbi1pdGVtLmhlbHAge1xuICAgICAgICBjb2xvcjogdmFyKC0taGVscC10ZXh0LWNvbG9yKTtcblxuICAgICAgICBpb24tbGFiZWwge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgaW9uLWl0ZW06bm90KC5oZWxwKSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG5cbn1cblxuOmhvc3QtY29udGV4dChodG1sLmRhcmspIHtcbiAgICAtLWhlbHAtdGV4dC1jb2xvcjogdmFyKC0tZ3JheS00MDApO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreCourses","CoreSearchGlobalSearch","CORE_SEARCH_GLOBAL_SEARCH_FILTERS_UPDATED","CoreEvents","ModalController","CoreUtils","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","CoreSearchGlobalSearchFiltersComponent_ng_container_15_ion_item_11_Template_ion_checkbox_ngModelChange_3_listener","$event","restoredCtx","ɵɵrestoreView","_r5","searchAreaCategory_r3","$implicit","ɵɵresetView","checked","CoreSearchGlobalSearchFiltersComponent_ng_container_15_ion_item_11_Template_ion_checkbox_ionChange_3_listener","ctx_r6","ɵɵnextContext","onSearchAreaCategoryInputChanged","ɵɵadvance","ɵɵproperty","name","ɵɵelementContainerStart","ɵɵtext","CoreSearchGlobalSearchFiltersComponent_ng_container_15_Template_ion_checkbox_ngModelChange_10_listener","_r8","ctx_r7","allSearchAreaCategories","CoreSearchGlobalSearchFiltersComponent_ng_container_15_Template_ion_checkbox_ionChange_10_listener","ctx_r9","allSearchAreaCategoriesUpdated","ɵɵtemplate","CoreSearchGlobalSearchFiltersComponent_ng_container_15_ion_item_11_Template","ɵɵelementContainerEnd","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","ctx_r0","searchAreaCategories","CoreSearchGlobalSearchFiltersComponent_ng_container_16_ion_item_11_Template_ion_checkbox_ngModelChange_3_listener","_r13","course_r11","CoreSearchGlobalSearchFiltersComponent_ng_container_16_ion_item_11_Template_ion_checkbox_ionChange_3_listener","ctx_r14","onCourseInputChanged","shortname","CoreSearchGlobalSearchFiltersComponent_ng_container_16_Template_ion_checkbox_ngModelChange_10_listener","_r16","ctx_r15","allCourses","CoreSearchGlobalSearchFiltersComponent_ng_container_16_Template_ion_checkbox_ionChange_10_listener","ctx_r17","allCoursesUpdated","CoreSearchGlobalSearchFiltersComponent_ng_container_16_ion_item_11_Template","ctx_r1","courses","CoreSearchGlobalSearchFiltersComponent","constructor","newFilters","ngOnInit","_this","_asyncToGenerator","_this$filters","filters","updateSearchAreaCategories","updateCourses","close","dismiss","forEach","searchAreaCategory","searchAreaCategoryIds","includes","id","searchAreaCategoryUpdated","course","courseIds","courseUpdated","refreshFilters","refresher","_this2","ignoreErrors","Promise","all","invalidateSearchAreas","invalidateUserCourses","complete","_this3","searchAreas","getSearchAreas","Set","searchArea","_this3$filters$search","_this3$filters","has","category","add","push","_objectSpread","getGroupFilterStatus","_this4","getUserCourses","sort","a","b","_a$shortname$toLowerC","_a$shortname","_b$shortname$toLowerC","_b$shortname","toLowerCase","localeCompare","map","_this4$filters$course","_this4$filters","filterStatus","emitFiltersUpdated","length","firstChecked","filter","trigger","selectors","inputs","hideCourses","decls","vars","consts","template","CoreSearchGlobalSearchFiltersComponent_Template","rf","ctx","CoreSearchGlobalSearchFiltersComponent_Template_ion_button_click_7_listener","CoreSearchGlobalSearchFiltersComponent_Template_ion_refresher_ionRefresh_11_listener","target","CoreSearchGlobalSearchFiltersComponent_ng_container_15_Template","CoreSearchGlobalSearchFiltersComponent_ng_container_16_Template","ɵɵattribute","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/search/components/global-search-filters/global-search-filters.component.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/search/components/global-search-filters/global-search-filters.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { CoreEnrolledCourseData, CoreCourses } from '@features/courses/services/courses';\nimport {\n    CoreSearchGlobalSearchFilters,\n    CoreSearchGlobalSearch,\n    CoreSearchGlobalSearchSearchAreaCategory,\n    CORE_SEARCH_GLOBAL_SEARCH_FILTERS_UPDATED,\n} from '@features/search/services/global-search';\nimport { CoreEvents } from '@singletons/events';\nimport { ModalController } from '@singletons';\nimport { CoreUtils } from '@services/utils/utils';\n\ntype Filter<T=unknown> = T & { checked: boolean };\n\n@Component({\n    selector: 'core-search-global-search-filters',\n    templateUrl: 'global-search-filters.html',\n    styleUrls: ['./global-search-filters.scss'],\n})\nexport class CoreSearchGlobalSearchFiltersComponent implements OnInit {\n\n    allSearchAreaCategories: boolean | null = true;\n    searchAreaCategories: Filter<CoreSearchGlobalSearchSearchAreaCategory>[] = [];\n    allCourses: boolean | null = true;\n    courses: Filter<CoreEnrolledCourseData>[] = [];\n\n    @Input() hideCourses?: boolean;\n    @Input() filters?: CoreSearchGlobalSearchFilters;\n\n    private newFilters: CoreSearchGlobalSearchFilters = {};\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.newFilters = this.filters ?? {};\n\n        await this.updateSearchAreaCategories();\n        await this.updateCourses();\n    }\n\n    /**\n     * Close popover.\n     */\n    close(): void {\n        ModalController.dismiss();\n    }\n\n    /**\n     * Checkbox for all search area categories has been updated.\n     */\n    allSearchAreaCategoriesUpdated(): void {\n        if (this.allSearchAreaCategories === null) {\n            return;\n        }\n\n        const checked = this.allSearchAreaCategories;\n\n        this.searchAreaCategories.forEach(searchAreaCategory => {\n            if (searchAreaCategory.checked === checked) {\n                return;\n            }\n\n            searchAreaCategory.checked = checked;\n        });\n    }\n\n    /**\n     * Checkbox for one search area category has been updated.\n     *\n     * @param searchAreaCategory Filter status.\n     */\n    onSearchAreaCategoryInputChanged(searchAreaCategory: Filter<CoreSearchGlobalSearchSearchAreaCategory>): void {\n        if (\n            !searchAreaCategory.checked &&\n            this.newFilters.searchAreaCategoryIds &&\n            !this.newFilters.searchAreaCategoryIds.includes(searchAreaCategory.id)\n        ) {\n            return;\n        }\n\n        if (\n            searchAreaCategory.checked &&\n            (!this.newFilters.searchAreaCategoryIds || this.newFilters.searchAreaCategoryIds.includes(searchAreaCategory.id))\n        ) {\n            return;\n        }\n\n        this.searchAreaCategoryUpdated();\n    }\n\n    /**\n     * Checkbox for all courses has been updated.\n     */\n    allCoursesUpdated(): void {\n        if (this.allCourses === null) {\n            return;\n        }\n\n        const checked = this.allCourses;\n\n        this.courses.forEach(course => {\n            if (course.checked === checked) {\n                return;\n            }\n\n            course.checked = checked;\n        });\n    }\n\n    /**\n     * Checkbox for one course has been updated.\n     *\n     * @param course Filter status.\n     */\n    onCourseInputChanged(course: Filter<CoreEnrolledCourseData>): void {\n        if (!course.checked && this.newFilters.courseIds && !this.newFilters.courseIds.includes(course.id)) {\n            return;\n        }\n\n        if (course.checked && (!this.newFilters.courseIds || this.newFilters.courseIds.includes(course.id))) {\n            return;\n        }\n\n        this.courseUpdated();\n    }\n\n    /**\n     * Refresh filters.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshFilters(refresher?: HTMLIonRefresherElement): Promise<void> {\n        await CoreUtils.ignoreErrors(Promise.all([\n            CoreSearchGlobalSearch.invalidateSearchAreas(),\n            CoreCourses.invalidateUserCourses(),\n        ]));\n\n        await this.updateSearchAreaCategories();\n        await this.updateCourses();\n\n        refresher?.complete();\n    }\n\n    /**\n     * Update search area categories.\n     */\n    private async updateSearchAreaCategories(): Promise<void> {\n        const searchAreas = await CoreSearchGlobalSearch.getSearchAreas();\n        const searchAreaCategoryIds = new Set();\n\n        this.searchAreaCategories = [];\n\n        for (const searchArea of searchAreas) {\n            if (searchAreaCategoryIds.has(searchArea.category.id)) {\n                continue;\n            }\n\n            searchAreaCategoryIds.add(searchArea.category.id);\n            this.searchAreaCategories.push({\n                ...searchArea.category,\n                checked: this.filters?.searchAreaCategoryIds?.includes(searchArea.category.id) ?? true,\n            });\n        }\n\n        this.allSearchAreaCategories = this.getGroupFilterStatus(this.searchAreaCategories);\n    }\n\n    /**\n     * Update courses.\n     */\n    private async updateCourses(): Promise<void> {\n        const courses = await CoreCourses.getUserCourses();\n\n        this.courses = courses\n            .sort((a, b) => (a.shortname?.toLowerCase() ?? '').localeCompare(b.shortname?.toLowerCase() ?? ''))\n            .map(course => ({\n                ...course,\n                checked: this.filters?.courseIds?.includes(course.id) ?? true,\n            }));\n\n        this.allCourses = this.getGroupFilterStatus(this.courses);\n    }\n\n    /**\n     * Checkbox for one search area category has been updated.\n     */\n    private searchAreaCategoryUpdated(): void {\n        const filterStatus = this.getGroupFilterStatus(this.searchAreaCategories);\n\n        if (filterStatus !== this.allSearchAreaCategories) {\n            this.allSearchAreaCategories = filterStatus;\n        }\n\n        this.emitFiltersUpdated();\n    }\n\n    /**\n     * Course filter status has been updated.\n     */\n    private courseUpdated(): void {\n        const filterStatus = this.getGroupFilterStatus(this.courses);\n\n        if (filterStatus !== this.allCourses) {\n            this.allCourses = filterStatus;\n        }\n\n        this.emitFiltersUpdated();\n    }\n\n    /**\n     * Get the status for a filter representing a group of filters.\n     *\n     * @param filters Filters in the group.\n     * @returns Group filter status. This will be true if all filters are checked, false if all filters are unchecked,\n     *          or null if filters have mixed states.\n     */\n    private getGroupFilterStatus(filters: Filter[]): boolean | null {\n        if (filters.length === 0) {\n            return null;\n        }\n\n        const firstChecked = filters[0].checked;\n\n        for (const filter of filters) {\n            if (filter.checked === firstChecked) {\n                continue;\n            }\n\n            return null;\n        }\n\n        return firstChecked;\n    }\n\n    /**\n     * Emit filters updated event.\n     */\n    private emitFiltersUpdated(): void {\n        this.newFilters = {};\n\n        if (!this.allSearchAreaCategories) {\n            this.newFilters.searchAreaCategoryIds = this.searchAreaCategories.filter(({ checked }) => checked).map(({ id }) => id);\n        }\n\n        if (!this.allCourses) {\n            this.newFilters.courseIds = this.courses.filter(({ checked }) => checked).map(({ id }) => id);\n        }\n\n        CoreEvents.trigger(CORE_SEARCH_GLOBAL_SEARCH_FILTERS_UPDATED, this.newFilters);\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-title>\n            <h1>{{ 'core.search.filterheader' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"close()\" [attr.aria-label]=\"'core.close' | translate\">\n                <ion-icon name=\"fas-xmark\" slot=\"icon-only\" aria-hidden=true />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content [fullscreen]=\"true\">\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"refreshFilters($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <ion-list>\n        <ng-container *ngIf=\"searchAreaCategories.length > 0\">\n            <core-spacer />\n            <ion-item class=\"ion-text-wrap help\">\n                <ion-label>\n                    {{ 'core.search.filtercategories' | translate }}\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>{{ 'core.search.allcategories' | translate }}</ion-label>\n                <ion-checkbox slot=\"end\" [(ngModel)]=\"allSearchAreaCategories\" [indeterminate]=\"allSearchAreaCategories === null\"\n                    (ionChange)=\"allSearchAreaCategoriesUpdated()\" />\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\" *ngFor=\"let searchAreaCategory of searchAreaCategories\">\n                <ion-label>\n                    <core-format-text [text]=\"searchAreaCategory.name\" />\n                </ion-label>\n                <ion-checkbox slot=\"end\" [(ngModel)]=\"searchAreaCategory.checked\"\n                    (ionChange)=\"onSearchAreaCategoryInputChanged(searchAreaCategory)\" />\n            </ion-item>\n        </ng-container>\n        <ng-container *ngIf=\"!hideCourses && courses.length > 0\">\n            <core-spacer />\n            <ion-item class=\"ion-text-wrap help\">\n                <ion-label>\n                    {{ 'core.search.filtercourses' | translate }}\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>{{ 'core.search.allcourses' | translate }}</ion-label>\n                <ion-checkbox slot=\"end\" [(ngModel)]=\"allCourses\" [indeterminate]=\"allCourses === null\" (ionChange)=\"allCoursesUpdated()\" />\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\" *ngFor=\"let course of courses\">\n                <ion-label>\n                    <core-format-text [text]=\"course.shortname\" />\n                </ion-label>\n                <ion-checkbox slot=\"end\" [(ngModel)]=\"course.checked\" (ionChange)=\"onCourseInputChanged(course)\" />\n            </ion-item>\n        </ng-container>\n    </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}