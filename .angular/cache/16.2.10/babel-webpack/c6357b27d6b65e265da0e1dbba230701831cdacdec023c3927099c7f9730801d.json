{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { APP_INITIALIZER } from '@angular/core';\nimport { CoreAppProvider } from '@services/app';\nimport moment from 'moment-timezone';\nimport { TestingBehatRuntime } from './services/behat-runtime';\nimport * as i0 from \"@angular/core\";\n/**\n * Initialize automated tests.\n *\n * @param window Window.\n */\nfunction initializeAutomatedTests(window) {\n  if (!CoreAppProvider.isAutomated()) {\n    return;\n  }\n  window.behat = TestingBehatRuntime.instance;\n  // Force timezone for automated tests.\n  moment.tz.setDefault(CoreAppProvider.getForcedTimezone());\n}\nexport class TestingModule {}\n_class = TestingModule;\n_class.ɵfac = function TestingModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    useValue: () => {\n      initializeAutomatedTests(window);\n    }\n  }]\n});","map":{"version":3,"names":["APP_INITIALIZER","CoreAppProvider","moment","TestingBehatRuntime","initializeAutomatedTests","window","isAutomated","behat","instance","tz","setDefault","getForcedTimezone","TestingModule","provide","multi","useValue"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/testing/testing.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { CoreAppProvider } from '@services/app';\nimport moment from 'moment-timezone';\nimport { TestingBehatRuntime, TestingBehatRuntimeService } from './services/behat-runtime';\n\ntype AutomatedTestsWindow = Window & {\n    behat?: TestingBehatRuntimeService;\n};\n\n/**\n * Initialize automated tests.\n *\n * @param window Window.\n */\nfunction initializeAutomatedTests(window: AutomatedTestsWindow) {\n    if (!CoreAppProvider.isAutomated()) {\n        return;\n    }\n\n    window.behat = TestingBehatRuntime.instance;\n\n    // Force timezone for automated tests.\n    moment.tz.setDefault(CoreAppProvider.getForcedTimezone());\n}\n\n@NgModule({\n    providers: [\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useValue: () => {\n                initializeAutomatedTests(window);\n            },\n        },\n    ],\n})\nexport class TestingModule {}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAe,QAAkB,eAAe;AACzD,SAASC,eAAe,QAAQ,eAAe;AAC/C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,mBAAmB,QAAoC,0BAA0B;;AAM1F;;;;;AAKA,SAASC,wBAAwBA,CAACC,MAA4B;EAC1D,IAAI,CAACJ,eAAe,CAACK,WAAW,EAAE,EAAE;IAChC;;EAGJD,MAAM,CAACE,KAAK,GAAGJ,mBAAmB,CAACK,QAAQ;EAE3C;EACAN,MAAM,CAACO,EAAE,CAACC,UAAU,CAACT,eAAe,CAACU,iBAAiB,EAAE,CAAC;AAC7D;AAaA,OAAM,MAAOC,aAAa;SAAbA,aAAa;;mBAAbA,MAAa;AAAA;;QAAbA;AAAa;;aAVX,CACP;IACIC,OAAO,EAAEb,eAAe;IACxBc,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAEA,CAAA,KAAK;MACXX,wBAAwB,CAACC,MAAM,CAAC;IACpC;GACH;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}