{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksModuleGradeHandler } from '@features/contentlinks/classes/module-grade-handler';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { makeSingleton } from '@singletons';\nimport { AddonModLesson } from '../lesson';\nimport { AddonModLessonModuleHandlerService } from './module';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to treat links to lesson grade.\n */\nexport class AddonModLessonGradeLinkHandlerService extends CoreContentLinksModuleGradeHandler {\n  constructor() {\n    super('AddonModLesson', 'lesson');\n    this.name = 'AddonModLessonGradeLinkHandler';\n    this.canReview = true;\n  }\n  /**\n   * Go to the page to review.\n   *\n   * @param url The URL to treat.\n   * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n   * @param courseId Course ID related to the URL.\n   * @param siteId Site to use.\n   * @returns Promise resolved when done.\n   */\n  goToReview(url, params, courseId, siteId) {\n    return _asyncToGenerator(function* () {\n      const moduleId = Number(params.id);\n      const userId = Number(params.userid) || 0;\n      const modal = yield CoreDomUtils.showModalLoading();\n      try {\n        const module = yield CoreCourse.getModuleBasicInfo(moduleId, {\n          siteId,\n          readingStrategy: 1 /* CoreSitesReadingStrategy.PREFER_CACHE */\n        });\n        // Check if the user can see the user reports in the lesson.\n        const accessInfo = yield AddonModLesson.getAccessInformation(module.instance, {\n          cmId: module.id,\n          siteId\n        });\n        if (accessInfo.canviewreports) {\n          // User can view reports, go to view the report.\n          CoreNavigator.navigateToSitePath(AddonModLessonModuleHandlerService.PAGE_NAME + `/${module.course}/${module.id}/user-retake/${userId}`, {\n            siteId\n          });\n        } else {\n          // User cannot view the report, go to lesson index.\n          CoreCourseHelper.navigateToModule(moduleId, {\n            courseId: module.course,\n            sectionId: module.section,\n            siteId\n          });\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n}\n_class = AddonModLessonGradeLinkHandlerService;\n_class.ɵfac = function AddonModLessonGradeLinkHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModLessonGradeLinkHandler = makeSingleton(AddonModLessonGradeLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksModuleGradeHandler","CoreCourse","CoreCourseHelper","CoreNavigator","CoreDomUtils","makeSingleton","AddonModLesson","AddonModLessonModuleHandlerService","AddonModLessonGradeLinkHandlerService","constructor","name","canReview","goToReview","url","params","courseId","siteId","_asyncToGenerator","moduleId","Number","id","userId","userid","modal","showModalLoading","module","getModuleBasicInfo","readingStrategy","accessInfo","getAccessInformation","instance","cmId","canviewreports","navigateToSitePath","PAGE_NAME","course","navigateToModule","sectionId","section","error","showErrorModalDefault","dismiss","factory","ɵfac","providedIn","AddonModLessonGradeLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/lesson/services/handlers/grade-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreContentLinksModuleGradeHandler } from '@features/contentlinks/classes/module-grade-handler';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { makeSingleton } from '@singletons';\nimport { AddonModLesson } from '../lesson';\nimport { AddonModLessonModuleHandlerService } from './module';\n\n/**\n * Handler to treat links to lesson grade.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModLessonGradeLinkHandlerService extends CoreContentLinksModuleGradeHandler {\n\n    name = 'AddonModLessonGradeLinkHandler';\n    canReview = true;\n\n    constructor() {\n        super('AddonModLesson', 'lesson');\n    }\n\n    /**\n     * Go to the page to review.\n     *\n     * @param url The URL to treat.\n     * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param courseId Course ID related to the URL.\n     * @param siteId Site to use.\n     * @returns Promise resolved when done.\n     */\n    protected async goToReview(\n        url: string,\n        params: Record<string, unknown>,\n        courseId: number,\n        siteId: string,\n    ): Promise<void> {\n        const moduleId = Number(params.id);\n        const userId = Number(params.userid) || 0;\n\n        const modal = await CoreDomUtils.showModalLoading();\n\n        try {\n            const module = await CoreCourse.getModuleBasicInfo(\n                moduleId,\n                { siteId, readingStrategy: CoreSitesReadingStrategy.PREFER_CACHE },\n            );\n\n            // Check if the user can see the user reports in the lesson.\n            const accessInfo = await AddonModLesson.getAccessInformation(module.instance, { cmId: module.id, siteId });\n\n            if (accessInfo.canviewreports) {\n                // User can view reports, go to view the report.\n                CoreNavigator.navigateToSitePath(\n                    AddonModLessonModuleHandlerService.PAGE_NAME + `/${module.course}/${module.id}/user-retake/${userId}`,\n                    {\n                        siteId,\n                    },\n                );\n            } else {\n                // User cannot view the report, go to lesson index.\n                CoreCourseHelper.navigateToModule(moduleId, {\n                    courseId: module.course,\n                    sectionId: module.section,\n                    siteId,\n                });\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n}\n\nexport const AddonModLessonGradeLinkHandler = makeSingleton(AddonModLessonGradeLinkHandlerService);\n"],"mappings":";;AAgBA,SAASA,kCAAkC,QAAQ,qDAAqD;AACxG,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,gBAAgB,QAAQ,yCAAyC;AAC1E,SAASC,aAAa,QAAQ,qBAAqB;AAEnD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,cAAc,QAAQ,WAAW;AAC1C,SAASC,kCAAkC,QAAQ,UAAU;;AAE7D;;;AAIA,OAAM,MAAOC,qCAAsC,SAAQR,kCAAkC;EAKzFS,YAAA;IACI,KAAK,CAAC,gBAAgB,EAAE,QAAQ,CAAC;IAJrC,KAAAC,IAAI,GAAG,gCAAgC;IACvC,KAAAC,SAAS,GAAG,IAAI;EAIhB;EAEA;;;;;;;;;EASgBC,UAAUA,CACtBC,GAAW,EACXC,MAA+B,EAC/BC,QAAgB,EAChBC,MAAc;IAAA,OAAAC,iBAAA;MAEd,MAAMC,QAAQ,GAAGC,MAAM,CAACL,MAAM,CAACM,EAAE,CAAC;MAClC,MAAMC,MAAM,GAAGF,MAAM,CAACL,MAAM,CAACQ,MAAM,CAAC,IAAI,CAAC;MAEzC,MAAMC,KAAK,SAASnB,YAAY,CAACoB,gBAAgB,EAAE;MAEnD,IAAI;QACA,MAAMC,MAAM,SAASxB,UAAU,CAACyB,kBAAkB,CAC9CR,QAAQ,EACR;UAAEF,MAAM;UAAEW,eAAe;QAAuC,CAAE,CACrE;QAED;QACA,MAAMC,UAAU,SAAStB,cAAc,CAACuB,oBAAoB,CAACJ,MAAM,CAACK,QAAQ,EAAE;UAAEC,IAAI,EAAEN,MAAM,CAACL,EAAE;UAAEJ;QAAM,CAAE,CAAC;QAE1G,IAAIY,UAAU,CAACI,cAAc,EAAE;UAC3B;UACA7B,aAAa,CAAC8B,kBAAkB,CAC5B1B,kCAAkC,CAAC2B,SAAS,GAAG,IAAIT,MAAM,CAACU,MAAM,IAAIV,MAAM,CAACL,EAAE,gBAAgBC,MAAM,EAAE,EACrG;YACIL;WACH,CACJ;SACJ,MAAM;UACH;UACAd,gBAAgB,CAACkC,gBAAgB,CAAClB,QAAQ,EAAE;YACxCH,QAAQ,EAAEU,MAAM,CAACU,MAAM;YACvBE,SAAS,EAAEZ,MAAM,CAACa,OAAO;YACzBtB;WACH,CAAC;;OAET,CAAC,OAAOuB,KAAK,EAAE;QACZnC,YAAY,CAACoC,qBAAqB,CAACD,KAAK,EAAE,4BAA4B,EAAE,IAAI,CAAC;OAChF,SAAS;QACNhB,KAAK,CAACkB,OAAO,EAAE;;IAClB;EACL;;SA3DSjC,qCAAsC;;mBAAtCA,MAAqC;AAAA;;SAArCA,MAAqC;EAAAkC,OAAA,EAArClC,MAAqC,CAAAmC,IAAA;EAAAC,UAAA,EADxB;AAAM;AAgEhC,OAAO,MAAMC,8BAA8B,GAAGxC,aAAa,CAACG,qCAAqC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}