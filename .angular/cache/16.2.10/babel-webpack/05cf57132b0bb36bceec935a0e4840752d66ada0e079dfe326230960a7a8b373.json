{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreDom } from '@singletons/dom';\n/**\n * Graphics API for drag-and-drop markers question type.\n */\nexport class AddonQtypeDdMarkerGraphicsApi {\n  constructor(instance) {\n    this.instance = instance;\n    this.NS = 'http://www.w3.org/2000/svg';\n  }\n  /**\n   * Add a shape.\n   *\n   * @param shapeAttribs Attributes for the shape: type and color.\n   * @param styles Object with the styles for the shape (name -> value).\n   * @returns The new shape.\n   */\n  addShape(shapeAttribs, styles) {\n    var _this$dropZone;\n    const shape = document.createElementNS(this.NS, shapeAttribs.type);\n    shape.setAttribute('fill', shapeAttribs.color);\n    shape.setAttribute('fill-opacity', '0.5');\n    shape.setAttribute('stroke', 'black');\n    for (const x in styles) {\n      shape.setAttribute(x, String(styles[x]));\n    }\n    (_this$dropZone = this.dropZone) === null || _this$dropZone === void 0 || _this$dropZone.appendChild(shape);\n    return shape;\n  }\n  /**\n   * Clear the shapes.\n   */\n  clear() {\n    var _this$instance$doc, _this$instance$doc2, _this$instance$doc3, _this$instance$doc4;\n    const bgImg = (_this$instance$doc = this.instance.doc) === null || _this$instance$doc === void 0 ? void 0 : _this$instance$doc.bgImg();\n    const dropZones = (_this$instance$doc2 = this.instance.doc) === null || _this$instance$doc2 === void 0 || (_this$instance$doc2 = _this$instance$doc2.topNode) === null || _this$instance$doc2 === void 0 ? void 0 : _this$instance$doc2.querySelector('div.ddarea div.dropzones');\n    const markerTexts = (_this$instance$doc3 = this.instance.doc) === null || _this$instance$doc3 === void 0 ? void 0 : _this$instance$doc3.markerTexts();\n    const ddArea = (_this$instance$doc4 = this.instance.doc) === null || _this$instance$doc4 === void 0 || (_this$instance$doc4 = _this$instance$doc4.topNode) === null || _this$instance$doc4 === void 0 ? void 0 : _this$instance$doc4.querySelector('.ddarea');\n    if (!bgImg || !dropZones || !markerTexts || !ddArea) {\n      return;\n    }\n    const position = CoreDom.getRelativeElementPosition(bgImg, ddArea);\n    dropZones.style.left = position.x + 'px';\n    dropZones.style.top = position.y + 'px';\n    dropZones.style.width = bgImg.width + 'px';\n    dropZones.style.height = bgImg.height + 'px';\n    markerTexts.style.left = position.x + 'px';\n    markerTexts.style.top = position.y + 'px';\n    markerTexts.style.width = bgImg.width + 'px';\n    markerTexts.style.height = bgImg.height + 'px';\n    if (!this.dropZone) {\n      this.dropZone = document.createElementNS(this.NS, 'svg');\n      dropZones.appendChild(this.dropZone);\n    } else {\n      // Remove all children.\n      while (this.dropZone.firstChild) {\n        this.dropZone.removeChild(this.dropZone.firstChild);\n      }\n    }\n    this.dropZone.style.width = bgImg.width + 'px';\n    this.dropZone.style.height = bgImg.height + 'px';\n    this.instance.shapes = [];\n  }\n}","map":{"version":3,"names":["CoreDom","AddonQtypeDdMarkerGraphicsApi","constructor","instance","NS","addShape","shapeAttribs","styles","_this$dropZone","shape","document","createElementNS","type","setAttribute","color","x","String","dropZone","appendChild","clear","_this$instance$doc","_this$instance$doc2","_this$instance$doc3","_this$instance$doc4","bgImg","doc","dropZones","topNode","querySelector","markerTexts","ddArea","position","getRelativeElementPosition","style","left","top","y","width","height","firstChild","removeChild","shapes"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qtype/ddmarker/classes/graphics_api.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreDom } from '@singletons/dom';\nimport { AddonQtypeDdMarkerQuestion } from './ddmarker';\n\n/**\n * Graphics API for drag-and-drop markers question type.\n */\nexport class AddonQtypeDdMarkerGraphicsApi {\n\n    protected readonly NS = 'http://www.w3.org/2000/svg';\n    protected dropZone?: SVGSVGElement;\n\n    constructor(protected instance: AddonQtypeDdMarkerQuestion) { }\n\n    /**\n     * Add a shape.\n     *\n     * @param shapeAttribs Attributes for the shape: type and color.\n     * @param styles Object with the styles for the shape (name -> value).\n     * @returns The new shape.\n     */\n    addShape(shapeAttribs: {type: string; color: string}, styles: {[name: string]: number | string}): SVGElement {\n        const shape = document.createElementNS(this.NS, shapeAttribs.type);\n        shape.setAttribute('fill', shapeAttribs.color);\n        shape.setAttribute('fill-opacity', '0.5');\n        shape.setAttribute('stroke', 'black');\n\n        for (const x in styles) {\n            shape.setAttribute(x, String(styles[x]));\n        }\n\n        this.dropZone?.appendChild(shape);\n\n        return shape;\n    }\n\n    /**\n     * Clear the shapes.\n     */\n    clear(): void {\n        const bgImg = this.instance.doc?.bgImg();\n        const dropZones = this.instance.doc?.topNode?.querySelector<HTMLElement>('div.ddarea div.dropzones');\n        const markerTexts = this.instance.doc?.markerTexts();\n        const ddArea = this.instance.doc?.topNode?.querySelector<HTMLElement>('.ddarea');\n        if (!bgImg || !dropZones || !markerTexts || !ddArea) {\n            return;\n        }\n\n        const position = CoreDom.getRelativeElementPosition(bgImg, ddArea);\n\n        dropZones.style.left = position.x + 'px';\n        dropZones.style.top = position.y + 'px';\n        dropZones.style.width = bgImg.width + 'px';\n        dropZones.style.height = bgImg.height + 'px';\n\n        markerTexts.style.left = position.x + 'px';\n        markerTexts.style.top = position.y + 'px';\n        markerTexts.style.width = bgImg.width + 'px';\n        markerTexts.style.height = bgImg.height + 'px';\n\n        if (!this.dropZone) {\n            this.dropZone = <SVGSVGElement> document.createElementNS(this.NS, 'svg');\n            dropZones.appendChild(this.dropZone);\n        } else {\n            // Remove all children.\n            while (this.dropZone.firstChild) {\n                this.dropZone.removeChild(this.dropZone.firstChild);\n            }\n        }\n\n        this.dropZone.style.width = bgImg.width + 'px';\n        this.dropZone.style.height = bgImg.height + 'px';\n\n        this.instance.shapes = [];\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}