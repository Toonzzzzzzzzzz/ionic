{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreEnrolAction } from '@features/enrol/services/enrol-delegate';\nimport { makeSingleton } from '@singletons';\nimport { AddonEnrolGuest } from './guest';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreWSError } from '@classes/errors/wserror';\nimport { CoreEnrol } from '@features/enrol/services/enrol';\nimport * as i0 from \"@angular/core\";\n/**\n * Enrol handler.\n */\nexport class AddonEnrolGuestHandlerService {\n  constructor() {\n    this.name = 'AddonEnrolGuest';\n    this.type = 'guest';\n    this.enrolmentAction = CoreEnrolAction.GUEST;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getInfoIcons(courseId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const guestEnrolments = yield CoreEnrol.getSupportedCourseEnrolmentMethods(courseId, {\n        type: _this.type\n      });\n      for (const guestEnrolment of guestEnrolments) {\n        const info = yield AddonEnrolGuest.getGuestEnrolmentInfo(guestEnrolment.id);\n        // Don't allow guest access if it requires a password if not supported.\n        if (!info.passwordrequired) {\n          return [{\n            label: 'addon.enrol_guest.guestaccess_withoutpassword',\n            icon: 'fas-unlock'\n          }];\n        } else {\n          return [{\n            label: 'addon.enrol_guest.guestaccess_withpassword',\n            icon: 'fas-key'\n          }];\n        }\n      }\n      return [];\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  canAccess(method) {\n    return _asyncToGenerator(function* () {\n      const info = yield AddonEnrolGuest.getGuestEnrolmentInfo(method.id);\n      return {\n        canAccess: info.status && (!info.passwordrequired || AddonEnrolGuest.isValidateGuestAccessPasswordAvailable()),\n        requiresUserInput: info.passwordrequired\n      };\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  validateAccess(method) {\n    return _asyncToGenerator(function* () {\n      const info = yield AddonEnrolGuest.getGuestEnrolmentInfo(method.id);\n      if (!info.status) {\n        return false;\n      }\n      if (!info.passwordrequired) {\n        return true;\n      }\n      if (!AddonEnrolGuest.isValidateGuestAccessPasswordAvailable()) {\n        return false;\n      }\n      const validatePassword = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (password = '') {\n          const modal = yield CoreDomUtils.showModalLoading('core.loading', true);\n          try {\n            const response = yield AddonEnrolGuest.validateGuestAccessPassword(method.id, password);\n            let error = response.hint;\n            if (!response.validated && !error) {\n              error = 'addon.enrol_guest.passwordinvalid';\n            }\n            return {\n              password,\n              validated: response.validated,\n              error\n            };\n          } finally {\n            modal.dismiss();\n          }\n        });\n        return function validatePassword() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      try {\n        const response = yield CoreDomUtils.promptPassword({\n          title: method.name,\n          validator: validatePassword\n        });\n        if (!response.validated) {\n          return false;\n        }\n      } catch (error) {\n        if (error instanceof CoreWSError) {\n          throw error;\n        }\n        // Cancelled, return\n        return false;\n      }\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidate(method) {\n    return _asyncToGenerator(function* () {\n      return AddonEnrolGuest.invalidateGuestEnrolmentInfo(method.id);\n    })();\n  }\n}\n_class = AddonEnrolGuestHandlerService;\n_class.ɵfac = function AddonEnrolGuestHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonEnrolGuestHandler = makeSingleton(AddonEnrolGuestHandlerService);","map":{"version":3,"names":["CoreEnrolAction","makeSingleton","AddonEnrolGuest","CoreDomUtils","CoreWSError","CoreEnrol","AddonEnrolGuestHandlerService","constructor","name","type","enrolmentAction","GUEST","isEnabled","_asyncToGenerator","getInfoIcons","courseId","_this","guestEnrolments","getSupportedCourseEnrolmentMethods","guestEnrolment","info","getGuestEnrolmentInfo","id","passwordrequired","label","icon","canAccess","method","status","isValidateGuestAccessPasswordAvailable","requiresUserInput","validateAccess","validatePassword","_ref","password","modal","showModalLoading","response","validateGuestAccessPassword","error","hint","validated","dismiss","apply","arguments","promptPassword","title","validator","invalidate","invalidateGuestEnrolmentInfo","factory","ɵfac","providedIn","AddonEnrolGuestHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/enrol/guest/services/enrol-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport {\n    CoreEnrolAction,\n    CoreEnrolCanAccessData,\n    CoreEnrolGuestHandler,\n    CoreEnrolInfoIcon,\n} from '@features/enrol/services/enrol-delegate';\nimport { makeSingleton } from '@singletons';\nimport { AddonEnrolGuest } from './guest';\nimport { CorePasswordModalResponse } from '@components/password-modal/password-modal';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreWSError } from '@classes/errors/wserror';\nimport { CoreEnrol, CoreEnrolEnrolmentMethod } from '@features/enrol/services/enrol';\n\n/**\n * Enrol handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonEnrolGuestHandlerService implements CoreEnrolGuestHandler {\n\n    name = 'AddonEnrolGuest';\n    type = 'guest';\n    enrolmentAction = <CoreEnrolAction.GUEST> CoreEnrolAction.GUEST;\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getInfoIcons(courseId: number): Promise<CoreEnrolInfoIcon[]> {\n        const guestEnrolments = await CoreEnrol.getSupportedCourseEnrolmentMethods(courseId, { type: this.type });\n\n        for (const guestEnrolment of guestEnrolments) {\n            const info = await AddonEnrolGuest.getGuestEnrolmentInfo(guestEnrolment.id);\n            // Don't allow guest access if it requires a password if not supported.\n            if (!info.passwordrequired) {\n                return [{\n                    label: 'addon.enrol_guest.guestaccess_withoutpassword',\n                    icon: 'fas-unlock',\n                }];\n            } else {\n                return [{\n                    label: 'addon.enrol_guest.guestaccess_withpassword',\n                    icon: 'fas-key',\n                }];\n            }\n        }\n\n        return [];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async canAccess(method: CoreEnrolEnrolmentMethod): Promise<CoreEnrolCanAccessData> {\n        const info = await AddonEnrolGuest.getGuestEnrolmentInfo(method.id);\n\n        return {\n            canAccess: info.status && (!info.passwordrequired || AddonEnrolGuest.isValidateGuestAccessPasswordAvailable()),\n            requiresUserInput: info.passwordrequired,\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async validateAccess(method: CoreEnrolEnrolmentMethod): Promise<boolean> {\n        const info = await AddonEnrolGuest.getGuestEnrolmentInfo(method.id);\n\n        if (!info.status) {\n            return false;\n        }\n\n        if (!info.passwordrequired) {\n            return true;\n        }\n\n        if (!AddonEnrolGuest.isValidateGuestAccessPasswordAvailable()) {\n            return false;\n        }\n\n        const validatePassword = async (password = ''): Promise<CorePasswordModalResponse> => {\n            const modal = await CoreDomUtils.showModalLoading('core.loading', true);\n\n            try {\n                const response = await AddonEnrolGuest.validateGuestAccessPassword(method.id, password);\n\n                let error = response.hint;\n                if (!response.validated && !error) {\n                    error = 'addon.enrol_guest.passwordinvalid';\n                }\n\n                return {\n                    password, validated: response.validated, error,\n                };\n            } finally {\n                modal.dismiss();\n            }\n        };\n\n        try {\n            const response = await CoreDomUtils.promptPassword<CorePasswordModalResponse>({\n                title: method.name,\n                validator: validatePassword,\n            });\n\n            if (!response.validated) {\n                return false;\n            }\n        } catch (error) {\n            if (error instanceof CoreWSError) {\n                throw error;\n            }\n\n            // Cancelled, return\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidate(method: CoreEnrolEnrolmentMethod): Promise<void> {\n        return AddonEnrolGuest.invalidateGuestEnrolmentInfo(method.id);\n    }\n\n}\n\nexport const AddonEnrolGuestHandler = makeSingleton(AddonEnrolGuestHandlerService);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}