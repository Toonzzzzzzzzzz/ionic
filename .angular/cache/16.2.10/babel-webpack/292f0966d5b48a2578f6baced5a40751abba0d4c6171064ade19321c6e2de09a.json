{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonModQuizSync } from '@addons/mod/quiz/services/quiz-sync';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@ngx-translate/core\";\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\n/**\n * Component to render the preflight for offline attempts.\n */\nexport class AddonModQuizAccessOfflineAttemptsComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.syncTimeReadable = '';\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$form;\n      // Always set confirmdatasaved to 1. Sending the data means the user accepted.\n      (_this$form = _this.form) === null || _this$form === void 0 || _this$form.addControl('confirmdatasaved', _this.fb.control(1));\n      if (!_this.quiz) {\n        return;\n      }\n      const time = yield AddonModQuizSync.getSyncTime(_this.quiz.id);\n      _this.syncTimeReadable = AddonModQuizSync.getReadableTimeFromTimestamp(time);\n    })();\n  }\n}\n_class = AddonModQuizAccessOfflineAttemptsComponent;\n_class.ɵfac = function AddonModQuizAccessOfflineAttemptsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-quiz-access-offline-attempts\"]],\n  inputs: {\n    rule: \"rule\",\n    quiz: \"quiz\",\n    attempt: \"attempt\",\n    prefetch: \"prefetch\",\n    siteId: \"siteId\",\n    form: \"form\"\n  },\n  decls: 8,\n  vars: 9,\n  consts: [[1, \"ion-text-wrap\"], [1, \"item-heading\"]],\n  template: function AddonModQuizAccessOfflineAttemptsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-item\", 0)(1, \"ion-label\")(2, \"p\", 1);\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"translate\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"core.settings.synchronization\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 4, \"addon.mod_quiz.confirmcontinueoffline\", i0.ɵɵpureFunction1(7, _c0, ctx.syncTimeReadable)));\n    }\n  },\n  dependencies: [i2.IonItem, i2.IonLabel, i3.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonModQuizSync","AddonModQuizAccessOfflineAttemptsComponent","constructor","fb","syncTimeReadable","ngOnInit","_this","_asyncToGenerator","_this$form","form","addControl","control","quiz","time","getSyncTime","id","getReadableTimeFromTimestamp","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","inputs","rule","attempt","prefetch","siteId","decls","vars","consts","template","AddonModQuizAccessOfflineAttemptsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵpipeBind2","ɵɵpureFunction1","_c0"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/accessrules/offlineattempts/component/offlineattempts.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/accessrules/offlineattempts/component/addon-mod-quiz-access-offline-attempts.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonModQuizAttemptWSData, AddonModQuizQuizWSData } from '@addons/mod/quiz/services/quiz';\nimport { AddonModQuizSync } from '@addons/mod/quiz/services/quiz-sync';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n/**\n * Component to render the preflight for offline attempts.\n */\n@Component({\n    selector: 'addon-mod-quiz-access-offline-attempts',\n    templateUrl: 'addon-mod-quiz-access-offline-attempts.html',\n})\nexport class AddonModQuizAccessOfflineAttemptsComponent implements OnInit {\n\n    @Input() rule?: string; // The name of the rule.\n    @Input() quiz?: AddonModQuizQuizWSData; // The quiz the rule belongs to.\n    @Input() attempt?: AddonModQuizAttemptWSData; // The attempt being started/continued.\n    @Input() prefetch?: boolean; // Whether the user is prefetching the quiz.\n    @Input() siteId?: string; // Site ID.\n    @Input() form?: FormGroup; // Form where to add the form control.\n\n    syncTimeReadable = '';\n\n    constructor(private fb: FormBuilder) { }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        // Always set confirmdatasaved to 1. Sending the data means the user accepted.\n        this.form?.addControl('confirmdatasaved', this.fb.control(1));\n\n        if (!this.quiz) {\n            return;\n        }\n\n        const time = await AddonModQuizSync.getSyncTime(this.quiz.id);\n\n        this.syncTimeReadable = AddonModQuizSync.getReadableTimeFromTimestamp(time);\n    }\n\n}\n","<ion-item class=\"ion-text-wrap\">\n    <ion-label>\n        <p class=\"item-heading\">{{ 'core.settings.synchronization' | translate }}</p>\n        <p>{{ 'addon.mod_quiz.confirmcontinueoffline' | translate:{$a: syncTimeReadable} }}</p>\n    </ion-label>\n</ion-item>\n"],"mappings":";;AAeA,SAASA,gBAAgB,QAAQ,qCAAqC;;;;;;;;;;AAItE;;;AAOA,OAAM,MAAOC,0CAA0C;EAWnDC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAFtB,KAAAC,gBAAgB,GAAG,EAAE;EAEkB;EAEvC;;;EAGMC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAAA,IAAAC,UAAA;MACV;MACA,CAAAA,UAAA,GAAAF,KAAI,CAACG,IAAI,cAAAD,UAAA,eAATA,UAAA,CAAWE,UAAU,CAAC,kBAAkB,EAAEJ,KAAI,CAACH,EAAE,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC;MAE7D,IAAI,CAACL,KAAI,CAACM,IAAI,EAAE;QACZ;;MAGJ,MAAMC,IAAI,SAASb,gBAAgB,CAACc,WAAW,CAACR,KAAI,CAACM,IAAI,CAACG,EAAE,CAAC;MAE7DT,KAAI,CAACF,gBAAgB,GAAGJ,gBAAgB,CAACgB,4BAA4B,CAACH,IAAI,CAAC;IAAC;EAChF;;SA3BSZ,0CAA0C;;mBAA1CA,MAA0C,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAA1CnB,MAA0C;EAAAoB,SAAA;EAAAC,MAAA;IAAAC,IAAA;IAAAX,IAAA;IAAAY,OAAA;IAAAC,QAAA;IAAAC,MAAA;IAAAjB,IAAA;EAAA;EAAAkB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,oDAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC1BvDf,EAAA,CAAAiB,cAAA,kBAAgC;MAEAjB,EAAA,CAAAkB,MAAA,GAAiD;;MAAAlB,EAAA,CAAAmB,YAAA,EAAI;MAC7EnB,EAAA,CAAAiB,cAAA,QAAG;MAAAjB,EAAA,CAAAkB,MAAA,GAAgF;;MAAAlB,EAAA,CAAAmB,YAAA,EAAI;;;MAD/DnB,EAAA,CAAAoB,SAAA,GAAiD;MAAjDpB,EAAA,CAAAqB,iBAAA,CAAArB,EAAA,CAAAsB,WAAA,wCAAiD;MACtEtB,EAAA,CAAAoB,SAAA,GAAgF;MAAhFpB,EAAA,CAAAqB,iBAAA,CAAArB,EAAA,CAAAuB,WAAA,gDAAAvB,EAAA,CAAAwB,eAAA,IAAAC,GAAA,EAAAT,GAAA,CAAA7B,gBAAA,GAAgF"},"metadata":{},"sourceType":"module","externalDependencies":[]}