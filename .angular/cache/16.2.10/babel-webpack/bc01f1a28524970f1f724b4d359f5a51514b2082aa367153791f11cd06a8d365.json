{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreConfig } from '@services/config';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreUser } from '@features/user/services/user';\nimport { AddonMessageOutputDelegate } from '@addons/messageoutput/services/messageoutput-delegate';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonNotifications } from '../../services/notifications';\nimport { AddonNotificationsHelper } from '@addons/notifications/services/notifications-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../core/components/button-with-spinner/button-with-spinner\";\nimport * as i3 from \"../../../../core/components/context-menu/context-menu\";\nimport * as i4 from \"../../../../core/components/context-menu/context-menu-item\";\nimport * as i5 from \"../../../../core/components/loading/loading\";\nimport * as i6 from \"../../../../core/components/navbar-buttons/navbar-buttons\";\nimport * as i7 from \"../../../../core/directives/content\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@ionic/angular\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction AddonNotificationsSettingsPage_core_context_menu_item_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 12);\n    i0.ɵɵlistener(\"action\", function AddonNotificationsSettingsPage_core_context_menu_item_12_Template_core_context_menu_item_action_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const handler_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.openExtraPreferences(handler_r10));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const handler_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"priority\", handler_r10.priority)(\"content\", i0.ɵɵpipeBind1(1, 3, handler_r10.label))(\"iconAction\", handler_r10.icon);\n  }\n}\nfunction AddonNotificationsSettingsPage_ion_item_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 13)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-toggle\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonNotificationsSettingsPage_ion_item_19_Template_ion_toggle_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.preferences.enableall = $event);\n    })(\"ngModelChange\", function AddonNotificationsSettingsPage_ion_item_19_Template_ion_toggle_ngModelChange_5_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.enableAll(ctx_r15.preferences.enableall));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.notifications.allownotifications\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.preferences.enableall);\n  }\n}\nfunction AddonNotificationsSettingsPage_ion_item_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 13)(1, \"ion-label\")(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-toggle\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonNotificationsSettingsPage_ion_item_20_Template_ion_toggle_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.notificationSound = $event);\n    })(\"ngModelChange\", function AddonNotificationsSettingsPage_ion_item_20_Template_ion_toggle_ngModelChange_5_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.changeNotificationSound(ctx_r18.notificationSound));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.notifications.playsound\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.notificationSound);\n  }\n}\nfunction AddonNotificationsSettingsPage_ion_item_22_ion_select_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processor_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", processor_r20.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", processor_r20.displayname, \" \");\n  }\n}\nfunction AddonNotificationsSettingsPage_ion_item_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 16)(1, \"ion-label\", 17)(2, \"p\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-select\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonNotificationsSettingsPage_ion_item_22_Template_ion_select_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.currentProcessorName = $event);\n    })(\"ionChange\", function AddonNotificationsSettingsPage_ion_item_22_Template_ion_select_ionChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.changeProcessor($event));\n    });\n    i0.ɵɵtemplate(6, AddonNotificationsSettingsPage_ion_item_22_ion_select_option_6_Template, 2, 2, \"ion-select-option\", 19);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"button\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"addon.notifications.typeofnotification\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.currentProcessorName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.preferences == null ? null : ctx_r3.preferences.processors);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_container_23_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    preferences: a0\n  };\n};\nfunction AddonNotificationsSettingsPage_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_container_23_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    const _r6 = i0.ɵɵreference(26);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r4.preferences));\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_container_24_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_container_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_container_24_ng_container_1_Template, 1, 0, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(28);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, ctx_r5.preferences));\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_core_button_with_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-button-with-spinner\", 37)(1, \"ion-toggle\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const state_r33 = i0.ɵɵnextContext(2).$implicit;\n      const notification_r30 = i0.ɵɵnextContext().$implicit;\n      const ctx_r39 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(notification_r30.processorsByName[ctx_r39.currentProcessorName][state_r33].checked = $event);\n    })(\"ngModelChange\", function AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const state_r33 = i0.ɵɵnextContext(2).$implicit;\n      const notification_r30 = i0.ɵɵnextContext().$implicit;\n      const ctx_r43 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r43.changePreferenceLegacy(notification_r30, state_r33));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const state_r33 = i0.ɵɵnextContext(2).$implicit;\n    const notification_r30 = i0.ɵɵnextContext().$implicit;\n    const ctx_r36 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"loading\", notification_r30.processorsByName[ctx_r36.currentProcessorName][state_r33].updating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", notification_r30.processorsByName[ctx_r36.currentProcessorName][state_r33].checked);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.forced\"), \" \");\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.disallowed\"), \" \");\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_core_button_with_spinner_1_Template, 2, 2, \"core-button-with-spinner\", 36);\n    i0.ɵɵtemplate(2, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_span_2_Template, 3, 3, \"span\", 35);\n    i0.ɵɵtemplate(3, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_span_3_Template, 3, 3, \"span\", 35);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const state_r33 = i0.ɵɵnextContext().$implicit;\n    const notification_r30 = i0.ɵɵnextContext().$implicit;\n    const ctx_r34 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r30.processorsByName[ctx_r34.currentProcessorName].locked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r30.processorsByName[ctx_r34.currentProcessorName].locked && notification_r30.processorsByName[ctx_r34.currentProcessorName][state_r33].checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r30.processorsByName[ctx_r34.currentProcessorName].locked && !notification_r30.processorsByName[ctx_r34.currentProcessorName][state_r33].checked);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.disabled\"));\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 34);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_Template, 4, 3, \"ng-container\", 9);\n    i0.ɵɵtemplate(2, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_span_2_Template, 3, 3, \"span\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r33 = ctx.$implicit;\n    const notification_r30 = i0.ɵɵnextContext().$implicit;\n    const preferences_r26 = i0.ɵɵnextContext(2).preferences;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", preferences_r26.enableall && notification_r30.processorsByName[ctx_r31.currentProcessorName][state_r33]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !preferences_r26.enableall);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_ion_toggle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-toggle\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_ion_toggle_1_Template_ion_toggle_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const state_r52 = i0.ɵɵnextContext(3).$implicit;\n      const notification_r30 = i0.ɵɵnextContext().$implicit;\n      const ctx_r59 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(notification_r30.processorsByName[ctx_r59.currentProcessorName][state_r52].checked = $event);\n    })(\"ngModelChange\", function AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_ion_toggle_1_Template_ion_toggle_ngModelChange_0_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const state_r52 = i0.ɵɵnextContext(3).$implicit;\n      const notification_r30 = i0.ɵɵnextContext().$implicit;\n      const ctx_r63 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r63.changePreferenceLegacy(notification_r30, state_r52));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r52 = i0.ɵɵnextContext(3).$implicit;\n    const notification_r30 = i0.ɵɵnextContext().$implicit;\n    const ctx_r58 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngModel\", notification_r30.processorsByName[ctx_r58.currentProcessorName][state_r52].checked);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"core-button-with-spinner\", 37);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_ion_toggle_1_Template, 1, 1, \"ion-toggle\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r52 = i0.ɵɵnextContext(2).$implicit;\n    const notification_r30 = i0.ɵɵnextContext().$implicit;\n    const ctx_r55 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"loading\", notification_r30.processorsByName[ctx_r55.currentProcessorName][state_r52].updating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r30.processorsByName[ctx_r55.currentProcessorName].locked);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.forced\"), \" \");\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.disallowed\"), \" \");\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_Template, 2, 2, \"core-button-with-spinner\", 36);\n    i0.ɵɵtemplate(2, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_span_2_Template, 3, 3, \"span\", 35);\n    i0.ɵɵtemplate(3, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_span_3_Template, 3, 3, \"span\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r52 = i0.ɵɵnextContext().$implicit;\n    const notification_r30 = i0.ɵɵnextContext().$implicit;\n    const ctx_r53 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r30.processorsByName[ctx_r53.currentProcessorName].locked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r30.processorsByName[ctx_r53.currentProcessorName].locked && notification_r30.processorsByName[ctx_r53.currentProcessorName][state_r52].checked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r30.processorsByName[ctx_r53.currentProcessorName].locked && !notification_r30.processorsByName[ctx_r53.currentProcessorName][state_r52].checked);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.disabled\"));\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 40)(1, \"ion-label\", 41)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_Template, 4, 3, \"div\", 42);\n    i0.ɵɵtemplate(6, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_span_6_Template, 3, 3, \"span\", 43);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r52 = ctx.$implicit;\n    const notification_r30 = i0.ɵɵnextContext().$implicit;\n    const preferences_r26 = i0.ɵɵnextContext(2).preferences;\n    const ctx_r32 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, \"core.settings.\" + state_r52));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", preferences_r26.enableall && notification_r30.processorsByName[ctx_r32.currentProcessorName][state_r52]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !preferences_r26.enableall);\n  }\n}\nconst _c1 = function () {\n  return [\"loggedin\", \"loggedoff\"];\n};\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 28)(2, \"ion-label\")(3, \"ion-row\", 29)(4, \"ion-col\", 30)(5, \"p\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_Template, 3, 2, \"ion-col\", 31);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"ion-item\", 32)(9, \"ion-label\")(10, \"p\", 14);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(12, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_Template, 7, 5, \"ion-item\", 33);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r30 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(notification_r30.displayname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(notification_r30.displayname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(5, _c1));\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 23);\n    i0.ɵɵelementStart(1, \"ion-card-header\", 24)(2, \"ion-item\", 25)(3, \"ion-label\", 13)(4, \"ion-row\", 24)(5, \"ion-col\", 24)(6, \"p\", 14);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-col\", 26)(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"ion-col\", 26)(13, \"p\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵtemplate(16, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_Template, 13, 6, \"ng-container\", 27);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const component_r28 = ctx.$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(component_r28.displayname);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 4, \"core.settings.loggedin\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 6, \"core.settings.loggedoff\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", component_r28.notifications);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddonNotificationsSettingsPage_ng_template_25_ng_container_0_Template, 17, 8, \"ng-container\", 22);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.components);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_ion_toggle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-toggle\", 38);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_ion_toggle_1_Template_ion_toggle_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const notification_r78 = i0.ɵɵnextContext(3).$implicit;\n      const ctx_r85 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(notification_r78.processorsByName[ctx_r85.currentProcessorName].enabled = $event);\n    })(\"ngModelChange\", function AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_ion_toggle_1_Template_ion_toggle_ngModelChange_0_listener() {\n      i0.ɵɵrestoreView(_r87);\n      const notification_r78 = i0.ɵɵnextContext(3).$implicit;\n      const ctx_r88 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r88.changePreference(notification_r78));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const notification_r78 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r84 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngModel\", notification_r78.processorsByName[ctx_r84.currentProcessorName].enabled);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"core-button-with-spinner\", 37);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_ion_toggle_1_Template, 1, 1, \"ion-toggle\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const notification_r78 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r81 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"loading\", notification_r78.processorsByName[ctx_r81.currentProcessorName].updating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r78.processorsByName[ctx_r81.currentProcessorName].locked);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.forced\"), \" \");\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.settings.disallowed\"), \" \");\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_Template, 2, 2, \"core-button-with-spinner\", 36);\n    i0.ɵɵtemplate(2, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_span_2_Template, 3, 3, \"span\", 35);\n    i0.ɵɵtemplate(3, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_span_3_Template, 3, 3, \"span\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const notification_r78 = i0.ɵɵnextContext().$implicit;\n    const ctx_r79 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r78.processorsByName[ctx_r79.currentProcessorName].locked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r78.processorsByName[ctx_r79.currentProcessorName].locked && notification_r78.processorsByName[ctx_r79.currentProcessorName].enabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r78.processorsByName[ctx_r79.currentProcessorName].locked && !notification_r78.processorsByName[ctx_r79.currentProcessorName].enabled);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.settings.disabled\"));\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item\", 13)(2, \"ion-label\")(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_Template, 4, 3, \"div\", 42);\n    i0.ɵɵtemplate(6, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_span_6_Template, 3, 3, \"span\", 43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r78 = ctx.$implicit;\n    const preferences_r74 = i0.ɵɵnextContext(2).preferences;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(notification_r78.displayname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", preferences_r74.enableall);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !preferences_r74.enableall);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 23);\n    i0.ɵɵelementStart(1, \"ion-item-divider\", 13)(2, \"ion-label\")(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(5, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_Template, 7, 3, \"ng-container\", 27);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const component_r76 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(component_r76.displayname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", component_r76.notifications);\n  }\n}\nfunction AddonNotificationsSettingsPage_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AddonNotificationsSettingsPage_ng_template_27_ng_container_0_Template, 6, 2, \"ng-container\", 22);\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.components);\n  }\n}\n/**\n * Page that displays notifications settings.\n */\nexport class AddonNotificationsSettingsPage {\n  constructor() {\n    this.currentProcessorName = 'airnotifier';\n    this.preferencesLoaded = false;\n    this.notificationSound = false;\n    this.processorHandlers = [];\n    this.loggedInOffLegacyMode = false;\n    this.canChangeSound = CoreLocalNotifications.canDisableSound();\n    const currentSite = CoreSites.getRequiredCurrentSite();\n    this.loggedInOffLegacyMode = !currentSite.isVersionGreaterEqualThan('4.0');\n    this.logView = CoreTime.once( /*#__PURE__*/_asyncToGenerator(function* () {\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'core_message_get_user_notification_preferences',\n        name: Translate.instant('addon.notifications.notificationpreferences'),\n        data: {\n          category: 'notifications'\n        },\n        url: '/message/notificationpreferences.php'\n      });\n    }));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.canChangeSound) {\n        _this.notificationSound = yield CoreConfig.get(CoreConstants.SETTINGS_NOTIFICATION_SOUND, true);\n      }\n      _this.fetchPreferences();\n    })();\n  }\n  /**\n   * Fetches preferences data.\n   *\n   * @returns Resolved when done.\n   */\n  fetchPreferences() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const preferences = yield AddonNotifications.getNotificationPreferences();\n        // Initialize current processor. Load \"Mobile\" (airnotifier) if available.\n        let currentProcessor = preferences.processors.find(processor => processor.name == _this2.currentProcessorName);\n        if (!currentProcessor) {\n          currentProcessor = preferences.processors[0];\n        }\n        if (!currentProcessor) {\n          // Shouldn't happen.\n          throw new CoreError('No processor found');\n        }\n        preferences.enableall = !preferences.disableall;\n        _this2.preferences = AddonNotificationsHelper.formatPreferences(preferences);\n        _this2.loadProcessor(currentProcessor);\n        _this2.logView();\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n      } finally {\n        _this2.preferencesLoaded = true;\n      }\n    })();\n  }\n  /**\n   * Load a processor.\n   *\n   * @param processor Processor object.\n   */\n  loadProcessor(processor) {\n    var _this$preferences;\n    if (!processor) {\n      return;\n    }\n    this.currentProcessorName = processor.name;\n    this.processorHandlers = [];\n    this.components = AddonNotificationsHelper.getProcessorComponents(processor.name, ((_this$preferences = this.preferences) === null || _this$preferences === void 0 ? void 0 : _this$preferences.components) || []);\n    if (!processor.hassettings || !processor.supported) {\n      return;\n    }\n    const handlerData = AddonMessageOutputDelegate.getDisplayData(processor);\n    if (handlerData) {\n      this.processorHandlers.push(handlerData);\n    }\n  }\n  /**\n   * Update preferences after a certain time. The purpose is to store the updated data, it won't be reflected in the view.\n   */\n  updatePreferencesAfterDelay() {\n    // Cancel pending updates.\n    clearTimeout(this.updateTimeout);\n    this.updateTimeout = window.setTimeout(() => {\n      this.updateTimeout = undefined;\n      this.updatePreferences();\n    }, 5000);\n  }\n  /**\n   * Update preferences. The purpose is to store the updated data, it won't be reflected in the view.\n   *\n   * @returns Promise resolved when done.\n   */\n  updatePreferences() {\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(AddonNotifications.invalidateNotificationPreferences());\n      yield AddonNotifications.getNotificationPreferences();\n    })();\n  }\n  /**\n   * The selected processor was changed.\n   *\n   * @param name Name of the selected processor.\n   */\n  changeProcessor(name) {\n    var _this$preferences2;\n    const processor = (_this$preferences2 = this.preferences) === null || _this$preferences2 === void 0 ? void 0 : _this$preferences2.processors.find(processor => processor.name == name);\n    if (processor) {\n      this.loadProcessor(processor);\n    }\n  }\n  /**\n   * Refresh the list of preferences.\n   *\n   * @param refresher Refresher.\n   */\n  refreshPreferences(refresher) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield CoreUtils.ignoreErrors(AddonNotifications.invalidateNotificationPreferences());\n        yield _this3.fetchPreferences();\n      } finally {\n        refresher === null || refresher === void 0 || refresher.complete();\n      }\n    })();\n  }\n  /**\n   * Open extra preferences.\n   *\n   * @param handlerData The handler data to open.\n   */\n  openExtraPreferences(handlerData) {\n    CoreNavigator.navigateToSitePath(handlerData.page, {\n      params: handlerData.pageParams\n    });\n  }\n  /**\n   * Change the value of a certain preference.\n   *\n   * @param notification Notification object.\n   * @param state State name, ['loggedin', 'loggedoff'].\n   * @returns Promise resolved when done.\n   */\n  changePreferenceLegacy(notification, state) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _notification$process;\n      const processor = (_notification$process = notification.processorsByName) === null || _notification$process === void 0 ? void 0 : _notification$process[_this4.currentProcessorName];\n      if (!processor) {\n        return;\n      }\n      const processorState = processor[state];\n      const preferenceName = notification.preferencekey + '_' + processorState.name;\n      let value = notification.processors.filter(processor => processor[state].checked).map(processor => processor.name).join(',');\n      if (value == '') {\n        value = 'none';\n      }\n      processorState.updating = true;\n      try {\n        yield CoreUser.updateUserPreference(preferenceName, value);\n        // Update the preferences since they were modified.\n        _this4.updatePreferencesAfterDelay();\n      } catch (error) {\n        // Show error and revert change.\n        CoreDomUtils.showErrorModal(error);\n        processor[state].checked = !processor[state].checked;\n      } finally {\n        processorState.updating = false;\n      }\n    })();\n  }\n  /**\n   * Change the value of a certain preference.\n   *\n   * @param notification Notification object.\n   * @returns Promise resolved when done.\n   */\n  changePreference(notification) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      var _notification$process2;\n      const processor = (_notification$process2 = notification.processorsByName) === null || _notification$process2 === void 0 ? void 0 : _notification$process2[_this5.currentProcessorName];\n      if (!processor) {\n        return;\n      }\n      const preferenceName = notification.preferencekey + '_enabled';\n      let value = notification.processors.filter(processor => processor.enabled).map(processor => processor.name).join(',');\n      if (value == '') {\n        value = 'none';\n      }\n      processor.updating = true;\n      try {\n        yield CoreUser.updateUserPreference(preferenceName, value);\n        // Update the preferences since they were modified.\n        _this5.updatePreferencesAfterDelay();\n      } catch (error) {\n        // Show error and revert change.\n        CoreDomUtils.showErrorModal(error);\n        processor.enabled = !processor.enabled;\n      } finally {\n        processor.updating = false;\n      }\n    })();\n  }\n  /**\n   * Enable all notifications changed.\n   *\n   * @param enable Whether to enable or disable.\n   * @returns Promise resolved when done.\n   */\n  enableAll(enable) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this6.preferences) {\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        CoreUser.updateUserPreferences([], !enable);\n        // Update the preferences since they were modified.\n        _this6.updatePreferencesAfterDelay();\n      } catch (error) {\n        // Show error and revert change.\n        CoreDomUtils.showErrorModal(error);\n        _this6.preferences.enableall = !_this6.preferences.enableall;\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Change the notification sound setting.\n   *\n   * @param enabled True to enable the notification sound, false to disable it.\n   */\n  changeNotificationSound(enabled) {\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(CoreConfig.set(CoreConstants.SETTINGS_NOTIFICATION_SOUND, enabled ? 1 : 0));\n      const siteId = CoreSites.getCurrentSiteId();\n      CoreEvents.trigger(CoreEvents.NOTIFICATION_SOUND_CHANGED, {\n        enabled\n      }, siteId);\n      CoreLocalNotifications.rescheduleAll();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    // If there is a pending action to update preferences, execute it right now.\n    if (this.updateTimeout) {\n      clearTimeout(this.updateTimeout);\n      this.updatePreferences();\n    }\n  }\n}\n_class = AddonNotificationsSettingsPage;\n_class.ɵfac = function AddonNotificationsSettingsPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-notifications-settings\"]],\n  decls: 29,\n  vars: 17,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [3, \"priority\", \"content\", \"iconAction\", \"action\", 4, \"ngFor\", \"ngForOf\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap only-links\", \"lines\", \"none\", 3, \"button\", 4, \"ngIf\"], [4, \"ngIf\"], [\"legacySettings\", \"\"], [\"settings\", \"\"], [3, \"priority\", \"content\", \"iconAction\", \"action\"], [1, \"ion-text-wrap\"], [1, \"item-heading\"], [\"slot\", \"end\", 3, \"ngModel\", \"ngModelChange\"], [\"lines\", \"none\", 1, \"ion-text-wrap\", \"only-links\", 3, \"button\"], [1, \"addon-notification-type-form\"], [\"interface\", \"popover\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"class\", \"ion-text-wrap\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\", 3, \"value\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"ion-margin-top\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-margin-top\"], [1, \"ion-no-padding\"], [1, \"ion-text-wrap\", \"divider\"], [\"size\", \"2\", 1, \"ion-text-center\", \"ion-no-padding\", \"ion-hide-md-down\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\", \"ion-hide-md-down\", \"addon-notifications-table-content\", \"only-links\"], [1, \"ion-no-padding\", \"ion-align-items-center\"], [1, \"ion-margin-horizontal\", \"ion-no-padding\"], [\"size\", \"2\", \"class\", \"ion-text-center ion-no-padding\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\", \"ion-no-margin\", \"ion-hide-md-up\"], [\"class\", \"ion-text-wrap ion-hide-md-up\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"2\", 1, \"ion-text-center\", \"ion-no-padding\"], [\"class\", \"text-gray\", 4, \"ngIf\"], [3, \"loading\", 4, \"ngIf\"], [3, \"loading\"], [3, \"ngModel\", \"ngModelChange\"], [1, \"text-gray\"], [1, \"ion-text-wrap\", \"ion-hide-md-up\"], [1, \"ion-margin-horizontal\"], [\"slot\", \"end\", 4, \"ngIf\"], [\"class\", \"text-gray\", \"slot\", \"end\", 4, \"ngIf\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"slot\", \"end\", 1, \"text-gray\"]],\n  template: function AddonNotificationsSettingsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"ion-buttons\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"core-navbar-buttons\", 2)(11, \"core-context-menu\");\n      i0.ɵɵtemplate(12, AddonNotificationsSettingsPage_core_context_menu_item_12_Template, 2, 5, \"core-context-menu-item\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-content\")(14, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonNotificationsSettingsPage_Template_ion_refresher_ionRefresh_14_listener($event) {\n        return ctx.refreshPreferences($event.target);\n      });\n      i0.ɵɵelement(15, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(16, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"core-loading\", 6)(18, \"ion-card\");\n      i0.ɵɵtemplate(19, AddonNotificationsSettingsPage_ion_item_19_Template, 6, 4, \"ion-item\", 7);\n      i0.ɵɵtemplate(20, AddonNotificationsSettingsPage_ion_item_20_Template, 6, 4, \"ion-item\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"ion-card\");\n      i0.ɵɵtemplate(22, AddonNotificationsSettingsPage_ion_item_22_Template, 7, 6, \"ion-item\", 8);\n      i0.ɵɵtemplate(23, AddonNotificationsSettingsPage_ng_container_23_Template, 2, 4, \"ng-container\", 9);\n      i0.ɵɵtemplate(24, AddonNotificationsSettingsPage_ng_container_24_Template, 2, 4, \"ng-container\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(25, AddonNotificationsSettingsPage_ng_template_25_Template, 1, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(27, AddonNotificationsSettingsPage_ng_template_27_Template, 1, 1, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 11, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 13, \"addon.notifications.notifications\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.processorHandlers);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.preferencesLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(16, 15, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.preferencesLoaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.preferences);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.canChangeSound);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.preferences == null ? null : ctx.preferences.processors == null ? null : ctx.preferences.processors.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loggedInOffLegacyMode);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loggedInOffLegacyMode);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i2.CoreButtonWithSpinnerComponent, i3.CoreContextMenuComponent, i4.CoreContextMenuItemComponent, i5.CoreLoadingComponent, i6.CoreNavBarButtonsComponent, i7.CoreContentDirective, i8.NgControlStatus, i8.NgModel, i9.IonButtons, i9.IonCard, i9.IonCardHeader, i9.IonCol, i9.IonContent, i9.IonHeader, i9.IonItem, i9.IonItemDivider, i9.IonLabel, i9.IonRefresher, i9.IonRefresherContent, i9.IonRow, i9.IonSelect, i9.IonSelectOption, i9.IonTitle, i9.IonToggle, i9.IonToolbar, i9.BooleanValueAccessor, i9.SelectValueAccessor, i9.IonBackButton, i10.TranslatePipe],\n  styles: [\".addon-notifications-table-content[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%] {\\n  min-height: 35px;\\n}\\n\\nion-item-divider[_ngcontent-%COMP%], ion-card-header[_ngcontent-%COMP%] {\\n  border-top: 1px solid var(--stroke);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvbm90aWZpY2F0aW9ucy9wYWdlcy9zZXR0aW5ncy9zZXR0aW5ncy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLG1DQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkb24tbm90aWZpY2F0aW9ucy10YWJsZS1jb250ZW50IGlvbi1yb3cge1xuICAgIG1pbi1oZWlnaHQ6IDM1cHg7XG59XG5cbmlvbi1pdGVtLWRpdmlkZXIsIGlvbi1jYXJkLWhlYWRlciB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLXN0cm9rZSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["CoreConfig","CoreLocalNotifications","CoreSites","CoreDomUtils","CoreUtils","CoreUser","AddonMessageOutputDelegate","CoreConstants","CoreError","CoreEvents","AddonNotifications","AddonNotificationsHelper","CoreNavigator","CoreTime","CoreAnalytics","CoreAnalyticsEventType","Translate","i0","ɵɵelementStart","ɵɵlistener","AddonNotificationsSettingsPage_core_context_menu_item_12_Template_core_context_menu_item_action_0_listener","restoredCtx","ɵɵrestoreView","_r12","handler_r10","$implicit","ctx_r11","ɵɵnextContext","ɵɵresetView","openExtraPreferences","ɵɵelementEnd","ɵɵproperty","priority","ɵɵpipeBind1","label","icon","ɵɵtext","AddonNotificationsSettingsPage_ion_item_19_Template_ion_toggle_ngModelChange_5_listener","$event","_r14","ctx_r13","preferences","enableall","ctx_r15","enableAll","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","AddonNotificationsSettingsPage_ion_item_20_Template_ion_toggle_ngModelChange_5_listener","_r17","ctx_r16","notificationSound","ctx_r18","changeNotificationSound","ctx_r2","processor_r20","name","ɵɵtextInterpolate1","displayname","AddonNotificationsSettingsPage_ion_item_22_Template_ion_select_ngModelChange_5_listener","_r22","ctx_r21","currentProcessorName","AddonNotificationsSettingsPage_ion_item_22_Template_ion_select_ionChange_5_listener","ctx_r23","changeProcessor","ɵɵtemplate","AddonNotificationsSettingsPage_ion_item_22_ion_select_option_6_Template","ctx_r3","processors","ɵɵelementContainer","ɵɵelementContainerStart","AddonNotificationsSettingsPage_ng_container_23_ng_container_1_Template","ɵɵelementContainerEnd","_r6","ɵɵpureFunction1","_c0","ctx_r4","AddonNotificationsSettingsPage_ng_container_24_ng_container_1_Template","_r8","ctx_r5","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_core_button_with_spinner_1_Template_ion_toggle_ngModelChange_1_listener","_r41","state_r33","notification_r30","ctx_r39","processorsByName","checked","ctx_r43","changePreferenceLegacy","ctx_r36","updating","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_core_button_with_spinner_1_Template","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_span_2_Template","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_span_3_Template","ctx_r34","locked","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_ng_container_1_Template","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_span_2_Template","preferences_r26","ctx_r31","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_ion_toggle_1_Template_ion_toggle_ngModelChange_0_listener","_r61","state_r52","ctx_r59","ctx_r63","ctx_r58","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_ion_toggle_1_Template","ctx_r55","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_core_button_with_spinner_1_Template","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_span_2_Template","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_span_3_Template","ctx_r53","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_div_5_Template","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_span_6_Template","ctx_r32","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_col_7_Template","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_ion_item_12_Template","ɵɵpureFunction0","_c1","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_ng_container_16_Template","component_r28","notifications","AddonNotificationsSettingsPage_ng_template_25_ng_container_0_Template","ctx_r7","components","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_ion_toggle_1_Template_ion_toggle_ngModelChange_0_listener","_r87","notification_r78","ctx_r85","enabled","ctx_r88","changePreference","ctx_r84","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_ion_toggle_1_Template","ctx_r81","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_core_button_with_spinner_1_Template","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_span_2_Template","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_span_3_Template","ctx_r79","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_div_5_Template","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_span_6_Template","preferences_r74","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_ng_container_5_Template","component_r76","AddonNotificationsSettingsPage_ng_template_27_ng_container_0_Template","ctx_r9","AddonNotificationsSettingsPage","constructor","preferencesLoaded","processorHandlers","loggedInOffLegacyMode","canChangeSound","canDisableSound","currentSite","getRequiredCurrentSite","isVersionGreaterEqualThan","logView","once","_asyncToGenerator","logEvent","type","VIEW_ITEM_LIST","ws","instant","data","category","url","ngOnInit","_this","get","SETTINGS_NOTIFICATION_SOUND","fetchPreferences","_this2","getNotificationPreferences","currentProcessor","find","processor","disableall","formatPreferences","loadProcessor","error","showErrorModal","_this$preferences","getProcessorComponents","hassettings","supported","handlerData","getDisplayData","push","updatePreferencesAfterDelay","clearTimeout","updateTimeout","window","setTimeout","undefined","updatePreferences","ignoreErrors","invalidateNotificationPreferences","_this$preferences2","refreshPreferences","refresher","_this3","complete","navigateToSitePath","page","params","pageParams","notification","state","_this4","_notification$process","processorState","preferenceName","preferencekey","value","filter","map","join","updateUserPreference","_this5","_notification$process2","enable","_this6","modal","showModalLoading","updateUserPreferences","dismiss","set","siteId","getCurrentSiteId","trigger","NOTIFICATION_SOUND_CHANGED","rescheduleAll","ngOnDestroy","selectors","decls","vars","consts","template","AddonNotificationsSettingsPage_Template","rf","ctx","ɵɵelement","AddonNotificationsSettingsPage_core_context_menu_item_12_Template","AddonNotificationsSettingsPage_Template_ion_refresher_ionRefresh_14_listener","target","AddonNotificationsSettingsPage_ion_item_19_Template","AddonNotificationsSettingsPage_ion_item_20_Template","AddonNotificationsSettingsPage_ion_item_22_Template","AddonNotificationsSettingsPage_ng_container_23_Template","AddonNotificationsSettingsPage_ng_container_24_Template","AddonNotificationsSettingsPage_ng_template_25_Template","ɵɵtemplateRefExtractor","AddonNotificationsSettingsPage_ng_template_27_Template","ɵɵpropertyInterpolate","length"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/notifications/pages/settings/settings.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/notifications/pages/settings/settings.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { CoreConfig } from '@services/config';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreUser } from '@features/user/services/user';\nimport { AddonMessageOutputDelegate, AddonMessageOutputHandlerData } from '@addons/messageoutput/services/messageoutput-delegate';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreEvents } from '@singletons/events';\nimport {\n    AddonNotifications,\n    AddonNotificationsPreferencesNotificationProcessorState,\n} from '../../services/notifications';\nimport {\n    AddonNotificationsHelper,\n    AddonNotificationsPreferencesComponentFormatted,\n    AddonNotificationsPreferencesFormatted,\n    AddonNotificationsPreferencesNotificationFormatted,\n    AddonNotificationsPreferencesProcessorFormatted,\n} from '@addons/notifications/services/notifications-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\n\n/**\n * Page that displays notifications settings.\n */\n@Component({\n    selector: 'page-addon-notifications-settings',\n    templateUrl: 'settings.html',\n    styleUrls: ['settings.scss'],\n})\nexport class AddonNotificationsSettingsPage implements OnInit, OnDestroy {\n\n    preferences?: AddonNotificationsPreferencesFormatted;\n    components?: AddonNotificationsPreferencesComponentFormatted[];\n    currentProcessorName = 'airnotifier';\n    preferencesLoaded = false;\n    notificationSound = false;\n    canChangeSound: boolean;\n    processorHandlers: AddonMessageOutputHandlerData[] = [];\n    loggedInOffLegacyMode = false;\n\n    protected updateTimeout?: number;\n    protected logView: () => void;\n\n    constructor() {\n        this.canChangeSound = CoreLocalNotifications.canDisableSound();\n\n        const currentSite = CoreSites.getRequiredCurrentSite();\n        this.loggedInOffLegacyMode = !currentSite.isVersionGreaterEqualThan('4.0');\n\n        this.logView = CoreTime.once(async () => {\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'core_message_get_user_notification_preferences',\n                name: Translate.instant('addon.notifications.notificationpreferences'),\n                data: { category: 'notifications' },\n                url: '/message/notificationpreferences.php',\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        if (this.canChangeSound) {\n            this.notificationSound = await CoreConfig.get<boolean>(CoreConstants.SETTINGS_NOTIFICATION_SOUND, true);\n        }\n\n        this.fetchPreferences();\n    }\n\n    /**\n     * Fetches preferences data.\n     *\n     * @returns Resolved when done.\n     */\n    protected async fetchPreferences(): Promise<void> {\n        try {\n            const preferences = await AddonNotifications.getNotificationPreferences();\n\n            // Initialize current processor. Load \"Mobile\" (airnotifier) if available.\n            let currentProcessor = preferences.processors.find((processor) => processor.name == this.currentProcessorName);\n            if (!currentProcessor) {\n                currentProcessor = preferences.processors[0];\n            }\n\n            if (!currentProcessor) {\n                // Shouldn't happen.\n                throw new CoreError('No processor found');\n            }\n\n            preferences.enableall = !preferences.disableall;\n            this.preferences = AddonNotificationsHelper.formatPreferences(preferences);\n            this.loadProcessor(currentProcessor);\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            this.preferencesLoaded = true;\n        }\n    }\n\n    /**\n     * Load a processor.\n     *\n     * @param processor Processor object.\n     */\n    protected loadProcessor(processor: AddonNotificationsPreferencesProcessorFormatted): void {\n        if (!processor) {\n            return;\n        }\n\n        this.currentProcessorName = processor.name;\n        this.processorHandlers = [];\n        this.components = AddonNotificationsHelper.getProcessorComponents(\n            processor.name,\n            this.preferences?.components || [],\n        );\n\n        if (!processor.hassettings || !processor.supported) {\n            return;\n        }\n\n        const handlerData = AddonMessageOutputDelegate.getDisplayData(processor);\n        if (handlerData) {\n            this.processorHandlers.push(handlerData);\n        }\n    }\n\n    /**\n     * Update preferences after a certain time. The purpose is to store the updated data, it won't be reflected in the view.\n     */\n    protected updatePreferencesAfterDelay(): void {\n        // Cancel pending updates.\n        clearTimeout(this.updateTimeout);\n\n        this.updateTimeout = window.setTimeout(() => {\n            this.updateTimeout = undefined;\n            this.updatePreferences();\n        }, 5000);\n    }\n\n    /**\n     * Update preferences. The purpose is to store the updated data, it won't be reflected in the view.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async updatePreferences(): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonNotifications.invalidateNotificationPreferences());\n\n        await AddonNotifications.getNotificationPreferences();\n    }\n\n    /**\n     * The selected processor was changed.\n     *\n     * @param name Name of the selected processor.\n     */\n    changeProcessor(name: string): void {\n        const processor = this.preferences?.processors.find((processor) => processor.name == name);\n\n        if (processor) {\n            this.loadProcessor(processor);\n        }\n    }\n\n    /**\n     * Refresh the list of preferences.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshPreferences(refresher?: HTMLIonRefresherElement): Promise<void> {\n        try {\n            await CoreUtils.ignoreErrors(AddonNotifications.invalidateNotificationPreferences());\n\n            await this.fetchPreferences();\n        } finally {\n            refresher?.complete();\n        }\n    }\n\n    /**\n     * Open extra preferences.\n     *\n     * @param handlerData The handler data to open.\n     */\n    openExtraPreferences(handlerData: AddonMessageOutputHandlerData): void {\n        CoreNavigator.navigateToSitePath(handlerData.page, { params: handlerData.pageParams });\n    }\n\n    /**\n     * Change the value of a certain preference.\n     *\n     * @param notification Notification object.\n     * @param state State name, ['loggedin', 'loggedoff'].\n     * @returns Promise resolved when done.\n     */\n    async changePreferenceLegacy(notification: AddonNotificationsPreferencesNotificationFormatted, state: string): Promise<void> {\n        const processor = notification.processorsByName?.[this.currentProcessorName];\n        if (!processor) {\n            return;\n        }\n\n        const processorState: ProcessorStateFormatted = processor[state];\n        const preferenceName = notification.preferencekey + '_' + processorState.name;\n\n        let value = notification.processors\n            .filter((processor) => processor[state].checked)\n            .map((processor) => processor.name)\n            .join(',');\n\n        if (value == '') {\n            value = 'none';\n        }\n\n        processorState.updating = true;\n\n        try {\n            await CoreUser.updateUserPreference(preferenceName, value);\n\n            // Update the preferences since they were modified.\n            this.updatePreferencesAfterDelay();\n        } catch (error) {\n            // Show error and revert change.\n            CoreDomUtils.showErrorModal(error);\n            processor[state].checked = !processor[state].checked;\n        } finally {\n            processorState.updating = false;\n        }\n    }\n\n    /**\n     * Change the value of a certain preference.\n     *\n     * @param notification Notification object.\n     * @returns Promise resolved when done.\n     */\n    async changePreference(notification: AddonNotificationsPreferencesNotificationFormatted): Promise<void> {\n        const processor = notification.processorsByName?.[this.currentProcessorName];\n        if (!processor) {\n            return;\n        }\n\n        const preferenceName = notification.preferencekey + '_enabled';\n\n        let value = notification.processors\n            .filter((processor) => processor.enabled)\n            .map((processor) => processor.name)\n            .join(',');\n\n        if (value == '') {\n            value = 'none';\n        }\n\n        processor.updating = true;\n\n        try {\n            await CoreUser.updateUserPreference(preferenceName, value);\n\n            // Update the preferences since they were modified.\n            this.updatePreferencesAfterDelay();\n        } catch (error) {\n            // Show error and revert change.\n            CoreDomUtils.showErrorModal(error);\n            processor.enabled = !processor.enabled;\n        } finally {\n            processor.updating = false;\n        }\n    }\n\n    /**\n     * Enable all notifications changed.\n     *\n     * @param enable Whether to enable or disable.\n     * @returns Promise resolved when done.\n     */\n    async enableAll(enable?: boolean): Promise<void> {\n        if (!this.preferences) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            CoreUser.updateUserPreferences([], !enable);\n\n            // Update the preferences since they were modified.\n            this.updatePreferencesAfterDelay();\n        } catch (error) {\n            // Show error and revert change.\n            CoreDomUtils.showErrorModal(error);\n            this.preferences.enableall = !this.preferences.enableall;\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Change the notification sound setting.\n     *\n     * @param enabled True to enable the notification sound, false to disable it.\n     */\n    async changeNotificationSound(enabled: boolean): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreConfig.set(CoreConstants.SETTINGS_NOTIFICATION_SOUND, enabled ? 1 : 0));\n\n        const siteId = CoreSites.getCurrentSiteId();\n        CoreEvents.trigger(CoreEvents.NOTIFICATION_SOUND_CHANGED, { enabled }, siteId);\n        CoreLocalNotifications.rescheduleAll();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        // If there is a pending action to update preferences, execute it right now.\n        if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n            this.updatePreferences();\n        }\n    }\n\n}\n\n/**\n * State in notification processor in notification preferences component with some calculated data.\n *\n * @deprecatedonmoodle since 4.0\n */\ntype ProcessorStateFormatted = AddonNotificationsPreferencesNotificationProcessorState & {\n    updating?: boolean; // Calculated in the app. Whether the state is being updated.\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.notifications.notifications' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\" />\n    </ion-toolbar>\n</ion-header>\n<core-navbar-buttons slot=\"end\">\n    <core-context-menu>\n        <core-context-menu-item *ngFor=\"let handler of processorHandlers\" [priority]=\"handler.priority\"\n            [content]=\"handler.label | translate\" (action)=\"openExtraPreferences(handler)\" [iconAction]=\"handler.icon\" />\n    </core-context-menu>\n</core-navbar-buttons>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!preferencesLoaded\" (ionRefresh)=\"refreshPreferences($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"preferencesLoaded\">\n        <ion-card>\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"preferences\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.notifications.allownotifications' | translate }}</p>\n                </ion-label>\n                <ion-toggle [(ngModel)]=\"preferences.enableall\" (ngModelChange)=\"enableAll(preferences.enableall)\" slot=\"end\" />\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"canChangeSound\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.notifications.playsound' | translate }}</p>\n                </ion-label>\n                <ion-toggle [(ngModel)]=\"notificationSound\" (ngModelChange)=\"changeNotificationSound(notificationSound)\" slot=\"end\" />\n            </ion-item>\n        </ion-card>\n\n        <ion-card>\n            <ion-item class=\"ion-text-wrap only-links\" *ngIf=\"preferences?.processors?.length\" lines=\"none\" [button]=\"false\">\n                <ion-label class=\"addon-notification-type-form\">\n                    <p class=\"item-heading\">{{ 'addon.notifications.typeofnotification' | translate }}</p>\n                </ion-label>\n                <!-- Show processor selector. -->\n                <ion-select [(ngModel)]=\"currentProcessorName\" (ionChange)=\"changeProcessor($event)\" interface=\"popover\">\n                    <ion-select-option class=\"ion-text-wrap\" *ngFor=\"let processor of preferences?.processors\" [value]=\"processor.name\">\n                        {{ processor.displayname }}\n                    </ion-select-option>\n                </ion-select>\n            </ion-item>\n\n            <ng-container *ngIf=\"loggedInOffLegacyMode\">\n                <ng-container *ngTemplateOutlet=\"legacySettings; context: {preferences: preferences}\" />\n            </ng-container>\n\n            <ng-container *ngIf=\"!loggedInOffLegacyMode\">\n                <ng-container *ngTemplateOutlet=\"settings; context: {preferences: preferences}\" />\n            </ng-container>\n        </ion-card>\n    </core-loading>\n\n</ion-content>\n\n\n<!-- 3.11 downwards version -->\n<ng-template #legacySettings let-preferences=\"preferences\">\n    <ng-container *ngFor=\"let component of components\" class=\"ion-margin-top\">\n        <ion-card-header class=\"ion-no-padding\">\n            <ion-item class=\"ion-text-wrap divider\">\n                <ion-label class=\"ion-text-wrap\">\n                    <ion-row class=\"ion-no-padding\">\n                        <ion-col class=\"ion-no-padding\">\n                            <p class=\"item-heading\">{{ component.displayname }}</p>\n                        </ion-col>\n                        <ion-col size=\"2\" class=\"ion-text-center ion-no-padding ion-hide-md-down\">\n                            <p>{{ 'core.settings.loggedin' | translate }}</p>\n                        </ion-col>\n                        <ion-col size=\"2\" class=\"ion-text-center ion-no-padding ion-hide-md-down\">\n                            <p>{{ 'core.settings.loggedoff' | translate }}</p>\n                        </ion-col>\n                    </ion-row>\n                </ion-label>\n            </ion-item>\n        </ion-card-header>\n        <ng-container *ngFor=\"let notification of component.notifications\">\n            <!-- Tablet view -->\n            <ion-item class=\"ion-text-wrap ion-hide-md-down addon-notifications-table-content only-links\">\n                <ion-label>\n                    <ion-row class=\"ion-no-padding ion-align-items-center\">\n                        <ion-col class=\"ion-margin-horizontal ion-no-padding\">\n                            <p class=\"item-heading\">{{ notification.displayname }}</p>\n                        </ion-col>\n                        <ion-col size=\"2\" class=\"ion-text-center ion-no-padding\" *ngFor=\"let state of ['loggedin', 'loggedoff']\">\n                            <ng-container *ngIf=\"preferences!.enableall && notification.processorsByName[currentProcessorName][state]\">\n                                <!-- If notifications enabled, show toggle. -->\n                                <core-button-with-spinner *ngIf=\"!notification.processorsByName[currentProcessorName].locked\"\n                                    [loading]=\"notification.processorsByName[currentProcessorName][state].updating\">\n                                    <ion-toggle [(ngModel)]=\"notification.processorsByName[currentProcessorName][state].checked\"\n                                        (ngModelChange)=\"changePreferenceLegacy(notification, state)\" />\n                                </core-button-with-spinner>\n                                <span class=\"text-gray\" *ngIf=\"notification.processorsByName[currentProcessorName].locked &&\n                                    notification.processorsByName[currentProcessorName][state].checked\">\n                                    {{'core.settings.forced' | translate }}\n                                </span>\n                                <span class=\"text-gray\" *ngIf=\"notification.processorsByName[currentProcessorName].locked &&\n                                    !notification.processorsByName[currentProcessorName][state].checked\">\n                                    {{'core.settings.disallowed' | translate }}\n                                </span>\n                            </ng-container>\n                            <!-- If notifications are disabled, show \"Disabled\" instead of toggle. -->\n                            <span *ngIf=\"!preferences!.enableall\" class=\"text-gray\">{{ 'core.settings.disabled' | translate }}</span>\n                        </ion-col>\n                    </ion-row>\n                </ion-label>\n            </ion-item>\n\n            <!-- Phone view -->\n            <ion-item class=\"ion-text-wrap ion-no-margin ion-hide-md-up\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ notification.displayname }}</p>\n                </ion-label>\n            </ion-item>\n            <!-- If notifications enabled, show toggles. If disabled, show \"Disabled\" instead of toggle. -->\n            <ion-item *ngFor=\"let state of ['loggedin', 'loggedoff']\" class=\"ion-text-wrap ion-hide-md-up\">\n                <ion-label class=\"ion-margin-horizontal\">\n                    <p>{{ 'core.settings.' + state | translate }}</p>\n                </ion-label>\n                <div slot=\"end\" *ngIf=\"preferences!.enableall && notification.processorsByName[currentProcessorName][state]\">\n                    <core-button-with-spinner *ngIf=\"!notification.processorsByName[currentProcessorName].locked\"\n                        [loading]=\"notification.processorsByName[currentProcessorName][state].updating\">\n                        <ion-toggle *ngIf=\"!notification.processorsByName[currentProcessorName].locked\"\n                            [(ngModel)]=\"notification.processorsByName[currentProcessorName][state].checked\"\n                            (ngModelChange)=\"changePreferenceLegacy(notification, state)\" />\n                    </core-button-with-spinner>\n                    <span class=\"text-gray\" *ngIf=\"notification.processorsByName[currentProcessorName].locked &&\n                        notification.processorsByName[currentProcessorName][state].checked\">\n                        {{'core.settings.forced' | translate }}\n                    </span>\n                    <span class=\"text-gray\" *ngIf=\"notification.processorsByName[currentProcessorName].locked &&\n                        !notification.processorsByName[currentProcessorName][state].checked\">\n                        {{'core.settings.disallowed' | translate }}\n                    </span>\n                </div>\n                <span class=\"text-gray\" slot=\"end\" *ngIf=\"!preferences!.enableall\">{{ 'core.settings.disabled' | translate }}</span>\n            </ion-item>\n        </ng-container>\n    </ng-container>\n</ng-template>\n\n<!-- 4.0 onwards version -->\n<ng-template #settings let-preferences=\"preferences\">\n    <ng-container *ngFor=\"let component of components\" class=\"ion-margin-top\">\n        <ion-item-divider class=\"ion-text-wrap\">\n            <ion-label>\n                <p class=\"item-heading\">{{ component.displayname }}</p>\n            </ion-label>\n        </ion-item-divider>\n        <ng-container *ngFor=\"let notification of component.notifications\">\n            <!-- If notifications enabled, show toggles. If disabled, show \"Disabled\" instead of toggle. -->\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <p>{{ notification.displayname }}</p>\n                </ion-label>\n\n                <div slot=\"end\" *ngIf=\"preferences!.enableall\">\n                    <core-button-with-spinner *ngIf=\"!notification.processorsByName[currentProcessorName].locked\"\n                        [loading]=\"notification.processorsByName[currentProcessorName].updating\">\n                        <ion-toggle *ngIf=\"!notification.processorsByName[currentProcessorName].locked\"\n                            [(ngModel)]=\"notification.processorsByName[currentProcessorName].enabled\"\n                            (ngModelChange)=\"changePreference(notification)\" />\n                    </core-button-with-spinner>\n                    <span class=\"text-gray\" *ngIf=\" notification.processorsByName[currentProcessorName].locked &&\n                        notification.processorsByName[currentProcessorName].enabled\">\n                        {{'core.settings.forced' | translate }}\n                    </span>\n                    <span class=\"text-gray\" *ngIf=\" notification.processorsByName[currentProcessorName].locked &&\n                        !notification.processorsByName[currentProcessorName].enabled\">\n                        {{'core.settings.disallowed' | translate }}\n                    </span>\n                </div>\n                <span class=\"text-gray\" slot=\"end\" *ngIf=\"!preferences!.enableall\">{{ 'core.settings.disabled' | translate }}</span>\n            </ion-item>\n        </ng-container>\n    </ng-container>\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}