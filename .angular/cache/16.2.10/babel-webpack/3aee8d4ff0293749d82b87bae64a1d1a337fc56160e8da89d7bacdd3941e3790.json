{"ast":null,"code":"var _class;\nimport { RouterModule } from '@angular/router';\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModGlossaryComponentsModule } from './components/components.module';\nimport { AddonModGlossaryIndexPage } from './pages/index/index';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst mobileRoutes = [{\n  path: ':courseId/:cmId',\n  component: AddonModGlossaryIndexPage\n}, {\n  path: ':courseId/:cmId/entry/:entrySlug',\n  loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule)\n}];\nconst tabletRoutes = [{\n  path: ':courseId/:cmId',\n  component: AddonModGlossaryIndexPage,\n  children: [{\n    path: 'entry/:entrySlug',\n    loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule)\n  }]\n}];\nconst routes = [{\n  path: ':courseId/:cmId/entry/new',\n  loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule)\n}, {\n  path: ':courseId/:cmId/entry/:entrySlug/edit',\n  loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule)\n}, ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile), ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet)];\nexport class AddonModGlossaryLazyModule {}\n_class = AddonModGlossaryLazyModule;\n_class.ɵfac = function AddonModGlossaryLazyModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forChild(routes), CoreSharedModule, AddonModGlossaryComponentsModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AddonModGlossaryLazyModule, {\n    declarations: [AddonModGlossaryIndexPage],\n    imports: [i1.RouterModule, CoreSharedModule, AddonModGlossaryComponentsModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","CoreSharedModule","AddonModGlossaryComponentsModule","AddonModGlossaryIndexPage","conditionalRoutes","CoreScreen","mobileRoutes","path","component","loadChildren","then","m","AddonModGlossaryEntryLazyModule","tabletRoutes","children","routes","AddonModGlossaryEditLazyModule","isMobile","isTablet","AddonModGlossaryLazyModule","forChild","declarations","imports","i1"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/glossary/glossary-lazy.module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModGlossaryComponentsModule } from './components/components.module';\nimport { AddonModGlossaryIndexPage } from './pages/index/index';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\n\nconst mobileRoutes: Routes = [\n    {\n        path: ':courseId/:cmId',\n        component: AddonModGlossaryIndexPage,\n    },\n    {\n        path: ':courseId/:cmId/entry/:entrySlug',\n        loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule),\n    },\n];\n\nconst tabletRoutes: Routes = [\n    {\n        path: ':courseId/:cmId',\n        component: AddonModGlossaryIndexPage,\n        children: [\n            {\n                path: 'entry/:entrySlug',\n                loadChildren: () => import('./glossary-entry-lazy.module').then(m => m.AddonModGlossaryEntryLazyModule),\n            },\n        ],\n    },\n];\n\nconst routes: Routes = [\n    {\n        path: ':courseId/:cmId/entry/new',\n        loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule),\n    },\n    {\n        path: ':courseId/:cmId/entry/:entrySlug/edit',\n        loadChildren: () => import('./glossary-edit-lazy.module').then(m => m.AddonModGlossaryEditLazyModule),\n    },\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        AddonModGlossaryComponentsModule,\n    ],\n    declarations: [\n        AddonModGlossaryIndexPage,\n    ],\n})\nexport class AddonModGlossaryLazyModule {}\n"],"mappings":";AAeA,SAASA,YAAY,QAAgB,iBAAiB;AAEtD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,gCAAgC,QAAQ,gCAAgC;AACjF,SAASC,yBAAyB,QAAQ,qBAAqB;AAC/D,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,UAAU,QAAQ,kBAAkB;;;AAE7C,MAAMC,YAAY,GAAW,CACzB;EACIC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEL;CACd,EACD;EACII,IAAI,EAAE,kCAAkC;EACxCE,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,+BAA+B;CACzG,CACJ;AAED,MAAMC,YAAY,GAAW,CACzB;EACIN,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEL,yBAAyB;EACpCW,QAAQ,EAAE,CACN;IACIP,IAAI,EAAE,kBAAkB;IACxBE,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,+BAA+B;GACzG;CAER,CACJ;AAED,MAAMG,MAAM,GAAW,CACnB;EACIR,IAAI,EAAE,2BAA2B;EACjCE,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,8BAA8B;CACvG,EACD;EACIT,IAAI,EAAE,uCAAuC;EAC7CE,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,8BAA8B;CACvG,EACD,GAAGZ,iBAAiB,CAACE,YAAY,EAAE,MAAMD,UAAU,CAACY,QAAQ,CAAC,EAC7D,GAAGb,iBAAiB,CAACS,YAAY,EAAE,MAAMR,UAAU,CAACa,QAAQ,CAAC,CAChE;AAYD,OAAM,MAAOC,0BAA0B;SAA1BA,0BAA0B;;mBAA1BA,MAA0B;AAAA;;QAA1BA;AAA0B;;YAR/BnB,YAAY,CAACoB,QAAQ,CAACL,MAAM,CAAC,EAC7Bd,gBAAgB,EAChBC,gCAAgC;AAAA;;2EAM3BiB,0BAA0B;IAAAE,YAAA,GAH/BlB,yBAAyB;IAAAmB,OAAA,GAAAC,EAAA,CAAAvB,YAAA,EAJzBC,gBAAgB,EAChBC,gCAAgC;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}