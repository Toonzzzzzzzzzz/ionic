{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreItemsManagerSource } from './items-manager-source';\n/**\n * Paginated items collection source data.\n */\nexport class CorePaginatedItemsManagerSource extends CoreItemsManagerSource {\n  constructor() {\n    super(...arguments);\n    this.hasMoreItems = true;\n  }\n  /**\n   * Check whether there are more pages to be loaded.\n   *\n   * @returns Whether there are more pages to be loaded.\n   */\n  isCompleted() {\n    return !this.hasMoreItems;\n  }\n  /**\n   * Check whether the source is empty or not.\n   *\n   * @returns Whether the source is empty.\n   */\n  isEmpty() {\n    var _this$getItems;\n    return !this.isLoaded() || ((_this$getItems = this.getItems()) !== null && _this$getItems !== void 0 ? _this$getItems : []).length === 0;\n  }\n  /**\n   * Get the count of pages that have been loaded.\n   *\n   * @returns Pages loaded.\n   */\n  getPagesLoaded() {\n    if (this.items === null) {\n      return 0;\n    }\n    const pageLength = this.getPageLength();\n    if (pageLength === null) {\n      return 1;\n    }\n    return Math.ceil(this.items.length / pageLength);\n  }\n  /**\n   * Reset collection data.\n   */\n  reset() {\n    this.hasMoreItems = true;\n    super.reset();\n  }\n  /**\n   * Reload the collection, this resets the data to the first page.\n   */\n  reload() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.dirty = true;\n      yield _this.load();\n    })();\n  }\n  /**\n   * Load more items, if any.\n   */\n  load() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _this2$items;\n      if (_this2.dirty) {\n        const {\n          items,\n          hasMoreItems\n        } = yield _this2.loadPageItems(0);\n        _this2.dirty = false;\n        _this2.setItems(items, hasMoreItems !== null && hasMoreItems !== void 0 ? hasMoreItems : false);\n        return;\n      }\n      if (!_this2.hasMoreItems) {\n        return;\n      }\n      const {\n        items,\n        hasMoreItems\n      } = yield _this2.loadPageItems(_this2.getPagesLoaded());\n      _this2.setItems(((_this2$items = _this2.items) !== null && _this2$items !== void 0 ? _this2$items : []).concat(items), hasMoreItems !== null && hasMoreItems !== void 0 ? hasMoreItems : false);\n    })();\n  }\n  /**\n   * Get the length of each page in the collection.\n   *\n   * @returns Page length; null for collections that don't support pagination.\n   */\n  getPageLength() {\n    return null;\n  }\n  /**\n   * Update the collection items.\n   *\n   * @param items Items.\n   * @param hasMoreItems Whether there are more pages to be loaded.\n   */\n  setItems(items, hasMoreItems = false) {\n    this.hasMoreItems = hasMoreItems;\n    super.setItems(items);\n  }\n}","map":{"version":3,"names":["CoreItemsManagerSource","CorePaginatedItemsManagerSource","constructor","hasMoreItems","isCompleted","isEmpty","_this$getItems","isLoaded","getItems","length","getPagesLoaded","items","pageLength","getPageLength","Math","ceil","reset","reload","_this","_asyncToGenerator","dirty","load","_this2","_this2$items","loadPageItems","setItems","concat"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/classes/items-management/paginated-items-manager-source.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreItemsManagerSource } from './items-manager-source';\n\n/**\n * Paginated items collection source data.\n */\nexport abstract class CorePaginatedItemsManagerSource<Item = unknown> extends CoreItemsManagerSource<Item> {\n\n    protected hasMoreItems = true;\n\n    /**\n     * Check whether there are more pages to be loaded.\n     *\n     * @returns Whether there are more pages to be loaded.\n     */\n    isCompleted(): boolean {\n        return !this.hasMoreItems;\n    }\n\n    /**\n     * Check whether the source is empty or not.\n     *\n     * @returns Whether the source is empty.\n     */\n    isEmpty(): boolean {\n        return !this.isLoaded() || (this.getItems() ?? []).length === 0;\n    }\n\n    /**\n     * Get the count of pages that have been loaded.\n     *\n     * @returns Pages loaded.\n     */\n    getPagesLoaded(): number {\n        if (this.items === null) {\n            return 0;\n        }\n\n        const pageLength = this.getPageLength();\n        if (pageLength === null) {\n            return 1;\n        }\n\n        return Math.ceil(this.items.length / pageLength);\n    }\n\n    /**\n     * Reset collection data.\n     */\n    reset(): void {\n        this.hasMoreItems = true;\n\n        super.reset();\n    }\n\n    /**\n     * Reload the collection, this resets the data to the first page.\n     */\n    async reload(): Promise<void> {\n        this.dirty = true;\n\n        await this.load();\n    }\n\n    /**\n     * Load more items, if any.\n     */\n    async load(): Promise<void> {\n        if (this.dirty) {\n            const { items, hasMoreItems } = await this.loadPageItems(0);\n\n            this.dirty = false;\n            this.setItems(items, hasMoreItems ?? false);\n\n            return;\n        }\n\n        if (!this.hasMoreItems) {\n            return;\n        }\n\n        const { items, hasMoreItems } = await this.loadPageItems(this.getPagesLoaded());\n\n        this.setItems((this.items ?? []).concat(items), hasMoreItems ?? false);\n    }\n\n    /**\n     * Load page items.\n     *\n     * @param page Page number (starting at 0).\n     * @returns Page items data.\n     */\n    protected abstract loadPageItems(page: number): Promise<{ items: Item[]; hasMoreItems?: boolean }>;\n\n    /**\n     * Get the length of each page in the collection.\n     *\n     * @returns Page length; null for collections that don't support pagination.\n     */\n    protected getPageLength(): number | null {\n        return null;\n    }\n\n    /**\n     * Update the collection items.\n     *\n     * @param items Items.\n     * @param hasMoreItems Whether there are more pages to be loaded.\n     */\n    protected setItems(items: Item[], hasMoreItems = false): void {\n        this.hasMoreItems = hasMoreItems;\n\n        super.setItems(items);\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,sBAAsB,QAAQ,wBAAwB;AAE/D;;;AAGA,OAAM,MAAgBC,+BAAgD,SAAQD,sBAA4B;EAA1GE,YAAA;;IAEc,KAAAC,YAAY,GAAG,IAAI;EA2GjC;EAzGI;;;;;EAKAC,WAAWA,CAAA;IACP,OAAO,CAAC,IAAI,CAACD,YAAY;EAC7B;EAEA;;;;;EAKAE,OAAOA,CAAA;IAAA,IAAAC,cAAA;IACH,OAAO,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,EAAAD,cAAA,GAAC,IAAI,CAACE,QAAQ,EAAE,cAAAF,cAAA,cAAAA,cAAA,GAAI,EAAE,EAAEG,MAAM,KAAK,CAAC;EACnE;EAEA;;;;;EAKAC,cAAcA,CAAA;IACV,IAAI,IAAI,CAACC,KAAK,KAAK,IAAI,EAAE;MACrB,OAAO,CAAC;;IAGZ,MAAMC,UAAU,GAAG,IAAI,CAACC,aAAa,EAAE;IACvC,IAAID,UAAU,KAAK,IAAI,EAAE;MACrB,OAAO,CAAC;;IAGZ,OAAOE,IAAI,CAACC,IAAI,CAAC,IAAI,CAACJ,KAAK,CAACF,MAAM,GAAGG,UAAU,CAAC;EACpD;EAEA;;;EAGAI,KAAKA,CAAA;IACD,IAAI,CAACb,YAAY,GAAG,IAAI;IAExB,KAAK,CAACa,KAAK,EAAE;EACjB;EAEA;;;EAGMC,MAAMA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACRD,KAAI,CAACE,KAAK,GAAG,IAAI;MAEjB,MAAMF,KAAI,CAACG,IAAI,EAAE;IAAC;EACtB;EAEA;;;EAGMA,IAAIA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAH,iBAAA;MAAA,IAAAI,YAAA;MACN,IAAID,MAAI,CAACF,KAAK,EAAE;QACZ,MAAM;UAAET,KAAK;UAAER;QAAY,CAAE,SAASmB,MAAI,CAACE,aAAa,CAAC,CAAC,CAAC;QAE3DF,MAAI,CAACF,KAAK,GAAG,KAAK;QAClBE,MAAI,CAACG,QAAQ,CAACd,KAAK,EAAER,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,KAAK,CAAC;QAE3C;;MAGJ,IAAI,CAACmB,MAAI,CAACnB,YAAY,EAAE;QACpB;;MAGJ,MAAM;QAAEQ,KAAK;QAAER;MAAY,CAAE,SAASmB,MAAI,CAACE,aAAa,CAACF,MAAI,CAACZ,cAAc,EAAE,CAAC;MAE/EY,MAAI,CAACG,QAAQ,CAAC,EAAAF,YAAA,GAACD,MAAI,CAACX,KAAK,cAAAY,YAAA,cAAAA,YAAA,GAAI,EAAE,EAAEG,MAAM,CAACf,KAAK,CAAC,EAAER,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,KAAK,CAAC;IAAC;EAC3E;EAUA;;;;;EAKUU,aAAaA,CAAA;IACnB,OAAO,IAAI;EACf;EAEA;;;;;;EAMUY,QAAQA,CAACd,KAAa,EAAER,YAAY,GAAG,KAAK;IAClD,IAAI,CAACA,YAAY,GAAGA,YAAY;IAEhC,KAAK,CAACsB,QAAQ,CAACd,KAAK,CAAC;EACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}