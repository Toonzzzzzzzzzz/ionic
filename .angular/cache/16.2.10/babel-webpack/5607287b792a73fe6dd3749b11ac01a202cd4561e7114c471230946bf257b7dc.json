{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreReminders, CoreRemindersService, CoreRemindersUnits } from '@features/reminders/services/reminders';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { PopoverController } from '@singletons';\nimport { CoreRemindersSetReminderCustomComponent } from '../set-reminder-custom/set-reminder-custom';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../directives/fa-icon\";\nimport * as i3 from \"../../../../directives/content\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@ngx-translate/core\";\nfunction CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_ion_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 6);\n  }\n}\nfunction CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 1);\n    i0.ɵɵlistener(\"click\", function CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_Template_ion_item_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const option_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.setReminder(option_r3.radioValue));\n    });\n    i0.ɵɵelementStart(1, \"ion-label\")(2, \"p\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_ion_icon_4_Template, 1, 0, \"ion-icon\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"detail\", false);\n    i0.ɵɵattribute(\"aria-selected\", ctx_r4.currentValue === option_r3.radioValue);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(option_r3.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.currentValue === option_r3.radioValue);\n  }\n}\nfunction CoreRemindersSetReminderMenuComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_Template, 5, 4, \"ion-item\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", option_r3.enabled);\n  }\n}\nfunction CoreRemindersSetReminderMenuComponent_ion_icon_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 6);\n  }\n}\nfunction CoreRemindersSetReminderMenuComponent_ion_item_17_ion_icon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 6);\n  }\n}\nfunction CoreRemindersSetReminderMenuComponent_ion_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 7);\n    i0.ɵɵlistener(\"click\", function CoreRemindersSetReminderMenuComponent_ion_item_17_Template_ion_item_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.disableReminder());\n    });\n    i0.ɵɵelementStart(1, \"ion-label\")(2, \"p\", 2);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, CoreRemindersSetReminderMenuComponent_ion_item_17_ion_icon_5_Template, 1, 0, \"ion-icon\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"detail\", false);\n    i0.ɵɵattribute(\"aria-selected\", ctx_r2.currentValue === \"disabled\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, ctx_r2.noReminderLabel));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentValue === \"disabled\");\n  }\n}\n/**\n * This component is meant to display a popover with the reminder options.\n */\nexport class CoreRemindersSetReminderMenuComponent {\n  constructor() {\n    this.noReminderLabel = '';\n    this.currentValue = '0m';\n    this.customLabel = '';\n    this.customValue = 10;\n    this.customUnits = CoreRemindersUnits.MINUTE;\n    this.presetOptions = [{\n      radioValue: '0m',\n      value: 0,\n      unit: CoreRemindersUnits.MINUTE,\n      label: '',\n      enabled: true\n    }, {\n      radioValue: '1h',\n      value: 1,\n      unit: CoreRemindersUnits.HOUR,\n      label: '',\n      enabled: true\n    }, {\n      radioValue: '12h',\n      value: 12,\n      unit: CoreRemindersUnits.HOUR,\n      label: '',\n      enabled: true\n    }, {\n      radioValue: '1d',\n      value: 1,\n      unit: CoreRemindersUnits.DAY,\n      label: '',\n      enabled: true\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.presetOptions.forEach(option => {\n        option.label = CoreReminders.getUnitValueLabel(option.value, option.unit);\n        option.enabled = _this.isValidTime(option.unit, option.value);\n      });\n      const initialValue = CoreRemindersService.convertSecondsToValueAndUnit(_this.initialValue);\n      if (initialValue.value === CoreRemindersService.DISABLED) {\n        _this.currentValue = 'disabled';\n        return;\n      }\n      // Search if it's one of the preset options.\n      const option = _this.presetOptions.find(option => option.value === (initialValue === null || initialValue === void 0 ? void 0 : initialValue.value) && option.unit === initialValue.unit);\n      if (option) {\n        _this.currentValue = option.radioValue;\n      } else {\n        // It's a custom value.\n        _this.currentValue = 'custom';\n        _this.customValue = initialValue.value;\n        _this.customUnits = initialValue.unit;\n        _this.customLabel = CoreReminders.getUnitValueLabel(_this.customValue, _this.customUnits);\n      }\n    })();\n  }\n  /**\n   * Set the reminder.\n   *\n   * @param value Value to set.\n   */\n  setReminder(value) {\n    const option = this.presetOptions.find(option => option.radioValue === value);\n    if (!option) {\n      PopoverController.dismiss();\n      return;\n    }\n    PopoverController.dismiss({\n      timeBefore: option.unit * option.value\n    });\n  }\n  /**\n   * Disable the reminder.\n   */\n  disableReminder() {\n    PopoverController.dismiss({\n      timeBefore: undefined\n    });\n  }\n  /**\n   * Check the time is on the future.\n   *\n   * @param unit Time unit.\n   * @param value Time value.\n   * @returns Wether is a valid time or not.\n   */\n  isValidTime(unit, value) {\n    if (!this.eventTime) {\n      return true;\n    }\n    const timebefore = unit * value;\n    return (this.eventTime - timebefore) * 1000 > Date.now();\n  }\n  /**\n   * Custom value input clicked.\n   *\n   * @param ev Click event.\n   */\n  setCustom(ev) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      ev.stopPropagation();\n      ev.preventDefault();\n      const reminderTime = yield CoreDomUtils.openPopover({\n        component: CoreRemindersSetReminderCustomComponent,\n        componentProps: {\n          customValue: _this2.customValue,\n          customUnits: _this2.customUnits\n        },\n        waitForDismissCompleted: true // To be able to close parent popup.\n      });\n\n      if (reminderTime === undefined) {\n        // User canceled.\n        return;\n      }\n      _this2.currentValue = 'custom';\n      _this2.customValue = reminderTime.value;\n      _this2.customUnits = reminderTime.unit;\n      _this2.customLabel = CoreReminders.getUnitValueLabel(_this2.customValue, _this2.customUnits);\n      // Let the dimissed popover to be removed.\n      yield CoreUtils.nextTick();\n      PopoverController.dismiss({\n        timeBefore: Math.abs(_this2.customValue) * _this2.customUnits\n      });\n    })();\n  }\n}\n_class = CoreRemindersSetReminderMenuComponent;\n_class.ɵfac = function CoreRemindersSetReminderMenuComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    initialValue: \"initialValue\",\n    eventTime: \"eventTime\",\n    noReminderLabel: \"noReminderLabel\"\n  },\n  decls: 18,\n  vars: 12,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", 1, \"ion-text-wrap\", 3, \"detail\", \"click\"], [1, \"item-heading\"], [\"name\", \"fas-check\", \"slot\", \"end\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"button\", \"\", \"class\", \"ion-text-wrap text-danger border-top\", 3, \"detail\", \"click\", 4, \"ngIf\"], [\"button\", \"\", \"class\", \"ion-text-wrap\", 3, \"detail\", \"click\", 4, \"ngIf\"], [\"name\", \"fas-check\", \"slot\", \"end\", \"aria-hidden\", \"true\"], [\"button\", \"\", 1, \"ion-text-wrap\", \"text-danger\", \"border-top\", 3, \"detail\", \"click\"]],\n  template: function CoreRemindersSetReminderMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\")(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-content\");\n      i0.ɵɵtemplate(8, CoreRemindersSetReminderMenuComponent_ng_container_8_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵelementStart(9, \"ion-item\", 1);\n      i0.ɵɵlistener(\"click\", function CoreRemindersSetReminderMenuComponent_Template_ion_item_click_9_listener($event) {\n        return ctx.setCustom($event);\n      });\n      i0.ɵɵelementStart(10, \"ion-label\")(11, \"p\", 2);\n      i0.ɵɵtext(12);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, CoreRemindersSetReminderMenuComponent_ion_icon_16_Template, 1, 0, \"ion-icon\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, CoreRemindersSetReminderMenuComponent_ion_item_17_Template, 6, 6, \"ion-item\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 8, \"core.reminders.setareminder\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.presetOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"detail\", false);\n      i0.ɵɵattribute(\"aria-selected\", ctx.currentValue === \"custom\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 10, \"core.reminders.custom\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.customLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentValue === \"custom\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.noReminderLabel);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreFaIconDirective, i3.CoreContentDirective, i4.IonContent, i4.IonHeader, i4.IonIcon, i4.IonItem, i4.IonLabel, i4.IonTitle, i4.IonToolbar, i5.TranslatePipe],\n  styles: [\"ion-item.border-top[_ngcontent-%COMP%] {\\n  border-top: 1px solid var(--stroke);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL3JlbWluZGVycy9jb21wb25lbnRzL3NldC1yZW1pbmRlci1tZW51L3NldC1yZW1pbmRlci1tZW51LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQ0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWl0ZW0uYm9yZGVyLXRvcCB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLXN0cm9rZSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["CoreReminders","CoreRemindersService","CoreRemindersUnits","CoreDomUtils","CoreUtils","PopoverController","CoreRemindersSetReminderCustomComponent","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_Template_ion_item_click_0_listener","ɵɵrestoreView","_r8","option_r3","ɵɵnextContext","$implicit","ctx_r6","ɵɵresetView","setReminder","radioValue","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_ion_icon_4_Template","ɵɵproperty","ɵɵattribute","ctx_r4","currentValue","ɵɵadvance","ɵɵtextInterpolate","label","ɵɵelementContainerStart","CoreRemindersSetReminderMenuComponent_ng_container_8_ion_item_1_Template","ɵɵelementContainerEnd","enabled","CoreRemindersSetReminderMenuComponent_ion_item_17_Template_ion_item_click_0_listener","_r12","ctx_r11","disableReminder","CoreRemindersSetReminderMenuComponent_ion_item_17_ion_icon_5_Template","ctx_r2","ɵɵpipeBind1","noReminderLabel","CoreRemindersSetReminderMenuComponent","constructor","customLabel","customValue","customUnits","MINUTE","presetOptions","value","unit","HOUR","DAY","ngOnInit","_this","_asyncToGenerator","forEach","option","getUnitValueLabel","isValidTime","initialValue","convertSecondsToValueAndUnit","DISABLED","find","dismiss","timeBefore","undefined","eventTime","timebefore","Date","now","setCustom","ev","_this2","stopPropagation","preventDefault","reminderTime","openPopover","component","componentProps","waitForDismissCompleted","nextTick","Math","abs","selectors","inputs","decls","vars","consts","template","CoreRemindersSetReminderMenuComponent_Template","rf","ctx","CoreRemindersSetReminderMenuComponent_ng_container_8_Template","CoreRemindersSetReminderMenuComponent_Template_ion_item_click_9_listener","$event","CoreRemindersSetReminderMenuComponent_ion_icon_16_Template","CoreRemindersSetReminderMenuComponent_ion_item_17_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/reminders/components/set-reminder-menu/set-reminder-menu.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/reminders/components/set-reminder-menu/set-reminder-menu.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport {\n    CoreReminders,\n    CoreRemindersService,\n    CoreRemindersUnits,\n    CoreReminderValueAndUnit,\n} from '@features/reminders/services/reminders';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { PopoverController } from '@singletons';\nimport { CoreRemindersSetReminderCustomComponent } from '../set-reminder-custom/set-reminder-custom';\n\n/**\n * This component is meant to display a popover with the reminder options.\n */\n@Component({\n    templateUrl: 'set-reminder-menu.html',\n    styleUrls: ['set-reminder-menu.scss'],\n})\nexport class CoreRemindersSetReminderMenuComponent implements OnInit {\n\n    @Input() initialValue?: number;\n    @Input() eventTime?: number;\n    @Input() noReminderLabel = '';\n\n    currentValue = '0m';\n    customLabel = '';\n\n    protected customValue = 10;\n    protected customUnits = CoreRemindersUnits.MINUTE;\n\n    presetOptions = [\n        {\n            radioValue: '0m',\n            value: 0,\n            unit: CoreRemindersUnits.MINUTE,\n            label: '',\n            enabled: true,\n        },\n        {\n            radioValue: '1h',\n            value: 1,\n            unit: CoreRemindersUnits.HOUR,\n            label: '',\n            enabled: true,\n        },\n        {\n            radioValue: '12h',\n            value: 12,\n            unit: CoreRemindersUnits.HOUR,\n            label: '',\n            enabled: true,\n        },\n        {\n            radioValue: '1d',\n            value: 1,\n            unit: CoreRemindersUnits.DAY,\n            label: '',\n            enabled: true,\n        },\n    ];\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.presetOptions.forEach((option) => {\n            option.label = CoreReminders.getUnitValueLabel(option.value, option.unit);\n            option.enabled = this.isValidTime(option.unit, option.value);\n        });\n\n        const initialValue = CoreRemindersService.convertSecondsToValueAndUnit(this.initialValue);\n        if (initialValue.value === CoreRemindersService.DISABLED) {\n            this.currentValue = 'disabled';\n\n            return;\n        }\n\n        // Search if it's one of the preset options.\n        const option = this.presetOptions.find(option =>\n            option.value === initialValue?.value && option.unit === initialValue.unit);\n\n        if (option) {\n            this.currentValue = option.radioValue;\n        } else {\n            // It's a custom value.\n            this.currentValue = 'custom';\n            this.customValue = initialValue.value;\n            this.customUnits = initialValue.unit;\n            this.customLabel = CoreReminders.getUnitValueLabel(this.customValue, this.customUnits);\n        }\n    }\n\n    /**\n     * Set the reminder.\n     *\n     * @param value Value to set.\n     */\n    setReminder(value?: string): void {\n        const option = this.presetOptions.find(option => option.radioValue === value);\n\n        if (!option) {\n            PopoverController.dismiss();\n\n            return;\n        }\n\n        PopoverController.dismiss({ timeBefore: option.unit * option.value });\n    }\n\n    /**\n     * Disable the reminder.\n     */\n    disableReminder(): void {\n        PopoverController.dismiss({ timeBefore: undefined });\n    }\n\n    /**\n     * Check the time is on the future.\n     *\n     * @param unit Time unit.\n     * @param value Time value.\n     * @returns Wether is a valid time or not.\n     */\n    protected isValidTime(unit: number, value: number): boolean {\n        if (!this.eventTime) {\n            return true;\n        }\n\n        const timebefore = unit * value;\n\n        return (this.eventTime - timebefore) * 1000 > Date.now();\n    }\n\n    /**\n     * Custom value input clicked.\n     *\n     * @param ev Click event.\n     */\n    async setCustom(ev: Event): Promise<void> {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        const reminderTime = await CoreDomUtils.openPopover<CoreReminderValueAndUnit>({\n            component: CoreRemindersSetReminderCustomComponent,\n            componentProps: {\n                customValue: this.customValue,\n                customUnits: this.customUnits,\n            },\n            waitForDismissCompleted: true, // To be able to close parent popup.\n        });\n\n        if (reminderTime === undefined) {\n            // User canceled.\n            return;\n        }\n\n        this.currentValue = 'custom';\n        this.customValue = reminderTime.value;\n        this.customUnits = reminderTime.unit;\n        this.customLabel = CoreReminders.getUnitValueLabel(this.customValue, this.customUnits);\n\n        // Let the dimissed popover to be removed.\n        await CoreUtils.nextTick();\n\n        PopoverController.dismiss({ timeBefore: Math.abs(this.customValue) * this.customUnits });\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-title>\n            <h1>{{ 'core.reminders.setareminder' | translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-content>\n        <!-- Preset options. -->\n        <ng-container *ngFor=\"let option of presetOptions\">\n            <ion-item button class=\"ion-text-wrap\" (click)=\"setReminder(option.radioValue)\" [detail]=\"false\" *ngIf=\"option.enabled\"\n                [attr.aria-selected]=\"currentValue === option.radioValue\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ option.label }}</p>\n                </ion-label>\n                <ion-icon name=\"fas-check\" *ngIf=\"currentValue === option.radioValue\" slot=\"end\" aria-hidden=\"true\" />\n            </ion-item>\n        </ng-container>\n\n        <!-- Custom value. -->\n        <ion-item button class=\"ion-text-wrap\" (click)=\"setCustom($event)\" [detail]=\"false\"\n            [attr.aria-selected]=\"currentValue === 'custom'\">\n            <ion-label>\n                <p class=\"item-heading\">{{ 'core.reminders.custom' | translate }}</p>\n                <p>{{ customLabel }}</p>\n            </ion-label>\n            <ion-icon name=\"fas-check\" *ngIf=\"currentValue === 'custom'\" slot=\"end\" aria-hidden=\"true\" />\n        </ion-item>\n\n        <ion-item *ngIf=\"noReminderLabel\" button class=\"ion-text-wrap text-danger border-top\" (click)=\"disableReminder()\" [detail]=\"false\"\n            [attr.aria-selected]=\"currentValue === 'disabled'\">\n            <ion-label>\n                <p class=\"item-heading\">{{ noReminderLabel | translate }}</p>\n            </ion-label>\n            <ion-icon name=\"fas-check\" *ngIf=\"currentValue === 'disabled'\" slot=\"end\" aria-hidden=\"true\" />\n        </ion-item>\n\n    </ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}