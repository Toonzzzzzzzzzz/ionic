{"ast":null,"code":"var _class;\nimport { CoreBlockOnlyTitleComponent } from '@features/block/components/only-title-block/only-title-block';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { makeSingleton } from '@singletons';\nimport { ADDON_COMPETENCY_LEARNING_PLANS_PAGE } from '@addons/competency/competency.module';\nimport * as i0 from \"@angular/core\";\n/**\n * Block handler.\n */\nexport class AddonBlockLearningPlansHandlerService extends CoreBlockBaseHandler {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonBlockLearningPlans';\n    this.blockName = 'lp';\n  }\n  /**\n   * Returns the data needed to render the block.\n   *\n   * @returns Data or promise resolved with the data.\n   */\n  getDisplayData() {\n    return {\n      title: 'addon.block_learningplans.pluginname',\n      class: 'addon-block-learning-plans',\n      component: CoreBlockOnlyTitleComponent,\n      link: ADDON_COMPETENCY_LEARNING_PLANS_PAGE,\n      navOptions: {\n        preferCurrentTab: false\n      }\n    };\n  }\n}\n_class = AddonBlockLearningPlansHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonBlockLearningPlansHandlerService_BaseFactory;\n  return function AddonBlockLearningPlansHandlerService_Factory(t) {\n    return (ɵAddonBlockLearningPlansHandlerService_BaseFactory || (ɵAddonBlockLearningPlansHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonBlockLearningPlansHandler = makeSingleton(AddonBlockLearningPlansHandlerService);","map":{"version":3,"names":["CoreBlockOnlyTitleComponent","CoreBlockBaseHandler","makeSingleton","ADDON_COMPETENCY_LEARNING_PLANS_PAGE","AddonBlockLearningPlansHandlerService","constructor","name","blockName","getDisplayData","title","class","component","link","navOptions","preferCurrentTab","t","factory","ɵfac","providedIn","AddonBlockLearningPlansHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/learningplans/services/block-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreBlockHandlerData } from '@features/block/services/block-delegate';\nimport { CoreBlockOnlyTitleComponent } from '@features/block/components/only-title-block/only-title-block';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { makeSingleton } from '@singletons';\nimport { ADDON_COMPETENCY_LEARNING_PLANS_PAGE } from '@addons/competency/competency.module';\n\n/**\n * Block handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonBlockLearningPlansHandlerService extends CoreBlockBaseHandler {\n\n    name = 'AddonBlockLearningPlans';\n    blockName = 'lp';\n\n    /**\n     * Returns the data needed to render the block.\n     *\n     * @returns Data or promise resolved with the data.\n     */\n    getDisplayData(): CoreBlockHandlerData {\n        return {\n            title: 'addon.block_learningplans.pluginname',\n            class: 'addon-block-learning-plans',\n            component: CoreBlockOnlyTitleComponent,\n            link: ADDON_COMPETENCY_LEARNING_PLANS_PAGE,\n            navOptions: {\n                preferCurrentTab: false,\n            },\n        };\n    }\n\n}\n\nexport const AddonBlockLearningPlansHandler = makeSingleton(AddonBlockLearningPlansHandlerService);\n"],"mappings":";AAgBA,SAASA,2BAA2B,QAAQ,8DAA8D;AAC1G,SAASC,oBAAoB,QAAQ,4CAA4C;AACjF,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,oCAAoC,QAAQ,sCAAsC;;AAE3F;;;AAIA,OAAM,MAAOC,qCAAsC,SAAQH,oBAAoB;EAD/EI,YAAA;;IAGI,KAAAC,IAAI,GAAG,yBAAyB;IAChC,KAAAC,SAAS,GAAG,IAAI;;EAEhB;;;;;EAKAC,cAAcA,CAAA;IACV,OAAO;MACHC,KAAK,EAAE,sCAAsC;MAC7CC,KAAK,EAAE,4BAA4B;MACnCC,SAAS,EAAEX,2BAA2B;MACtCY,IAAI,EAAET,oCAAoC;MAC1CU,UAAU,EAAE;QACRC,gBAAgB,EAAE;;KAEzB;EACL;;SApBSV,qCAAsC;;;;iJAAtCA,MAAqC,IAAAW,CAAA,IAArCX,MAAqC;EAAA;AAAA;;SAArCA,MAAqC;EAAAY,OAAA,EAArCZ,MAAqC,CAAAa,IAAA;EAAAC,UAAA,EADxB;AAAM;AAyBhC,OAAO,MAAMC,8BAA8B,GAAGjB,aAAa,CAACE,qCAAqC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}