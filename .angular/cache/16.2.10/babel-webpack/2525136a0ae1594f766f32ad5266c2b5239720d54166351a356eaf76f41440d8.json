{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { makeSingleton } from '@singletons';\nimport { AddonModDataModuleHandlerService } from './module';\nimport * as i0 from \"@angular/core\";\n/**\n * Content links handler for database show entry.\n * Match mod/data/view.php?d=6&rid=5 with a valid data id and entryid.\n */\nexport class AddonModDataShowLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModDataShowLinkHandler';\n    this.featureName = 'CoreCourseModuleDelegate_AddonModData';\n    this.pattern = /\\/mod\\/data\\/view\\.php.*([?&](d|rid|page|group|mode)=\\d+)/;\n    this.priority = 50; // Higher priority than the default link handler for view.php.\n  }\n  /**\n   * @inheritdoc\n   */\n  getActions(siteIds, url, params) {\n    return [{\n      action: function () {\n        var _ref = _asyncToGenerator(function* (siteId) {\n          const modal = yield CoreDomUtils.showModalLoading();\n          const dataId = parseInt(params.d, 10);\n          const rId = params.rid || '';\n          const group = parseInt(params.group, 10) || false;\n          const page = parseInt(params.page, 10) || false;\n          try {\n            const module = yield CoreCourse.getModuleBasicInfoByInstance(dataId, 'data', {\n              siteId,\n              readingStrategy: 1 /* CoreSitesReadingStrategy.PREFER_CACHE */\n            });\n            const pageParams = {\n              title: module.name\n            };\n            if (group) {\n              pageParams.group = group;\n            }\n            if (params.mode && params.mode == 'single') {\n              pageParams.offset = page || 0;\n            }\n            CoreNavigator.navigateToSitePath(`${AddonModDataModuleHandlerService.PAGE_NAME}/${module.course}/${module.id}/${rId}`, {\n              siteId,\n              params: pageParams\n            });\n          } finally {\n            // Just in case. In fact we need to dismiss the modal before showing a toast or error message.\n            modal.dismiss();\n          }\n        });\n        return function action(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled(siteId, url, params) {\n    return _asyncToGenerator(function* () {\n      if (params.d === undefined) {\n        // Id not defined. Cannot treat the URL.\n        return false;\n      }\n      if ((!params.mode || params.mode != 'single') && params.rid === undefined) {\n        return false;\n      }\n      return true;\n    })();\n  }\n}\n_class = AddonModDataShowLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModDataShowLinkHandlerService_BaseFactory;\n  return function AddonModDataShowLinkHandlerService_Factory(t) {\n    return (ɵAddonModDataShowLinkHandlerService_BaseFactory || (ɵAddonModDataShowLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModDataShowLinkHandler = makeSingleton(AddonModDataShowLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreCourse","CoreNavigator","CoreDomUtils","makeSingleton","AddonModDataModuleHandlerService","AddonModDataShowLinkHandlerService","constructor","name","featureName","pattern","priority","getActions","siteIds","url","params","action","_ref","_asyncToGenerator","siteId","modal","showModalLoading","dataId","parseInt","d","rId","rid","group","page","module","getModuleBasicInfoByInstance","readingStrategy","pageParams","title","mode","offset","navigateToSitePath","PAGE_NAME","course","id","dismiss","_x","apply","arguments","isEnabled","undefined","t","factory","ɵfac","providedIn","AddonModDataShowLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/services/handlers/show-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { makeSingleton } from '@singletons';\nimport { AddonModDataModuleHandlerService } from './module';\n\n/**\n * Content links handler for database show entry.\n * Match mod/data/view.php?d=6&rid=5 with a valid data id and entryid.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModDataShowLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'AddonModDataShowLinkHandler';\n    featureName = 'CoreCourseModuleDelegate_AddonModData';\n    pattern = /\\/mod\\/data\\/view\\.php.*([?&](d|rid|page|group|mode)=\\d+)/;\n    priority = 50; // Higher priority than the default link handler for view.php.\n\n    /**\n     * @inheritdoc\n     */\n    getActions(siteIds: string[], url: string, params: Params): CoreContentLinksAction[] {\n        return [{\n            action: async (siteId): Promise<void> => {\n                const modal = await CoreDomUtils.showModalLoading();\n                const dataId = parseInt(params.d, 10);\n                const rId = params.rid || '';\n                const group = parseInt(params.group, 10) || false;\n                const page = parseInt(params.page, 10) || false;\n\n                try {\n                    const module = await CoreCourse.getModuleBasicInfoByInstance(\n                        dataId,\n                        'data',\n                        { siteId, readingStrategy: CoreSitesReadingStrategy.PREFER_CACHE },\n                    );\n                    const pageParams: Params = {\n                        title: module.name,\n                    };\n\n                    if (group) {\n                        pageParams.group = group;\n                    }\n\n                    if (params.mode && params.mode == 'single') {\n                        pageParams.offset = page || 0;\n                    }\n\n                    CoreNavigator.navigateToSitePath(\n                        `${AddonModDataModuleHandlerService.PAGE_NAME}/${module.course}/${module.id}/${rId}`,\n                        { siteId, params: pageParams },\n                    );\n                } finally {\n                    // Just in case. In fact we need to dismiss the modal before showing a toast or error message.\n                    modal.dismiss();\n                }\n            },\n        }];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(siteId: string, url: string, params: Params): Promise<boolean> {\n        if (params.d === undefined) {\n            // Id not defined. Cannot treat the URL.\n            return false;\n        }\n\n        if ((!params.mode || params.mode != 'single') && params.rid === undefined) {\n            return false;\n        }\n\n        return true;\n    }\n\n}\nexport const AddonModDataShowLinkHandler = makeSingleton(AddonModDataShowLinkHandlerService);\n"],"mappings":";;AAgBA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,aAAa,QAAQ,qBAAqB;AAEnD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,gCAAgC,QAAQ,UAAU;;AAE3D;;;;AAKA,OAAM,MAAOC,kCAAmC,SAAQN,2BAA2B;EADnFO,YAAA;;IAGI,KAAAC,IAAI,GAAG,6BAA6B;IACpC,KAAAC,WAAW,GAAG,uCAAuC;IACrD,KAAAC,OAAO,GAAG,2DAA2D;IACrE,KAAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;;EAEf;;;EAGAC,UAAUA,CAACC,OAAiB,EAAEC,GAAW,EAAEC,MAAc;IACrD,OAAO,CAAC;MACJC,MAAM;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,WAAOC,MAAM,EAAmB;UACpC,MAAMC,KAAK,SAASjB,YAAY,CAACkB,gBAAgB,EAAE;UACnD,MAAMC,MAAM,GAAGC,QAAQ,CAACR,MAAM,CAACS,CAAC,EAAE,EAAE,CAAC;UACrC,MAAMC,GAAG,GAAGV,MAAM,CAACW,GAAG,IAAI,EAAE;UAC5B,MAAMC,KAAK,GAAGJ,QAAQ,CAACR,MAAM,CAACY,KAAK,EAAE,EAAE,CAAC,IAAI,KAAK;UACjD,MAAMC,IAAI,GAAGL,QAAQ,CAACR,MAAM,CAACa,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK;UAE/C,IAAI;YACA,MAAMC,MAAM,SAAS5B,UAAU,CAAC6B,4BAA4B,CACxDR,MAAM,EACN,MAAM,EACN;cAAEH,MAAM;cAAEY,eAAe;YAAuC,CAAE,CACrE;YACD,MAAMC,UAAU,GAAW;cACvBC,KAAK,EAAEJ,MAAM,CAACrB;aACjB;YAED,IAAImB,KAAK,EAAE;cACPK,UAAU,CAACL,KAAK,GAAGA,KAAK;;YAG5B,IAAIZ,MAAM,CAACmB,IAAI,IAAInB,MAAM,CAACmB,IAAI,IAAI,QAAQ,EAAE;cACxCF,UAAU,CAACG,MAAM,GAAGP,IAAI,IAAI,CAAC;;YAGjC1B,aAAa,CAACkC,kBAAkB,CAC5B,GAAG/B,gCAAgC,CAACgC,SAAS,IAAIR,MAAM,CAACS,MAAM,IAAIT,MAAM,CAACU,EAAE,IAAId,GAAG,EAAE,EACpF;cAAEN,MAAM;cAAEJ,MAAM,EAAEiB;YAAU,CAAE,CACjC;WACJ,SAAS;YACN;YACAZ,KAAK,CAACoB,OAAO,EAAE;;QAEvB,CAAC;QAAA,gBAAAxB,OAAAyB,EAAA;UAAA,OAAAxB,IAAA,CAAAyB,KAAA,OAAAC,SAAA;QAAA;MAAA;KACJ,CAAC;EACN;EAEA;;;EAGMC,SAASA,CAACzB,MAAc,EAAEL,GAAW,EAAEC,MAAc;IAAA,OAAAG,iBAAA;MACvD,IAAIH,MAAM,CAACS,CAAC,KAAKqB,SAAS,EAAE;QACxB;QACA,OAAO,KAAK;;MAGhB,IAAI,CAAC,CAAC9B,MAAM,CAACmB,IAAI,IAAInB,MAAM,CAACmB,IAAI,IAAI,QAAQ,KAAKnB,MAAM,CAACW,GAAG,KAAKmB,SAAS,EAAE;QACvE,OAAO,KAAK;;MAGhB,OAAO,IAAI;IAAC;EAChB;;SA/DSvC,kCAAmC;;;;2IAAnCA,MAAkC,IAAAwC,CAAA,IAAlCxC,MAAkC;EAAA;AAAA;;SAAlCA,MAAkC;EAAAyC,OAAA,EAAlCzC,MAAkC,CAAA0C,IAAA;EAAAC,UAAA,EADrB;AAAM;AAmEhC,OAAO,MAAMC,2BAA2B,GAAG9C,aAAa,CAACE,kCAAkC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}