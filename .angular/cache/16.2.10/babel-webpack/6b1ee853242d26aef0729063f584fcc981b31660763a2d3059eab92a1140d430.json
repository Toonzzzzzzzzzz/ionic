{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonQtypeCalculatedComponent } from '@addons/qtype/calculated/component/calculated';\nimport { AddonQtypeCalculatedHandler } from '@addons/qtype/calculated/services/handlers/calculated';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support calculated simple question type.\n */\nexport class AddonQtypeCalculatedSimpleHandlerService {\n  constructor() {\n    this.name = 'AddonQtypeCalculatedSimple';\n    this.type = 'qtype_calculatedsimple';\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    // Calculated simple behaves like a calculated, use the same component.\n    return AddonQtypeCalculatedComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isCompleteResponse(question, answers) {\n    // This question type depends on calculated.\n    return AddonQtypeCalculatedHandler.isCompleteResponse(question, answers);\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isGradableResponse(question, answers) {\n    // This question type depends on calculated.\n    return AddonQtypeCalculatedHandler.isGradableResponse(question, answers);\n  }\n  /**\n   * @inheritdoc\n   */\n  isSameResponse(question, prevAnswers, newAnswers) {\n    // This question type depends on calculated.\n    return AddonQtypeCalculatedHandler.isSameResponse(question, prevAnswers, newAnswers);\n  }\n}\n_class = AddonQtypeCalculatedSimpleHandlerService;\n_class.ɵfac = function AddonQtypeCalculatedSimpleHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonQtypeCalculatedSimpleHandler = makeSingleton(AddonQtypeCalculatedSimpleHandlerService);","map":{"version":3,"names":["AddonQtypeCalculatedComponent","AddonQtypeCalculatedHandler","makeSingleton","AddonQtypeCalculatedSimpleHandlerService","constructor","name","type","getComponent","isCompleteResponse","question","answers","isEnabled","_asyncToGenerator","isGradableResponse","isSameResponse","prevAnswers","newAnswers","factory","ɵfac","providedIn","AddonQtypeCalculatedSimpleHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qtype/calculatedsimple/services/handlers/calculatedsimple.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { AddonQtypeCalculatedComponent } from '@addons/qtype/calculated/component/calculated';\nimport { CoreQuestionHandler } from '@features/question/services/question-delegate';\nimport { AddonQtypeCalculatedHandler } from '@addons/qtype/calculated/services/handlers/calculated';\nimport { CoreQuestionQuestionParsed, CoreQuestionsAnswers } from '@features/question/services/question';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support calculated simple question type.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonQtypeCalculatedSimpleHandlerService implements CoreQuestionHandler {\n\n    name = 'AddonQtypeCalculatedSimple';\n    type = 'qtype_calculatedsimple';\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<unknown> {\n        // Calculated simple behaves like a calculated, use the same component.\n        return AddonQtypeCalculatedComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isCompleteResponse(\n        question: CoreQuestionQuestionParsed,\n        answers: CoreQuestionsAnswers,\n    ): number {\n        // This question type depends on calculated.\n        return AddonQtypeCalculatedHandler.isCompleteResponse(question, answers);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isGradableResponse(\n        question: CoreQuestionQuestionParsed,\n        answers: CoreQuestionsAnswers,\n    ): number {\n        // This question type depends on calculated.\n        return AddonQtypeCalculatedHandler.isGradableResponse(question, answers);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isSameResponse(\n        question: CoreQuestionQuestionParsed,\n        prevAnswers: CoreQuestionsAnswers,\n        newAnswers: CoreQuestionsAnswers,\n    ): boolean {\n        // This question type depends on calculated.\n        return AddonQtypeCalculatedHandler.isSameResponse(question, prevAnswers, newAnswers);\n    }\n\n}\n\nexport const AddonQtypeCalculatedSimpleHandler = makeSingleton(AddonQtypeCalculatedSimpleHandlerService);\n"],"mappings":";;AAgBA,SAASA,6BAA6B,QAAQ,+CAA+C;AAE7F,SAASC,2BAA2B,QAAQ,uDAAuD;AAEnG,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,wCAAwC;EADrDC,YAAA;IAGI,KAAAC,IAAI,GAAG,4BAA4B;IACnC,KAAAC,IAAI,GAAG,wBAAwB;;EAE/B;;;EAGAC,YAAYA,CAAA;IACR;IACA,OAAOP,6BAA6B;EACxC;EAEA;;;EAGAQ,kBAAkBA,CACdC,QAAoC,EACpCC,OAA6B;IAE7B;IACA,OAAOT,2BAA2B,CAACO,kBAAkB,CAACC,QAAQ,EAAEC,OAAO,CAAC;EAC5E;EAEA;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGAC,kBAAkBA,CACdJ,QAAoC,EACpCC,OAA6B;IAE7B;IACA,OAAOT,2BAA2B,CAACY,kBAAkB,CAACJ,QAAQ,EAAEC,OAAO,CAAC;EAC5E;EAEA;;;EAGAI,cAAcA,CACVL,QAAoC,EACpCM,WAAiC,EACjCC,UAAgC;IAEhC;IACA,OAAOf,2BAA2B,CAACa,cAAc,CAACL,QAAQ,EAAEM,WAAW,EAAEC,UAAU,CAAC;EACxF;;SApDSb,wCAAwC;;mBAAxCA,MAAwC;AAAA;;SAAxCA,MAAwC;EAAAc,OAAA,EAAxCd,MAAwC,CAAAe,IAAA;EAAAC,UAAA,EAD3B;AAAM;AAyDhC,OAAO,MAAMC,iCAAiC,GAAGlB,aAAa,CAACC,wCAAwC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}