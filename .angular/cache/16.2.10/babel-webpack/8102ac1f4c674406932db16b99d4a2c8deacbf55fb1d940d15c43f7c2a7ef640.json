{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreRating, CoreRatingProvider } from '@features/rating/services/rating';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreRatingRatingsComponent } from '../ratings/ratings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@ngx-translate/core\";\nfunction CoreRatingAggregateComponent_ion_item_0_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r1.item.count, \")\");\n  }\n}\nfunction CoreRatingAggregateComponent_ion_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 1);\n    i0.ɵɵlistener(\"click\", function CoreRatingAggregateComponent_ion_item_0_Template_ion_item_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openRatings());\n    });\n    i0.ɵɵelementStart(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵtemplate(5, CoreRatingAggregateComponent_ion_item_0_span_5_Template, 2, 1, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"detail\", ctx_r0.ratingInfo.canviewall && ctx_r0.item.count)(\"button\", ctx_r0.ratingInfo.canviewall && ctx_r0.item.count);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", i0.ɵɵpipeBind1(3, 6, ctx_r0.labelKey), \"\", i0.ɵɵpipeBind1(4, 8, \"core.labelsep\"), \" \", ctx_r0.item.aggregatestr || \"-\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showCount && ctx_r0.item.count && ctx_r0.item.count > 0);\n  }\n}\n/**\n * Component that displays the aggregation of a rating item.\n */\nexport class CoreRatingAggregateComponent {\n  constructor() {\n    this.showCount = false;\n    this.disabled = false;\n    this.labelKey = '';\n    this.disabled = CoreRating.isRatingDisabledInSite();\n    // Update visibility if current site info is updated.\n    this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n      this.disabled = CoreRating.isRatingDisabledInSite();\n    }, CoreSites.getCurrentSiteId());\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnChanges() {\n    var _this$aggregateObserv;\n    (_this$aggregateObserv = this.aggregateObserver) === null || _this$aggregateObserv === void 0 || _this$aggregateObserv.off();\n    delete this.aggregateObserver;\n    this.item = (this.ratingInfo.ratings || []).find(rating => rating.itemid === this.itemId);\n    if (!this.item) {\n      return;\n    }\n    switch (this.aggregateMethod) {\n      case CoreRatingProvider.AGGREGATE_AVERAGE:\n        this.labelKey = 'core.rating.aggregateavg';\n        break;\n      case CoreRatingProvider.AGGREGATE_COUNT:\n        this.labelKey = 'core.rating.aggregatecount';\n        break;\n      case CoreRatingProvider.AGGREGATE_MAXIMUM:\n        this.labelKey = 'core.rating.aggregatemax';\n        break;\n      case CoreRatingProvider.AGGREGATE_MINIMUM:\n        this.labelKey = 'core.rating.aggregatemin';\n        break;\n      case CoreRatingProvider.AGGREGATE_SUM:\n        this.labelKey = 'core.rating.aggregatesum';\n        break;\n      default:\n        this.labelKey = '';\n        return;\n    }\n    this.showCount = this.aggregateMethod != CoreRatingProvider.AGGREGATE_COUNT;\n    // Update aggrgate when the user adds or edits a rating.\n    this.aggregateObserver = CoreEvents.on(CoreRatingProvider.AGGREGATE_CHANGED_EVENT, data => {\n      if (this.item && data.contextLevel === this.contextLevel && data.instanceId === this.instanceId && data.component === this.ratingInfo.component && data.ratingArea === this.ratingInfo.ratingarea && data.itemId === this.itemId) {\n        this.item.aggregatestr = data.aggregate;\n        this.item.count = data.count;\n      }\n    });\n  }\n  /**\n   * Open the individual ratings page.\n   */\n  openRatings() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$item;\n      if (!_this.ratingInfo.canviewall || !((_this$item = _this.item) !== null && _this$item !== void 0 && _this$item.count) || _this.disabled) {\n        return;\n      }\n      yield CoreDomUtils.openModal({\n        component: CoreRatingRatingsComponent,\n        componentProps: {\n          contextLevel: _this.contextLevel,\n          instanceId: _this.instanceId,\n          ratingComponent: _this.ratingInfo.component,\n          ratingArea: _this.ratingInfo.ratingarea,\n          itemId: _this.itemId,\n          scaleId: _this.scaleId,\n          courseId: _this.courseId\n        }\n      });\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$aggregateObserv2;\n    (_this$aggregateObserv2 = this.aggregateObserver) === null || _this$aggregateObserv2 === void 0 || _this$aggregateObserv2.off();\n    this.updateSiteObserver.off();\n  }\n}\n_class = CoreRatingAggregateComponent;\n_class.ɵfac = function CoreRatingAggregateComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-rating-aggregate\"]],\n  inputs: {\n    ratingInfo: \"ratingInfo\",\n    contextLevel: \"contextLevel\",\n    instanceId: \"instanceId\",\n    itemId: \"itemId\",\n    aggregateMethod: \"aggregateMethod\",\n    scaleId: \"scaleId\",\n    courseId: \"courseId\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"ion-text-wrap\", 3, \"detail\", \"button\", \"click\", 4, \"ngIf\"], [1, \"ion-text-wrap\", 3, \"detail\", \"button\", \"click\"], [4, \"ngIf\"]],\n  template: function CoreRatingAggregateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CoreRatingAggregateComponent_ion_item_0_Template, 6, 10, \"ion-item\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.item && ctx.item.canviewaggregate && ctx.labelKey && !ctx.disabled);\n    }\n  },\n  dependencies: [i1.NgIf, i2.IonItem, i2.IonLabel, i3.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreRating","CoreRatingProvider","CoreSites","CoreDomUtils","CoreEvents","CoreRatingRatingsComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","item","count","ɵɵlistener","CoreRatingAggregateComponent_ion_item_0_Template_ion_item_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","openRatings","ɵɵtemplate","CoreRatingAggregateComponent_ion_item_0_span_5_Template","ɵɵproperty","ctx_r0","ratingInfo","canviewall","ɵɵtextInterpolate3","ɵɵpipeBind1","labelKey","aggregatestr","showCount","CoreRatingAggregateComponent","constructor","disabled","isRatingDisabledInSite","updateSiteObserver","on","SITE_UPDATED","getCurrentSiteId","ngOnChanges","_this$aggregateObserv","aggregateObserver","off","ratings","find","rating","itemid","itemId","aggregateMethod","AGGREGATE_AVERAGE","AGGREGATE_COUNT","AGGREGATE_MAXIMUM","AGGREGATE_MINIMUM","AGGREGATE_SUM","AGGREGATE_CHANGED_EVENT","data","contextLevel","instanceId","component","ratingArea","ratingarea","aggregate","_this","_asyncToGenerator","_this$item","openModal","componentProps","ratingComponent","scaleId","courseId","ngOnDestroy","_this$aggregateObserv2","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","CoreRatingAggregateComponent_Template","rf","ctx","CoreRatingAggregateComponent_ion_item_0_Template","canviewaggregate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/rating/components/aggregate/aggregate.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/rating/components/aggregate/core-rating-aggregate.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ContextLevel } from '@/core/constants';\nimport { Component, Input, OnChanges, OnDestroy } from '@angular/core';\nimport {\n    CoreRating,\n    CoreRatingInfo,\n    CoreRatingInfoItem,\n    CoreRatingProvider,\n} from '@features/rating/services/rating';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreRatingRatingsComponent } from '../ratings/ratings';\n\n/**\n * Component that displays the aggregation of a rating item.\n */\n@Component({\n    selector: 'core-rating-aggregate',\n    templateUrl: 'core-rating-aggregate.html',\n})\nexport class CoreRatingAggregateComponent implements OnChanges, OnDestroy {\n\n    @Input() ratingInfo!: CoreRatingInfo;\n    @Input() contextLevel!: ContextLevel;\n    @Input() instanceId!: number;\n    @Input() itemId!: number;\n    @Input() aggregateMethod!: number;\n    @Input() scaleId!: number;\n    @Input() courseId?: number;\n\n    item?: CoreRatingInfoItem;\n    showCount = false;\n    disabled = false;\n    labelKey = '';\n\n    protected aggregateObserver?: CoreEventObserver;\n    protected updateSiteObserver: CoreEventObserver;\n\n    constructor() {\n        this.disabled = CoreRating.isRatingDisabledInSite();\n\n        // Update visibility if current site info is updated.\n        this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.disabled = CoreRating.isRatingDisabledInSite();\n        }, CoreSites.getCurrentSiteId());\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnChanges(): void {\n        this.aggregateObserver?.off();\n        delete this.aggregateObserver;\n\n        this.item = (this.ratingInfo.ratings || []).find((rating) => rating.itemid === this.itemId);\n        if (!this.item) {\n            return;\n        }\n\n        switch (this.aggregateMethod) {\n            case CoreRatingProvider.AGGREGATE_AVERAGE:\n                this.labelKey = 'core.rating.aggregateavg';\n                break;\n            case CoreRatingProvider.AGGREGATE_COUNT:\n                this.labelKey = 'core.rating.aggregatecount';\n                break;\n            case CoreRatingProvider.AGGREGATE_MAXIMUM:\n                this.labelKey = 'core.rating.aggregatemax';\n                break;\n            case CoreRatingProvider.AGGREGATE_MINIMUM:\n                this.labelKey = 'core.rating.aggregatemin';\n                break;\n            case CoreRatingProvider.AGGREGATE_SUM:\n                this.labelKey = 'core.rating.aggregatesum';\n                break;\n            default:\n                this.labelKey = '';\n\n                return;\n        }\n\n        this.showCount = (this.aggregateMethod != CoreRatingProvider.AGGREGATE_COUNT);\n\n        // Update aggrgate when the user adds or edits a rating.\n        this.aggregateObserver =\n            CoreEvents.on(CoreRatingProvider.AGGREGATE_CHANGED_EVENT, (data) => {\n                if (this.item &&\n                    data.contextLevel === this.contextLevel &&\n                    data.instanceId === this.instanceId &&\n                    data.component === this.ratingInfo.component &&\n                    data.ratingArea === this.ratingInfo.ratingarea &&\n                    data.itemId === this.itemId) {\n                    this.item.aggregatestr = data.aggregate;\n                    this.item.count = data.count;\n                }\n            });\n    }\n\n    /**\n     * Open the individual ratings page.\n     */\n    async openRatings(): Promise<void> {\n        if (!this.ratingInfo.canviewall || !this.item?.count || this.disabled) {\n            return;\n        }\n\n        await CoreDomUtils.openModal({\n            component: CoreRatingRatingsComponent,\n            componentProps: {\n                contextLevel: this.contextLevel,\n                instanceId: this.instanceId,\n                ratingComponent: this.ratingInfo.component,\n                ratingArea: this.ratingInfo.ratingarea,\n                itemId: this.itemId,\n                scaleId: this.scaleId,\n                courseId: this.courseId,\n            },\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.aggregateObserver?.off();\n        this.updateSiteObserver.off();\n    }\n\n}\n","<ion-item *ngIf=\"item && item!.canviewaggregate && labelKey && !disabled\" class=\"ion-text-wrap\"\n    [detail]=\"ratingInfo.canviewall && item!.count\" (click)=\"openRatings()\" [button]=\"ratingInfo.canviewall && item!.count\">\n    <ion-label>\n        {{ labelKey | translate }}{{ 'core.labelsep' | translate }} {{ item!.aggregatestr || '-' }}\n        <span *ngIf=\"showCount && item!.count && item!.count! > 0\">({{ item!.count! }})</span>\n    </ion-label>\n</ion-item>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}