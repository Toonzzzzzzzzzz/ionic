{"ast":null,"code":"import _objectSpread from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreReportBuilderReportsSource } from '@features/reportbuilder/classes/reports-source';\nimport { CoreReportBuilder, REPORTS_LIST_LIMIT } from '@features/reportbuilder/services/reportbuilder';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreTime } from '@singletons/time';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/empty-box/empty-box\";\nimport * as i3 from \"../../../../components/infinite-loading/infinite-loading\";\nimport * as i4 from \"../../../../components/loading/loading\";\nimport * as i5 from \"../../../../directives/format-text\";\nimport * as i6 from \"../../../../directives/content\";\nimport * as i7 from \"@ionic/angular\";\nimport * as i8 from \"@ngx-translate/core\";\nfunction CoreReportBuilderListPage_ion_content_9_ion_list_5_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 10);\n    i0.ɵɵlistener(\"click\", function CoreReportBuilderListPage_ion_content_9_ion_list_5_ion_item_1_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const report_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r8.reports.select(report_r7));\n    });\n    i0.ɵɵelementStart(1, \"ion-label\")(2, \"p\", 11);\n    i0.ɵɵelement(3, \"core-format-text\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const report_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"detail\", true)(\"button\", true);\n    i0.ɵɵattribute(\"aria-current\", ctx_r6.reports.getItemAriaCurrent(report_r7));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"clean\", true)(\"text\", report_r7.name)(\"filter\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(report_r7.sourcename);\n  }\n}\nfunction CoreReportBuilderListPage_ion_content_9_ion_list_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, CoreReportBuilderListPage_ion_content_9_ion_list_5_ion_item_1_Template, 6, 7, \"ion-item\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.reports.items);\n  }\n}\nfunction CoreReportBuilderListPage_ion_content_9_ng_template_6_core_empty_box_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 14);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.course.nocontentavailable\"));\n  }\n}\nfunction CoreReportBuilderListPage_ion_content_9_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CoreReportBuilderListPage_ion_content_9_ng_template_6_core_empty_box_0_Template, 2, 3, \"core-empty-box\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r4.reports.items == null ? null : ctx_r4.reports.items.length));\n  }\n}\nfunction CoreReportBuilderListPage_ion_content_9_core_infinite_loading_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-infinite-loading\", 15);\n    i0.ɵɵlistener(\"action\", function CoreReportBuilderListPage_ion_content_9_core_infinite_loading_8_Template_core_infinite_loading_action_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.fetchMoreReports($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"enabled\", ctx_r5.reports.loaded && !ctx_r5.reports.completed)(\"error\", state_r1.loadMoreError);\n  }\n}\nfunction CoreReportBuilderListPage_ion_content_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-content\")(1, \"ion-refresher\", 3);\n    i0.ɵɵlistener(\"ionRefresh\", function CoreReportBuilderListPage_ion_content_9_Template_ion_refresher_ionRefresh_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.refreshReports($event.target));\n    });\n    i0.ɵɵelement(2, \"ion-refresher-content\", 4);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"core-loading\", 5);\n    i0.ɵɵtemplate(5, CoreReportBuilderListPage_ion_content_9_ion_list_5_Template, 2, 1, \"ion-list\", 6);\n    i0.ɵɵtemplate(6, CoreReportBuilderListPage_ion_content_9_ng_template_6_Template, 1, 1, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(8, CoreReportBuilderListPage_ion_content_9_core_infinite_loading_8_Template, 1, 2, \"core-infinite-loading\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const state_r1 = ctx.ngIf;\n    const _r3 = i0.ɵɵreference(7);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !state_r1.loaded);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(3, 6, \"core.pulltorefresh\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hideUntil\", state_r1.loaded);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.reports.items == null ? null : ctx_r0.reports.items.length)(\"ngIfElse\", _r3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.reports.items == null ? null : ctx_r0.reports.items.length);\n  }\n}\nexport class CoreReportBuilderListPage {\n  constructor() {\n    this.state$ = new BehaviorSubject({\n      page: 1,\n      perpage: REPORTS_LIST_LIMIT,\n      loaded: false,\n      loadMoreError: false\n    });\n    this.logView = CoreTime.once(() => this.performLogView());\n    try {\n      const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreReportBuilderReportsSource, []);\n      this.reports = new CoreListItemsManager(source, CoreReportBuilderListPage);\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this.fetchReports(true);\n        _this.updateState({\n          loaded: true\n        });\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error loading reports');\n        _this.reports.reset();\n      }\n    })();\n  }\n  /**\n   * Update reports list or loads it.\n   *\n   * @param reload is reoading or not.\n   */\n  fetchReports(reload) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      reload ? yield _this2.reports.reload() : yield _this2.reports.load();\n      _this2.updateState({\n        loadMoreError: false\n      });\n      _this2.logView();\n    })();\n  }\n  /**\n   * Properties of the state to update.\n   *\n   * @param state Object to update.\n   */\n  updateState(state) {\n    const previousState = this.state$.getValue();\n    this.state$.next(_objectSpread(_objectSpread({}, previousState), state));\n  }\n  /**\n   * Load a new batch of Reports.\n   *\n   * @param complete Completion callback.\n   */\n  fetchMoreReports(complete) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this3.fetchReports(false);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error loading more reports');\n        _this3.updateState({\n          loadMoreError: true\n        });\n      }\n      complete();\n    })();\n  }\n  /**\n   * Refresh reports list.\n   *\n   * @param ionRefresher ionRefresher.\n   */\n  refreshReports(ionRefresher) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(CoreReportBuilder.invalidateReportsList());\n      yield CoreUtils.ignoreErrors(_this4.fetchReports(true));\n      yield ionRefresher === null || ionRefresher === void 0 ? void 0 : ionRefresher.complete();\n    })();\n  }\n  /**\n   * Log view.\n   */\n  performLogView() {\n    CoreAnalytics.logEvent({\n      type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n      ws: 'core_reportbuilder_list_reports',\n      name: Translate.instant('core.reportbuilder.reports'),\n      data: {\n        category: 'reportbuilder'\n      },\n      url: '/reportbuilder/index.php'\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.reports.destroy();\n  }\n}\n_class = CoreReportBuilderListPage;\n_class.ɵfac = function CoreReportBuilderListPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-report-builder-list\"]],\n  decls: 11,\n  vars: 9,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [4, \"ngIf\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [4, \"ngIf\", \"ngIfElse\"], [\"empty\", \"\"], [3, \"enabled\", \"error\", \"action\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", 3, \"detail\", \"button\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\", 3, \"detail\", \"button\", \"click\"], [1, \"item-heading\"], [3, \"clean\", \"text\", \"filter\"], [\"icon\", \"fas-rectangle-list\", 3, \"message\", 4, \"ngIf\"], [\"icon\", \"fas-rectangle-list\", 3, \"message\"], [3, \"enabled\", \"error\", \"action\"]],\n  template: function CoreReportBuilderListPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(9, CoreReportBuilderListPage_ion_content_9_Template, 9, 8, \"ion-content\", 2);\n      i0.ɵɵpipe(10, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 3, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 5, \"core.reportbuilder.reports\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(10, 7, ctx.state$));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreEmptyBoxComponent, i3.CoreInfiniteLoadingComponent, i4.CoreLoadingComponent, i5.CoreFormatTextDirective, i6.CoreContentDirective, i7.IonButtons, i7.IonContent, i7.IonHeader, i7.IonItem, i7.IonLabel, i7.IonList, i7.IonRefresher, i7.IonRefresherContent, i7.IonTitle, i7.IonToolbar, i7.IonBackButton, i1.AsyncPipe, i8.TranslatePipe],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"names":["CoreListItemsManager","CoreRoutedItemsManagerSourcesTracker","CoreReportBuilderReportsSource","CoreReportBuilder","REPORTS_LIST_LIMIT","CoreAnalytics","CoreAnalyticsEventType","CoreNavigator","CoreDomUtils","CoreUtils","Translate","CoreTime","BehaviorSubject","i0","ɵɵelementStart","ɵɵlistener","CoreReportBuilderListPage_ion_content_9_ion_list_5_ion_item_1_Template_ion_item_click_0_listener","restoredCtx","ɵɵrestoreView","_r9","report_r7","$implicit","ctx_r8","ɵɵnextContext","ɵɵresetView","reports","select","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵattribute","ctx_r6","getItemAriaCurrent","ɵɵadvance","name","ɵɵtextInterpolate","sourcename","ɵɵtemplate","CoreReportBuilderListPage_ion_content_9_ion_list_5_ion_item_1_Template","ctx_r2","items","ɵɵpipeBind1","CoreReportBuilderListPage_ion_content_9_ng_template_6_core_empty_box_0_Template","ctx_r4","length","CoreReportBuilderListPage_ion_content_9_core_infinite_loading_8_Template_core_infinite_loading_action_0_listener","$event","_r12","ctx_r11","fetchMoreReports","ctx_r5","loaded","completed","state_r1","loadMoreError","CoreReportBuilderListPage_ion_content_9_Template_ion_refresher_ionRefresh_1_listener","_r15","ctx_r14","refreshReports","target","CoreReportBuilderListPage_ion_content_9_ion_list_5_Template","CoreReportBuilderListPage_ion_content_9_ng_template_6_Template","ɵɵtemplateRefExtractor","CoreReportBuilderListPage_ion_content_9_core_infinite_loading_8_Template","ɵɵpropertyInterpolate","ctx_r0","_r3","CoreReportBuilderListPage","constructor","state$","page","perpage","logView","once","performLogView","source","getOrCreateSource","error","showErrorModal","back","ngAfterViewInit","_this","_asyncToGenerator","fetchReports","updateState","showErrorModalDefault","reset","reload","_this2","load","state","previousState","getValue","next","_objectSpread","complete","_this3","ionRefresher","_this4","ignoreErrors","invalidateReportsList","logEvent","type","VIEW_ITEM_LIST","ws","instant","data","category","url","ngOnDestroy","destroy","selectors","decls","vars","consts","template","CoreReportBuilderListPage_Template","rf","ctx","CoreReportBuilderListPage_ion_content_9_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/reportbuilder/pages/list/list.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/reportbuilder/pages/list/list.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreReportBuilderReportsSource } from '@features/reportbuilder/classes/reports-source';\nimport { CoreReportBuilder, CoreReportBuilderReport, REPORTS_LIST_LIMIT } from '@features/reportbuilder/services/reportbuilder';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreTime } from '@singletons/time';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'core-report-builder-list',\n    templateUrl: './list.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CoreReportBuilderListPage implements AfterViewInit, OnDestroy {\n\n    reports!: CoreListItemsManager<CoreReportBuilderReport, CoreReportBuilderReportsSource>;\n\n    state$: Readonly<BehaviorSubject<CoreReportBuilderListState>> = new BehaviorSubject<CoreReportBuilderListState>({\n        page: 1,\n        perpage: REPORTS_LIST_LIMIT,\n        loaded: false,\n        loadMoreError: false,\n    });\n\n    protected logView: () => void;\n\n    constructor() {\n        this.logView = CoreTime.once(() => this.performLogView());\n\n        try {\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreReportBuilderReportsSource, []);\n            this.reports = new CoreListItemsManager(source, CoreReportBuilderListPage);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n            CoreNavigator.back();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        try {\n            await this.fetchReports(true);\n            this.updateState({ loaded: true });\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading reports');\n\n            this.reports.reset();\n        }\n    }\n\n    /**\n     * Update reports list or loads it.\n     *\n     * @param reload is reoading or not.\n     */\n    async fetchReports(reload: boolean): Promise<void> {\n        reload ? await this.reports.reload() : await this.reports.load();\n        this.updateState({ loadMoreError: false });\n\n        this.logView();\n    }\n\n    /**\n     * Properties of the state to update.\n     *\n     * @param state Object to update.\n     */\n    updateState(state: Partial<CoreReportBuilderListState>): void {\n        const previousState = this.state$.getValue();\n        this.state$.next({ ...previousState, ...state });\n    }\n\n    /**\n     * Load a new batch of Reports.\n     *\n     * @param complete Completion callback.\n     */\n    async fetchMoreReports(complete: () => void): Promise<void> {\n        try {\n            await this.fetchReports(false);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading more reports');\n\n            this.updateState({ loadMoreError: true });\n        }\n\n        complete();\n    }\n\n    /**\n     * Refresh reports list.\n     *\n     * @param ionRefresher ionRefresher.\n     */\n    async refreshReports(ionRefresher?: HTMLIonRefresherElement): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreReportBuilder.invalidateReportsList());\n        await CoreUtils.ignoreErrors(this.fetchReports(true));\n        await ionRefresher?.complete();\n    }\n\n    /**\n     * Log view.\n     */\n    protected performLogView(): void {\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n            ws: 'core_reportbuilder_list_reports',\n            name: Translate.instant('core.reportbuilder.reports'),\n            data: { category: 'reportbuilder' },\n            url: '/reportbuilder/index.php',\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.reports.destroy();\n    }\n\n}\n\ntype CoreReportBuilderListState = {\n    page: number;\n    perpage: number;\n    loaded: boolean;\n    loadMoreError: boolean;\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'core.reportbuilder.reports' | translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content *ngIf=\"state$ | async as state\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!state.loaded\" (ionRefresh)=\"refreshReports($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"state.loaded\">\n        <ion-list *ngIf=\"reports.items?.length; else empty\">\n            <ion-item [attr.aria-current]=\"reports.getItemAriaCurrent(report)\" [detail]=\"true\" class=\"ion-text-wrap\" [button]=\"true\"\n                *ngFor=\"let report of reports.items\" (click)=\"reports.select(report)\">\n                <ion-label>\n                    <p class=\"item-heading\">\n                        <core-format-text [clean]=\"true\" [text]=\"report.name\" [filter]=\"false\" />\n                    </p>\n                    <p>{{ report.sourcename }}</p>\n                </ion-label>\n            </ion-item>\n        </ion-list>\n\n        <ng-template #empty>\n            <core-empty-box *ngIf=\"!reports.items?.length\" icon=\"fas-rectangle-list\"\n                [message]=\"'core.course.nocontentavailable' | translate\" />\n        </ng-template>\n\n        <core-infinite-loading *ngIf=\"reports.items?.length\" [enabled]=\"reports.loaded && !reports.completed\"\n            (action)=\"fetchMoreReports($event)\" [error]=\"state.loadMoreError\" />\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}