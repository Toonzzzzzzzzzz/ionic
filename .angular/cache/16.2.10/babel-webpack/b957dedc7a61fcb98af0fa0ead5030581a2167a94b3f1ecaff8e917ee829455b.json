{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreCourses, CoreCoursesProvider } from '../../services/courses';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/context-menu/context-menu\";\nimport * as i3 from \"../../../../components/context-menu/context-menu-item\";\nimport * as i4 from \"../../../../components/empty-box/empty-box\";\nimport * as i5 from \"../../../../components/infinite-loading/infinite-loading\";\nimport * as i6 from \"../../../../components/loading/loading\";\nimport * as i7 from \"../../../../directives/content\";\nimport * as i8 from \"@ionic/angular\";\nimport * as i9 from \"../../components/course-list-item/course-list-item\";\nimport * as i10 from \"../../../mainmenu/components/user-menu-button/user-menu-button\";\nimport * as i11 from \"../../../search/components/search-box/search-box\";\nimport * as i12 from \"@ngx-translate/core\";\nfunction CoreCoursesListPage_h1_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.courses.availablecourses\"));\n  }\n}\nfunction CoreCoursesListPage_h1_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.courses.mycourses\"));\n  }\n}\nfunction CoreCoursesListPage_core_context_menu_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 5);\n    i0.ɵɵlistener(\"action\", function CoreCoursesListPage_core_context_menu_item_10_Template_core_context_menu_item_action_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.toggleDownload());\n    })(\"toggleChange\", function CoreCoursesListPage_core_context_menu_item_10_Template_core_context_menu_item_toggleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.downloadEnabled = $event);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"priority\", 1000)(\"content\", i0.ɵɵpipeBind1(1, 3, \"core.settings.showdownloadoptions\"))(\"toggle\", ctx_r2.downloadEnabled);\n  }\n}\nfunction CoreCoursesListPage_core_search_box_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-search-box\", 15);\n    i0.ɵɵlistener(\"onSubmit\", function CoreCoursesListPage_core_search_box_18_Template_core_search_box_onSubmit_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.search($event));\n    })(\"onClear\", function CoreCoursesListPage_core_search_box_18_Template_core_search_box_onClear_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.clearSearch());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(1, 3, \"core.courses.search\"))(\"searchLabel\", i0.ɵɵpipeBind1(2, 5, \"core.courses.search\"))(\"autoFocus\", ctx_r3.searchMode);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction CoreCoursesListPage_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\")(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 1, \"core.courses.totalcoursesearchresults\", i0.ɵɵpureFunction1(4, _c0, ctx_r4.searchTotal)));\n  }\n}\nfunction CoreCoursesListPage_core_courses_course_list_item_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-courses-course-list-item\", 16);\n  }\n  if (rf & 2) {\n    const course_r14 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"course\", course_r14)(\"showDownload\", ctx_r5.downloadEnabled);\n  }\n}\nfunction CoreCoursesListPage_core_empty_box_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 17);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.courses.nosearchresults\"));\n  }\n}\nfunction CoreCoursesListPage_core_empty_box_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 18);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.courses.nocourses\"));\n  }\n}\n/**\n * Page that shows a list of courses.\n */\nexport class CoreCoursesListPage {\n  constructor() {\n    var _this = this;\n    this.downloadAllCoursesEnabled = false;\n    this.searchEnabled = false;\n    this.searchMode = false;\n    this.searchTotal = 0;\n    this.downloadEnabled = false;\n    this.downloadCourseEnabled = false;\n    this.downloadCoursesEnabled = false;\n    this.courses = [];\n    this.loaded = false;\n    this.coursesLoaded = 0;\n    this.canLoadMore = false;\n    this.loadMoreError = false;\n    this.showOnlyEnrolled = false;\n    this.loadedCourses = [];\n    this.loadCoursesPerPage = 20;\n    this.searchPage = 0;\n    this.searchText = '';\n    this.courseIds = '';\n    this.isDestroyed = false;\n    this.currentSiteId = CoreSites.getRequiredCurrentSite().getId();\n    this.frontpageCourseId = CoreSites.getRequiredCurrentSite().getSiteHomeId();\n    // Update list if user enrols in a course.\n    this.myCoursesObserver = CoreEvents.on(CoreCoursesProvider.EVENT_MY_COURSES_UPDATED, data => {\n      if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n        this.fetchCourses();\n      }\n    }, this.currentSiteId);\n    // Refresh the enabled flags if site is updated.\n    this.siteUpdatedObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n      this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n      this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n      this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n      this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && this.downloadEnabled;\n      if (!this.searchEnabled && this.searchMode) {\n        this.searchMode = false;\n        this.fetchCourses();\n      }\n    }, this.currentSiteId);\n    this.downloadEnabledObserver = CoreEvents.on(CoreCoursesProvider.EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED, data => {\n      this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && data.enabled;\n    });\n    this.logView = CoreTime.once( /*#__PURE__*/_asyncToGenerator(function* () {\n      if (_this.showOnlyEnrolled) {\n        CoreAnalytics.logEvent({\n          type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n          ws: 'core_enrol_get_users_courses',\n          name: Translate.instant('core.courses.mycourses'),\n          data: {\n            category: 'course'\n          },\n          url: '/my/courses.php'\n        });\n      } else {\n        CoreAnalytics.logEvent({\n          type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n          ws: 'core_course_get_courses_by_field',\n          name: Translate.instant('core.courses.availablecourses'),\n          data: {\n            category: 'course'\n          },\n          url: '/course/index.php'\n        });\n      }\n    }));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n    this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n    this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && CoreCourses.getCourseDownloadOptionsEnabled();\n    const mode = CoreNavigator.getRouteParam('mode') || 'my';\n    if (mode == 'search') {\n      this.searchMode = true;\n    }\n    if (mode == 'my') {\n      this.showOnlyEnrolled = true;\n    }\n    this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n    if (!this.searchEnabled) {\n      this.searchMode = false;\n    }\n    this.fetchCourses();\n  }\n  /**\n   * Load the course list.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchCourses() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this2.searchMode) {\n          if (_this2.searchText) {\n            yield _this2.searchCourses();\n          }\n        } else {\n          yield _this2.loadCourses(true);\n        }\n      } finally {\n        _this2.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Fetch the courses.\n   *\n   * @param clearTheList If list needs to be reloaded.\n   * @returns Promise resolved when done.\n   */\n  loadCourses(clearTheList = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.loadMoreError = false;\n      try {\n        if (clearTheList) {\n          if (_this3.showOnlyEnrolled) {\n            _this3.loadedCourses = yield CoreCourses.getUserCourses();\n          } else {\n            const courses = yield CoreCourses.getCoursesByField();\n            _this3.loadedCourses = courses.filter(course => course.id != _this3.frontpageCourseId);\n          }\n          _this3.coursesLoaded = 0;\n          _this3.courses = [];\n        }\n        const addCourses = _this3.loadedCourses.slice(_this3.coursesLoaded, _this3.coursesLoaded + _this3.loadCoursesPerPage);\n        yield CoreCoursesHelper.loadCoursesExtraInfo(addCourses, true);\n        _this3.courses = _this3.courses.concat(addCourses);\n        _this3.courseIds = _this3.courses.map(course => course.id).join(',');\n        _this3.coursesLoaded = _this3.courses.length;\n        _this3.canLoadMore = _this3.loadedCourses.length > _this3.courses.length;\n        _this3.logView();\n      } catch (error) {\n        _this3.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n        !_this3.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n      }\n    })();\n  }\n  /**\n   * Refresh the courses.\n   *\n   * @param refresher Refresher.\n   */\n  refreshCourses(refresher) {\n    const promises = [];\n    if (!this.searchMode) {\n      if (this.showOnlyEnrolled) {\n        promises.push(CoreCourses.invalidateUserCourses());\n      } else {\n        promises.push(CoreCourses.invalidateCoursesByField());\n      }\n      if (this.courseIds) {\n        promises.push(CoreCourses.invalidateCoursesByField('ids', this.courseIds));\n      }\n    }\n    Promise.all(promises).finally(() => {\n      this.fetchCourses().finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n      });\n    });\n  }\n  /**\n   * Search a new text.\n   *\n   * @param text The text to search.\n   */\n  search(text) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.searchMode = true;\n      _this4.searchText = text;\n      _this4.courses = [];\n      _this4.searchPage = 0;\n      _this4.searchTotal = 0;\n      _this4.logSearch = CoreTime.once(() => _this4.performLogSearch());\n      const modal = yield CoreDomUtils.showModalLoading('core.searching', true);\n      yield _this4.searchCourses().finally(() => {\n        modal.dismiss();\n      });\n    })();\n  }\n  /**\n   * Clear search box.\n   */\n  clearSearch() {\n    this.searchText = '';\n    this.courses = [];\n    this.searchPage = 0;\n    this.searchTotal = 0;\n    this.searchMode = false;\n    this.loaded = false;\n    this.fetchCourses();\n  }\n  /**\n   * Log search.\n   */\n  performLogSearch() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.searchMode) {\n        return;\n      }\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'core_course_search_courses',\n        name: Translate.instant('core.courses.availablecourses'),\n        data: {\n          search: _this5.searchText,\n          category: 'course'\n        },\n        url: `/course/search.php?search=${_this5.searchText}`\n      });\n    })();\n  }\n  /**\n   * Load more courses.\n   *\n   * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n   */\n  loadMoreCourses(infiniteComplete) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this6.searchMode) {\n          yield _this6.searchCourses();\n        } else {\n          yield _this6.loadCourses();\n        }\n      } finally {\n        infiniteComplete && infiniteComplete();\n      }\n    })();\n  }\n  /**\n   * Search courses or load the next page of current search.\n   *\n   * @returns Promise resolved when done.\n   */\n  searchCourses() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      _this7.loadMoreError = false;\n      try {\n        var _this7$logSearch;\n        const response = yield CoreCourses.search(_this7.searchText, _this7.searchPage, undefined, _this7.showOnlyEnrolled);\n        if (_this7.searchPage === 0) {\n          _this7.courses = response.courses;\n        } else {\n          _this7.courses = _this7.courses.concat(response.courses);\n        }\n        _this7.searchTotal = response.total;\n        _this7.searchPage++;\n        _this7.canLoadMore = _this7.courses.length < _this7.searchTotal;\n        (_this7$logSearch = _this7.logSearch) === null || _this7$logSearch === void 0 || _this7$logSearch.call(_this7);\n      } catch (error) {\n        _this7.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n        !_this7.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorsearching', true);\n      }\n    })();\n  }\n  /**\n   * Toggle show only my courses.\n   */\n  toggleEnrolled() {\n    this.loaded = false;\n    this.fetchCourses();\n  }\n  /**\n   * Toggle download enabled.\n   */\n  toggleDownload() {\n    CoreCourses.setCourseDownloadOptionsEnabled(this.downloadEnabled);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.myCoursesObserver.off();\n    this.siteUpdatedObserver.off();\n    this.downloadEnabledObserver.off();\n    this.isDestroyed = true;\n  }\n}\n_class = CoreCoursesListPage;\n_class.ɵfac = function CoreCoursesListPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-courses-list\"]],\n  decls: 26,\n  vars: 23,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [4, \"ngIf\"], [\"slot\", \"end\"], [\"iconAction\", \"toggle\", 3, \"priority\", \"content\", \"toggle\", \"action\", \"toggleChange\", 4, \"ngIf\"], [\"iconAction\", \"toggle\", 3, \"priority\", \"content\", \"toggle\", \"action\", \"toggleChange\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [\"searchArea\", \"CoreCoursesSearch\", 3, \"placeholder\", \"searchLabel\", \"autoFocus\", \"onSubmit\", \"onClear\", 4, \"ngIf\"], [3, \"hideUntil\"], [1, \"list-item-limited-width\"], [3, \"course\", \"showDownload\", 4, \"ngFor\", \"ngForOf\"], [3, \"enabled\", \"error\", \"action\"], [\"icon\", \"fas-magnifying-glass\", 3, \"message\", 4, \"ngIf\"], [\"icon\", \"fas-graduation-cap\", 3, \"message\", 4, \"ngIf\"], [\"searchArea\", \"CoreCoursesSearch\", 3, \"placeholder\", \"searchLabel\", \"autoFocus\", \"onSubmit\", \"onClear\"], [3, \"course\", \"showDownload\"], [\"icon\", \"fas-magnifying-glass\", 3, \"message\"], [\"icon\", \"fas-graduation-cap\", 3, \"message\"]],\n  template: function CoreCoursesListPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\");\n      i0.ɵɵtemplate(6, CoreCoursesListPage_h1_6_Template, 3, 3, \"h1\", 2);\n      i0.ɵɵtemplate(7, CoreCoursesListPage_h1_7_Template, 3, 3, \"h1\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ion-buttons\", 3)(9, \"core-context-menu\");\n      i0.ɵɵtemplate(10, CoreCoursesListPage_core_context_menu_item_10_Template, 2, 5, \"core-context-menu-item\", 4);\n      i0.ɵɵelementStart(11, \"core-context-menu-item\", 5);\n      i0.ɵɵlistener(\"action\", function CoreCoursesListPage_Template_core_context_menu_item_action_11_listener() {\n        return ctx.toggleEnrolled();\n      })(\"toggleChange\", function CoreCoursesListPage_Template_core_context_menu_item_toggleChange_11_listener($event) {\n        return ctx.showOnlyEnrolled = $event;\n      });\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(13, \"core-user-menu-button\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"ion-content\")(15, \"ion-refresher\", 6);\n      i0.ɵɵlistener(\"ionRefresh\", function CoreCoursesListPage_Template_ion_refresher_ionRefresh_15_listener($event) {\n        return ctx.refreshCourses($event.target);\n      });\n      i0.ɵɵelement(16, \"ion-refresher-content\", 7);\n      i0.ɵɵpipe(17, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, CoreCoursesListPage_core_search_box_18_Template, 3, 7, \"core-search-box\", 8);\n      i0.ɵɵelementStart(19, \"core-loading\", 9);\n      i0.ɵɵtemplate(20, CoreCoursesListPage_ng_container_20_Template, 6, 6, \"ng-container\", 2);\n      i0.ɵɵelementStart(21, \"ion-list\", 10);\n      i0.ɵɵtemplate(22, CoreCoursesListPage_core_courses_course_list_item_22_Template, 1, 2, \"core-courses-course-list-item\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"core-infinite-loading\", 12);\n      i0.ɵɵlistener(\"action\", function CoreCoursesListPage_Template_core_infinite_loading_action_23_listener($event) {\n        return ctx.loadMoreCourses($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, CoreCoursesListPage_core_empty_box_24_Template, 2, 3, \"core-empty-box\", 13);\n      i0.ɵɵtemplate(25, CoreCoursesListPage_core_empty_box_25_Template, 2, 3, \"core-empty-box\", 14);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 17, \"core.back\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showOnlyEnrolled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showOnlyEnrolled);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.downloadCourseEnabled || ctx.downloadCoursesEnabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"priority\", 900)(\"content\", i0.ɵɵpipeBind1(12, 19, \"core.courses.showonlyenrolled\"))(\"toggle\", ctx.showOnlyEnrolled);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(17, 21, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.searchEnabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.searchMode && ctx.searchTotal > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"enabled\", ctx.canLoadMore)(\"error\", ctx.loadMoreError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.searchMode && !ctx.courses.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.searchMode && !ctx.courses.length);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreContextMenuComponent, i3.CoreContextMenuItemComponent, i4.CoreEmptyBoxComponent, i5.CoreInfiniteLoadingComponent, i6.CoreLoadingComponent, i7.CoreContentDirective, i8.IonButtons, i8.IonContent, i8.IonHeader, i8.IonItemDivider, i8.IonLabel, i8.IonList, i8.IonRefresher, i8.IonRefresherContent, i8.IonTitle, i8.IonToolbar, i8.IonBackButton, i9.CoreCoursesCourseListItemComponent, i10.CoreMainMenuUserButtonComponent, i11.CoreSearchBoxComponent, i12.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreCoursesHelper","CoreNavigator","CoreSites","CoreDomUtils","CoreEvents","CoreCourses","CoreCoursesProvider","CoreTime","CoreAnalytics","CoreAnalyticsEventType","Translate","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵlistener","CoreCoursesListPage_core_context_menu_item_10_Template_core_context_menu_item_action_0_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","toggleDownload","CoreCoursesListPage_core_context_menu_item_10_Template_core_context_menu_item_toggleChange_0_listener","$event","ctx_r10","downloadEnabled","ɵɵproperty","ctx_r2","CoreCoursesListPage_core_search_box_18_Template_core_search_box_onSubmit_0_listener","_r12","ctx_r11","search","CoreCoursesListPage_core_search_box_18_Template_core_search_box_onClear_0_listener","ctx_r13","clearSearch","ctx_r3","searchMode","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r4","searchTotal","ɵɵelement","course_r14","ctx_r5","CoreCoursesListPage","constructor","_this","downloadAllCoursesEnabled","searchEnabled","downloadCourseEnabled","downloadCoursesEnabled","courses","loaded","coursesLoaded","canLoadMore","loadMoreError","showOnlyEnrolled","loadedCourses","loadCoursesPerPage","searchPage","searchText","courseIds","isDestroyed","currentSiteId","getRequiredCurrentSite","getId","frontpageCourseId","getSiteHomeId","myCoursesObserver","on","EVENT_MY_COURSES_UPDATED","data","action","ACTION_ENROL","fetchCourses","siteUpdatedObserver","SITE_UPDATED","isSearchCoursesDisabledInSite","isDownloadCourseDisabledInSite","isDownloadCoursesDisabledInSite","downloadEnabledObserver","EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED","enabled","logView","once","_asyncToGenerator","logEvent","type","VIEW_ITEM_LIST","ws","name","instant","category","url","ngOnInit","getCourseDownloadOptionsEnabled","mode","getRouteParam","_this2","searchCourses","loadCourses","clearTheList","_this3","getUserCourses","getCoursesByField","filter","course","id","addCourses","slice","loadCoursesExtraInfo","concat","map","join","length","error","showErrorModalDefault","refreshCourses","refresher","promises","push","invalidateUserCourses","invalidateCoursesByField","Promise","all","finally","complete","text","_this4","logSearch","performLogSearch","modal","showModalLoading","dismiss","_this5","loadMoreCourses","infiniteComplete","_this6","_this7","_this7$logSearch","response","undefined","total","call","toggleEnrolled","setCourseDownloadOptionsEnabled","ngOnDestroy","off","selectors","decls","vars","consts","template","CoreCoursesListPage_Template","rf","ctx","ɵɵtemplate","CoreCoursesListPage_h1_6_Template","CoreCoursesListPage_h1_7_Template","CoreCoursesListPage_core_context_menu_item_10_Template","CoreCoursesListPage_Template_core_context_menu_item_action_11_listener","CoreCoursesListPage_Template_core_context_menu_item_toggleChange_11_listener","CoreCoursesListPage_Template_ion_refresher_ionRefresh_15_listener","target","CoreCoursesListPage_core_search_box_18_Template","CoreCoursesListPage_ng_container_20_Template","CoreCoursesListPage_core_courses_course_list_item_22_Template","CoreCoursesListPage_Template_core_infinite_loading_action_23_listener","CoreCoursesListPage_core_empty_box_24_Template","CoreCoursesListPage_core_empty_box_25_Template","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/courses/pages/list/list.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/courses/pages/list/list.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CoreCoursesHelper, CoreEnrolledCourseDataWithExtraInfo } from '@features/courses/services/courses-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreCourseBasicSearchedData, CoreCourses, CoreCoursesProvider } from '../../services/courses';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\n\ntype CoreCoursesListMode = 'search' | 'all' | 'my';\n\n/**\n * Page that shows a list of courses.\n */\n@Component({\n    selector: 'page-core-courses-list',\n    templateUrl: 'list.html',\n})\nexport class CoreCoursesListPage implements OnInit, OnDestroy {\n\n    downloadAllCoursesEnabled = false;\n\n    searchEnabled = false;\n    searchMode = false;\n    searchTotal = 0;\n\n    downloadEnabled = false;\n    downloadCourseEnabled = false;\n    downloadCoursesEnabled = false;\n\n    courses: (CoreCourseBasicSearchedData|CoreEnrolledCourseDataWithExtraInfo)[] = [];\n    loaded = false;\n    coursesLoaded = 0;\n    canLoadMore = false;\n    loadMoreError = false;\n\n    showOnlyEnrolled = false;\n\n    protected loadedCourses: (CoreCourseBasicSearchedData|CoreEnrolledCourseDataWithExtraInfo)[] = [];\n    protected loadCoursesPerPage = 20;\n    protected currentSiteId: string;\n    protected frontpageCourseId: number;\n    protected searchPage = 0;\n    protected searchText = '';\n    protected myCoursesObserver: CoreEventObserver;\n    protected siteUpdatedObserver: CoreEventObserver;\n    protected downloadEnabledObserver: CoreEventObserver;\n    protected courseIds = '';\n    protected isDestroyed = false;\n    protected logView: () => void;\n    protected logSearch?: () => void;\n\n    constructor() {\n        this.currentSiteId = CoreSites.getRequiredCurrentSite().getId();\n        this.frontpageCourseId = CoreSites.getRequiredCurrentSite().getSiteHomeId();\n\n        // Update list if user enrols in a course.\n        this.myCoursesObserver = CoreEvents.on(\n            CoreCoursesProvider.EVENT_MY_COURSES_UPDATED,\n            (data) => {\n\n                if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n                    this.fetchCourses();\n                }\n            },\n\n            this.currentSiteId,\n        );\n\n        // Refresh the enabled flags if site is updated.\n        this.siteUpdatedObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n            this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n            this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n            this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && this.downloadEnabled;\n            if (!this.searchEnabled && this.searchMode) {\n                this.searchMode = false;\n\n                this.fetchCourses();\n            }\n        }, this.currentSiteId);\n\n        this.downloadEnabledObserver = CoreEvents.on(CoreCoursesProvider.EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED, (data) => {\n            this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && data.enabled;\n        });\n\n        this.logView = CoreTime.once(async () => {\n            if (this.showOnlyEnrolled) {\n                CoreAnalytics.logEvent({\n                    type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                    ws: 'core_enrol_get_users_courses',\n                    name: Translate.instant('core.courses.mycourses'),\n                    data: { category: 'course' },\n                    url: '/my/courses.php',\n                });\n            } else {\n                CoreAnalytics.logEvent({\n                    type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                    ws: 'core_course_get_courses_by_field',\n                    name: Translate.instant('core.courses.availablecourses'),\n                    data: { category: 'course' },\n                    url: '/course/index.php',\n                });\n            }\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n        this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n        this.downloadEnabled =\n            (this.downloadCourseEnabled || this.downloadCoursesEnabled) && CoreCourses.getCourseDownloadOptionsEnabled();\n\n        const mode = CoreNavigator.getRouteParam<CoreCoursesListMode>('mode') || 'my';\n\n        if (mode == 'search') {\n            this.searchMode = true;\n        }\n\n        if (mode == 'my') {\n            this.showOnlyEnrolled = true;\n        }\n\n        this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n        if (!this.searchEnabled) {\n            this.searchMode = false;\n        }\n\n        this.fetchCourses();\n    }\n\n    /**\n     * Load the course list.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchCourses(): Promise<void> {\n        try {\n            if (this.searchMode) {\n                if (this.searchText) {\n                    await this.searchCourses();\n                }\n            } else {\n                await this.loadCourses(true);\n            }\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Fetch the courses.\n     *\n     * @param clearTheList If list needs to be reloaded.\n     * @returns Promise resolved when done.\n     */\n    protected async loadCourses(clearTheList = false): Promise<void> {\n        this.loadMoreError = false;\n\n        try {\n            if (clearTheList) {\n                if (this.showOnlyEnrolled) {\n                    this.loadedCourses = await CoreCourses.getUserCourses();\n                } else {\n                    const courses = await CoreCourses.getCoursesByField();\n                    this.loadedCourses = courses.filter((course) => course.id != this.frontpageCourseId);\n                }\n\n                this.coursesLoaded = 0;\n                this.courses = [];\n            }\n\n            const addCourses = this.loadedCourses.slice(this.coursesLoaded, this.coursesLoaded + this.loadCoursesPerPage);\n            await CoreCoursesHelper.loadCoursesExtraInfo(addCourses, true);\n\n            this.courses = this.courses.concat(addCourses);\n\n            this.courseIds = this.courses.map((course) => course.id).join(',');\n\n            this.coursesLoaded = this.courses.length;\n            this.canLoadMore = this.loadedCourses.length > this.courses.length;\n\n            this.logView();\n        } catch (error) {\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n            !this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n        }\n\n    }\n\n    /**\n     * Refresh the courses.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCourses(refresher: HTMLIonRefresherElement): void {\n        const promises: Promise<void>[] = [];\n\n        if (!this.searchMode) {\n            if (this.showOnlyEnrolled) {\n                promises.push(CoreCourses.invalidateUserCourses());\n            } else {\n                promises.push(CoreCourses.invalidateCoursesByField());\n            }\n\n            if (this.courseIds) {\n                promises.push(CoreCourses.invalidateCoursesByField('ids', this.courseIds));\n            }\n        }\n\n        Promise.all(promises).finally(() => {\n            this.fetchCourses().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Search a new text.\n     *\n     * @param text The text to search.\n     */\n    async search(text: string): Promise<void> {\n        this.searchMode = true;\n        this.searchText = text;\n        this.courses = [];\n        this.searchPage = 0;\n        this.searchTotal = 0;\n        this.logSearch = CoreTime.once(() => this.performLogSearch());\n\n        const modal = await CoreDomUtils.showModalLoading('core.searching', true);\n        await this.searchCourses().finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Clear search box.\n     */\n    clearSearch(): void {\n        this.searchText = '';\n        this.courses = [];\n        this.searchPage = 0;\n        this.searchTotal = 0;\n        this.searchMode = false;\n\n        this.loaded = false;\n        this.fetchCourses();\n    }\n\n    /**\n     * Log search.\n     */\n    protected async performLogSearch(): Promise<void> {\n        if (!this.searchMode) {\n            return;\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n            ws: 'core_course_search_courses',\n            name: Translate.instant('core.courses.availablecourses'),\n            data: { search: this.searchText, category: 'course' },\n            url: `/course/search.php?search=${this.searchText}`,\n        });\n    }\n\n    /**\n     * Load more courses.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     */\n    async loadMoreCourses(infiniteComplete?: () => void ): Promise<void> {\n        try {\n            if (this.searchMode) {\n                await this.searchCourses();\n            } else {\n                await this.loadCourses();\n            }\n        } finally {\n            infiniteComplete && infiniteComplete();\n        }\n    }\n\n    /**\n     * Search courses or load the next page of current search.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async searchCourses(): Promise<void> {\n        this.loadMoreError = false;\n\n        try {\n            const response = await CoreCourses.search(this.searchText, this.searchPage, undefined, this.showOnlyEnrolled);\n\n            if (this.searchPage === 0) {\n                this.courses = response.courses;\n            } else {\n                this.courses = this.courses.concat(response.courses);\n            }\n            this.searchTotal = response.total;\n\n            this.searchPage++;\n            this.canLoadMore = this.courses.length < this.searchTotal;\n\n            this.logSearch?.();\n        } catch (error) {\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n            !this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorsearching', true);\n        }\n    }\n\n    /**\n     * Toggle show only my courses.\n     */\n    toggleEnrolled(): void {\n        this.loaded = false;\n        this.fetchCourses();\n    }\n\n    /**\n     * Toggle download enabled.\n     */\n    toggleDownload(): void {\n        CoreCourses.setCourseDownloadOptionsEnabled(this.downloadEnabled);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.myCoursesObserver.off();\n        this.siteUpdatedObserver.off();\n        this.downloadEnabledObserver.off();\n        this.isDestroyed = true;\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1 *ngIf=\"!showOnlyEnrolled\">{{ 'core.courses.availablecourses' | translate }}</h1>\n            <h1 *ngIf=\"showOnlyEnrolled\">{{ 'core.courses.mycourses' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <core-context-menu>\n                <core-context-menu-item *ngIf=\"downloadCourseEnabled || downloadCoursesEnabled\" [priority]=\"1000\"\n                    [content]=\"'core.settings.showdownloadoptions' | translate\" (action)=\"toggleDownload()\" iconAction=\"toggle\"\n                    [(toggle)]=\"downloadEnabled\" />\n                <core-context-menu-item [priority]=\"900\" [content]=\"'core.courses.showonlyenrolled' | translate\" (action)=\"toggleEnrolled()\"\n                    iconAction=\"toggle\" [(toggle)]=\"showOnlyEnrolled\" />\n            </core-context-menu>\n            <core-user-menu-button />\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refreshCourses($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n\n    <core-search-box *ngIf=\"searchEnabled\" (onSubmit)=\"search($event)\" (onClear)=\"clearSearch()\"\n        [placeholder]=\"'core.courses.search' | translate\" [searchLabel]=\"'core.courses.search' | translate\" [autoFocus]=\"searchMode\"\n        searchArea=\"CoreCoursesSearch\" />\n\n    <core-loading [hideUntil]=\"loaded\">\n        <ng-container *ngIf=\"searchMode && searchTotal > 0\">\n            <ion-item-divider>\n                <ion-label>\n                    <h2>{{ 'core.courses.totalcoursesearchresults' | translate:{$a: searchTotal} }}</h2>\n                </ion-label>\n            </ion-item-divider>\n        </ng-container>\n\n        <ion-list class=\"list-item-limited-width\">\n            <core-courses-course-list-item *ngFor=\"let course of courses\" [course]=\"course\" [showDownload]=\"downloadEnabled\" />\n        </ion-list>\n\n        <core-infinite-loading [enabled]=\"canLoadMore\" (action)=\"loadMoreCourses($event)\" [error]=\"loadMoreError\" />\n\n\n        <core-empty-box *ngIf=\"searchMode && !courses.length\" icon=\"fas-magnifying-glass\"\n            [message]=\"'core.courses.nosearchresults' | translate\" />\n\n        <core-empty-box *ngIf=\"!searchMode && !courses.length\" icon=\"fas-graduation-cap\" [message]=\"'core.courses.nocourses' | translate\" />\n\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}