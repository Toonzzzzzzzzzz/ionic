{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreIcons } from '@singletons/icons';\nimport * as i0 from \"@angular/core\";\n/**\n * Directive to enable font-awesome 6.4 as ionicons.\n * Check available icons at https://fontawesome.com/search?o=r&m=free\n *\n * Example usage:\n *\n * <ion-icon name=\"fas-icon\">\n */\nexport class CoreFaIconDirective {\n  constructor(el) {\n    this.name = '';\n    this.element = el.nativeElement;\n    this.logger = CoreLogger.getInstance('CoreFaIconDirective');\n  }\n  /**\n   * Detect icon name and use svg.\n   */\n  setIcon() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let library = '';\n      let iconName = _this.name;\n      let font = 'ionicons';\n      const parts = iconName.split('-', 2);\n      if (parts.length === 2) {\n        switch (parts[0]) {\n          case 'far':\n            library = 'regular';\n            font = 'font-awesome';\n            break;\n          case 'fa':\n          case 'fas':\n            library = 'solid';\n            font = 'font-awesome';\n            break;\n          case 'fab':\n            library = 'brands';\n            font = 'font-awesome';\n            break;\n          case 'moodle':\n            library = 'moodle';\n            font = 'moodle';\n            break;\n          case 'fam':\n            library = 'font-awesome';\n            font = 'moodle';\n            break;\n          default:\n            break;\n        }\n      }\n      if (font === 'ionicons') {\n        _this.element.removeAttribute('src');\n        _this.logger.warn(`Ionic icon ${_this.name} detected`);\n        return;\n      }\n      iconName = iconName.substring(parts[0].length + 1);\n      // Set it here to avoid loading unexisting icon paths (svg/iconName) caused by the tick delay of the checkIconAlias promise.\n      let src = CoreIcons.getIconSrc(font, library, iconName);\n      _this.element.setAttribute('src', src);\n      if (font === 'font-awesome') {\n        const {\n          fileName\n        } = yield CoreIcons.getFontAwesomeIconFileName(iconName);\n        if (fileName !== iconName) {\n          src = CoreIcons.getIconSrc(font, library, fileName);\n          _this.element.setAttribute('src', src);\n        }\n      }\n      _this.element.classList.add('faicon');\n      CoreIcons.validateIcon(_this.name, src);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    if (!this.element.getAttribute('aria-label') && !this.element.getAttribute('aria-labelledby') && this.element.getAttribute('aria-hidden') !== 'true') {\n      this.logger.warn('Aria label not set on icon ' + this.name, this.element);\n      this.element.setAttribute('aria-hidden', 'true');\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnChanges(changes) {\n    if (!changes.name || !this.name) {\n      return;\n    }\n    this.setIcon();\n  }\n}\n_class = CoreFaIconDirective;\n_class.ɵfac = function CoreFaIconDirective_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: _class,\n  selectors: [[\"ion-icon\", \"name\", \"\"]],\n  inputs: {\n    name: \"name\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});","map":{"version":3,"names":["CoreLogger","CoreIcons","CoreFaIconDirective","constructor","el","name","element","nativeElement","logger","getInstance","setIcon","_this","_asyncToGenerator","library","iconName","font","parts","split","length","removeAttribute","warn","substring","src","getIconSrc","setAttribute","fileName","getFontAwesomeIconFileName","classList","add","validateIcon","ngAfterViewInit","getAttribute","ngOnChanges","changes","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs","features","ɵɵNgOnChangesFeature"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/directives/fa-icon.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Directive, ElementRef, Input, OnChanges, SimpleChange } from '@angular/core';\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreIcons } from '@singletons/icons';\n\n/**\n * Directive to enable font-awesome 6.4 as ionicons.\n * Check available icons at https://fontawesome.com/search?o=r&m=free\n *\n * Example usage:\n *\n * <ion-icon name=\"fas-icon\">\n */\n@Directive({\n    selector: 'ion-icon[name]',\n})\nexport class CoreFaIconDirective implements AfterViewInit, OnChanges {\n\n    @Input() name = '';\n\n    protected element: HTMLElement;\n\n    protected logger: CoreLogger;\n\n    constructor(el: ElementRef) {\n        this.element = el.nativeElement;\n        this.logger = CoreLogger.getInstance('CoreFaIconDirective');\n    }\n\n    /**\n     * Detect icon name and use svg.\n     */\n    async setIcon(): Promise<void> {\n        let library = '';\n        let iconName = this.name;\n        let font = 'ionicons';\n        const parts = iconName.split('-', 2);\n        if (parts.length === 2) {\n            switch (parts[0]) {\n                case 'far':\n                    library = 'regular';\n                    font = 'font-awesome';\n                    break;\n                case 'fa':\n                case 'fas':\n                    library = 'solid';\n                    font = 'font-awesome';\n                    break;\n                case 'fab':\n                    library = 'brands';\n                    font = 'font-awesome';\n                    break;\n                case 'moodle':\n                    library = 'moodle';\n                    font = 'moodle';\n                    break;\n                case 'fam':\n                    library = 'font-awesome';\n                    font = 'moodle';\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        if (font === 'ionicons') {\n            this.element.removeAttribute('src');\n            this.logger.warn(`Ionic icon ${this.name} detected`);\n\n            return;\n        }\n\n        iconName = iconName.substring(parts[0].length + 1);\n\n        // Set it here to avoid loading unexisting icon paths (svg/iconName) caused by the tick delay of the checkIconAlias promise.\n        let src = CoreIcons.getIconSrc(font, library, iconName);\n        this.element.setAttribute('src', src);\n\n        if (font === 'font-awesome') {\n            const { fileName } = await CoreIcons.getFontAwesomeIconFileName(iconName);\n            if (fileName !== iconName) {\n                src = CoreIcons.getIconSrc(font, library, fileName);\n                this.element.setAttribute('src', src);\n            }\n        }\n\n        this.element.classList.add('faicon');\n        CoreIcons.validateIcon(this.name, src);\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngAfterViewInit(): void {\n        if (!this.element.getAttribute('aria-label') &&\n            !this.element.getAttribute('aria-labelledby') &&\n            this.element.getAttribute('aria-hidden') !== 'true') {\n            this.logger.warn('Aria label not set on icon ' + this.name, this.element);\n\n            this.element.setAttribute('aria-hidden', 'true');\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (!changes.name || !this.name) {\n            return;\n        }\n\n        this.setIcon();\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}