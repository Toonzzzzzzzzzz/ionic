{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { AddonBlockTimeline } from '@addons/block/timeline/services/timeline';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { BehaviorSubject } from 'rxjs';\n/**\n * A collection of events displayed in the timeline block.\n */\nexport class AddonBlockTimelineSection {\n  constructor(search, overdue, dateRange, course, courseEvents, canLoadMore) {\n    this.search = search;\n    this.overdue = overdue;\n    this.dateRange = dateRange;\n    this.course = course;\n    this.dataSubject$ = new BehaviorSubject({\n      events: [],\n      lastEventId: canLoadMore,\n      canLoadMore: typeof canLoadMore !== 'undefined',\n      loadingMore: false\n    });\n    if (courseEvents) {\n      // eslint-disable-next-line promise/catch-or-return\n      this.reduceEvents(courseEvents, overdue, dateRange).then(events => this.dataSubject$.next(_objectSpread(_objectSpread({}, this.dataSubject$.value), {}, {\n        events\n      })));\n    }\n  }\n  get data$() {\n    return this.dataSubject$;\n  }\n  /**\n   * Load more events.\n   */\n  loadMore() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$search, _this$search2;\n      _this.dataSubject$.next(_objectSpread(_objectSpread({}, _this.dataSubject$.value), {}, {\n        loadingMore: true\n      }));\n      const lastEventId = _this.dataSubject$.value.lastEventId;\n      const {\n        events,\n        canLoadMore\n      } = _this.course ? yield AddonBlockTimeline.getActionEventsByCourse(_this.course.id, lastEventId, (_this$search = _this.search) !== null && _this$search !== void 0 ? _this$search : '') : yield AddonBlockTimeline.getActionEventsByTimesort(lastEventId, (_this$search2 = _this.search) !== null && _this$search2 !== void 0 ? _this$search2 : '');\n      _this.dataSubject$.next({\n        events: _this.dataSubject$.value.events.concat(yield _this.reduceEvents(events, _this.overdue, _this.dateRange)),\n        lastEventId: canLoadMore,\n        canLoadMore: canLoadMore !== undefined,\n        loadingMore: false\n      });\n    })();\n  }\n  /**\n   * Reduce a list of events to a list of events classified by day.\n   *\n   * @param events Events.\n   * @param overdue Whether to filter overdue events or not.\n   * @param dateRange Date range to filter events.\n   * @returns Day events list.\n   */\n  reduceEvents(events, overdue, {\n    from,\n    to\n  }) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const filterDates = {\n        now: CoreTimeUtils.timestamp(),\n        midnight: AddonBlockTimeline.getDayStart(),\n        start: AddonBlockTimeline.getDayStart(from),\n        end: typeof to === 'number' ? AddonBlockTimeline.getDayStart(to) : undefined\n      };\n      const timelineEvents = yield Promise.all(events.filter(event => _this2.filterEvent(event, overdue, filterDates)).map(event => _this2.mapToTimelineEvent(event, filterDates.now)));\n      const eventsByDates = timelineEvents.reduce((filteredEvents, event) => {\n        var _filteredEvents$dayTi;\n        const dayTimestamp = CoreTimeUtils.getMidnightForTimestamp(event.timesort);\n        filteredEvents[dayTimestamp] = (_filteredEvents$dayTi = filteredEvents[dayTimestamp]) !== null && _filteredEvents$dayTi !== void 0 ? _filteredEvents$dayTi : {\n          dayTimestamp,\n          events: []\n        };\n        filteredEvents[dayTimestamp].events.push(event);\n        return filteredEvents;\n      }, {});\n      return Object.values(eventsByDates);\n    })();\n  }\n  /**\n   * Check whether to include an event in the section or not.\n   *\n   * @param event Event.\n   * @param overdue Whether to filter overdue events or not.\n   * @param filterDates Filter dates.\n   * @returns Whetehr to include the event or not.\n   */\n  filterEvent(event, overdue, {\n    now,\n    midnight,\n    start,\n    end\n  }) {\n    if (start > event.timesort || end && event.timesort >= end) {\n      return false;\n    }\n    // Already calculated on 4.0 onwards but this will be live.\n    if (event.eventtype === 'open' || event.eventtype === 'opensubmission') {\n      const dayTimestamp = CoreTimeUtils.getMidnightForTimestamp(event.timesort);\n      return dayTimestamp > midnight;\n    }\n    // When filtering by overdue, we fetch all events due today, in case any have elapsed already and are overdue.\n    // This means if filtering by overdue, some events fetched might not be required (eg if due later today).\n    return !overdue || event.timesort < now;\n  }\n  /**\n   * Map a calendar event to a timeline event.\n   *\n   * @param event Calendar event.\n   * @param now Current time.\n   * @returns Timeline event.\n   */\n  mapToTimelineEvent(event, now) {\n    return _asyncToGenerator(function* () {\n      const modulename = event.modulename || event.icon.component;\n      return _objectSpread(_objectSpread({}, event), {}, {\n        modulename,\n        overdue: event.timesort < now,\n        iconUrl: yield CoreCourseModuleDelegate.getModuleIconSrc(event.icon.component, event.icon.iconurl),\n        iconTitle: CoreCourse.translateModuleName(modulename)\n      });\n    })();\n  }\n}","map":{"version":3,"names":["AddonBlockTimeline","CoreCourse","CoreCourseModuleDelegate","CoreTimeUtils","BehaviorSubject","AddonBlockTimelineSection","constructor","search","overdue","dateRange","course","courseEvents","canLoadMore","dataSubject$","events","lastEventId","loadingMore","reduceEvents","then","next","_objectSpread","value","data$","loadMore","_this","_asyncToGenerator","_this$search","_this$search2","getActionEventsByCourse","id","getActionEventsByTimesort","concat","undefined","from","to","_this2","filterDates","now","timestamp","midnight","getDayStart","start","end","timelineEvents","Promise","all","filter","event","filterEvent","map","mapToTimelineEvent","eventsByDates","reduce","filteredEvents","_filteredEvents$dayTi","dayTimestamp","getMidnightForTimestamp","timesort","push","Object","values","eventtype","modulename","icon","component","iconUrl","getModuleIconSrc","iconurl","iconTitle","translateModuleName"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/timeline/classes/section.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonBlockTimeline } from '@addons/block/timeline/services/timeline';\nimport { AddonCalendarEvent } from '@addons/calendar/services/calendar';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreEnrolledCourseDataWithOptions } from '@features/courses/services/courses-helper';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * A collection of events displayed in the timeline block.\n */\nexport class AddonBlockTimelineSection {\n\n    search: string | null;\n    overdue: boolean;\n    dateRange: AddonBlockTimelineDateRange;\n    course?: CoreEnrolledCourseDataWithOptions;\n\n    private dataSubject$: BehaviorSubject<AddonBlockTimelineSectionData>;\n\n    constructor(\n        search: string | null,\n        overdue: boolean,\n        dateRange: AddonBlockTimelineDateRange,\n        course?: CoreEnrolledCourseDataWithOptions,\n        courseEvents?: AddonCalendarEvent[],\n        canLoadMore?: number,\n    ) {\n        this.search = search;\n        this.overdue = overdue;\n        this.dateRange = dateRange;\n        this.course = course;\n        this.dataSubject$ = new BehaviorSubject<AddonBlockTimelineSectionData>({\n            events: [],\n            lastEventId: canLoadMore,\n            canLoadMore: typeof canLoadMore !== 'undefined',\n            loadingMore: false,\n        });\n\n        if (courseEvents) {\n            // eslint-disable-next-line promise/catch-or-return\n            this.reduceEvents(courseEvents, overdue, dateRange).then(events => this.dataSubject$.next({\n                ...this.dataSubject$.value,\n                events,\n            }));\n        }\n    }\n\n    get data$(): Observable<AddonBlockTimelineSectionData> {\n        return this.dataSubject$;\n    }\n\n    /**\n     * Load more events.\n     */\n    async loadMore(): Promise<void> {\n        this.dataSubject$.next({\n            ...this.dataSubject$.value,\n            loadingMore: true,\n        });\n\n        const lastEventId = this.dataSubject$.value.lastEventId;\n        const { events, canLoadMore } = this.course\n            ? await AddonBlockTimeline.getActionEventsByCourse(this.course.id, lastEventId, this.search ?? '')\n            : await AddonBlockTimeline.getActionEventsByTimesort(lastEventId, this.search ?? '');\n\n        this.dataSubject$.next({\n            events: this.dataSubject$.value.events.concat(await this.reduceEvents(events, this.overdue, this.dateRange)),\n            lastEventId: canLoadMore,\n            canLoadMore: canLoadMore !== undefined,\n            loadingMore: false,\n        });\n    }\n\n    /**\n     * Reduce a list of events to a list of events classified by day.\n     *\n     * @param events Events.\n     * @param overdue Whether to filter overdue events or not.\n     * @param dateRange Date range to filter events.\n     * @returns Day events list.\n     */\n    private async reduceEvents(\n        events: AddonCalendarEvent[],\n        overdue: boolean,\n        { from, to }: AddonBlockTimelineDateRange,\n    ): Promise<AddonBlockTimelineDayEvents[]> {\n        const filterDates: AddonBlockTimelineFilterDates = {\n            now: CoreTimeUtils.timestamp(),\n            midnight: AddonBlockTimeline.getDayStart(),\n            start: AddonBlockTimeline.getDayStart(from),\n            end: typeof to === 'number' ? AddonBlockTimeline.getDayStart(to) : undefined,\n        };\n        const timelineEvents = await Promise.all(\n            events\n                .filter((event) => this.filterEvent(event, overdue, filterDates))\n                .map((event) => this.mapToTimelineEvent(event, filterDates.now)),\n        );\n\n        const eventsByDates = timelineEvents.reduce((filteredEvents, event) => {\n            const dayTimestamp = CoreTimeUtils.getMidnightForTimestamp(event.timesort);\n\n            filteredEvents[dayTimestamp] = filteredEvents[dayTimestamp] ?? {\n                dayTimestamp,\n                events: [],\n            } as AddonBlockTimelineDayEvents;\n\n            filteredEvents[dayTimestamp].events.push(event);\n\n            return filteredEvents;\n        }, {} as Record<string, AddonBlockTimelineDayEvents>);\n\n        return Object.values(eventsByDates);\n    }\n\n    /**\n     * Check whether to include an event in the section or not.\n     *\n     * @param event Event.\n     * @param overdue Whether to filter overdue events or not.\n     * @param filterDates Filter dates.\n     * @returns Whetehr to include the event or not.\n     */\n    private filterEvent(\n        event: AddonCalendarEvent,\n        overdue: boolean,\n        { now, midnight, start, end }: AddonBlockTimelineFilterDates,\n    ): boolean {\n        if (start > event.timesort || (end && event.timesort >= end)) {\n            return false;\n        }\n\n        // Already calculated on 4.0 onwards but this will be live.\n        if (event.eventtype === 'open' || event.eventtype === 'opensubmission') {\n            const dayTimestamp = CoreTimeUtils.getMidnightForTimestamp(event.timesort);\n\n            return dayTimestamp > midnight;\n        }\n\n        // When filtering by overdue, we fetch all events due today, in case any have elapsed already and are overdue.\n        // This means if filtering by overdue, some events fetched might not be required (eg if due later today).\n        return !overdue || event.timesort < now;\n    }\n\n    /**\n     * Map a calendar event to a timeline event.\n     *\n     * @param event Calendar event.\n     * @param now Current time.\n     * @returns Timeline event.\n     */\n    private async mapToTimelineEvent(event: AddonCalendarEvent, now: number): Promise<AddonBlockTimelineEvent> {\n        const modulename = event.modulename || event.icon.component;\n\n        return {\n            ...event,\n            modulename,\n            overdue: event.timesort < now,\n            iconUrl: await CoreCourseModuleDelegate.getModuleIconSrc(event.icon.component, event.icon.iconurl),\n            iconTitle: CoreCourse.translateModuleName(modulename),\n        } as AddonBlockTimelineEvent;\n    }\n\n}\n\n/**\n * Section data.\n */\nexport type AddonBlockTimelineSectionData = {\n    events: AddonBlockTimelineDayEvents[];\n    lastEventId?: number;\n    canLoadMore: boolean;\n    loadingMore: boolean;\n};\n\n/**\n * Timestamps to use during event filtering.\n */\nexport type AddonBlockTimelineFilterDates = {\n    now: number;\n    midnight: number;\n    start: number;\n    end?: number;\n};\n\n/**\n * Date range.\n */\nexport type AddonBlockTimelineDateRange = {\n    from: number;\n    to?: number;\n};\n\n/**\n * Timeline event.\n */\nexport type AddonBlockTimelineEvent = AddonCalendarEvent & {\n    iconUrl?: string;\n    iconTitle?: string;\n};\n\n/**\n * List of events in a day.\n */\nexport type AddonBlockTimelineDayEvents = {\n    events: AddonBlockTimelineEvent[];\n    dayTimestamp: number;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}