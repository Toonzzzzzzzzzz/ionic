{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSettingsHelper } from '../../services/settings-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/loading/loading\";\nimport * as i3 from \"../../../../components/navbar-buttons/navbar-buttons\";\nimport * as i4 from \"../../../../components/sites-list/sites-list\";\nimport * as i5 from \"../../../../directives/fa-icon\";\nimport * as i6 from \"../../../../directives/content\";\nimport * as i7 from \"../../../../directives/update-non-reactive-attributes\";\nimport * as i8 from \"@ionic/angular\";\nimport * as i9 from \"../../../../pipes/bytes-to-size\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction CoreSettingsSpaceUsagePage_ng_template_18_ion_badge_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"coreBytesToSize\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const site_r4 = i0.ɵɵnextContext().site;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, site_r4.spaceUsage));\n  }\n}\nfunction CoreSettingsSpaceUsagePage_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CoreSettingsSpaceUsagePage_ng_template_18_ion_badge_0_Template, 3, 3, \"ion-badge\", 12);\n  }\n  if (rf & 2) {\n    const site_r4 = ctx.site;\n    i0.ɵɵproperty(\"ngIf\", site_r4.spaceUsage !== undefined);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    name: a0\n  };\n};\nfunction CoreSettingsSpaceUsagePage_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 14);\n    i0.ɵɵlistener(\"click\", function CoreSettingsSpaceUsagePage_ng_template_20_Template_ion_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const site_r7 = restoredCtx.site;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.deleteSiteStorage(site_r7));\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 15);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const site_r7 = ctx.site;\n    i0.ɵɵproperty(\"hidden\", site_r7.spaceUsage <= 0 && !site_r7.hasCacheEntries);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind2(2, 2, \"addon.storagemanager.deletedatafrom\", i0.ɵɵpureFunction1(5, _c0, site_r7.siteName)));\n  }\n}\n/**\n * Page that displays the space usage settings.\n */\nexport class CoreSettingsSpaceUsagePage {\n  constructor() {\n    var _this = this;\n    this.loaded = false;\n    this.totalSpaceUsage = 0;\n    this.accountsList = {\n      sameSite: [],\n      otherSites: [],\n      count: 0\n    };\n    this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        var _this$accountsList$cu;\n        const siteId = data.siteId;\n        let siteEntry = siteId === ((_this$accountsList$cu = _this.accountsList.currentSite) === null || _this$accountsList$cu === void 0 ? void 0 : _this$accountsList$cu.id) ? _this.accountsList.currentSite : undefined;\n        if (!siteEntry) {\n          siteEntry = _this.accountsList.sameSite.find(siteEntry => siteEntry.id === siteId);\n        }\n        if (!siteEntry) {\n          _this.accountsList.otherSites.some(sites => {\n            siteEntry = sites.find(siteEntry => siteEntry.id === siteId);\n            return siteEntry;\n          });\n        }\n        if (!siteEntry) {\n          return;\n        }\n        const site = yield CoreSites.getSite(siteId);\n        const siteInfo = site.getInfo();\n        siteEntry.siteName = yield site.getSiteName();\n        if (siteInfo) {\n          siteEntry.siteUrl = siteInfo.siteurl;\n          siteEntry.fullname = siteInfo.fullname;\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.loadSiteData().finally(() => {\n      this.loaded = true;\n    });\n  }\n  /**\n   * Convenience function to load site data/usage and calculate the totals.\n   *\n   * @returns Resolved when done.\n   */\n  loadSiteData() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Calculate total usage.\n      let totalSize = 0;\n      const sites = yield CoreUtils.ignoreErrors(CoreSites.getSortedSites(), []);\n      const sitesWithUsage = yield Promise.all(sites.map(site => _this2.getSiteWithUsage(site)));\n      let siteUrl = '';\n      const currentSiteId = CoreSites.getCurrentSiteId();\n      if (currentSiteId) {\n        const index = sitesWithUsage.findIndex(site => site.id === currentSiteId);\n        const siteWithUsage = sitesWithUsage.splice(index, 1)[0];\n        _this2.accountsList.currentSite = siteWithUsage;\n        totalSize += siteWithUsage.spaceUsage || 0;\n        siteUrl = _this2.accountsList.currentSite.siteUrlWithoutProtocol;\n      }\n      const otherSites = {};\n      // Get space usage.\n      sitesWithUsage.forEach(siteWithUsage => {\n        totalSize += siteWithUsage.spaceUsage || 0;\n        if (siteWithUsage.siteUrlWithoutProtocol === siteUrl) {\n          _this2.accountsList.sameSite.push(siteWithUsage);\n        } else {\n          if (otherSites[siteWithUsage.siteUrlWithoutProtocol] === undefined) {\n            otherSites[siteWithUsage.siteUrlWithoutProtocol] = [];\n          }\n          otherSites[siteWithUsage.siteUrlWithoutProtocol].push(siteWithUsage);\n        }\n      });\n      _this2.accountsList.otherSites = CoreUtils.objectToArray(otherSites);\n      _this2.accountsList.count = sites.length;\n      _this2.totalSpaceUsage = totalSize;\n    })();\n  }\n  /**\n   * Get site with space usage.\n   *\n   * @param site Site to check.\n   * @returns Site with usage.\n   */\n  getSiteWithUsage(site) {\n    return _asyncToGenerator(function* () {\n      const siteInfo = yield CoreSettingsHelper.getSiteSpaceUsage(site.id);\n      return Object.assign(site, {\n        hasCacheEntries: siteInfo.cacheEntries > 0,\n        spaceUsage: siteInfo.spaceUsage\n      });\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher event.\n   */\n  refreshData(refresher) {\n    this.loadSiteData().finally(() => {\n      refresher === null || refresher === void 0 || refresher.complete();\n    });\n  }\n  /**\n   * Deletes files of a site and the tables that can be cleared.\n   *\n   * @param siteData Site object with space usage.\n   */\n  deleteSiteStorage(siteData) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const newInfo = yield CoreSettingsHelper.deleteSiteStorage(siteData.siteName || '', siteData.id);\n        _this3.totalSpaceUsage -= siteData.spaceUsage - newInfo.spaceUsage;\n        siteData.spaceUsage = newInfo.spaceUsage;\n        siteData.hasCacheEntries = newInfo.cacheEntries > 0;\n      } catch (_unused) {\n        // Ignore cancelled confirmation modal.\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.sitesObserver.off();\n  }\n}\n_class = CoreSettingsSpaceUsagePage;\n_class.ɵfac = function CoreSettingsSpaceUsagePage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-app-settings-space-usage\"]],\n  decls: 30,\n  vars: 18,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [1, \"limited-width\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [3, \"accountsList\"], [\"siteLabel\", \"\"], [\"siteItem\", \"\"], [1, \"item-heading\"], [\"slot\", \"end\", 1, \"ion-margin-end\"], [\"color\", \"light\", 4, \"ngIf\"], [\"color\", \"light\"], [\"fill\", \"clear\", \"color\", \"danger\", \"slot\", \"end\", 3, \"hidden\", \"click\"], [\"name\", \"fas-trash\", \"slot\", \"icon-only\"]],\n  template: function CoreSettingsSpaceUsagePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-buttons\", 2);\n      i0.ɵɵelement(10, \"core-navbar-buttons\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"ion-content\", 3)(12, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function CoreSettingsSpaceUsagePage_Template_ion_refresher_ionRefresh_12_listener($event) {\n        return ctx.refreshData($event.target);\n      });\n      i0.ɵɵelement(13, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(14, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"core-loading\", 6)(16, \"ion-list\", 3)(17, \"core-sites-list\", 7);\n      i0.ɵɵtemplate(18, CoreSettingsSpaceUsagePage_ng_template_18_Template, 1, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(20, CoreSettingsSpaceUsagePage_ng_template_20_Template, 3, 7, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"ion-item-divider\")(23, \"ion-label\")(24, \"p\", 10);\n      i0.ɵɵtext(25);\n      i0.ɵɵpipe(26, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"p\", 11);\n      i0.ɵɵtext(28);\n      i0.ɵɵpipe(29, \"coreBytesToSize\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 8, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 10, \"core.settings.spaceusage\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(14, 12, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"accountsList\", ctx.accountsList);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(26, 14, \"core.settings.total\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(29, 16, ctx.totalSpaceUsage), \" \");\n    }\n  },\n  dependencies: [i1.NgIf, i2.CoreLoadingComponent, i3.CoreNavBarButtonsComponent, i4.CoreSitesListComponent, i5.CoreFaIconDirective, i6.CoreContentDirective, i7.CoreUpdateNonReactiveAttributesDirective, i8.IonBadge, i8.IonButton, i8.IonButtons, i8.IonContent, i8.IonHeader, i8.IonIcon, i8.IonItemDivider, i8.IonLabel, i8.IonList, i8.IonRefresher, i8.IonRefresherContent, i8.IonTitle, i8.IonToolbar, i8.IonBackButton, i9.CoreBytesToSizePipe, i10.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreSites","CoreUtils","CoreEvents","CoreSettingsHelper","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","site_r4","spaceUsage","ɵɵtemplate","CoreSettingsSpaceUsagePage_ng_template_18_ion_badge_0_Template","ɵɵproperty","undefined","ɵɵlistener","CoreSettingsSpaceUsagePage_ng_template_20_Template_ion_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r9","site_r7","site","ctx_r8","ɵɵnextContext","ɵɵresetView","deleteSiteStorage","ɵɵelement","hasCacheEntries","ɵɵattribute","ɵɵpipeBind2","ɵɵpureFunction1","_c0","siteName","CoreSettingsSpaceUsagePage","constructor","_this","loaded","totalSpaceUsage","accountsList","sameSite","otherSites","count","sitesObserver","on","SITE_UPDATED","_ref","_asyncToGenerator","data","_this$accountsList$cu","siteId","siteEntry","currentSite","id","find","some","sites","getSite","siteInfo","getInfo","getSiteName","siteUrl","siteurl","fullname","_x","apply","arguments","ngOnInit","loadSiteData","finally","_this2","totalSize","ignoreErrors","getSortedSites","sitesWithUsage","Promise","all","map","getSiteWithUsage","currentSiteId","getCurrentSiteId","index","findIndex","siteWithUsage","splice","siteUrlWithoutProtocol","forEach","push","objectToArray","length","getSiteSpaceUsage","Object","assign","cacheEntries","refreshData","refresher","complete","siteData","_this3","newInfo","_unused","ngOnDestroy","off","selectors","decls","vars","consts","template","CoreSettingsSpaceUsagePage_Template","rf","ctx","CoreSettingsSpaceUsagePage_Template_ion_refresher_ionRefresh_12_listener","$event","target","CoreSettingsSpaceUsagePage_ng_template_18_Template","ɵɵtemplateRefExtractor","CoreSettingsSpaceUsagePage_ng_template_20_Template","ɵɵpropertyInterpolate","ɵɵtextInterpolate1"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/pages/space-usage/space-usage.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/settings/pages/space-usage/space-usage.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { CoreSiteBasicInfo, CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\n\nimport { CoreSettingsHelper } from '../../services/settings-helper';\nimport { CoreAccountsList } from '@features/login/services/login-helper';\n\n/**\n * Page that displays the space usage settings.\n */\n@Component({\n    selector: 'page-core-app-settings-space-usage',\n    templateUrl: 'space-usage.html',\n})\nexport class CoreSettingsSpaceUsagePage implements OnInit, OnDestroy {\n\n    loaded = false;\n    totalSpaceUsage = 0;\n\n    accountsList: CoreAccountsList<CoreSiteBasicInfoWithUsage> = {\n        sameSite: [],\n        otherSites: [],\n        count: 0,\n    };\n\n    protected sitesObserver: CoreEventObserver;\n\n    constructor() {\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, async (data) => {\n            const siteId = data.siteId;\n\n            let siteEntry = siteId === this.accountsList.currentSite?.id\n                ? this.accountsList.currentSite\n                : undefined;\n\n            if (!siteEntry) {\n                siteEntry = this.accountsList.sameSite.find((siteEntry) => siteEntry.id === siteId);\n            }\n\n            if (!siteEntry) {\n                this.accountsList.otherSites.some((sites) => {\n                    siteEntry = sites.find((siteEntry) => siteEntry.id === siteId);\n\n                    return siteEntry;\n                });\n            }\n\n            if (!siteEntry) {\n                return;\n            }\n\n            const site = await CoreSites.getSite(siteId);\n            const siteInfo = site.getInfo();\n            siteEntry.siteName = await site.getSiteName();\n\n            if (siteInfo) {\n                siteEntry.siteUrl = siteInfo.siteurl;\n                siteEntry.fullname = siteInfo.fullname;\n            }\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.loadSiteData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Convenience function to load site data/usage and calculate the totals.\n     *\n     * @returns Resolved when done.\n     */\n    protected async loadSiteData(): Promise<void> {\n        // Calculate total usage.\n        let totalSize = 0;\n\n        const sites = await CoreUtils.ignoreErrors(CoreSites.getSortedSites(), [] as CoreSiteBasicInfo[]);\n        const sitesWithUsage = await Promise.all(sites.map((site) => this.getSiteWithUsage(site)));\n\n        let siteUrl = '';\n\n        const currentSiteId = CoreSites.getCurrentSiteId();\n\n        if (currentSiteId) {\n            const index = sitesWithUsage.findIndex((site) => site.id === currentSiteId);\n\n            const siteWithUsage = sitesWithUsage.splice(index, 1)[0];\n            this.accountsList.currentSite = siteWithUsage;\n            totalSize += siteWithUsage.spaceUsage || 0;\n\n            siteUrl = this.accountsList.currentSite.siteUrlWithoutProtocol;\n        }\n\n        const otherSites: Record<string, CoreSiteBasicInfoWithUsage[]> = {};\n\n        // Get space usage.\n        sitesWithUsage.forEach((siteWithUsage) => {\n            totalSize += siteWithUsage.spaceUsage || 0;\n\n            if (siteWithUsage.siteUrlWithoutProtocol === siteUrl) {\n                this.accountsList.sameSite.push(siteWithUsage);\n            } else {\n                if (otherSites[siteWithUsage.siteUrlWithoutProtocol] === undefined) {\n                    otherSites[siteWithUsage.siteUrlWithoutProtocol] = [];\n                }\n\n                otherSites[siteWithUsage.siteUrlWithoutProtocol].push(siteWithUsage);\n            }\n        });\n\n        this.accountsList.otherSites = CoreUtils.objectToArray(otherSites);\n        this.accountsList.count = sites.length;\n\n        this.totalSpaceUsage = totalSize;\n    }\n\n    /**\n     * Get site with space usage.\n     *\n     * @param site Site to check.\n     * @returns Site with usage.\n     */\n    protected async getSiteWithUsage(site: CoreSiteBasicInfo): Promise<CoreSiteBasicInfoWithUsage> {\n        const siteInfo = await CoreSettingsHelper.getSiteSpaceUsage(site.id);\n\n        return Object.assign(site, {\n            hasCacheEntries: siteInfo.cacheEntries > 0,\n            spaceUsage: siteInfo.spaceUsage,\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher event.\n     */\n    refreshData(refresher?: HTMLIonRefresherElement): void {\n        this.loadSiteData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Deletes files of a site and the tables that can be cleared.\n     *\n     * @param siteData Site object with space usage.\n     */\n    async deleteSiteStorage(siteData: CoreSiteBasicInfoWithUsage): Promise<void> {\n        try {\n            const newInfo = await CoreSettingsHelper.deleteSiteStorage(siteData.siteName || '', siteData.id);\n\n            this.totalSpaceUsage -= siteData.spaceUsage - newInfo.spaceUsage;\n\n            siteData.spaceUsage = newInfo.spaceUsage;\n            siteData.hasCacheEntries = newInfo.cacheEntries > 0;\n        } catch {\n            // Ignore cancelled confirmation modal.\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.sitesObserver.off();\n    }\n\n}\n\n/**\n * Basic site info with space usage and cache entries that can be erased.\n */\ninterface CoreSiteBasicInfoWithUsage extends CoreSiteBasicInfo {\n    hasCacheEntries: boolean; // If has cached entries that can be cleared.\n    spaceUsage: number; // Space used in this site.\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'core.settings.spaceusage' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <core-navbar-buttons />\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <ion-refresher [disabled]=\"!loaded\" (ionRefresh)=\"refreshData($event.target)\" slot=\"fixed\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"loaded\">\n        <ion-list class=\"limited-width\">\n            <core-sites-list [accountsList]=\"accountsList\">\n                <ng-template #siteLabel let-site=\"site\">\n                    <ion-badge color=\"light\" *ngIf=\"site.spaceUsage !== undefined\">{{ site.spaceUsage | coreBytesToSize }}</ion-badge>\n                </ng-template>\n\n                <ng-template #siteItem let-site=\"site\">\n                    <ion-button fill=\"clear\" color=\"danger\" slot=\"end\" (click)=\"deleteSiteStorage(site)\"\n                        [hidden]=\"site.spaceUsage <= 0 && !site.hasCacheEntries\">\n                        <ion-icon name=\"fas-trash\" slot=\"icon-only\"\n                            [attr.aria-label]=\"'addon.storagemanager.deletedatafrom' | translate: { name: site.siteName }\" />\n                    </ion-button>\n                </ng-template>\n            </core-sites-list>\n\n            <ion-item-divider>\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'core.settings.total' | translate }}</p>\n                </ion-label>\n                <p slot=\"end\" class=\"ion-margin-end\">\n                    {{ totalSpaceUsage | coreBytesToSize }}\n                </p>\n            </ion-item-divider>\n        </ion-list>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}