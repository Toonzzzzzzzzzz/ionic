{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { IonContent } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreTime } from '@singletons/time';\nimport { AddonModQuizNavigationModalComponent } from '../../components/navigation-modal/navigation-modal';\nimport { AddonModQuiz, AddonModQuizProvider } from '../../services/quiz';\nimport { AddonModQuizHelper } from '../../services/quiz-helper';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/loading/loading\";\nimport * as i3 from \"../../../../../core/directives/fa-icon\";\nimport * as i4 from \"../../../../../core/directives/format-text\";\nimport * as i5 from \"../../../../../core/directives/collapsible-footer\";\nimport * as i6 from \"../../../../../core/directives/content\";\nimport * as i7 from \"../../../../../core/directives/update-non-reactive-attributes\";\nimport * as i8 from \"@ionic/angular\";\nimport * as i9 from \"../../../../../core/features/question/components/question/question\";\nimport * as i10 from \"../../../../../core/pipes/format-date\";\nimport * as i11 from \"@ngx-translate/core\";\nfunction AddonModQuizReviewPage_ion_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function AddonModQuizReviewPage_ion_button_10_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.openNavigation());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"addon.mod_quiz.opentoc\"));\n  }\n}\nfunction AddonModQuizReviewPage_ion_card_16_ion_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 12)(1, \"ion-label\")(2, \"p\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"coreFormatDate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_quiz.completedon\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r6.attempt.timefinish * 1000));\n  }\n}\nfunction AddonModQuizReviewPage_ion_card_16_ion_item_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 12)(1, \"ion-label\")(2, \"p\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_quiz.timetaken\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.timeTaken);\n  }\n}\nfunction AddonModQuizReviewPage_ion_card_16_ion_item_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 12)(1, \"ion-label\")(2, \"p\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_quiz.overdue\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r8.overTime);\n  }\n}\nfunction AddonModQuizReviewPage_ion_card_16_ion_item_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 12)(1, \"ion-label\")(2, \"p\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_quiz.marks\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r9.readableMark);\n  }\n}\nfunction AddonModQuizReviewPage_ion_card_16_ion_item_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 12)(1, \"ion-label\")(2, \"p\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 2, \"addon.mod_quiz.grade\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r10.readableGrade);\n  }\n}\nfunction AddonModQuizReviewPage_ion_card_16_ion_item_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 12)(1, \"ion-label\")(2, \"p\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"core-format-text\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r12.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"component\", ctx_r11.component)(\"componentId\", ctx_r11.cmId)(\"text\", data_r12.content)(\"contextInstanceId\", ctx_r11.cmId)(\"courseId\", ctx_r11.courseId);\n  }\n}\nfunction AddonModQuizReviewPage_ion_card_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-list\")(2, \"ion-item\", 12)(3, \"ion-label\")(4, \"p\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"coreFormatDate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"ion-item\", 12)(11, \"ion-label\")(12, \"p\", 13);\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(17, AddonModQuizReviewPage_ion_card_16_ion_item_17_Template, 8, 6, \"ion-item\", 14);\n    i0.ɵɵtemplate(18, AddonModQuizReviewPage_ion_card_16_ion_item_18_Template, 7, 4, \"ion-item\", 14);\n    i0.ɵɵtemplate(19, AddonModQuizReviewPage_ion_card_16_ion_item_19_Template, 7, 4, \"ion-item\", 14);\n    i0.ɵɵtemplate(20, AddonModQuizReviewPage_ion_card_16_ion_item_20_Template, 7, 4, \"ion-item\", 14);\n    i0.ɵɵtemplate(21, AddonModQuizReviewPage_ion_card_16_ion_item_21_Template, 7, 4, \"ion-item\", 14);\n    i0.ɵɵtemplate(22, AddonModQuizReviewPage_ion_card_16_ion_item_22_Template, 5, 6, \"ion-item\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 10, \"addon.mod_quiz.startedon\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 12, ctx_r1.attempt.timestart * 1000));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 14, \"addon.mod_quiz.attemptstate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.readableState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showCompleted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.timeTaken);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.overTime);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.readableMark);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.readableGrade);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.additionalData);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonModQuizReviewPage_div_17_div_1_h2_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"core.question.questionno\", i0.ɵɵpureFunction1(4, _c0, question_r14.questionnumber)), \" \");\n  }\n}\nfunction AddonModQuizReviewPage_div_17_div_1_h2_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.question.information\"), \" \");\n  }\n}\nfunction AddonModQuizReviewPage_div_17_div_1_div_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r14.status);\n  }\n}\nfunction AddonModQuizReviewPage_div_17_div_1_div_6_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 23);\n  }\n  if (rf & 2) {\n    const question_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"innerHTML\", question_r14.readableMark, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction AddonModQuizReviewPage_div_17_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddonModQuizReviewPage_div_17_div_1_div_6_p_1_Template, 2, 1, \"p\", 8);\n    i0.ɵɵtemplate(2, AddonModQuizReviewPage_div_17_div_1_div_6_p_2_Template, 1, 1, \"p\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r14.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r14.readableMark);\n  }\n}\nfunction AddonModQuizReviewPage_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-card\", 18)(2, \"ion-item-divider\")(3, \"ion-label\", 12);\n    i0.ɵɵtemplate(4, AddonModQuizReviewPage_div_17_div_1_h2_4_Template, 3, 6, \"h2\", 8);\n    i0.ɵɵtemplate(5, AddonModQuizReviewPage_div_17_div_1_h2_5_Template, 3, 3, \"h2\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddonModQuizReviewPage_div_17_div_1_div_6_Template, 3, 2, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"core-question\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"addon-mod_quiz-question-\", question_r14.slot, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", question_r14.type !== \"description\" && question_r14.questionnumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r14.type === \"description\" || !question_r14.questionnumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r14.status || question_r14.readableMark);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"question\", question_r14)(\"component\", ctx_r13.component)(\"componentId\", ctx_r13.cmId)(\"attemptId\", ctx_r13.attempt.id)(\"usageId\", ctx_r13.attempt.uniqueid)(\"offlineEnabled\", false)(\"contextInstanceId\", ctx_r13.cmId)(\"courseId\", ctx_r13.courseId)(\"review\", true)(\"preferredBehaviour\", ctx_r13.quiz == null ? null : ctx_r13.quiz.preferredbehaviour);\n  }\n}\nfunction AddonModQuizReviewPage_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AddonModQuizReviewPage_div_17_div_1_Template, 8, 14, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.questions);\n  }\n}\nfunction AddonModQuizReviewPage_div_18_ion_col_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-col\", 30)(1, \"ion-button\", 31);\n    i0.ɵɵlistener(\"click\", function AddonModQuizReviewPage_div_18_ion_col_2_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.changePage(ctx_r27.previousPage));\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 32);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r24.previousPage < 0);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 2, \"core.previous\"));\n  }\n}\nfunction AddonModQuizReviewPage_div_18_ion_button_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"addon.mod_quiz.showall\"));\n  }\n}\nfunction AddonModQuizReviewPage_div_18_ion_button_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"addon.mod_quiz.showeachpage\"));\n  }\n}\nfunction AddonModQuizReviewPage_div_18_ion_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 33);\n    i0.ɵɵlistener(\"click\", function AddonModQuizReviewPage_div_18_ion_button_4_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.switchMode());\n    });\n    i0.ɵɵtemplate(1, AddonModQuizReviewPage_div_18_ion_button_4_span_1_Template, 3, 3, \"span\", 8);\n    i0.ɵɵtemplate(2, AddonModQuizReviewPage_div_18_ion_button_4_span_2_Template, 3, 3, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r25.showAll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.showAll);\n  }\n}\nfunction AddonModQuizReviewPage_div_18_ion_col_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-col\", 34)(1, \"ion-button\", 31);\n    i0.ɵɵlistener(\"click\", function AddonModQuizReviewPage_div_18_ion_col_5_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r33.changePage(ctx_r33.nextPage));\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 35);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r26.nextPage >= ctx_r26.numPages);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 2, \"core.next\"));\n  }\n}\nfunction AddonModQuizReviewPage_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"ion-row\", 25);\n    i0.ɵɵtemplate(2, AddonModQuizReviewPage_div_18_ion_col_2_Template, 4, 4, \"ion-col\", 26);\n    i0.ɵɵelementStart(3, \"ion-col\", 27);\n    i0.ɵɵtemplate(4, AddonModQuizReviewPage_div_18_ion_button_4_Template, 3, 2, \"ion-button\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AddonModQuizReviewPage_div_18_ion_col_5_Template, 4, 4, \"ion-col\", 29);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.showAll);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.numPages > 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.showAll);\n  }\n}\n/**\n * Page that allows reviewing a quiz attempt.\n */\nexport class AddonModQuizReviewPage {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    this.showAll = false; // Whether to view all questions in the same page.\n    this.numPages = 1; // Number of pages.\n    this.showCompleted = false; // Whether to show completed time.\n    this.loaded = false; // Whether data has been loaded.\n    this.navigation = []; // List of questions to navigate them.\n    this.questions = []; // Questions of the current page.\n    this.nextPage = -2; // Next page.\n    this.previousPage = -2; // Previous page.\n    this.logView = CoreTime.once(() => this.performLogView(true, {\n      showAllDisabled: !this.showAll,\n      page: this.currentPage\n    }));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n        _this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n        _this.attemptId = CoreNavigator.getRequiredRouteNumberParam('attemptId');\n        _this.currentPage = CoreNavigator.getRouteNumberParam('page') || -1;\n        _this.showAll = _this.currentPage == -1;\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n        CoreNavigator.back();\n        return;\n      }\n      try {\n        yield _this.fetchData();\n      } finally {\n        _this.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Change the current page. If slot is supplied, try to scroll to that question.\n   *\n   * @param page Page to load. -1 means all questions in same page.\n   * @param slot Slot of the question to scroll to.\n   */\n  changePage(page, slot) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _this2$attempt, _this2$content;\n      if (slot !== undefined && (((_this2$attempt = _this2.attempt) === null || _this2$attempt === void 0 ? void 0 : _this2$attempt.currentpage) == -1 || page == _this2.currentPage)) {\n        // Scrol to a certain question in the current page.\n        _this2.scrollToQuestion(slot);\n        return;\n      } else if (page == _this2.currentPage) {\n        // If the user is navigating to the current page and no question specified, we do nothing.\n        return;\n      }\n      _this2.loaded = false;\n      (_this2$content = _this2.content) === null || _this2$content === void 0 || _this2$content.scrollToTop();\n      try {\n        yield _this2.loadPage(page);\n        _this2.performLogView(false, {\n          page\n        });\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n      } finally {\n        _this2.loaded = true;\n        if (slot !== undefined) {\n          // Scroll to the question.\n          _this2.scrollToQuestion(slot);\n        }\n      }\n    })();\n  }\n  /**\n   * Convenience function to get the quiz data.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchData() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this3.quiz = yield AddonModQuiz.getQuiz(_this3.courseId, _this3.cmId);\n        _this3.options = yield AddonModQuiz.getCombinedReviewOptions(_this3.quiz.id, {\n          cmId: _this3.cmId\n        });\n        // Load the navigation data.\n        yield _this3.loadNavigation();\n        // Load questions.\n        yield _this3.loadPage(_this3.currentPage);\n        _this3.logView();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquiz', true);\n      }\n    })();\n  }\n  /**\n   * Load a page questions.\n   *\n   * @param page The page to load.\n   * @returns Promise resolved when done.\n   */\n  loadPage(page) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _this4$quiz;\n      const data = yield AddonModQuiz.getAttemptReview(_this4.attemptId, {\n        page,\n        cmId: (_this4$quiz = _this4.quiz) === null || _this4$quiz === void 0 ? void 0 : _this4$quiz.coursemodule\n      });\n      _this4.attempt = data.attempt;\n      _this4.attempt.currentpage = page;\n      _this4.currentPage = page;\n      // Set the summary data.\n      _this4.setSummaryCalculatedData(data);\n      _this4.questions = data.questions;\n      _this4.nextPage = page + 1;\n      _this4.previousPage = page - 1;\n      _this4.questions.forEach(question => {\n        // Get the readable mark for each question.\n        question.readableMark = AddonModQuizHelper.getQuestionMarkFromHtml(question.html);\n        // Extract the question info box.\n        CoreQuestionHelper.extractQuestionInfoBox(question, '.info');\n      });\n    })();\n  }\n  /**\n   * Load data to navigate the questions using the navigation modal.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadNavigation() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      var _this5$quiz;\n      // Get all questions in single page to retrieve all the questions.\n      const data = yield AddonModQuiz.getAttemptReview(_this5.attemptId, {\n        page: -1,\n        cmId: (_this5$quiz = _this5.quiz) === null || _this5$quiz === void 0 ? void 0 : _this5$quiz.coursemodule\n      });\n      _this5.navigation = data.questions;\n      _this5.navigation.forEach(question => {\n        question.stateClass = CoreQuestionHelper.getQuestionStateClass(question.state || '');\n      });\n      const lastQuestion = data.questions[data.questions.length - 1];\n      _this5.numPages = lastQuestion ? lastQuestion.page + 1 : 0;\n    })();\n  }\n  /**\n   * Refreshes data.\n   *\n   * @param refresher Refresher\n   */\n  refreshData(refresher) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonModQuiz.invalidateQuizData(_this6.courseId));\n      promises.push(AddonModQuiz.invalidateAttemptReview(_this6.attemptId));\n      if (_this6.quiz) {\n        promises.push(AddonModQuiz.invalidateCombinedReviewOptionsForUser(_this6.quiz.id));\n      }\n      yield CoreUtils.ignoreErrors(Promise.all(promises));\n      try {\n        yield _this6.fetchData();\n      } finally {\n        refresher.complete();\n      }\n    })();\n  }\n  /**\n   * Scroll to a certain question.\n   *\n   * @param slot Slot of the question to scroll to.\n   */\n  scrollToQuestion(slot) {\n    CoreDom.scrollToElement(this.elementRef.nativeElement, `#addon-mod_quiz-question-${slot}`);\n  }\n  /**\n   * Calculate review summary data.\n   *\n   * @param data Result of getAttemptReview.\n   */\n  setSummaryCalculatedData(data) {\n    var _this$attempt$state;\n    if (!this.attempt || !this.quiz) {\n      return;\n    }\n    this.readableState = AddonModQuiz.getAttemptReadableStateName((_this$attempt$state = this.attempt.state) !== null && _this$attempt$state !== void 0 ? _this$attempt$state : '');\n    if (this.attempt.state != AddonModQuizProvider.ATTEMPT_FINISHED) {\n      return;\n    }\n    this.showCompleted = true;\n    this.additionalData = data.additionaldata;\n    const timeTaken = (this.attempt.timefinish || 0) - (this.attempt.timestart || 0);\n    if (timeTaken > 0) {\n      // Format time taken.\n      this.timeTaken = CoreTime.formatTime(timeTaken);\n      // Calculate overdue time.\n      if (this.quiz.timelimit && timeTaken > this.quiz.timelimit + 60) {\n        this.overTime = CoreTime.formatTime(timeTaken - this.quiz.timelimit);\n      }\n    } else {\n      this.timeTaken = undefined;\n    }\n    // Treat grade.\n    if (this.options && this.options.someoptions.marks >= AddonModQuizProvider.QUESTION_OPTIONS_MARK_AND_MAX && AddonModQuiz.quizHasGrades(this.quiz)) {\n      if (data.grade === null || data.grade === undefined) {\n        this.readableGrade = AddonModQuiz.formatGrade(data.grade, this.quiz.decimalpoints);\n      } else {\n        // Show raw marks only if they are different from the grade (like on the entry page).\n        if (this.quiz.grade != this.quiz.sumgrades) {\n          this.readableMark = Translate.instant('addon.mod_quiz.outofshort', {\n            $a: {\n              grade: AddonModQuiz.formatGrade(this.attempt.sumgrades, this.quiz.decimalpoints),\n              maxgrade: AddonModQuiz.formatGrade(this.quiz.sumgrades, this.quiz.decimalpoints)\n            }\n          });\n        }\n        // Now the scaled grade.\n        const gradeObject = {\n          grade: AddonModQuiz.formatGrade(Number(data.grade), this.quiz.decimalpoints),\n          maxgrade: AddonModQuiz.formatGrade(this.quiz.grade, this.quiz.decimalpoints)\n        };\n        if (this.quiz.grade != 100) {\n          var _this$attempt$sumgrad, _this$quiz$sumgrades;\n          gradeObject.percent = AddonModQuiz.formatGrade(((_this$attempt$sumgrad = this.attempt.sumgrades) !== null && _this$attempt$sumgrad !== void 0 ? _this$attempt$sumgrad : 0) * 100 / ((_this$quiz$sumgrades = this.quiz.sumgrades) !== null && _this$quiz$sumgrades !== void 0 ? _this$quiz$sumgrades : 1), this.quiz.decimalpoints);\n          this.readableGrade = Translate.instant('addon.mod_quiz.outofpercent', {\n            $a: gradeObject\n          });\n        } else {\n          this.readableGrade = Translate.instant('addon.mod_quiz.outof', {\n            $a: gradeObject\n          });\n        }\n      }\n    }\n    // Treat additional data.\n    this.additionalData.forEach(data => {\n      // Remove help links from additional data.\n      data.content = CoreDomUtils.removeElementFromHtml(data.content, '.helptooltip');\n    });\n  }\n  /**\n   * Switch mode: all questions in same page OR one page at a time.\n   */\n  switchMode() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      _this7.showAll = !_this7.showAll;\n      // Load all questions or first page, depending on the mode.\n      yield _this7.loadPage(_this7.showAll ? -1 : 0);\n      _this7.performLogView(false, {\n        showAllDisabled: !_this7.showAll\n      });\n    })();\n  }\n  openNavigation() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      var _this8$attempt;\n      // Create the navigation modal.\n      const modalData = yield CoreDomUtils.openSideModal({\n        component: AddonModQuizNavigationModalComponent,\n        componentProps: {\n          navigation: _this8.navigation,\n          summaryShown: false,\n          currentPage: (_this8$attempt = _this8.attempt) === null || _this8$attempt === void 0 ? void 0 : _this8$attempt.currentpage,\n          isReview: true\n        }\n      });\n      if (!modalData) {\n        return;\n      }\n      _this8.changePage(modalData.page, modalData.slot);\n    })();\n  }\n  /**\n   * Perform log view.\n   *\n   * @param logInLMS Whether to log in LMS too or only in analytics.\n   * @param options Other options.\n   */\n  performLogView(logInLMS = false, options = {}) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this9.quiz) {\n        return;\n      }\n      if (logInLMS) {\n        yield CoreUtils.ignoreErrors(AddonModQuiz.logViewAttemptReview(_this9.attemptId, _this9.quiz.id));\n      }\n      let url = `/mod/quiz/review.php?attempt=${_this9.attemptId}&cmid=${_this9.cmId}`;\n      if (options.showAllDisabled) {\n        url += '&showall=0';\n      } else if (options.page && options.page > 0) {\n        url += `&page=${options.page}`;\n      }\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'mod_quiz_view_attempt_review',\n        name: _this9.quiz.name,\n        data: {\n          id: _this9.attemptId,\n          quizid: _this9.quiz.id,\n          page: options.page,\n          category: 'quiz'\n        },\n        url: url\n      });\n    })();\n  }\n}\n_class = AddonModQuizReviewPage;\n_class.ɵfac = function AddonModQuizReviewPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-quiz-review\"]],\n  viewQuery: function AddonModQuizReviewPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(IonContent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  decls: 19,\n  vars: 15,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [\"fill\", \"clear\", \"aria-haspopup\", \"true\", 3, \"click\", 4, \"ngIf\"], [1, \"limited-width\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [4, \"ngIf\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\", 4, \"ngIf\"], [\"fill\", \"clear\", \"aria-haspopup\", \"true\", 3, \"click\"], [\"name\", \"fas-bookmark\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [1, \"ion-text-wrap\"], [1, \"item-heading\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", 4, \"ngFor\", \"ngForOf\"], [\"contextLevel\", \"module\", 3, \"component\", \"componentId\", \"text\", \"contextInstanceId\", \"courseId\"], [4, \"ngFor\", \"ngForOf\"], [3, \"id\"], [\"class\", \"ion-text-wrap ion-margin-horizontal addon-mod_quiz-question-note\", \"slot\", \"end\", 4, \"ngIf\"], [\"contextLevel\", \"module\", 1, \"ion-text-wrap\", 3, \"question\", \"component\", \"componentId\", \"attemptId\", \"usageId\", \"offlineEnabled\", \"contextInstanceId\", \"courseId\", \"review\", \"preferredBehaviour\"], [\"slot\", \"end\", 1, \"ion-text-wrap\", \"ion-margin-horizontal\", \"addon-mod_quiz-question-note\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"innerHTML\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\"], [1, \"ion-justify-content-between\", \"ion-align-items-center\", \"ion-no-padding\", \"ion-wrap\"], [\"class\", \"ion-text-start ion-no-padding core-navigation-arrow\", \"size\", \"auto\", 4, \"ngIf\"], [1, \"ion-text-center\"], [\"class\", \"ion-text-wrap\", \"fill\", \"outline\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ion-text-end ion-no-padding core-navigation-arrow\", \"size\", \"auto\", 4, \"ngIf\"], [\"size\", \"auto\", 1, \"ion-text-start\", \"ion-no-padding\", \"core-navigation-arrow\"], [\"fill\", \"clear\", 3, \"disabled\", \"click\"], [\"name\", \"fas-chevron-left\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"fill\", \"outline\", 1, \"ion-text-wrap\", 3, \"click\"], [\"size\", \"auto\", 1, \"ion-text-end\", \"ion-no-padding\", \"core-navigation-arrow\"], [\"name\", \"fas-chevron-right\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"]],\n  template: function AddonModQuizReviewPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-buttons\", 2);\n      i0.ɵɵtemplate(10, AddonModQuizReviewPage_ion_button_10_Template, 3, 3, \"ion-button\", 3);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"ion-content\", 4)(12, \"ion-refresher\", 5);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModQuizReviewPage_Template_ion_refresher_ionRefresh_12_listener($event) {\n        return ctx.refreshData($event.target);\n      });\n      i0.ɵɵelement(13, \"ion-refresher-content\", 6);\n      i0.ɵɵpipe(14, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"core-loading\", 7);\n      i0.ɵɵtemplate(16, AddonModQuizReviewPage_ion_card_16_Template, 23, 16, \"ion-card\", 8);\n      i0.ɵɵtemplate(17, AddonModQuizReviewPage_div_17_Template, 2, 1, \"div\", 8);\n      i0.ɵɵtemplate(18, AddonModQuizReviewPage_div_18_Template, 6, 3, \"div\", 9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 9, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 11, \"addon.mod_quiz.review\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.navigation.length);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(14, 13, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.attempt);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.attempt && ctx.questions.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded && ctx.numPages > 1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreLoadingComponent, i3.CoreFaIconDirective, i4.CoreFormatTextDirective, i5.CoreCollapsibleFooterDirective, i6.CoreContentDirective, i7.CoreUpdateNonReactiveAttributesDirective, i8.IonButton, i8.IonButtons, i8.IonCard, i8.IonCol, i8.IonContent, i8.IonHeader, i8.IonIcon, i8.IonItem, i8.IonItemDivider, i8.IonLabel, i8.IonList, i8.IonRefresher, i8.IonRefresherContent, i8.IonRow, i8.IonTitle, i8.IonToolbar, i8.IonBackButton, i9.CoreQuestionComponent, i10.CoreFormatDatePipe, i11.TranslatePipe],\n  styles: [\"[_nghost-%COMP%]   .addon-mod_quiz-question-note[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin-top: 2px;\\n  margin-bottom: 2px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvbW9kL3F1aXovcGFnZXMvcmV2aWV3L3Jldmlldy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksZUFBQTtFQUNBLGtCQUFBO0FBQVIiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgLmFkZG9uLW1vZF9xdWl6LXF1ZXN0aW9uLW5vdGUgcCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDJweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["CoreQuestionHelper","IonContent","CoreNavigator","CoreDomUtils","CoreUtils","Translate","CoreDom","CoreTime","AddonModQuizNavigationModalComponent","AddonModQuiz","AddonModQuizProvider","AddonModQuizHelper","CoreAnalytics","CoreAnalyticsEventType","i0","ɵɵelementStart","ɵɵlistener","AddonModQuizReviewPage_ion_button_10_Template_ion_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","openNavigation","ɵɵelement","ɵɵelementEnd","ɵɵattribute","ɵɵpipeBind1","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r6","attempt","timefinish","ctx_r7","timeTaken","ctx_r8","overTime","ctx_r9","readableMark","ctx_r10","readableGrade","data_r12","title","ɵɵproperty","ctx_r11","component","cmId","content","courseId","ɵɵtemplate","AddonModQuizReviewPage_ion_card_16_ion_item_17_Template","AddonModQuizReviewPage_ion_card_16_ion_item_18_Template","AddonModQuizReviewPage_ion_card_16_ion_item_19_Template","AddonModQuizReviewPage_ion_card_16_ion_item_20_Template","AddonModQuizReviewPage_ion_card_16_ion_item_21_Template","AddonModQuizReviewPage_ion_card_16_ion_item_22_Template","ctx_r1","timestart","readableState","showCompleted","additionalData","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵpureFunction1","_c0","question_r14","questionnumber","status","ɵɵsanitizeHtml","AddonModQuizReviewPage_div_17_div_1_div_6_p_1_Template","AddonModQuizReviewPage_div_17_div_1_div_6_p_2_Template","AddonModQuizReviewPage_div_17_div_1_h2_4_Template","AddonModQuizReviewPage_div_17_div_1_h2_5_Template","AddonModQuizReviewPage_div_17_div_1_div_6_Template","ɵɵpropertyInterpolate1","slot","type","ctx_r13","id","uniqueid","quiz","preferredbehaviour","AddonModQuizReviewPage_div_17_div_1_Template","ctx_r2","questions","AddonModQuizReviewPage_div_18_ion_col_2_Template_ion_button_click_1_listener","_r28","ctx_r27","changePage","previousPage","ctx_r24","AddonModQuizReviewPage_div_18_ion_button_4_Template_ion_button_click_0_listener","_r32","ctx_r31","switchMode","AddonModQuizReviewPage_div_18_ion_button_4_span_1_Template","AddonModQuizReviewPage_div_18_ion_button_4_span_2_Template","ctx_r25","showAll","AddonModQuizReviewPage_div_18_ion_col_5_Template_ion_button_click_1_listener","_r34","ctx_r33","nextPage","ctx_r26","numPages","AddonModQuizReviewPage_div_18_ion_col_2_Template","AddonModQuizReviewPage_div_18_ion_button_4_Template","AddonModQuizReviewPage_div_18_ion_col_5_Template","ctx_r3","AddonModQuizReviewPage","constructor","elementRef","COMPONENT","loaded","navigation","logView","once","performLogView","showAllDisabled","page","currentPage","ngOnInit","_this","_asyncToGenerator","getRequiredRouteNumberParam","attemptId","getRouteNumberParam","error","showErrorModal","back","fetchData","_this2","_this2$attempt","_this2$content","undefined","currentpage","scrollToQuestion","scrollToTop","loadPage","showErrorModalDefault","_this3","getQuiz","options","getCombinedReviewOptions","loadNavigation","_this4","_this4$quiz","data","getAttemptReview","coursemodule","setSummaryCalculatedData","forEach","question","getQuestionMarkFromHtml","html","extractQuestionInfoBox","_this5","_this5$quiz","stateClass","getQuestionStateClass","state","lastQuestion","length","refreshData","refresher","_this6","promises","push","invalidateQuizData","invalidateAttemptReview","invalidateCombinedReviewOptionsForUser","ignoreErrors","Promise","all","complete","scrollToElement","nativeElement","_this$attempt$state","getAttemptReadableStateName","ATTEMPT_FINISHED","additionaldata","formatTime","timelimit","someoptions","marks","QUESTION_OPTIONS_MARK_AND_MAX","quizHasGrades","grade","formatGrade","decimalpoints","sumgrades","instant","$a","maxgrade","gradeObject","Number","_this$attempt$sumgrad","_this$quiz$sumgrades","percent","removeElementFromHtml","_this7","_this8","_this8$attempt","modalData","openSideModal","componentProps","summaryShown","isReview","logInLMS","_this9","logViewAttemptReview","url","logEvent","VIEW_ITEM","ws","name","quizid","category","ɵɵdirectiveInject","ElementRef","selectors","viewQuery","AddonModQuizReviewPage_Query","rf","ctx","AddonModQuizReviewPage_ion_button_10_Template","AddonModQuizReviewPage_Template_ion_refresher_ionRefresh_12_listener","$event","target","AddonModQuizReviewPage_ion_card_16_Template","AddonModQuizReviewPage_div_17_Template","AddonModQuizReviewPage_div_18_Template","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/pages/review/review.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/pages/review/review.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CoreQuestionQuestionParsed } from '@features/question/services/question';\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { IonContent } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreTime } from '@singletons/time';\nimport {\n    AddonModQuizNavigationModalComponent,\n    AddonModQuizNavigationModalReturn,\n    AddonModQuizNavigationQuestion,\n} from '../../components/navigation-modal/navigation-modal';\nimport {\n    AddonModQuiz,\n    AddonModQuizAttemptWSData,\n    AddonModQuizCombinedReviewOptions,\n    AddonModQuizGetAttemptReviewResponse,\n    AddonModQuizProvider,\n    AddonModQuizQuizWSData,\n    AddonModQuizWSAdditionalData,\n} from '../../services/quiz';\nimport { AddonModQuizHelper } from '../../services/quiz-helper';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Page that allows reviewing a quiz attempt.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-review',\n    templateUrl: 'review.html',\n    styleUrls: ['review.scss'],\n})\nexport class AddonModQuizReviewPage implements OnInit {\n\n    @ViewChild(IonContent) content?: IonContent;\n\n    attempt?: AddonModQuizAttemptWSData; // The attempt being reviewed.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    showAll = false; // Whether to view all questions in the same page.\n    numPages = 1; // Number of pages.\n    showCompleted = false; // Whether to show completed time.\n    additionalData?: AddonModQuizWSAdditionalData[]; // Additional data to display for the attempt.\n    loaded = false; // Whether data has been loaded.\n    navigation: AddonModQuizNavigationQuestion[] = []; // List of questions to navigate them.\n    questions: QuizQuestion[] = []; // Questions of the current page.\n    nextPage = -2; // Next page.\n    previousPage = -2; // Previous page.\n    readableState?: string;\n    readableGrade?: string;\n    readableMark?: string;\n    timeTaken?: string;\n    overTime?: string;\n    quiz?: AddonModQuizQuizWSData; // The quiz the attempt belongs to.\n    courseId!: number; // The course ID the quiz belongs to.\n    cmId!: number; // Course module id the attempt belongs to.\n\n    protected attemptId!: number; // The attempt being reviewed.\n    protected currentPage!: number; // The current page being reviewed.\n    protected options?: AddonModQuizCombinedReviewOptions; // Review options.\n    protected logView: () => void;\n\n    constructor(\n        protected elementRef: ElementRef,\n    ) {\n        this.logView = CoreTime.once(() => this.performLogView(true, {\n            showAllDisabled: !this.showAll,\n            page: this.currentPage,\n        }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.attemptId = CoreNavigator.getRequiredRouteNumberParam('attemptId');\n            this.currentPage = CoreNavigator.getRouteNumberParam('page') || -1;\n            this.showAll = this.currentPage == -1;\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        try {\n            await this.fetchData();\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Change the current page. If slot is supplied, try to scroll to that question.\n     *\n     * @param page Page to load. -1 means all questions in same page.\n     * @param slot Slot of the question to scroll to.\n     */\n    async changePage(page: number, slot?: number): Promise<void> {\n        if (slot !== undefined && (this.attempt?.currentpage == -1 || page == this.currentPage)) {\n            // Scrol to a certain question in the current page.\n            this.scrollToQuestion(slot);\n\n            return;\n        } else if (page == this.currentPage) {\n            // If the user is navigating to the current page and no question specified, we do nothing.\n            return;\n        }\n\n        this.loaded = false;\n        this.content?.scrollToTop();\n\n        try {\n            await this.loadPage(page);\n\n            this.performLogView(false, { page });\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n        } finally {\n            this.loaded = true;\n\n            if (slot !== undefined) {\n                // Scroll to the question.\n                this.scrollToQuestion(slot);\n            }\n        }\n    }\n\n    /**\n     * Convenience function to get the quiz data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        try {\n            this.quiz = await AddonModQuiz.getQuiz(this.courseId, this.cmId);\n\n            this.options = await AddonModQuiz.getCombinedReviewOptions(this.quiz.id, { cmId: this.cmId });\n\n            // Load the navigation data.\n            await this.loadNavigation();\n\n            // Load questions.\n            await this.loadPage(this.currentPage);\n\n            this.logView();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquiz', true);\n        }\n    }\n\n    /**\n     * Load a page questions.\n     *\n     * @param page The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async loadPage(page: number): Promise<void> {\n        const data = await AddonModQuiz.getAttemptReview(this.attemptId, { page, cmId: this.quiz?.coursemodule });\n\n        this.attempt = data.attempt;\n        this.attempt.currentpage = page;\n        this.currentPage = page;\n\n        // Set the summary data.\n        this.setSummaryCalculatedData(data);\n\n        this.questions = data.questions;\n        this.nextPage = page + 1;\n        this.previousPage = page - 1;\n\n        this.questions.forEach((question) => {\n            // Get the readable mark for each question.\n            question.readableMark = AddonModQuizHelper.getQuestionMarkFromHtml(question.html);\n\n            // Extract the question info box.\n            CoreQuestionHelper.extractQuestionInfoBox(question, '.info');\n        });\n    }\n\n    /**\n     * Load data to navigate the questions using the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadNavigation(): Promise<void> {\n        // Get all questions in single page to retrieve all the questions.\n        const data = await AddonModQuiz.getAttemptReview(this.attemptId, { page: -1, cmId: this.quiz?.coursemodule });\n\n        this.navigation = data.questions;\n\n        this.navigation.forEach((question) => {\n            question.stateClass = CoreQuestionHelper.getQuestionStateClass(question.state || '');\n        });\n\n        const lastQuestion = data.questions[data.questions.length - 1];\n        this.numPages = lastQuestion ? lastQuestion.page + 1 : 0;\n    }\n\n    /**\n     * Refreshes data.\n     *\n     * @param refresher Refresher\n     */\n    async refreshData(refresher: HTMLIonRefresherElement): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModQuiz.invalidateQuizData(this.courseId));\n        promises.push(AddonModQuiz.invalidateAttemptReview(this.attemptId));\n        if (this.quiz) {\n            promises.push(AddonModQuiz.invalidateCombinedReviewOptionsForUser(this.quiz.id));\n        }\n\n        await CoreUtils.ignoreErrors(Promise.all(promises));\n\n        try {\n            await this.fetchData();\n        } finally {\n            refresher.complete();\n        }\n    }\n\n    /**\n     * Scroll to a certain question.\n     *\n     * @param slot Slot of the question to scroll to.\n     */\n    protected scrollToQuestion(slot: number): void {\n        CoreDom.scrollToElement(\n            this.elementRef.nativeElement,\n            `#addon-mod_quiz-question-${slot}`,\n        );\n    }\n\n    /**\n     * Calculate review summary data.\n     *\n     * @param data Result of getAttemptReview.\n     */\n    protected setSummaryCalculatedData(data: AddonModQuizGetAttemptReviewResponse): void {\n        if (!this.attempt || !this.quiz) {\n            return;\n        }\n\n        this.readableState = AddonModQuiz.getAttemptReadableStateName(this.attempt.state ?? '');\n\n        if (this.attempt.state != AddonModQuizProvider.ATTEMPT_FINISHED) {\n            return;\n        }\n\n        this.showCompleted = true;\n        this.additionalData = data.additionaldata;\n\n        const timeTaken = (this.attempt.timefinish || 0) - (this.attempt.timestart || 0);\n        if (timeTaken > 0) {\n            // Format time taken.\n            this.timeTaken = CoreTime.formatTime(timeTaken);\n\n            // Calculate overdue time.\n            if (this.quiz.timelimit && timeTaken > this.quiz.timelimit + 60) {\n                this.overTime = CoreTime.formatTime(timeTaken - this.quiz.timelimit);\n            }\n        } else {\n            this.timeTaken = undefined;\n        }\n\n        // Treat grade.\n        if (this.options && this.options.someoptions.marks >= AddonModQuizProvider.QUESTION_OPTIONS_MARK_AND_MAX &&\n                AddonModQuiz.quizHasGrades(this.quiz)) {\n\n            if (data.grade === null || data.grade === undefined) {\n                this.readableGrade = AddonModQuiz.formatGrade(data.grade, this.quiz.decimalpoints);\n            } else {\n                // Show raw marks only if they are different from the grade (like on the entry page).\n                if (this.quiz.grade != this.quiz.sumgrades) {\n                    this.readableMark = Translate.instant('addon.mod_quiz.outofshort', { $a: {\n                        grade: AddonModQuiz.formatGrade(this.attempt.sumgrades, this.quiz.decimalpoints),\n                        maxgrade: AddonModQuiz.formatGrade(this.quiz.sumgrades, this.quiz.decimalpoints),\n                    } });\n                }\n\n                // Now the scaled grade.\n                const gradeObject: Record<string, unknown> = {\n                    grade: AddonModQuiz.formatGrade(Number(data.grade), this.quiz.decimalpoints),\n                    maxgrade: AddonModQuiz.formatGrade(this.quiz.grade, this.quiz.decimalpoints),\n                };\n\n                if (this.quiz.grade != 100) {\n                    gradeObject.percent = AddonModQuiz.formatGrade(\n                        (this.attempt.sumgrades ?? 0) * 100 / (this.quiz.sumgrades ?? 1),\n                        this.quiz.decimalpoints,\n                    );\n                    this.readableGrade = Translate.instant('addon.mod_quiz.outofpercent', { $a: gradeObject });\n                } else {\n                    this.readableGrade = Translate.instant('addon.mod_quiz.outof', { $a: gradeObject });\n                }\n            }\n        }\n\n        // Treat additional data.\n        this.additionalData.forEach((data) => {\n            // Remove help links from additional data.\n            data.content = CoreDomUtils.removeElementFromHtml(data.content, '.helptooltip');\n        });\n    }\n\n    /**\n     * Switch mode: all questions in same page OR one page at a time.\n     */\n    async switchMode(): Promise<void> {\n        this.showAll = !this.showAll;\n\n        // Load all questions or first page, depending on the mode.\n        await this.loadPage(this.showAll ? -1 : 0);\n\n        this.performLogView(false, { showAllDisabled: !this.showAll });\n    }\n\n    async openNavigation(): Promise<void> {\n        // Create the navigation modal.\n        const modalData = await CoreDomUtils.openSideModal<AddonModQuizNavigationModalReturn>({\n            component: AddonModQuizNavigationModalComponent,\n            componentProps: {\n                navigation: this.navigation,\n                summaryShown: false,\n                currentPage: this.attempt?.currentpage,\n                isReview: true,\n            },\n        });\n\n        if (!modalData) {\n            return;\n        }\n\n        this.changePage(modalData.page, modalData.slot);\n    }\n\n    /**\n     * Perform log view.\n     *\n     * @param logInLMS Whether to log in LMS too or only in analytics.\n     * @param options Other options.\n     */\n    protected async performLogView(logInLMS = false, options: LogViewOptions = {}): Promise<void> {\n        if (!this.quiz) {\n            return;\n        }\n\n        if (logInLMS) {\n            await CoreUtils.ignoreErrors(AddonModQuiz.logViewAttemptReview(this.attemptId, this.quiz.id));\n        }\n\n        let url = `/mod/quiz/review.php?attempt=${this.attemptId}&cmid=${this.cmId}`;\n        if (options.showAllDisabled) {\n            url += '&showall=0';\n        } else if (options.page && options.page > 0) {\n            url += `&page=${ options.page}`;\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_quiz_view_attempt_review',\n            name: this.quiz.name,\n            data: { id: this.attemptId, quizid: this.quiz.id, page: options.page, category: 'quiz' },\n            url: url,\n        });\n    }\n\n}\n\n/**\n * Question with some calculated data for the view.\n */\ntype QuizQuestion = CoreQuestionQuestionParsed & {\n    readableMark?: string;\n};\n\ntype LogViewOptions = {\n    page?: number; // Page being viewed (if viewing pages);\n    showAllDisabled?: boolean; // Whether the showAll option has just been disabled.\n};\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.mod_quiz.review' | translate }}</h1>\n        </ion-title>\n\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" *ngIf=\"navigation.length\" [attr.aria-label]=\"'addon.mod_quiz.opentoc' | translate\"\n                (click)=\"openNavigation()\" aria-haspopup=\"true\">\n                <ion-icon name=\"fas-bookmark\" slot=\"icon-only\" aria-hidden=\"true\" />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refreshData($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"loaded\">\n\n        <!-- Review summary -->\n        <ion-card *ngIf=\"attempt\">\n            <ion-list>\n                <ion-item class=\"ion-text-wrap\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.mod_quiz.startedon' | translate }}</p>\n                        <p>{{ attempt.timestart! * 1000 | coreFormatDate }}</p>\n                    </ion-label>\n                </ion-item>\n                <ion-item class=\"ion-text-wrap\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.mod_quiz.attemptstate' | translate }}</p>\n                        <p>{{ readableState }}</p>\n                    </ion-label>\n                </ion-item>\n                <ion-item class=\"ion-text-wrap\" *ngIf=\"showCompleted\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.mod_quiz.completedon' | translate }}</p>\n                        <p>{{ attempt.timefinish! * 1000 | coreFormatDate }}</p>\n                    </ion-label>\n                </ion-item>\n                <ion-item class=\"ion-text-wrap\" *ngIf=\"timeTaken\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.mod_quiz.timetaken' | translate }}</p>\n                        <p>{{ timeTaken }}</p>\n                    </ion-label>\n                </ion-item>\n                <ion-item class=\"ion-text-wrap\" *ngIf=\"overTime\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.mod_quiz.overdue' | translate }}</p>\n                        <p>{{ overTime }}</p>\n                    </ion-label>\n                </ion-item>\n                <ion-item class=\"ion-text-wrap\" *ngIf=\"readableMark\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.mod_quiz.marks' | translate }}</p>\n                        <p>{{ readableMark }}</p>\n                    </ion-label>\n                </ion-item>\n                <ion-item class=\"ion-text-wrap\" *ngIf=\"readableGrade\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.mod_quiz.grade' | translate }}</p>\n                        <p>{{ readableGrade }}</p>\n                    </ion-label>\n                </ion-item>\n                <ion-item class=\"ion-text-wrap\" *ngFor=\"let data of additionalData\">\n                    <ion-label>\n                        <p class=\"item-heading\">{{ data.title }}</p>\n                        <core-format-text [component]=\"component\" [componentId]=\"cmId\" [text]=\"data.content\" contextLevel=\"module\"\n                            [contextInstanceId]=\"cmId\" [courseId]=\"courseId\" />\n                    </ion-label>\n                </ion-item>\n            </ion-list>\n        </ion-card>\n\n        <!-- Questions -->\n        <div *ngIf=\"attempt && questions.length\">\n\n            <!-- Questions. -->\n            <div *ngFor=\"let question of questions\">\n                <ion-card id=\"addon-mod_quiz-question-{{question.slot}}\">\n                    <!-- \"Header\" of the question. -->\n                    <ion-item-divider>\n                        <ion-label class=\"ion-text-wrap\">\n                            <h2 *ngIf=\"question.type !== 'description' && question.questionnumber\">\n                                {{ 'core.question.questionno' | translate:{$a: question.questionnumber} }}\n                            </h2>\n                            <h2 *ngIf=\"question.type === 'description' || !question.questionnumber\">\n                                {{ 'core.question.information' | translate }}\n                            </h2>\n                        </ion-label>\n                        <div class=\"ion-text-wrap ion-margin-horizontal addon-mod_quiz-question-note\" slot=\"end\"\n                            *ngIf=\"question.status || question.readableMark\">\n                            <p *ngIf=\"question.status\">{{question.status}}</p>\n                            <p *ngIf=\"question.readableMark\" [innerHTML]=\"question.readableMark\"></p>\n                        </div>\n                    </ion-item-divider>\n\n                    <!-- Body of the question. -->\n                    <core-question class=\"ion-text-wrap\" [question]=\"question\" [component]=\"component\" [componentId]=\"cmId\"\n                        [attemptId]=\"attempt.id\" [usageId]=\"attempt.uniqueid\" [offlineEnabled]=\"false\" contextLevel=\"module\"\n                        [contextInstanceId]=\"cmId\" [courseId]=\"courseId\" [review]=\"true\" [preferredBehaviour]=\"quiz?.preferredbehaviour\" />\n                </ion-card>\n            </div>\n        </div>\n\n        <div collapsible-footer appearOnBottom *ngIf=\"loaded && numPages > 1\" slot=\"fixed\">\n            <ion-row class=\"ion-justify-content-between ion-align-items-center ion-no-padding ion-wrap\">\n                <ion-col class=\"ion-text-start ion-no-padding core-navigation-arrow\" size=\"auto\" *ngIf=\"!showAll\">\n                    <ion-button [disabled]=\"previousPage < 0\" fill=\"clear\" [attr.aria-label]=\"'core.previous' | translate\"\n                        (click)=\"changePage(previousPage)\">\n                        <ion-icon name=\"fas-chevron-left\" slot=\"icon-only\" aria-hidden=\"true\" />\n                    </ion-button>\n                </ion-col>\n                <ion-col class=\"ion-text-center\">\n                    <!-- In review we can toggle between all questions in same page or one page at a time. -->\n                    <ion-button class=\"ion-text-wrap\" *ngIf=\"numPages > 1\" (click)=\"switchMode()\" fill=\"outline\">\n                        <span *ngIf=\"!showAll\">{{ 'addon.mod_quiz.showall' | translate }}</span>\n                        <span *ngIf=\"showAll\">{{ 'addon.mod_quiz.showeachpage' | translate }}</span>\n                    </ion-button>\n                </ion-col>\n                <ion-col class=\"ion-text-end ion-no-padding core-navigation-arrow\" size=\"auto\" *ngIf=\"!showAll\">\n                    <ion-button [disabled]=\"nextPage >= numPages\" fill=\"clear\" [attr.aria-label]=\"'core.next' | translate\"\n                        (click)=\"changePage(nextPage)\">\n                        <ion-icon name=\"fas-chevron-right\" slot=\"icon-only\" aria-hidden=\"true\" />\n                    </ion-button>\n                </ion-col>\n            </ion-row>\n        </div>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}