{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\n/**\n * Handler to support a enrol using a site plugin.\n */\nexport class CoreSitePluginsEnrolHandler extends CoreSitePluginsBaseHandler {\n  constructor(name, type, enrolmentAction, handlerSchema, initResult) {\n    super(name);\n    this.type = type;\n    this.enrolmentAction = enrolmentAction;\n    this.handlerSchema = handlerSchema;\n    this.initResult = initResult;\n    this.logger = CoreLogger.getInstance('CoreSitePluginsEnrolHandler');\n  }\n  /**\n   * @inheritdoc\n   */\n  getInfoIcons() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$handlerSchema$i;\n      return (_this$handlerSchema$i = _this.handlerSchema.infoIcons) !== null && _this$handlerSchema$i !== void 0 ? _this$handlerSchema$i : [];\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidate() {\n    return _asyncToGenerator(function* () {})();\n  } // To be overridden.\n  /**\n   * @inheritdoc\n   */\n  enrol() {\n    return _asyncToGenerator(function* () {\n      // To be overridden.\n      return false;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  canAccess() {\n    return _asyncToGenerator(function* () {\n      // To be overridden.\n      return {\n        canAccess: false\n      };\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  validateAccess() {\n    return _asyncToGenerator(function* () {\n      // To be overridden.\n      return false;\n    })();\n  }\n}","map":{"version":3,"names":["CoreLogger","CoreSitePluginsBaseHandler","CoreSitePluginsEnrolHandler","constructor","name","type","enrolmentAction","handlerSchema","initResult","logger","getInstance","getInfoIcons","_this","_asyncToGenerator","_this$handlerSchema$i","infoIcons","invalidate","enrol","canAccess","validateAccess"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/siteplugins/classes/handlers/enrol-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\nimport {\n    CoreEnrolAction,\n    CoreEnrolCanAccessData,\n    CoreEnrolHandler,\n    CoreEnrolInfoIcon,\n} from '@features/enrol/services/enrol-delegate';\nimport { CoreSitePluginsContent, CoreSitePluginsEnrolHandlerData } from '@features/siteplugins/services/siteplugins';\n\n/**\n * Handler to support a enrol using a site plugin.\n */\nexport class CoreSitePluginsEnrolHandler extends CoreSitePluginsBaseHandler implements CoreEnrolHandler {\n\n    protected logger: CoreLogger;\n\n    constructor(\n        name: string,\n        public type: string,\n        public enrolmentAction: CoreEnrolAction,\n        protected handlerSchema: CoreSitePluginsEnrolHandlerData,\n        protected initResult: CoreSitePluginsContent | null,\n    ) {\n        super(name);\n\n        this.logger = CoreLogger.getInstance('CoreSitePluginsEnrolHandler');\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getInfoIcons(): Promise<CoreEnrolInfoIcon[]> {\n        return this.handlerSchema.infoIcons ?? [];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidate(): Promise<void> {\n        // To be overridden.\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async enrol(): Promise<boolean> {\n        // To be overridden.\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async canAccess(): Promise<CoreEnrolCanAccessData> {\n        // To be overridden.\n        return { canAccess: false };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async validateAccess(): Promise<boolean> {\n        // To be overridden.\n        return false;\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,0BAA0B,QAAQ,gBAAgB;AAS3D;;;AAGA,OAAM,MAAOC,2BAA4B,SAAQD,0BAA0B;EAIvEE,YACIC,IAAY,EACLC,IAAY,EACZC,eAAgC,EAC7BC,aAA8C,EAC9CC,UAAyC;IAEnD,KAAK,CAACJ,IAAI,CAAC;IALJ,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,eAAe,GAAfA,eAAe;IACZ,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,UAAU,GAAVA,UAAU;IAIpB,IAAI,CAACC,MAAM,GAAGT,UAAU,CAACU,WAAW,CAAC,6BAA6B,CAAC;EACvE;EAEA;;;EAGMC,YAAYA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAAA,IAAAC,qBAAA;MACd,QAAAA,qBAAA,GAAOF,KAAI,CAACL,aAAa,CAACQ,SAAS,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,EAAE;IAAC;EAC9C;EAEA;;;EAGME,UAAUA,CAAA;IAAA,OAAAH,iBAAA;EAEhB,CAAC,CADG;EAGJ;;;EAGMI,KAAKA,CAAA;IAAA,OAAAJ,iBAAA;MACP;MACA,OAAO,KAAK;IAAC;EACjB;EAEA;;;EAGMK,SAASA,CAAA;IAAA,OAAAL,iBAAA;MACX;MACA,OAAO;QAAEK,SAAS,EAAE;MAAK,CAAE;IAAC;EAChC;EAEA;;;EAGMC,cAAcA,CAAA;IAAA,OAAAN,iBAAA;MAChB;MACA,OAAO,KAAK;IAAC;EACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}