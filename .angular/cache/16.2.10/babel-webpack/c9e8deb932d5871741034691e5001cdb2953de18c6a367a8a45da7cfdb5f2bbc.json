{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreCoursesProvider, CoreCourses } from '@features/courses/services/courses';\nimport { CoreCoursesHelper } from '@features/courses/services/courses-helper';\nimport { CoreCourseOptionsDelegate } from '@features/course/services/course-options-delegate';\nimport { AddonCourseCompletion } from '@addons/coursecompletion/services/coursecompletion';\nimport { CoreBlockBaseComponent } from '@features/block/classes/base-block-component';\nimport { CoreUtils } from '@services/utils/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/empty-box/empty-box\";\nimport * as i3 from \"../../../../../core/components/loading/loading\";\nimport * as i4 from \"../../../../../core/components/horizontal-scroll-controls/horizontal-scroll-controls\";\nimport * as i5 from \"../../../../../core/directives/on-resize\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"../../../../../core/features/courses/components/course-list-item/course-list-item\";\nimport * as i8 from \"@ngx-translate/core\";\nfunction AddonBlockRecentlyAccessedCoursesComponent_core_empty_box_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 11);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"addon.block_recentlyaccessedcourses.nocourses\"));\n  }\n}\nfunction AddonBlockRecentlyAccessedCoursesComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"core-courses-course-list-item\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const course_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"course\", course_r3);\n  }\n}\n/**\n * Component to render a recent courses block.\n */\nexport class AddonBlockRecentlyAccessedCoursesComponent extends CoreBlockBaseComponent {\n  constructor() {\n    super('AddonBlockRecentlyAccessedCoursesComponent');\n    this.courses = [];\n    this.isDestroyed = false;\n    this.fetchContentDefaultError = 'Error getting recent courses data.';\n    this.site = CoreSites.getRequiredCurrentSite();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _superprop_getNgOnInit = () => super.ngOnInit,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      // Generate unique id for scroll element.\n      const scrollId = CoreUtils.getUniqueId('AddonBlockRecentlyAccessedCoursesComponent-Scroll');\n      _this.scrollElementId = `addon-block-recentlyaccessedcourses-scroll-${scrollId}`;\n      _this.coursesObserver = CoreEvents.on(CoreCoursesProvider.EVENT_MY_COURSES_UPDATED, data => {\n        _this.refreshCourseList(data);\n      }, _this.site.getId());\n      _superprop_getNgOnInit().call(_this);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateContent() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const courseIds = _this2.courses.map(course => course.id);\n      yield _this2.invalidateCourses(courseIds);\n    })();\n  }\n  /**\n   * Invalidate list of courses.\n   *\n   * @returns Promise resolved when done.\n   */\n  invalidateCourseList() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.site.isVersionGreaterEqualThan('3.8') ? CoreCourses.invalidateRecentCourses() : CoreCourses.invalidateUserCourses();\n    })();\n  }\n  /**\n   * Helper function to invalidate only selected courses.\n   *\n   * @param courseIds Course Id array.\n   * @returns Promise resolved when done.\n   */\n  invalidateCourses(courseIds) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      // Invalidate course completion data.\n      promises.push(_this4.invalidateCourseList().finally(() => CoreUtils.allPromises(courseIds.map(courseId => AddonCourseCompletion.invalidateCourseCompletion(courseId)))));\n      if (courseIds.length == 1) {\n        promises.push(CoreCourseOptionsDelegate.clearAndInvalidateCoursesOptions(courseIds[0]));\n      } else {\n        promises.push(CoreCourseOptionsDelegate.clearAndInvalidateCoursesOptions());\n      }\n      if (courseIds.length > 0) {\n        promises.push(CoreCourses.invalidateCoursesByField('ids', courseIds.join(',')));\n      }\n      yield CoreUtils.allPromises(promises);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  fetchContent() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const showCategories = _this5.block.configsRecord && _this5.block.configsRecord.displaycategories && _this5.block.configsRecord.displaycategories.value == '1';\n      let recentCourses = [];\n      try {\n        recentCourses = yield CoreCourses.getRecentCourses();\n      } catch (_unused) {\n        // WS is failing on 3.7 and bellow, use a fallback.\n        _this5.courses = yield CoreCoursesHelper.getUserCoursesWithOptions('lastaccess', 10, undefined, showCategories);\n        return;\n      }\n      const courseIds = recentCourses.map(course => course.id);\n      // Get the courses using getCoursesByField to get more info about each course.\n      const courses = yield CoreCourses.getCoursesByField('ids', courseIds.join(','));\n      _this5.courses = recentCourses.map(recentCourse => {\n        const course = courses.find(course => recentCourse.id == course.id);\n        return Object.assign(recentCourse, course);\n      });\n      // Get course options and extra info.\n      const options = yield CoreCourses.getCoursesAdminAndNavOptions(courseIds);\n      _this5.courses.forEach(course => {\n        course.navOptions = options.navOptions[course.id];\n        course.admOptions = options.admOptions[course.id];\n        if (!showCategories) {\n          course.categoryname = '';\n        }\n      });\n    })();\n  }\n  /**\n   * Refresh course list based on a EVENT_MY_COURSES_UPDATED event.\n   *\n   * @param data Event data.\n   * @returns Promise resolved when done.\n   */\n  refreshCourseList(data) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n        // Always update if user enrolled in a course.\n        return _this6.refreshContent();\n      }\n      const courseIndex = _this6.courses.findIndex(course => course.id == data.courseId);\n      const course = _this6.courses[courseIndex];\n      if (data.action == CoreCoursesProvider.ACTION_VIEW && data.courseId != CoreSites.getCurrentSiteHomeId()) {\n        if (!course) {\n          // Not found, use WS update.\n          return _this6.refreshContent();\n        }\n        // Place at the begining.\n        _this6.courses.splice(courseIndex, 1);\n        _this6.courses.unshift(course);\n        yield _this6.invalidateCourseList();\n      }\n      if (data.action == CoreCoursesProvider.ACTION_STATE_CHANGED && data.state == CoreCoursesProvider.STATE_FAVOURITE && course) {\n        course.isfavourite = !!data.value;\n        yield _this6.invalidateCourseList();\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$coursesObserver;\n    this.isDestroyed = true;\n    (_this$coursesObserver = this.coursesObserver) === null || _this$coursesObserver === void 0 || _this$coursesObserver.off();\n  }\n}\n_class = AddonBlockRecentlyAccessedCoursesComponent;\n_class.ɵfac = function AddonBlockRecentlyAccessedCoursesComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-block-recentlyaccessedcourses\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 10,\n  consts: [[3, \"sticky\"], [\"slot\", \"end\", 1, \"flex-row\"], [3, \"aria-controls\"], [\"scrollControls\", \"\"], [3, \"hideUntil\"], [\"image\", \"assets/img/icons/courses.svg\", 3, \"message\", 4, \"ngIf\"], [1, \"core-horizontal-scroll\", 3, \"hidden\", \"id\", \"scroll\"], [1, \"flex-row\", 3, \"onResize\"], [1, \"safe-area-pseudo-padding-start\"], [4, \"ngFor\", \"ngForOf\"], [1, \"safe-area-pseudo-padding-end\"], [\"image\", \"assets/img/icons/courses.svg\", 3, \"message\"], [\"layout\", \"summarycard\", 1, \"core-recentlyaccessedcourses\", 3, \"course\"]],\n  template: function AddonBlockRecentlyAccessedCoursesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"ion-item-divider\", 0)(1, \"ion-label\")(2, \"h2\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1);\n      i0.ɵɵelement(6, \"core-horizontal-scroll-controls\", 2, 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"core-loading\", 4);\n      i0.ɵɵtemplate(9, AddonBlockRecentlyAccessedCoursesComponent_core_empty_box_9_Template, 2, 3, \"core-empty-box\", 5);\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵlistener(\"scroll\", function AddonBlockRecentlyAccessedCoursesComponent_Template_div_scroll_10_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(_r0.updateScrollPosition());\n      });\n      i0.ɵɵelementStart(11, \"div\", 7);\n      i0.ɵɵlistener(\"onResize\", function AddonBlockRecentlyAccessedCoursesComponent_Template_div_onResize_11_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(_r0.updateScrollPosition());\n      });\n      i0.ɵɵelement(12, \"div\", 8);\n      i0.ɵɵtemplate(13, AddonBlockRecentlyAccessedCoursesComponent_ng_container_13_Template, 2, 1, \"ng-container\", 9);\n      i0.ɵɵelement(14, \"div\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"sticky\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 8, \"addon.block_recentlyaccessedcourses.pluginname\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"aria-controls\", ctx.scrollElementId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.courses.length === 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", ctx.courses.length === 0)(\"id\", ctx.scrollElementId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreEmptyBoxComponent, i3.CoreLoadingComponent, i4.CoreHorizontalScrollControlsComponent, i5.CoreOnResizeDirective, i6.IonItemDivider, i6.IonLabel, i7.CoreCoursesCourseListItemComponent, i8.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreEvents","CoreSites","CoreCoursesProvider","CoreCourses","CoreCoursesHelper","CoreCourseOptionsDelegate","AddonCourseCompletion","CoreBlockBaseComponent","CoreUtils","i0","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵadvance","course_r3","AddonBlockRecentlyAccessedCoursesComponent","constructor","courses","isDestroyed","fetchContentDefaultError","site","getRequiredCurrentSite","ngOnInit","_superprop_getNgOnInit","_this","_asyncToGenerator","scrollId","getUniqueId","scrollElementId","coursesObserver","on","EVENT_MY_COURSES_UPDATED","data","refreshCourseList","getId","call","invalidateContent","_this2","courseIds","map","course","id","invalidateCourses","invalidateCourseList","_this3","isVersionGreaterEqualThan","invalidateRecentCourses","invalidateUserCourses","_this4","promises","push","finally","allPromises","courseId","invalidateCourseCompletion","length","clearAndInvalidateCoursesOptions","invalidateCoursesByField","join","fetchContent","_this5","showCategories","block","configsRecord","displaycategories","value","recentCourses","getRecentCourses","_unused","getUserCoursesWithOptions","undefined","getCoursesByField","recentCourse","find","Object","assign","options","getCoursesAdminAndNavOptions","forEach","navOptions","admOptions","categoryname","_this6","action","ACTION_ENROL","refreshContent","courseIndex","findIndex","ACTION_VIEW","getCurrentSiteHomeId","splice","unshift","ACTION_STATE_CHANGED","state","STATE_FAVOURITE","isfavourite","ngOnDestroy","_this$coursesObserver","off","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonBlockRecentlyAccessedCoursesComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddonBlockRecentlyAccessedCoursesComponent_core_empty_box_9_Template","ɵɵlistener","AddonBlockRecentlyAccessedCoursesComponent_Template_div_scroll_10_listener","ɵɵrestoreView","_r4","_r0","ɵɵreference","ɵɵresetView","updateScrollPosition","AddonBlockRecentlyAccessedCoursesComponent_Template_div_onResize_11_listener","AddonBlockRecentlyAccessedCoursesComponent_ng_container_13_Template","ɵɵtextInterpolate","loaded"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/recentlyaccessedcourses/components/recentlyaccessedcourses/recentlyaccessedcourses.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/recentlyaccessedcourses/components/recentlyaccessedcourses/addon-block-recentlyaccessedcourses.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport {\n    CoreCoursesProvider,\n    CoreCoursesMyCoursesUpdatedEventData,\n    CoreCourses,\n    CoreCourseSummaryData,\n} from '@features/courses/services/courses';\nimport {\n    CoreCourseSearchedDataWithExtraInfoAndOptions,\n    CoreCoursesHelper,\n    CoreEnrolledCourseDataWithOptions,\n} from '@features/courses/services/courses-helper';\nimport { CoreCourseOptionsDelegate } from '@features/course/services/course-options-delegate';\nimport { AddonCourseCompletion } from '@addons/coursecompletion/services/coursecompletion';\nimport { CoreBlockBaseComponent } from '@features/block/classes/base-block-component';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreSite } from '@classes/sites/site';\n\n/**\n * Component to render a recent courses block.\n */\n@Component({\n    selector: 'addon-block-recentlyaccessedcourses',\n    templateUrl: 'addon-block-recentlyaccessedcourses.html',\n})\nexport class AddonBlockRecentlyAccessedCoursesComponent extends CoreBlockBaseComponent implements OnInit, OnDestroy {\n\n    courses: AddonBlockRecentlyAccessedCourse[] = [];\n\n    scrollElementId!: string;\n\n    protected site!: CoreSite;\n    protected isDestroyed = false;\n    protected coursesObserver?: CoreEventObserver;\n    protected fetchContentDefaultError = 'Error getting recent courses data.';\n\n    constructor() {\n        super('AddonBlockRecentlyAccessedCoursesComponent');\n\n        this.site = CoreSites.getRequiredCurrentSite();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        // Generate unique id for scroll element.\n        const scrollId = CoreUtils.getUniqueId('AddonBlockRecentlyAccessedCoursesComponent-Scroll');\n\n        this.scrollElementId = `addon-block-recentlyaccessedcourses-scroll-${scrollId}`;\n\n        this.coursesObserver = CoreEvents.on(\n            CoreCoursesProvider.EVENT_MY_COURSES_UPDATED,\n            (data) => {\n                this.refreshCourseList(data);\n            },\n            this.site.getId(),\n        );\n\n        super.ngOnInit();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidateContent(): Promise<void> {\n        const courseIds = this.courses.map((course) => course.id);\n\n        await this.invalidateCourses(courseIds);\n    }\n\n    /**\n     * Invalidate list of courses.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async invalidateCourseList(): Promise<void> {\n        return this.site.isVersionGreaterEqualThan('3.8')\n            ? CoreCourses.invalidateRecentCourses()\n            : CoreCourses.invalidateUserCourses();\n    }\n\n    /**\n     * Helper function to invalidate only selected courses.\n     *\n     * @param courseIds Course Id array.\n     * @returns Promise resolved when done.\n     */\n    protected async invalidateCourses(courseIds: number[]): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        // Invalidate course completion data.\n        promises.push(this.invalidateCourseList().finally(() =>\n            CoreUtils.allPromises(courseIds.map((courseId) =>\n                AddonCourseCompletion.invalidateCourseCompletion(courseId)))));\n\n        if (courseIds.length  == 1) {\n            promises.push(CoreCourseOptionsDelegate.clearAndInvalidateCoursesOptions(courseIds[0]));\n        } else {\n            promises.push(CoreCourseOptionsDelegate.clearAndInvalidateCoursesOptions());\n        }\n        if (courseIds.length > 0) {\n            promises.push(CoreCourses.invalidateCoursesByField('ids', courseIds.join(',')));\n        }\n\n        await CoreUtils.allPromises(promises);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async fetchContent(): Promise<void> {\n        const showCategories = this.block.configsRecord && this.block.configsRecord.displaycategories &&\n            this.block.configsRecord.displaycategories.value == '1';\n\n        let recentCourses: CoreCourseSummaryData[] = [];\n        try {\n            recentCourses = await CoreCourses.getRecentCourses();\n        } catch {\n            // WS is failing on 3.7 and bellow, use a fallback.\n            this.courses = await CoreCoursesHelper.getUserCoursesWithOptions('lastaccess', 10, undefined, showCategories);\n\n            return;\n        }\n\n        const courseIds = recentCourses.map((course) => course.id);\n\n        // Get the courses using getCoursesByField to get more info about each course.\n        const courses = await CoreCourses.getCoursesByField('ids', courseIds.join(','));\n\n        this.courses = recentCourses.map((recentCourse) => {\n            const course = courses.find((course) => recentCourse.id == course.id);\n\n            return Object.assign(recentCourse, course);\n        });\n\n        // Get course options and extra info.\n        const options = await CoreCourses.getCoursesAdminAndNavOptions(courseIds);\n        this.courses.forEach((course) => {\n            course.navOptions = options.navOptions[course.id];\n            course.admOptions = options.admOptions[course.id];\n\n            if (!showCategories) {\n                course.categoryname = '';\n            }\n        });\n    }\n\n    /**\n     * Refresh course list based on a EVENT_MY_COURSES_UPDATED event.\n     *\n     * @param data Event data.\n     * @returns Promise resolved when done.\n     */\n    protected async refreshCourseList(data: CoreCoursesMyCoursesUpdatedEventData): Promise<void> {\n        if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n            // Always update if user enrolled in a course.\n            return this.refreshContent();\n        }\n\n        const courseIndex = this.courses.findIndex((course) => course.id == data.courseId);\n        const course = this.courses[courseIndex];\n        if (data.action == CoreCoursesProvider.ACTION_VIEW && data.courseId != CoreSites.getCurrentSiteHomeId()) {\n            if (!course) {\n                // Not found, use WS update.\n                return this.refreshContent();\n            }\n\n            // Place at the begining.\n            this.courses.splice(courseIndex, 1);\n            this.courses.unshift(course);\n\n            await this.invalidateCourseList();\n        }\n\n        if (data.action == CoreCoursesProvider.ACTION_STATE_CHANGED &&\n            data.state == CoreCoursesProvider.STATE_FAVOURITE && course) {\n            course.isfavourite = !!data.value;\n            await this.invalidateCourseList();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.coursesObserver?.off();\n    }\n\n}\n\ntype AddonBlockRecentlyAccessedCourse =\n    (Omit<CoreCourseSummaryData, 'visible'> & CoreCourseSearchedDataWithExtraInfoAndOptions) |\n    (CoreEnrolledCourseDataWithOptions & {\n        categoryname?: string; // Category name,\n    });\n","<ion-item-divider [sticky]=\"true\">\n    <ion-label>\n        <h2>{{ 'addon.block_recentlyaccessedcourses.pluginname' | translate }}</h2>\n    </ion-label>\n    <div slot=\"end\" class=\"flex-row\">\n        <core-horizontal-scroll-controls #scrollControls [aria-controls]=\"scrollElementId\" />\n    </div>\n</ion-item-divider>\n<core-loading [hideUntil]=\"loaded\">\n    <core-empty-box *ngIf=\"courses.length === 0\" image=\"assets/img/icons/courses.svg\"\n        [message]=\"'addon.block_recentlyaccessedcourses.nocourses' | translate\" />\n    <!-- List of courses. -->\n    <div [hidden]=\"courses.length === 0\" [id]=\"scrollElementId\" class=\"core-horizontal-scroll\"\n        (scroll)=\"scrollControls.updateScrollPosition()\">\n        <div (onResize)=\"scrollControls.updateScrollPosition()\" class=\"flex-row\">\n            <div class=\"safe-area-pseudo-padding-start\"></div>\n            <ng-container *ngFor=\"let course of courses\">\n                <core-courses-course-list-item [course]=\"course\" class=\"core-recentlyaccessedcourses\" layout=\"summarycard\" />\n            </ng-container>\n            <div class=\"safe-area-pseudo-padding-end\"></div>\n        </div>\n    </div>\n</core-loading>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}