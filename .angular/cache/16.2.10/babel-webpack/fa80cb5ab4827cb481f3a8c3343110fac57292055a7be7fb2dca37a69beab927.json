{"ast":null,"code":"var _class;\nimport { Camera } from '@awesome-cordova-plugins/camera/ngx';\nimport { CoreEmulatorCaptureHelper } from './capture-helper';\nimport * as i0 from \"@angular/core\";\n/**\n * Emulates the Cordova Camera plugin in browser.\n */\nexport class CameraMock extends Camera {\n  /**\n   * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n   *\n   * @returns Promise resolved when done.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  cleanup() {\n    // This function is iOS only, nothing to do.\n    return Promise.resolve();\n  }\n  /**\n   * Take a picture.\n   *\n   * @param options Options that you want to pass to the camera.\n   * @returns Promise resolved when captured.\n   */\n  getPicture(options) {\n    return CoreEmulatorCaptureHelper.captureMedia('image', options);\n  }\n}\n_class = CameraMock;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵCameraMock_BaseFactory;\n  return function CameraMock_Factory(t) {\n    return (ɵCameraMock_BaseFactory || (ɵCameraMock_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["Camera","CoreEmulatorCaptureHelper","CameraMock","cleanup","Promise","resolve","getPicture","options","captureMedia","t","factory","ɵfac"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/emulator/services/camera.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Camera, CameraOptions } from '@awesome-cordova-plugins/camera/ngx';\n\nimport { CoreEmulatorCaptureHelper } from './capture-helper';\n\n/**\n * Emulates the Cordova Camera plugin in browser.\n */\n@Injectable()\nexport class CameraMock extends Camera {\n\n    /**\n     * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n     *\n     * @returns Promise resolved when done.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    cleanup(): Promise<any> {\n        // This function is iOS only, nothing to do.\n        return Promise.resolve();\n    }\n\n    /**\n     * Take a picture.\n     *\n     * @param options Options that you want to pass to the camera.\n     * @returns Promise resolved when captured.\n     */\n    getPicture(options: CameraOptions): Promise<string> {\n        return CoreEmulatorCaptureHelper.captureMedia('image', options);\n    }\n\n}\n"],"mappings":";AAeA,SAASA,MAAM,QAAuB,qCAAqC;AAE3E,SAASC,yBAAyB,QAAQ,kBAAkB;;AAE5D;;;AAIA,OAAM,MAAOC,UAAW,SAAQF,MAAM;EAElC;;;;;EAKA;EACAG,OAAOA,CAAA;IACH;IACA,OAAOC,OAAO,CAACC,OAAO,EAAE;EAC5B;EAEA;;;;;;EAMAC,UAAUA,CAACC,OAAsB;IAC7B,OAAON,yBAAyB,CAACO,YAAY,CAAC,OAAO,EAAED,OAAO,CAAC;EACnE;;SArBSL,UAAW;;;;2FAAXA,MAAU,IAAAO,CAAA,IAAVP,MAAU;EAAA;AAAA;;SAAVA,MAAU;EAAAQ,OAAA,EAAVR,MAAU,CAAAS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}