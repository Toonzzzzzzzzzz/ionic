{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreError } from '@classes/errors/error';\nimport { CoreCourseModuleMainActivityComponent } from '@features/course/classes/main-activity-component';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModChoice, AddonModChoiceProvider } from '../../services/choice';\nimport { AddonModChoiceOffline } from '../../services/choice-offline';\nimport { AddonModChoiceSync, AddonModChoiceSyncProvider } from '../../services/choice-sync';\nimport { AddonModChoicePrefetchHandler } from '../../services/handlers/prefetch';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@features/course/pages/contents/contents\";\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonModChoiceIndexComponent_ion_card_6_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, \"addon.mod_choice.previewonly\", i0.ɵɵpureFunction1(4, _c0, ctx_r9.openTimeReadable)));\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_6_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, \"addon.mod_choice.notopenyet\", i0.ɵɵpureFunction1(4, _c0, ctx_r10.openTimeReadable)));\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 9)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 10);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtemplate(4, AddonModChoiceIndexComponent_ion_card_6_p_4_Template, 3, 6, \"p\", 6);\n    i0.ɵɵtemplate(5, AddonModChoiceIndexComponent_ion_card_6_p_5_Template, 3, 6, \"p\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.options.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.options.length);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_7_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"core-format-text\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 4, \"addon.mod_choice.yourselection\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", ctx_r11.options[0].text)(\"contextInstanceId\", ctx_r11.module.id)(\"courseId\", ctx_r11.courseId);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 9)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 10);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtemplate(4, AddonModChoiceIndexComponent_ion_card_7_p_4_Template, 4, 6, \"p\", 6);\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.options.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 2, \"addon.mod_choice.expired\", i0.ɵɵpureFunction1(5, _c0, ctx_r1.closeTimeReadable)));\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 9)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 10);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 1, ctx_r2.publishInfo));\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    option: a0\n  };\n};\nfunction AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 14)(1, \"ion-label\");\n    i0.ɵɵtemplate(2, AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_ng_container_2_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-checkbox\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_Template_ion_checkbox_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const option_r15 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(option_r15.checked = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    const _r7 = i0.ɵɵreference(14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c1, option_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", option_r15.checked)(\"disabled\", option_r15.disabled || !ctx_r14.canEdit);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_Template, 4, 6, \"ion-item\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.options);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_ion_item_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 14)(1, \"ion-label\");\n    i0.ɵɵtemplate(2, AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_ion_item_1_ng_container_2_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"ion-radio\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    const _r7 = i0.ɵɵreference(14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c1, option_r20));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", option_r20.id)(\"disabled\", option_r20.disabled || !ctx_r19.canEdit);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-radio-group\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_Template_ion_radio_group_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.selectedOption.id = $event);\n    });\n    i0.ɵɵtemplate(1, AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_ion_item_1_Template, 4, 6, \"ion-item\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r13.selectedOption.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.options);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵtemplate(1, AddonModChoiceIndexComponent_ion_card_9_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵtemplate(2, AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_Template, 2, 2, \"ion-radio-group\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.choice.allowmultiple);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.choice.allowmultiple);\n  }\n}\nfunction AddonModChoiceIndexComponent_div_10_ion_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 24);\n    i0.ɵɵelement(1, \"ion-icon\", 25);\n    i0.ɵɵelementStart(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, \"addon.mod_choice.resultsnotsynced\"));\n  }\n}\nfunction AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, \"addon.mod_choice.limita\", i0.ɵɵpureFunction1(4, _c0, result_r27.maxanswer)), \" \");\n  }\n}\nfunction AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_ng_container_12_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 32);\n    i0.ɵɵelement(1, \"core-user-avatar\", 33);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r32 = ctx.$implicit;\n    const ctx_r31 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"courseId\", ctx_r31.courseId)(\"userId\", user_r32.userid);\n    i0.ɵɵattribute(\"aria-label\", user_r32.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", user_r32)(\"courseId\", ctx_r31.courseId)(\"linkProfile\", false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r32.fullname);\n  }\n}\nfunction AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_ng_container_12_ion_item_1_Template, 5, 7, \"ion-item\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const result_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", result_r27.userresponses);\n  }\n}\nfunction AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item-group\")(1, \"ion-item\", 28);\n    i0.ɵɵlistener(\"click\", function AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_Template_ion_item_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r35);\n      const result_r27 = restoredCtx.$implicit;\n      const ctx_r34 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r34.toggle(result_r27));\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 29);\n    i0.ɵɵelementStart(4, \"ion-label\")(5, \"h3\", 30);\n    i0.ɵɵelement(6, \"core-format-text\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_p_11_Template, 3, 6, \"p\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_ng_container_12_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r27 = ctx.$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"button\", result_r27.numberofuser > 0)(\"detail\", false);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 14, result_r27.expanded ? \"core.collapse\" : \"core.expand\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"expandable-status-icon-expanded\", result_r27.expanded);\n    i0.ɵɵproperty(\"name\", result_r27.numberofuser > 0 ? \"fas-chevron-right\" : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", result_r27.text)(\"contextInstanceId\", ctx_r26.module.id)(\"courseId\", ctx_r26.courseId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" \", i0.ɵɵpipeBind1(9, 16, \"addon.mod_choice.numberofuser\"), \": \", result_r27.numberofuser, \" (\", i0.ɵɵpipeBind2(10, 18, \"core.percentagenumber\", i0.ɵɵpureFunction1(21, _c0, result_r27.percentageamountfixed)), \") \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.choice.limitanswers && ctx_r26.choice.showavailable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", result_r27.expanded);\n  }\n}\nfunction AddonModChoiceIndexComponent_div_10_ion_col_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 26);\n    i0.ɵɵtemplate(1, AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_Template, 13, 23, \"ion-item-group\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r25.results);\n  }\n}\nfunction AddonModChoiceIndexComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item-divider\")(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"ion-grid\", 19)(7, \"ion-row\")(8, \"ion-col\", 20);\n    i0.ɵɵtemplate(9, AddonModChoiceIndexComponent_div_10_ion_item_9_Template, 5, 3, \"ion-item\", 21);\n    i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\");\n    i0.ɵɵelement(12, \"core-chart\", 22);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(13, AddonModChoiceIndexComponent_div_10_ion_col_13_Template, 2, 1, \"ion-col\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 7, \"addon.mod_choice.responses\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasOffline);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"data\", ctx_r4.data)(\"labels\", ctx_r4.labels)(\"contextInstanceId\", ctx_r4.module.id)(\"courseId\", ctx_r4.courseId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.choice.publish && ctx_r4.results);\n  }\n}\nfunction AddonModChoiceIndexComponent_ion_card_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 9)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 10);\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 1, \"addon.mod_choice.noresultsviewable\"));\n  }\n}\nfunction AddonModChoiceIndexComponent_div_12_div_1_ion_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 40);\n    i0.ɵɵlistener(\"click\", function AddonModChoiceIndexComponent_div_12_div_1_ion_button_1_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r39.delete());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_choice.removemychoice\"), \" \");\n  }\n}\nfunction AddonModChoiceIndexComponent_div_12_div_1_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 41);\n    i0.ɵɵlistener(\"click\", function AddonModChoiceIndexComponent_div_12_div_1_ion_button_2_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r41.save());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r38.canSave());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"addon.mod_choice.savemychoice\"), \" \");\n  }\n}\nfunction AddonModChoiceIndexComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, AddonModChoiceIndexComponent_div_12_div_1_ion_button_1_Template, 3, 3, \"ion-button\", 38);\n    i0.ɵɵtemplate(2, AddonModChoiceIndexComponent_div_12_div_1_ion_button_2_Template, 3, 4, \"ion-button\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r36.canDelete);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r36.canEdit);\n  }\n}\nfunction AddonModChoiceIndexComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtemplate(1, AddonModChoiceIndexComponent_div_12_div_1_Template, 3, 2, \"div\", 35);\n    i0.ɵɵelement(2, \"core-course-module-navigation\", 36);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.options.length && ctx_r6.choice && (ctx_r6.canEdit || ctx_r6.canDelete));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"courseId\", ctx_r6.courseId)(\"currentModuleId\", ctx_r6.module.id);\n  }\n}\nfunction AddonModChoiceIndexComponent_ng_template_13_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_choice.full\"), \" \");\n  }\n}\nfunction AddonModChoiceIndexComponent_ng_template_13_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const option_r43 = i0.ɵɵnextContext().option;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 2, \"addon.mod_choice.responsesa\", i0.ɵɵpureFunction1(8, _c0, option_r43.countanswers)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 5, \"addon.mod_choice.limita\", i0.ɵɵpureFunction1(10, _c0, option_r43.maxanswers)));\n  }\n}\nfunction AddonModChoiceIndexComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelement(1, \"core-format-text\", 11);\n    i0.ɵɵtemplate(2, AddonModChoiceIndexComponent_ng_template_13_span_2_Template, 3, 3, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AddonModChoiceIndexComponent_ng_template_13_ng_container_3_Template, 7, 12, \"ng-container\", 6);\n  }\n  if (rf & 2) {\n    const option_r43 = ctx.option;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", option_r43.text)(\"contextInstanceId\", ctx_r8.module.id)(\"courseId\", ctx_r8.courseId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.choice.limitanswers && option_r43.countanswers >= option_r43.maxanswers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.choice.limitanswers && ctx_r8.choice.showavailable);\n  }\n}\n/**\n * Component that displays a choice.\n */\nexport class AddonModChoiceIndexComponent extends CoreCourseModuleMainActivityComponent {\n  constructor(content, courseContentsPage) {\n    super('AddonModChoiceIndexComponent', content, courseContentsPage);\n    this.content = content;\n    this.component = AddonModChoiceProvider.COMPONENT;\n    this.pluginName = 'choice';\n    this.options = [];\n    this.selectedOption = {\n      id: -1\n    };\n    this.choiceNotOpenYet = false;\n    this.choiceClosed = false;\n    this.canEdit = false;\n    this.canDelete = false;\n    this.canSeeResults = false;\n    this.data = [];\n    this.labels = [];\n    this.results = [];\n    this.syncEventName = AddonModChoiceSyncProvider.AUTO_SYNCED;\n    this.hasAnsweredOnline = false;\n    this.now = Date.now();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _superprop_getNgOnInit = () => super.ngOnInit,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      _superprop_getNgOnInit().call(_this);\n      _this.userId = CoreSites.getCurrentSiteUserId();\n      yield _this.loadContent(false, true);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateContent() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonModChoice.invalidateChoiceData(_this2.courseId));\n      if (_this2.choice) {\n        promises.push(AddonModChoice.invalidateOptions(_this2.choice.id));\n        promises.push(AddonModChoice.invalidateResults(_this2.choice.id));\n      }\n      yield Promise.all(promises);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isRefreshSyncNeeded(syncEventData) {\n    if (this.choice && syncEventData.choiceId == this.choice.id && syncEventData.userId == this.userId) {\n      var _this$content;\n      (_this$content = this.content) === null || _this$content === void 0 || _this$content.scrollToTop();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * @inheritdoc\n   */\n  fetchContent(refresh, sync = false, showErrors = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.now = Date.now();\n      _this3.choice = yield AddonModChoice.getChoice(_this3.courseId, _this3.module.id);\n      if (sync) {\n        // Try to synchronize the choice.\n        const updated = yield _this3.syncActivity(showErrors);\n        if (updated) {\n          // Responses were sent, update the choice.\n          _this3.choice = yield AddonModChoice.getChoice(_this3.courseId, _this3.module.id);\n        }\n      }\n      _this3.choice.timeopen = (_this3.choice.timeopen || 0) * 1000;\n      _this3.choice.timeclose = (_this3.choice.timeclose || 0) * 1000;\n      _this3.openTimeReadable = CoreTimeUtils.userDate(_this3.choice.timeopen);\n      _this3.closeTimeReadable = CoreTimeUtils.userDate(_this3.choice.timeclose);\n      _this3.description = _this3.choice.intro;\n      _this3.choiceNotOpenYet = !!_this3.choice.timeopen && _this3.choice.timeopen > _this3.now;\n      _this3.choiceClosed = !!_this3.choice.timeclose && _this3.choice.timeclose <= _this3.now;\n      _this3.dataRetrieved.emit(_this3.choice);\n      // Check if there are responses stored in offline.\n      _this3.hasOffline = yield AddonModChoiceOffline.hasResponse(_this3.choice.id);\n      // We need fetchOptions to finish before calling fetchResults because it needs hasAnsweredOnline variable.\n      yield _this3.fetchOptions(_this3.choice);\n      yield _this3.fetchResults(_this3.choice);\n    })();\n  }\n  /**\n   * Convenience function to get choice options.\n   *\n   * @param choice Choice data.\n   * @returns Promise resolved when done.\n   */\n  fetchOptions(choice) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      let options = yield AddonModChoice.getOptions(choice.id, {\n        cmId: _this4.module.id\n      });\n      // Check if the user has answered (synced) to allow show results.\n      _this4.hasAnsweredOnline = options.some(option => option.checked);\n      if (_this4.hasOffline) {\n        options = yield _this4.getOfflineResponses(choice, options);\n      }\n      const isOpen = _this4.isChoiceOpen(choice);\n      _this4.selectedOption = {\n        id: -1\n      }; // Single choice model.\n      const hasAnswered = options.some(option => {\n        if (!option.checked) {\n          return false;\n        }\n        if (!choice.allowmultiple) {\n          _this4.selectedOption.id = option.id;\n        }\n        return true;\n      });\n      _this4.canEdit = isOpen && (choice.allowupdate || !hasAnswered);\n      _this4.canDelete = isOpen && choice.allowupdate && hasAnswered;\n      _this4.options = options;\n      if (!_this4.canEdit) {\n        return;\n      }\n      // Calculate the publish info message.\n      switch (choice.showresults) {\n        case AddonModChoiceProvider.RESULTS_NOT:\n          _this4.publishInfo = 'addon.mod_choice.publishinfonever';\n          break;\n        case AddonModChoiceProvider.RESULTS_AFTER_ANSWER:\n          if (choice.publish == AddonModChoiceProvider.PUBLISH_ANONYMOUS) {\n            _this4.publishInfo = 'addon.mod_choice.publishinfoanonafter';\n          } else {\n            _this4.publishInfo = 'addon.mod_choice.publishinfofullafter';\n          }\n          break;\n        case AddonModChoiceProvider.RESULTS_AFTER_CLOSE:\n          if (choice.publish == AddonModChoiceProvider.PUBLISH_ANONYMOUS) {\n            _this4.publishInfo = 'addon.mod_choice.publishinfoanonclose';\n          } else {\n            _this4.publishInfo = 'addon.mod_choice.publishinfofullclose';\n          }\n          break;\n        default:\n          // No need to inform the user since it's obvious that the results are being published.\n          _this4.publishInfo = '';\n      }\n    })();\n  }\n  /**\n   * Get offline responses.\n   *\n   * @param choice Choice.\n   * @param options Online options.\n   * @returns Promise resolved with the options.\n   */\n  getOfflineResponses(choice, options) {\n    return _asyncToGenerator(function* () {\n      const response = yield AddonModChoiceOffline.getResponse(choice.id);\n      const optionsMap = {};\n      options.forEach(option => {\n        optionsMap[option.id] = option;\n      });\n      // Update options with the offline data.\n      if (response.deleting) {\n        // Uncheck selected options.\n        if (response.responses.length > 0) {\n          // Uncheck all options selected in responses.\n          response.responses.forEach(selected => {\n            if (optionsMap[selected] && optionsMap[selected].checked) {\n              optionsMap[selected].checked = false;\n              optionsMap[selected].countanswers--;\n            }\n          });\n        } else {\n          // On empty responses, uncheck all selected.\n          Object.keys(optionsMap).forEach(key => {\n            if (optionsMap[key].checked) {\n              optionsMap[key].checked = false;\n              optionsMap[key].countanswers--;\n            }\n          });\n        }\n      } else {\n        // Uncheck all options to check again the offlines'.\n        Object.keys(optionsMap).forEach(key => {\n          if (optionsMap[key].checked) {\n            optionsMap[key].checked = false;\n            optionsMap[key].countanswers--;\n          }\n        });\n        // Then check selected ones.\n        response.responses.forEach(selected => {\n          if (optionsMap[selected]) {\n            optionsMap[selected].checked = true;\n            optionsMap[selected].countanswers++;\n          }\n        });\n      }\n      // Convert it again to array.\n      return Object.keys(optionsMap).map(key => optionsMap[key]);\n    })();\n  }\n  /**\n   * Convenience function to get choice results.\n   *\n   * @param choice Choice.\n   * @returns Resolved when done.\n   */\n  fetchResults(choice) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (_this5.choiceNotOpenYet) {\n        // Cannot see results yet.\n        _this5.canSeeResults = false;\n        return;\n      }\n      const results = yield AddonModChoice.getResults(choice.id, {\n        cmId: _this5.module.id\n      });\n      let hasVotes = false;\n      _this5.data = [];\n      _this5.labels = [];\n      _this5.results = results.map(result => {\n        if (result.numberofuser > 0) {\n          hasVotes = true;\n        }\n        _this5.data.push(result.numberofuser);\n        _this5.labels.push(result.text);\n        return Object.assign(result, {\n          percentageamountfixed: result.percentageamount.toFixed(1)\n        });\n      });\n      _this5.canSeeResults = hasVotes || AddonModChoice.canStudentSeeResults(choice, _this5.hasAnsweredOnline);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  logActivity() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this6.choice) {\n        return; // Shouldn't happen.\n      }\n\n      yield AddonModChoice.logView(_this6.choice.id);\n      _this6.analyticsLogEvent('mod_choice_view_choice');\n    })();\n  }\n  /**\n   * Check if a choice is open.\n   *\n   * @param choice Choice data.\n   * @returns True if choice is open, false otherwise.\n   */\n  isChoiceOpen(choice) {\n    return (!choice.timeopen || choice.timeopen <= this.now) && (!choice.timeclose || choice.timeclose > this.now);\n  }\n  /**\n   * Return true if the user has selected at least one option.\n   *\n   * @returns True if the user has responded.\n   */\n  canSave() {\n    if (!this.choice) {\n      return false;\n    }\n    if (this.choice.allowmultiple) {\n      return this.options.some(option => option.checked);\n    } else {\n      return this.selectedOption.id !== -1;\n    }\n  }\n  /**\n   * Save options selected.\n   */\n  save() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const choice = _this7.choice;\n      // Only show confirm if choice doesn't allow update.\n      if (!choice.allowupdate) {\n        yield CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n      }\n      const responses = [];\n      if (choice.allowmultiple) {\n        _this7.options.forEach(option => {\n          if (option.checked) {\n            responses.push(option.id);\n          }\n        });\n      } else {\n        responses.push(_this7.selectedOption.id);\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        var _this7$content;\n        const online = yield AddonModChoice.submitResponse(choice.id, choice.name, _this7.courseId, responses);\n        (_this7$content = _this7.content) === null || _this7$content === void 0 || _this7$content.scrollToTop();\n        if (online) {\n          CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, {\n            module: _this7.moduleName\n          });\n          // Check completion since it could be configured to complete once the user answers the choice.\n          _this7.checkCompletion();\n        }\n        _this7.analyticsLogEvent('mod_choice_view_choice', {\n          data: {\n            notify: 'choicesaved'\n          }\n        });\n        yield _this7.dataUpdated(online);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_choice.cannotsubmit', true);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Delete options selected.\n   */\n  delete() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield CoreDomUtils.showDeleteConfirm();\n      } catch (_unused) {\n        // User cancelled.\n        return;\n      }\n      const modal = yield CoreDomUtils.showModalLoading('core.sending', true);\n      try {\n        var _this8$content;\n        yield AddonModChoice.deleteResponses(_this8.choice.id, _this8.choice.name, _this8.courseId);\n        (_this8$content = _this8.content) === null || _this8$content === void 0 || _this8$content.scrollToTop();\n        _this8.analyticsLogEvent('mod_choice_view_choice', {\n          data: {\n            action: 'delchoice'\n          }\n        });\n        // Refresh the data. Don't call dataUpdated because deleting an answer doesn't mark the choice as outdated.\n        yield _this8.refreshContent(false);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_choice.cannotsubmit', true);\n      } finally {\n        modal.dismiss();\n      }\n    })();\n  }\n  /**\n   * Function to call when some data has changed. It will refresh/prefetch data.\n   *\n   * @param online Whether the data was sent to server or stored in offline.\n   * @returns Promise resolved when done.\n   */\n  dataUpdated(online) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      if (!online || !_this9.isPrefetched()) {\n        // Not downloaded, just refresh the data.\n        return _this9.refreshContent(false);\n      }\n      try {\n        // The choice is downloaded, update the data.\n        yield AddonModChoiceSync.prefetchAfterUpdate(AddonModChoicePrefetchHandler.instance, _this9.module, _this9.courseId);\n        // Update the view.\n        _this9.showLoadingAndFetch(false, false);\n      } catch (_unused2) {\n        // Prefetch failed, refresh the data.\n        return _this9.refreshContent(false);\n      }\n    })();\n  }\n  /**\n   * Toggle list of users in a result visible.\n   *\n   * @param result Result to expand.\n   */\n  toggle(result) {\n    result.expanded = !result.expanded;\n  }\n  /**\n   * @inheritdoc\n   */\n  sync() {\n    if (!this.choice) {\n      throw new CoreError('Cannot sync without a choice.');\n    }\n    return AddonModChoiceSync.syncChoice(this.choice.id, this.userId);\n  }\n}\n_class = AddonModChoiceIndexComponent;\n_class.ɵfac = function AddonModChoiceIndexComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.IonContent), i0.ɵɵdirectiveInject(i2.CoreCourseContentsPage, 8));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-choice-index\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 17,\n  consts: [[\"slot\", \"end\"], [\"fill\", \"clear\", \"aria-haspopup\", \"true\", 3, \"click\"], [\"name\", \"fas-circle-info\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"hideUntil\"], [3, \"module\", \"description\", \"component\", \"componentId\", \"courseId\", \"hasDataToSync\", \"completionChanged\"], [\"class\", \"core-info-card\", 4, \"ngIf\"], [4, \"ngIf\"], [\"collapsible-footer\", \"\", \"slot\", \"fixed\", 4, \"ngIf\"], [\"optionLabelTemplate\", \"\"], [1, \"core-info-card\"], [\"name\", \"fas-circle-info\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-text-wrap\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"slot\", \"end\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"slot\", \"end\", 3, \"value\", \"disabled\"], [1, \"ion-no-padding\"], [\"size\", \"12\", \"size-lg\", \"5\"], [\"class\", \"ion-text-wrap core-warning-item\", 4, \"ngIf\"], [\"type\", \"pie\", \"height\", \"300\", \"contextLevel\", \"module\", 3, \"data\", \"labels\", \"contextInstanceId\", \"courseId\"], [\"size\", \"12\", \"size-lg\", \"7\", 4, \"ngIf\"], [1, \"ion-text-wrap\", \"core-warning-item\"], [\"slot\", \"start\", \"name\", \"fas-triangle-exclamation\", \"color\", \"warning\", \"aria-hidden\", \"true\"], [\"size\", \"12\", \"size-lg\", \"7\"], [4, \"ngFor\", \"ngForOf\"], [1, \"divider\", \"ion-text-wrap\", 3, \"button\", \"detail\", \"click\"], [\"flip-rtl\", \"\", \"slot\", \"start\", \"aria-hidden\", \"true\", 1, \"expandable-status-icon\", 3, \"name\"], [1, \"item-heading\"], [\"core-user-link\", \"\", \"class\", \"ion-text-wrap\", 3, \"courseId\", \"userId\", 4, \"ngFor\", \"ngForOf\"], [\"core-user-link\", \"\", 1, \"ion-text-wrap\", 3, \"courseId\", \"userId\"], [\"slot\", \"start\", 3, \"user\", \"courseId\", \"linkProfile\"], [\"collapsible-footer\", \"\", \"slot\", \"fixed\"], [\"class\", \"list-item-limited-width adaptable-buttons-row\", 4, \"ngIf\"], [3, \"courseId\", \"currentModuleId\"], [1, \"list-item-limited-width\", \"adaptable-buttons-row\"], [\"expand\", \"block\", \"fill\", \"outline\", \"class\", \"ion-margin ion-text-wrap\", 3, \"click\", 4, \"ngIf\"], [\"expand\", \"block\", \"class\", \"ion-margin ion-text-wrap\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"expand\", \"block\", \"fill\", \"outline\", 1, \"ion-margin\", \"ion-text-wrap\", 3, \"click\"], [\"expand\", \"block\", 1, \"ion-margin\", \"ion-text-wrap\", 3, \"disabled\", \"click\"]],\n  template: function AddonModChoiceIndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"core-navbar-buttons\", 0)(1, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function AddonModChoiceIndexComponent_Template_ion_button_click_1_listener() {\n        return ctx.openModuleSummary();\n      });\n      i0.ɵɵpipe(2, \"translate\");\n      i0.ɵɵelement(3, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"core-loading\", 3)(5, \"core-course-module-info\", 4);\n      i0.ɵɵlistener(\"completionChanged\", function AddonModChoiceIndexComponent_Template_core_course_module_info_completionChanged_5_listener() {\n        return ctx.onCompletionChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, AddonModChoiceIndexComponent_ion_card_6_Template, 6, 2, \"ion-card\", 5);\n      i0.ɵɵtemplate(7, AddonModChoiceIndexComponent_ion_card_7_Template, 8, 7, \"ion-card\", 5);\n      i0.ɵɵtemplate(8, AddonModChoiceIndexComponent_ion_card_8_Template, 6, 3, \"ion-card\", 5);\n      i0.ɵɵtemplate(9, AddonModChoiceIndexComponent_ion_card_9_Template, 3, 2, \"ion-card\", 6);\n      i0.ɵɵtemplate(10, AddonModChoiceIndexComponent_div_10_Template, 14, 9, \"div\", 6);\n      i0.ɵɵtemplate(11, AddonModChoiceIndexComponent_ion_card_11_Template, 7, 3, \"ion-card\", 5);\n      i0.ɵɵtemplate(12, AddonModChoiceIndexComponent_div_12_Template, 3, 3, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, AddonModChoiceIndexComponent_ng_template_13_Template, 4, 5, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 15, \"core.info\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hideUntil\", !ctx.showLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"module\", ctx.module)(\"description\", ctx.description)(\"component\", ctx.component)(\"componentId\", ctx.componentId)(\"courseId\", ctx.courseId)(\"hasDataToSync\", ctx.hasOffline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.choiceNotOpenYet);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.choiceClosed);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.canEdit && ctx.publishInfo && ctx.options.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.options.length && ctx.choice);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.canSeeResults && ctx.choice);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.canSeeResults && !ctx.choiceNotOpenYet);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showLoading);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreError","CoreCourseModuleMainActivityComponent","CoreSites","CoreDomUtils","CoreTimeUtils","Translate","CoreEvents","AddonModChoice","AddonModChoiceProvider","AddonModChoiceOffline","AddonModChoiceSync","AddonModChoiceSyncProvider","AddonModChoicePrefetchHandler","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r9","openTimeReadable","ctx_r10","ɵɵelement","ɵɵtemplate","AddonModChoiceIndexComponent_ion_card_6_p_4_Template","AddonModChoiceIndexComponent_ion_card_6_p_5_Template","ɵɵproperty","ctx_r0","options","length","ɵɵtextInterpolate1","ɵɵpipeBind1","ctx_r11","text","module","id","courseId","AddonModChoiceIndexComponent_ion_card_7_p_4_Template","ctx_r1","closeTimeReadable","ctx_r2","publishInfo","ɵɵelementContainer","AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_ng_container_2_Template","ɵɵlistener","AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_Template_ion_checkbox_ngModelChange_3_listener","$event","restoredCtx","ɵɵrestoreView","_r18","option_r15","$implicit","ɵɵresetView","checked","_r7","_c1","disabled","ctx_r14","canEdit","ɵɵelementContainerStart","AddonModChoiceIndexComponent_ion_card_9_ng_container_1_ion_item_1_Template","ɵɵelementContainerEnd","ctx_r12","AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_ion_item_1_ng_container_2_Template","option_r20","ctx_r19","AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_Template_ion_radio_group_ngModelChange_0_listener","_r23","ctx_r22","ɵɵnextContext","selectedOption","AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_ion_item_1_Template","ctx_r13","AddonModChoiceIndexComponent_ion_card_9_ng_container_1_Template","AddonModChoiceIndexComponent_ion_card_9_ion_radio_group_2_Template","ctx_r3","choice","allowmultiple","result_r27","maxanswer","ctx_r31","user_r32","userid","ɵɵattribute","fullname","AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_ng_container_12_ion_item_1_Template","userresponses","AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_Template_ion_item_click_1_listener","_r35","ctx_r34","toggle","AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_p_11_Template","AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_ng_container_12_Template","numberofuser","expanded","ɵɵclassProp","ctx_r26","ɵɵtextInterpolate3","percentageamountfixed","limitanswers","showavailable","AddonModChoiceIndexComponent_div_10_ion_col_13_ion_item_group_1_Template","ctx_r25","results","AddonModChoiceIndexComponent_div_10_ion_item_9_Template","AddonModChoiceIndexComponent_div_10_ion_col_13_Template","ctx_r4","hasOffline","data","labels","publish","AddonModChoiceIndexComponent_div_12_div_1_ion_button_1_Template_ion_button_click_0_listener","_r40","ctx_r39","delete","AddonModChoiceIndexComponent_div_12_div_1_ion_button_2_Template_ion_button_click_0_listener","_r42","ctx_r41","save","ctx_r38","canSave","AddonModChoiceIndexComponent_div_12_div_1_ion_button_1_Template","AddonModChoiceIndexComponent_div_12_div_1_ion_button_2_Template","ctx_r36","canDelete","AddonModChoiceIndexComponent_div_12_div_1_Template","ctx_r6","option_r43","countanswers","maxanswers","AddonModChoiceIndexComponent_ng_template_13_span_2_Template","AddonModChoiceIndexComponent_ng_template_13_ng_container_3_Template","ctx_r8","AddonModChoiceIndexComponent","constructor","content","courseContentsPage","component","COMPONENT","pluginName","choiceNotOpenYet","choiceClosed","canSeeResults","syncEventName","AUTO_SYNCED","hasAnsweredOnline","now","Date","ngOnInit","_superprop_getNgOnInit","_this","_asyncToGenerator","call","userId","getCurrentSiteUserId","loadContent","invalidateContent","_this2","promises","push","invalidateChoiceData","invalidateOptions","invalidateResults","Promise","all","isRefreshSyncNeeded","syncEventData","choiceId","_this$content","scrollToTop","fetchContent","refresh","sync","showErrors","_this3","getChoice","updated","syncActivity","timeopen","timeclose","userDate","description","intro","dataRetrieved","emit","hasResponse","fetchOptions","fetchResults","_this4","getOptions","cmId","some","option","getOfflineResponses","isOpen","isChoiceOpen","hasAnswered","allowupdate","showresults","RESULTS_NOT","RESULTS_AFTER_ANSWER","PUBLISH_ANONYMOUS","RESULTS_AFTER_CLOSE","response","getResponse","optionsMap","forEach","deleting","responses","selected","Object","keys","key","map","_this5","getResults","hasVotes","result","assign","percentageamount","toFixed","canStudentSeeResults","logActivity","_this6","logView","analyticsLogEvent","_this7","showConfirm","instant","modal","showModalLoading","_this7$content","online","submitResponse","name","trigger","ACTIVITY_DATA_SENT","moduleName","checkCompletion","notify","dataUpdated","error","showErrorModalDefault","dismiss","_this8","showDeleteConfirm","_unused","_this8$content","deleteResponses","action","refreshContent","_this9","isPrefetched","prefetchAfterUpdate","instance","showLoadingAndFetch","_unused2","syncChoice","ɵɵdirectiveInject","i1","IonContent","i2","CoreCourseContentsPage","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonModChoiceIndexComponent_Template","rf","ctx","AddonModChoiceIndexComponent_Template_ion_button_click_1_listener","openModuleSummary","AddonModChoiceIndexComponent_Template_core_course_module_info_completionChanged_5_listener","onCompletionChange","AddonModChoiceIndexComponent_ion_card_6_Template","AddonModChoiceIndexComponent_ion_card_7_Template","AddonModChoiceIndexComponent_ion_card_8_Template","AddonModChoiceIndexComponent_ion_card_9_Template","AddonModChoiceIndexComponent_div_10_Template","AddonModChoiceIndexComponent_ion_card_11_Template","AddonModChoiceIndexComponent_div_12_Template","AddonModChoiceIndexComponent_ng_template_13_Template","ɵɵtemplateRefExtractor","showLoading","componentId"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/choice/components/index/index.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/choice/components/index/addon-mod-choice-index.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Optional, OnInit } from '@angular/core';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreCourseModuleMainActivityComponent } from '@features/course/classes/main-activity-component';\nimport { CoreCourseContentsPage } from '@features/course/pages/contents/contents';\nimport { IonContent } from '@ionic/angular';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport {\n    AddonModChoice,\n    AddonModChoiceChoice,\n    AddonModChoiceOption,\n    AddonModChoiceProvider,\n    AddonModChoiceResult,\n} from '../../services/choice';\nimport { AddonModChoiceOffline } from '../../services/choice-offline';\nimport {\n    AddonModChoiceAutoSyncData,\n    AddonModChoiceSync,\n    AddonModChoiceSyncProvider,\n    AddonModChoiceSyncResult,\n} from '../../services/choice-sync';\nimport { AddonModChoicePrefetchHandler } from '../../services/handlers/prefetch';\n\n/**\n * Component that displays a choice.\n */\n@Component({\n    selector: 'addon-mod-choice-index',\n    templateUrl: 'addon-mod-choice-index.html',\n})\nexport class AddonModChoiceIndexComponent extends CoreCourseModuleMainActivityComponent implements OnInit {\n\n    component = AddonModChoiceProvider.COMPONENT;\n    pluginName = 'choice';\n\n    choice?: AddonModChoiceChoice;\n    options: AddonModChoiceOption[] = [];\n    selectedOption: {id: number} = { id: -1 };\n    choiceNotOpenYet = false;\n    choiceClosed = false;\n    canEdit = false;\n    canDelete = false;\n    canSeeResults = false;\n    data: number[] = [];\n    labels: string[] = [];\n    results: AddonModChoiceResultFormatted[] = [];\n    publishInfo?: string; // Message explaining the user what will happen with his choices.\n    openTimeReadable?: string;\n    closeTimeReadable?: string;\n\n    protected userId?: number;\n    protected syncEventName = AddonModChoiceSyncProvider.AUTO_SYNCED;\n    protected hasAnsweredOnline = false;\n    protected now = Date.now();\n\n    constructor(\n        protected content?: IonContent,\n        @Optional() courseContentsPage?: CoreCourseContentsPage,\n    ) {\n        super('AddonModChoiceIndexComponent', content, courseContentsPage);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        super.ngOnInit();\n\n        this.userId = CoreSites.getCurrentSiteUserId();\n\n        await this.loadContent(false, true);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async invalidateContent(): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModChoice.invalidateChoiceData(this.courseId));\n\n        if (this.choice) {\n            promises.push(AddonModChoice.invalidateOptions(this.choice.id));\n            promises.push(AddonModChoice.invalidateResults(this.choice.id));\n        }\n\n        await Promise.all(promises);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected isRefreshSyncNeeded(syncEventData: AddonModChoiceAutoSyncData): boolean {\n        if (this.choice && syncEventData.choiceId == this.choice.id && syncEventData.userId == this.userId) {\n            this.content?.scrollToTop();\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async fetchContent(refresh?: boolean, sync = false, showErrors = false): Promise<void> {\n        this.now = Date.now();\n\n        this.choice = await AddonModChoice.getChoice(this.courseId, this.module.id);\n\n        if (sync) {\n            // Try to synchronize the choice.\n            const updated = await this.syncActivity(showErrors);\n\n            if (updated) {\n                // Responses were sent, update the choice.\n                this.choice = await AddonModChoice.getChoice(this.courseId, this.module.id);\n            }\n        }\n\n        this.choice.timeopen = (this.choice.timeopen || 0) * 1000;\n        this.choice.timeclose = (this.choice.timeclose || 0) * 1000;\n        this.openTimeReadable = CoreTimeUtils.userDate(this.choice.timeopen);\n        this.closeTimeReadable = CoreTimeUtils.userDate(this.choice.timeclose);\n\n        this.description = this.choice.intro;\n        this.choiceNotOpenYet = !!this.choice.timeopen && this.choice.timeopen > this.now;\n        this.choiceClosed = !!this.choice.timeclose && this.choice.timeclose <= this.now;\n\n        this.dataRetrieved.emit(this.choice);\n\n        // Check if there are responses stored in offline.\n        this.hasOffline = await AddonModChoiceOffline.hasResponse(this.choice.id);\n\n        // We need fetchOptions to finish before calling fetchResults because it needs hasAnsweredOnline variable.\n        await this.fetchOptions(this.choice);\n\n        await this.fetchResults(this.choice);\n    }\n\n    /**\n     * Convenience function to get choice options.\n     *\n     * @param choice Choice data.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchOptions(choice: AddonModChoiceChoice): Promise<void> {\n        let options = await AddonModChoice.getOptions(choice.id, { cmId: this.module.id });\n\n        // Check if the user has answered (synced) to allow show results.\n        this.hasAnsweredOnline = options.some((option) => option.checked);\n\n        if (this.hasOffline) {\n            options = await this.getOfflineResponses(choice, options);\n        }\n\n        const isOpen = this.isChoiceOpen(choice);\n\n        this.selectedOption = { id: -1 }; // Single choice model.\n        const hasAnswered = options.some((option) => {\n            if (!option.checked) {\n                return false;\n            }\n\n            if (!choice.allowmultiple) {\n                this.selectedOption.id = option.id;\n            }\n\n            return true;\n        });\n\n        this.canEdit = isOpen && (choice.allowupdate! || !hasAnswered);\n        this.canDelete = isOpen && choice.allowupdate! && hasAnswered;\n        this.options = options;\n\n        if (!this.canEdit) {\n            return;\n        }\n\n        // Calculate the publish info message.\n        switch (choice.showresults) {\n            case AddonModChoiceProvider.RESULTS_NOT:\n                this.publishInfo = 'addon.mod_choice.publishinfonever';\n                break;\n\n            case AddonModChoiceProvider.RESULTS_AFTER_ANSWER:\n                if (choice.publish == AddonModChoiceProvider.PUBLISH_ANONYMOUS) {\n                    this.publishInfo = 'addon.mod_choice.publishinfoanonafter';\n                } else {\n                    this.publishInfo = 'addon.mod_choice.publishinfofullafter';\n                }\n                break;\n\n            case AddonModChoiceProvider.RESULTS_AFTER_CLOSE:\n                if (choice.publish == AddonModChoiceProvider.PUBLISH_ANONYMOUS) {\n                    this.publishInfo = 'addon.mod_choice.publishinfoanonclose';\n                } else {\n                    this.publishInfo = 'addon.mod_choice.publishinfofullclose';\n                }\n                break;\n\n            default:\n                // No need to inform the user since it's obvious that the results are being published.\n                this.publishInfo = '';\n        }\n    }\n\n    /**\n     * Get offline responses.\n     *\n     * @param choice Choice.\n     * @param options Online options.\n     * @returns Promise resolved with the options.\n     */\n    protected async getOfflineResponses(\n        choice: AddonModChoiceChoice,\n        options: AddonModChoiceOption[],\n    ): Promise<AddonModChoiceOption[]> {\n        const response = await AddonModChoiceOffline.getResponse(choice.id);\n\n        const optionsMap: {[id: number]: AddonModChoiceOption} = {};\n        options.forEach((option) => {\n            optionsMap[option.id] = option;\n        });\n\n        // Update options with the offline data.\n        if (response.deleting) {\n            // Uncheck selected options.\n            if (response.responses.length > 0) {\n                // Uncheck all options selected in responses.\n                response.responses.forEach((selected) => {\n                    if (optionsMap[selected] && optionsMap[selected].checked) {\n                        optionsMap[selected].checked = false;\n                        optionsMap[selected].countanswers--;\n                    }\n                });\n            } else {\n                // On empty responses, uncheck all selected.\n                Object.keys(optionsMap).forEach((key) => {\n                    if (optionsMap[key].checked) {\n                        optionsMap[key].checked = false;\n                        optionsMap[key].countanswers--;\n                    }\n                });\n            }\n        } else {\n            // Uncheck all options to check again the offlines'.\n            Object.keys(optionsMap).forEach((key) => {\n                if (optionsMap[key].checked) {\n                    optionsMap[key].checked = false;\n                    optionsMap[key].countanswers--;\n                }\n            });\n            // Then check selected ones.\n            response.responses.forEach((selected) => {\n                if (optionsMap[selected]) {\n                    optionsMap[selected].checked = true;\n                    optionsMap[selected].countanswers++;\n                }\n            });\n        }\n\n        // Convert it again to array.\n        return Object.keys(optionsMap).map((key) => optionsMap[key]);\n    }\n\n    /**\n     * Convenience function to get choice results.\n     *\n     * @param choice Choice.\n     * @returns Resolved when done.\n     */\n    protected async fetchResults(choice: AddonModChoiceChoice): Promise<void> {\n        if (this.choiceNotOpenYet) {\n            // Cannot see results yet.\n            this.canSeeResults = false;\n\n            return;\n        }\n\n        const results = await AddonModChoice.getResults(choice.id, { cmId: this.module.id });\n\n        let hasVotes = false;\n        this.data = [];\n        this.labels = [];\n\n        this.results = results.map<AddonModChoiceResultFormatted>((result) => {\n            if (result.numberofuser > 0) {\n                hasVotes = true;\n            }\n            this.data.push(result.numberofuser);\n            this.labels.push(result.text);\n\n            return Object.assign(result, { percentageamountfixed: result.percentageamount.toFixed(1) });\n        });\n        this.canSeeResults = hasVotes || AddonModChoice.canStudentSeeResults(choice, this.hasAnsweredOnline);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async logActivity(): Promise<void> {\n        if (!this.choice) {\n            return; // Shouldn't happen.\n        }\n\n        await AddonModChoice.logView(this.choice.id);\n\n        this.analyticsLogEvent('mod_choice_view_choice');\n    }\n\n    /**\n     * Check if a choice is open.\n     *\n     * @param choice Choice data.\n     * @returns True if choice is open, false otherwise.\n     */\n    protected isChoiceOpen(choice: AddonModChoiceChoice): boolean {\n        return (!choice.timeopen || choice.timeopen <= this.now) && (!choice.timeclose || choice.timeclose > this.now);\n    }\n\n    /**\n     * Return true if the user has selected at least one option.\n     *\n     * @returns True if the user has responded.\n     */\n    canSave(): boolean {\n        if (!this.choice) {\n            return false;\n        }\n\n        if (this.choice.allowmultiple) {\n            return this.options.some((option) => option.checked);\n        } else {\n            return this.selectedOption.id !== -1;\n        }\n    }\n\n    /**\n     * Save options selected.\n     */\n    async save(): Promise<void> {\n        const choice = this.choice!;\n\n        // Only show confirm if choice doesn't allow update.\n        if (!choice.allowupdate) {\n            await CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n        }\n\n        const responses: number[] = [];\n        if (choice.allowmultiple) {\n            this.options.forEach((option) => {\n                if (option.checked) {\n                    responses.push(option.id);\n                }\n            });\n        } else {\n            responses.push(this.selectedOption.id);\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            const online = await AddonModChoice.submitResponse(choice.id, choice.name, this.courseId, responses);\n\n            this.content?.scrollToTop();\n\n            if (online) {\n                CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: this.moduleName });\n                // Check completion since it could be configured to complete once the user answers the choice.\n                this.checkCompletion();\n            }\n\n            this.analyticsLogEvent('mod_choice_view_choice', { data: { notify: 'choicesaved' } });\n\n            await this.dataUpdated(online);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_choice.cannotsubmit', true);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Delete options selected.\n     */\n    async delete(): Promise<void> {\n        try {\n            await CoreDomUtils.showDeleteConfirm();\n        } catch {\n            // User cancelled.\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModChoice.deleteResponses(this.choice!.id, this.choice!.name, this.courseId);\n\n            this.content?.scrollToTop();\n\n            this.analyticsLogEvent('mod_choice_view_choice', { data: { action: 'delchoice' } });\n\n            // Refresh the data. Don't call dataUpdated because deleting an answer doesn't mark the choice as outdated.\n            await this.refreshContent(false);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_choice.cannotsubmit', true);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Function to call when some data has changed. It will refresh/prefetch data.\n     *\n     * @param online Whether the data was sent to server or stored in offline.\n     * @returns Promise resolved when done.\n     */\n    protected async dataUpdated(online: boolean): Promise<void> {\n        if (!online || !this.isPrefetched()) {\n            // Not downloaded, just refresh the data.\n            return this.refreshContent(false);\n        }\n\n        try {\n            // The choice is downloaded, update the data.\n            await AddonModChoiceSync.prefetchAfterUpdate(AddonModChoicePrefetchHandler.instance, this.module, this.courseId);\n\n            // Update the view.\n            this.showLoadingAndFetch(false, false);\n        } catch {\n            // Prefetch failed, refresh the data.\n            return this.refreshContent(false);\n        }\n    }\n\n    /**\n     * Toggle list of users in a result visible.\n     *\n     * @param result Result to expand.\n     */\n    toggle(result: AddonModChoiceResultFormatted): void {\n        result.expanded = !result.expanded;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected sync(): Promise<AddonModChoiceSyncResult> {\n        if (!this.choice) {\n            throw new CoreError('Cannot sync without a choice.');\n        }\n\n        return AddonModChoiceSync.syncChoice(this.choice.id, this.userId);\n    }\n\n}\n\n/**\n * Choice result with some calculated data.\n */\nexport type AddonModChoiceResultFormatted = AddonModChoiceResult & {\n    percentageamountfixed: string; // Percentage of users answers with fixed decimals.\n    expanded?: boolean;\n};\n","<!-- Buttons to add to the header. -->\n<core-navbar-buttons slot=\"end\">\n    <ion-button fill=\"clear\" (click)=\"openModuleSummary()\" aria-haspopup=\"true\" [attr.aria-label]=\"'core.info' | translate\">\n        <ion-icon name=\"fas-circle-info\" slot=\"icon-only\" aria-hidden=\"true\" />\n    </ion-button>\n</core-navbar-buttons>\n\n<!-- Content. -->\n<core-loading [hideUntil]=\"!showLoading\">\n    <!-- Activity info. -->\n    <core-course-module-info [module]=\"module\" [description]=\"description\" [component]=\"component\" [componentId]=\"componentId\"\n        [courseId]=\"courseId\" [hasDataToSync]=\"hasOffline\" (completionChanged)=\"onCompletionChange()\" />\n\n    <!-- Activity availability messages -->\n    <ion-card class=\"core-info-card\" *ngIf=\"choiceNotOpenYet\">\n        <ion-item>\n            <ion-icon name=\"fas-circle-info\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>\n                <p *ngIf=\"options.length\">{{ 'addon.mod_choice.previewonly' | translate:{$a: openTimeReadable} }}</p>\n                <p *ngIf=\"!options.length\">{{ 'addon.mod_choice.notopenyet' | translate:{$a: openTimeReadable} }}</p>\n            </ion-label>\n        </ion-item>\n    </ion-card>\n\n    <ion-card class=\"core-info-card\" *ngIf=\"choiceClosed\">\n        <ion-item>\n            <ion-icon name=\"fas-circle-info\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>\n                <p *ngIf=\"options.length\">\n                    {{ 'addon.mod_choice.yourselection' | translate }}\n                    <core-format-text [text]=\"options[0].text\" contextLevel=\"module\" [contextInstanceId]=\"module.id\"\n                        [courseId]=\"courseId\" />\n                </p>\n                <p>{{ 'addon.mod_choice.expired' | translate:{$a: closeTimeReadable} }}</p>\n            </ion-label>\n        </ion-item>\n    </ion-card>\n\n    <!-- Inform what will happen with the choices. -->\n    <ion-card class=\"core-info-card\" *ngIf=\"canEdit && publishInfo && options.length\">\n        <ion-item>\n            <ion-icon name=\"fas-circle-info\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>{{ publishInfo | translate }}</ion-label>\n        </ion-item>\n    </ion-card>\n\n    <!-- Choice options -->\n    <ion-card *ngIf=\"options.length && choice\">\n        <ng-container *ngIf=\"choice.allowmultiple\">\n            <ion-item class=\"ion-text-wrap\" *ngFor=\"let option of options\">\n                <ion-label>\n                    <ng-container *ngTemplateOutlet=\"optionLabelTemplate; context: {option: option}\" />\n                </ion-label>\n                <ion-checkbox slot=\"end\" [(ngModel)]=\"option.checked\" [disabled]=\"option.disabled || !canEdit\" />\n            </ion-item>\n        </ng-container>\n        <ion-radio-group *ngIf=\"!choice.allowmultiple\" [(ngModel)]=\"selectedOption.id\">\n            <ion-item class=\"ion-text-wrap\" *ngFor=\"let option of options\">\n                <ion-label>\n                    <ng-container *ngTemplateOutlet=\"optionLabelTemplate; context: {option: option}\" />\n                </ion-label>\n                <ion-radio slot=\"end\" [value]=\"option.id\" [disabled]=\"option.disabled || !canEdit\" />\n            </ion-item>\n        </ion-radio-group>\n    </ion-card>\n    <!-- Choice results -->\n    <div *ngIf=\"canSeeResults && choice\">\n        <ion-item-divider>\n            <ion-label>\n                <h2>{{ 'addon.mod_choice.responses' | translate }}</h2>\n            </ion-label>\n        </ion-item-divider>\n        <ion-grid class=\"ion-no-padding\">\n            <ion-row>\n                <ion-col size=\"12\" size-lg=\"5\">\n                    <ion-item class=\"ion-text-wrap core-warning-item\" *ngIf=\"hasOffline\">\n                        <ion-icon slot=\"start\" name=\"fas-triangle-exclamation\" color=\"warning\" aria-hidden=\"true\" />\n                        <ion-label>{{ 'addon.mod_choice.resultsnotsynced' | translate }}</ion-label>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label>\n                            <core-chart type=\"pie\" [data]=\"data\" [labels]=\"labels\" height=\"300\" contextLevel=\"module\"\n                                [contextInstanceId]=\"module.id\" [courseId]=\"courseId\" />\n                        </ion-label>\n                    </ion-item>\n                </ion-col>\n                <ion-col *ngIf=\"choice.publish && results\" size=\"12\" size-lg=\"7\">\n                    <ion-item-group *ngFor=\"let result of results\">\n                        <ion-item [button]=\"result.numberofuser > 0\" class=\"divider ion-text-wrap\" (click)=\"toggle(result)\"\n                            [attr.aria-label]=\"(result.expanded ? 'core.collapse' : 'core.expand') | translate\" [detail]=\"false\">\n                            <ion-icon [name]=\"result.numberofuser > 0 ? 'fas-chevron-right' : ''\" flip-rtl slot=\"start\" aria-hidden=\"true\"\n                                class=\"expandable-status-icon\" [class.expandable-status-icon-expanded]=\"result.expanded\" />\n                            <ion-label>\n                                <h3 class=\"item-heading\">\n                                    <core-format-text [text]=\"result.text\" contextLevel=\"module\" [contextInstanceId]=\"module.id\"\n                                        [courseId]=\"courseId\" />\n                                </h3>\n                                <p>\n                                    {{ 'addon.mod_choice.numberofuser' | translate }}: {{ result.numberofuser }}\n                                    ({{ 'core.percentagenumber' | translate: {$a: result.percentageamountfixed} }})\n                                </p>\n                                <p *ngIf=\"choice.limitanswers && choice.showavailable\">\n                                    {{ 'addon.mod_choice.limita' | translate:{$a: result.maxanswer} }}\n                                </p>\n                            </ion-label>\n                        </ion-item>\n                        <ng-container *ngIf=\"result.expanded\">\n                            <ion-item *ngFor=\"let user of result.userresponses\" core-user-link [courseId]=\"courseId\" [userId]=\"user.userid\"\n                                [attr.aria-label]=\"user.fullname\" class=\"ion-text-wrap\">\n                                <core-user-avatar [user]=\"user\" slot=\"start\" [courseId]=\"courseId\" [linkProfile]=\"false\" />\n                                <ion-label>\n                                    <p>{{user.fullname}}</p>\n                                </ion-label>\n                            </ion-item>\n                        </ng-container>\n                    </ion-item-group>\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </div>\n\n    <ion-card class=\"core-info-card\" *ngIf=\"!canSeeResults && !choiceNotOpenYet\">\n        <ion-item>\n            <ion-icon name=\"fas-circle-info\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>\n                <p>{{ 'addon.mod_choice.noresultsviewable' | translate }}</p>\n            </ion-label>\n        </ion-item>\n    </ion-card>\n\n\n    <div collapsible-footer *ngIf=\"!showLoading\" slot=\"fixed\">\n        <div class=\"list-item-limited-width adaptable-buttons-row\" *ngIf=\"options.length && choice && (canEdit || canDelete)\">\n            <ion-button *ngIf=\"canDelete\" expand=\"block\" fill=\"outline\" (click)=\"delete()\" class=\"ion-margin ion-text-wrap\">\n                {{ 'addon.mod_choice.removemychoice' | translate }}\n            </ion-button>\n            <ion-button *ngIf=\"canEdit\" expand=\"block\" (click)=\"save()\" [disabled]=\"!canSave()\" class=\"ion-margin ion-text-wrap\">\n                {{ 'addon.mod_choice.savemychoice' | translate }}\n            </ion-button>\n        </div>\n\n        <core-course-module-navigation [courseId]=\"courseId\" [currentModuleId]=\"module.id\" />\n    </div>\n</core-loading>\n\n\n\n<!-- Template to render a choice option label. -->\n<ng-template #optionLabelTemplate let-option=\"option\">\n    <p>\n        <core-format-text [text]=\"option.text\" contextLevel=\"module\" [contextInstanceId]=\"module.id\" [courseId]=\"courseId\" />\n        <span *ngIf=\"choice!.limitanswers && option.countanswers >= option.maxanswers\">\n            {{ 'addon.mod_choice.full' | translate }}\n        </span>\n    </p>\n    <ng-container *ngIf=\"choice!.limitanswers && choice!.showavailable\">\n        <p>{{ 'addon.mod_choice.responsesa' | translate:{$a: option.countanswers} }}</p>\n        <p>{{ 'addon.mod_choice.limita' | translate:{$a: option.maxanswers} }}</p>\n    </ng-container>\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}