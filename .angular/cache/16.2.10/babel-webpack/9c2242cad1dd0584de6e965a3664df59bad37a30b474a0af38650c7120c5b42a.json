{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreConstants } from '@/core/constants';\nimport { CoreCourseActivityPrefetchHandlerBase } from '@features/course/classes/activity-prefetch-handler';\nimport { CoreH5PHelper } from '@features/h5p/classes/helper';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreXAPIOffline } from '@features/xapi/services/offline';\nimport { CoreXAPI } from '@features/xapi/services/xapi';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonModH5PActivity, AddonModH5PActivityProvider, MOD_H5PACTIVITY_STATE_ID } from '../h5pactivity';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to prefetch h5p activity.\n */\nexport class AddonModH5PActivityPrefetchHandlerService extends CoreCourseActivityPrefetchHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModH5PActivity';\n    this.modName = 'h5pactivity';\n    this.component = AddonModH5PActivityProvider.COMPONENT;\n    this.updatesNames = /^configuration$|^.*files$|^tracks$|^usertracks$/;\n  }\n  /**\n   * @inheritdoc\n   */\n  getFiles(module, courseId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const h5pActivity = yield AddonModH5PActivity.getH5PActivity(courseId, module.id);\n      const displayOptions = CoreH5PHelper.decodeDisplayOptions(h5pActivity.displayoptions);\n      const deployedFile = yield AddonModH5PActivity.getDeployedFile(h5pActivity, {\n        displayOptions\n      });\n      return [deployedFile].concat(_this.getIntroFilesFromInstance(module, h5pActivity));\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateModule() {\n    return _asyncToGenerator(function* () {})();\n  } // No need to invalidate anything.\n  /**\n   * @inheritdoc\n   */\n  isDownloadable() {\n    return _asyncToGenerator(function* () {\n      var _CoreSites$getCurrent;\n      return !!((_CoreSites$getCurrent = CoreSites.getCurrentSite()) !== null && _CoreSites$getCurrent !== void 0 && _CoreSites$getCurrent.canDownloadFiles()) && !CoreH5P.isOfflineDisabledInSite();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return AddonModH5PActivity.isPluginEnabled();\n  }\n  /**\n   * @inheritdoc\n   */\n  prefetch(module, courseId) {\n    return this.prefetchPackage(module, courseId, siteId => this.prefetchActivity(module, courseId, siteId));\n  }\n  /**\n   * Prefetch an H5P activity.\n   *\n   * @param module Module.\n   * @param courseId Course ID the module belongs to.\n   * @param siteId Site ID. If not defined, current site.\n   * @returns Promise resolved when done.\n   */\n  prefetchActivity(module, courseId, siteId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const h5pActivity = yield AddonModH5PActivity.getH5PActivity(courseId, module.id, {\n        readingStrategy: 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */,\n        siteId\n      });\n      const introFiles = _this2.getIntroFilesFromInstance(module, h5pActivity);\n      yield Promise.all([_this2.prefetchWSData(h5pActivity, siteId), CoreFilepool.addFilesToQueue(siteId, introFiles, AddonModH5PActivityProvider.COMPONENT, module.id), _this2.prefetchMainFile(module, h5pActivity, siteId)]);\n    })();\n  }\n  /**\n   * Prefetch the deployed file of the activity.\n   *\n   * @param module Module.\n   * @param h5pActivity Activity instance.\n   * @param siteId Site ID.\n   * @returns Promise resolved when done.\n   */\n  prefetchMainFile(module, h5pActivity, siteId) {\n    return _asyncToGenerator(function* () {\n      const displayOptions = CoreH5PHelper.decodeDisplayOptions(h5pActivity.displayoptions);\n      const deployedFile = yield AddonModH5PActivity.getDeployedFile(h5pActivity, {\n        displayOptions: displayOptions,\n        ignoreCache: true,\n        siteId: siteId\n      });\n      if (AddonModH5PActivity.isSaveStateEnabled(h5pActivity)) {\n        // If the file needs to be downloaded, delete the states because it means the package has changed or user deleted it.\n        const fileState = yield CoreFilepool.getFileStateByUrl(siteId, CoreFileHelper.getFileUrl(deployedFile));\n        if (fileState !== CoreConstants.DOWNLOADED) {\n          yield CoreUtils.ignoreErrors(CoreXAPIOffline.deleteStates(AddonModH5PActivityProvider.TRACK_COMPONENT, {\n            itemId: h5pActivity.context,\n            siteId\n          }));\n        }\n      }\n      yield CoreFilepool.addFilesToQueue(siteId, [deployedFile], AddonModH5PActivityProvider.COMPONENT, module.id);\n    })();\n  }\n  /**\n   * Prefetch all the WebService data.\n   *\n   * @param h5pActivity Activity instance.\n   * @param siteId Site ID.\n   * @returns Promise resolved when done.\n   */\n  prefetchWSData(h5pActivity, siteId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const accessInfo = yield AddonModH5PActivity.getAccessInformation(h5pActivity.id, {\n        cmId: h5pActivity.coursemodule,\n        readingStrategy: 1 /* CoreSitesReadingStrategy.PREFER_CACHE */,\n        siteId\n      });\n      yield Promise.all([_this3.prefetchAttempts(h5pActivity, accessInfo, siteId), _this3.prefetchState(h5pActivity, accessInfo, siteId)]);\n    })();\n  }\n  /**\n   * Prefetch attempts.\n   *\n   * @param h5pActivity Activity instance.\n   * @param accessInfo Access info.\n   * @param siteId Site ID.\n   * @returns Promise resolved when done.\n   */\n  prefetchAttempts(h5pActivity, accessInfo, siteId) {\n    return _asyncToGenerator(function* () {\n      const options = {\n        cmId: h5pActivity.coursemodule,\n        readingStrategy: 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */,\n        siteId: siteId\n      };\n      if (!accessInfo.canreviewattempts) {\n        if (!h5pActivity.enabletracking) {\n          return;\n        }\n        // Not a teacher, prefetch user attempts and the current user profile.\n        const site = yield CoreSites.getSite(siteId);\n        yield Promise.all([AddonModH5PActivity.getAllAttemptsResults(h5pActivity.id, options), CoreUser.prefetchProfiles([site.getUserId()], h5pActivity.course, siteId)]);\n      } else {\n        // It's a teacher, get all attempts if possible.\n        const canGetUsers = yield AddonModH5PActivity.canGetUsersAttempts(siteId);\n        if (!canGetUsers) {\n          return;\n        }\n        const users = yield AddonModH5PActivity.getAllUsersAttempts(h5pActivity.id, options);\n        const userIds = users.map(user => user.userid);\n        yield CoreUser.prefetchProfiles(userIds, h5pActivity.course, siteId);\n      }\n    })();\n  }\n  /**\n   * Prefetch state.\n   *\n   * @param h5pActivity Activity instance.\n   * @param accessInfo Access info.\n   * @param siteId Site ID.\n   * @returns Promise resolved when done.\n   */\n  prefetchState(h5pActivity, accessInfo, siteId) {\n    return _asyncToGenerator(function* () {\n      if (!AddonModH5PActivity.isSaveStateEnabled(h5pActivity, accessInfo)) {\n        return;\n      }\n      yield CoreXAPI.getStateFromServer(AddonModH5PActivityProvider.TRACK_COMPONENT, h5pActivity.context, MOD_H5PACTIVITY_STATE_ID, {\n        appComponent: AddonModH5PActivityProvider.COMPONENT,\n        appComponentId: h5pActivity.coursemodule,\n        readingStrategy: 2 /* CoreSitesReadingStrategy.ONLY_NETWORK */,\n        siteId\n      });\n    })();\n  }\n}\n_class = AddonModH5PActivityPrefetchHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModH5PActivityPrefetchHandlerService_BaseFactory;\n  return function AddonModH5PActivityPrefetchHandlerService_Factory(t) {\n    return (ɵAddonModH5PActivityPrefetchHandlerService_BaseFactory || (ɵAddonModH5PActivityPrefetchHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModH5PActivityPrefetchHandler = makeSingleton(AddonModH5PActivityPrefetchHandlerService);","map":{"version":3,"names":["CoreConstants","CoreCourseActivityPrefetchHandlerBase","CoreH5PHelper","CoreH5P","CoreUser","CoreXAPIOffline","CoreXAPI","CoreFileHelper","CoreFilepool","CoreSites","CoreUtils","makeSingleton","AddonModH5PActivity","AddonModH5PActivityProvider","MOD_H5PACTIVITY_STATE_ID","AddonModH5PActivityPrefetchHandlerService","constructor","name","modName","component","COMPONENT","updatesNames","getFiles","module","courseId","_this","_asyncToGenerator","h5pActivity","getH5PActivity","id","displayOptions","decodeDisplayOptions","displayoptions","deployedFile","getDeployedFile","concat","getIntroFilesFromInstance","invalidateModule","isDownloadable","_CoreSites$getCurrent","getCurrentSite","canDownloadFiles","isOfflineDisabledInSite","isEnabled","isPluginEnabled","prefetch","prefetchPackage","siteId","prefetchActivity","_this2","readingStrategy","introFiles","Promise","all","prefetchWSData","addFilesToQueue","prefetchMainFile","ignoreCache","isSaveStateEnabled","fileState","getFileStateByUrl","getFileUrl","DOWNLOADED","ignoreErrors","deleteStates","TRACK_COMPONENT","itemId","context","_this3","accessInfo","getAccessInformation","cmId","coursemodule","prefetchAttempts","prefetchState","options","canreviewattempts","enabletracking","site","getSite","getAllAttemptsResults","prefetchProfiles","getUserId","course","canGetUsers","canGetUsersAttempts","users","getAllUsersAttempts","userIds","map","user","userid","getStateFromServer","appComponent","appComponentId","t","factory","ɵfac","providedIn","AddonModH5PActivityPrefetchHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/h5pactivity/services/handlers/prefetch.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreConstants } from '@/core/constants';\nimport { Injectable } from '@angular/core';\n\nimport { CoreCourseActivityPrefetchHandlerBase } from '@features/course/classes/activity-prefetch-handler';\nimport { CoreCourseAnyModuleData } from '@features/course/services/course';\nimport { CoreH5PHelper } from '@features/h5p/classes/helper';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreXAPIOffline } from '@features/xapi/services/offline';\nimport { CoreXAPI } from '@features/xapi/services/xapi';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreWSFile } from '@services/ws';\nimport { makeSingleton } from '@singletons';\nimport {\n    AddonModH5PActivity,\n    AddonModH5PActivityAccessInfo,\n    AddonModH5PActivityData,\n    AddonModH5PActivityProvider,\n    MOD_H5PACTIVITY_STATE_ID,\n} from '../h5pactivity';\n\n/**\n * Handler to prefetch h5p activity.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModH5PActivityPrefetchHandlerService extends CoreCourseActivityPrefetchHandlerBase {\n\n    name = 'AddonModH5PActivity';\n    modName = 'h5pactivity';\n    component = AddonModH5PActivityProvider.COMPONENT;\n    updatesNames = /^configuration$|^.*files$|^tracks$|^usertracks$/;\n\n    /**\n     * @inheritdoc\n     */\n    async getFiles(module: CoreCourseAnyModuleData, courseId: number): Promise<CoreWSFile[]> {\n\n        const h5pActivity = await AddonModH5PActivity.getH5PActivity(courseId, module.id);\n\n        const displayOptions = CoreH5PHelper.decodeDisplayOptions(h5pActivity.displayoptions);\n\n        const deployedFile = await AddonModH5PActivity.getDeployedFile(h5pActivity, {\n            displayOptions,\n        });\n\n        return [deployedFile].concat(this.getIntroFilesFromInstance(module, h5pActivity));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async invalidateModule(): Promise<void> {\n        // No need to invalidate anything.\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isDownloadable(): Promise<boolean> {\n        return !!CoreSites.getCurrentSite()?.canDownloadFiles() && !CoreH5P.isOfflineDisabledInSite();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isEnabled(): Promise<boolean> {\n        return AddonModH5PActivity.isPluginEnabled();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    prefetch(module: CoreCourseAnyModuleData, courseId: number): Promise<void> {\n        return this.prefetchPackage(module, courseId, (siteId) => this.prefetchActivity(module, courseId, siteId));\n    }\n\n    /**\n     * Prefetch an H5P activity.\n     *\n     * @param module Module.\n     * @param courseId Course ID the module belongs to.\n     * @param siteId Site ID. If not defined, current site.\n     * @returns Promise resolved when done.\n     */\n    protected async prefetchActivity(\n        module: CoreCourseAnyModuleData,\n        courseId: number,\n        siteId: string,\n    ): Promise<void> {\n        const h5pActivity = await AddonModH5PActivity.getH5PActivity(courseId, module.id, {\n            readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n            siteId,\n        });\n\n        const introFiles = this.getIntroFilesFromInstance(module, h5pActivity);\n\n        await Promise.all([\n            this.prefetchWSData(h5pActivity, siteId),\n            CoreFilepool.addFilesToQueue(siteId, introFiles, AddonModH5PActivityProvider.COMPONENT, module.id),\n            this.prefetchMainFile(module, h5pActivity, siteId),\n        ]);\n    }\n\n    /**\n     * Prefetch the deployed file of the activity.\n     *\n     * @param module Module.\n     * @param h5pActivity Activity instance.\n     * @param siteId Site ID.\n     * @returns Promise resolved when done.\n     */\n    protected async prefetchMainFile(\n        module: CoreCourseAnyModuleData,\n        h5pActivity: AddonModH5PActivityData,\n        siteId: string,\n    ): Promise<void> {\n\n        const displayOptions = CoreH5PHelper.decodeDisplayOptions(h5pActivity.displayoptions);\n\n        const deployedFile = await AddonModH5PActivity.getDeployedFile(h5pActivity, {\n            displayOptions: displayOptions,\n            ignoreCache: true,\n            siteId: siteId,\n        });\n\n        if (AddonModH5PActivity.isSaveStateEnabled(h5pActivity)) {\n            // If the file needs to be downloaded, delete the states because it means the package has changed or user deleted it.\n            const fileState = await CoreFilepool.getFileStateByUrl(siteId, CoreFileHelper.getFileUrl(deployedFile));\n\n            if (fileState !== CoreConstants.DOWNLOADED) {\n                await CoreUtils.ignoreErrors(CoreXAPIOffline.deleteStates(AddonModH5PActivityProvider.TRACK_COMPONENT, {\n                    itemId: h5pActivity.context,\n                    siteId,\n                }));\n            }\n        }\n\n        await CoreFilepool.addFilesToQueue(siteId, [deployedFile], AddonModH5PActivityProvider.COMPONENT, module.id);\n    }\n\n    /**\n     * Prefetch all the WebService data.\n     *\n     * @param h5pActivity Activity instance.\n     * @param siteId Site ID.\n     * @returns Promise resolved when done.\n     */\n    protected async prefetchWSData(h5pActivity: AddonModH5PActivityData, siteId: string): Promise<void> {\n        const accessInfo = await AddonModH5PActivity.getAccessInformation(h5pActivity.id, {\n            cmId: h5pActivity.coursemodule,\n            readingStrategy: CoreSitesReadingStrategy.PREFER_CACHE,\n            siteId,\n        });\n\n        await Promise.all([\n            this.prefetchAttempts(h5pActivity, accessInfo, siteId),\n            this.prefetchState(h5pActivity, accessInfo, siteId),\n        ]);\n    }\n\n    /**\n     * Prefetch attempts.\n     *\n     * @param h5pActivity Activity instance.\n     * @param accessInfo Access info.\n     * @param siteId Site ID.\n     * @returns Promise resolved when done.\n     */\n    protected async prefetchAttempts(\n        h5pActivity: AddonModH5PActivityData,\n        accessInfo: AddonModH5PActivityAccessInfo,\n        siteId: string,\n    ): Promise<void> {\n        const options = {\n            cmId: h5pActivity.coursemodule,\n            readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n            siteId: siteId,\n        };\n\n        if (!accessInfo.canreviewattempts) {\n            if (!h5pActivity.enabletracking) {\n                return;\n            }\n\n            // Not a teacher, prefetch user attempts and the current user profile.\n            const site = await CoreSites.getSite(siteId);\n\n            await Promise.all([\n                AddonModH5PActivity.getAllAttemptsResults(h5pActivity.id, options),\n                CoreUser.prefetchProfiles([site.getUserId()], h5pActivity.course, siteId),\n            ]);\n        } else {\n            // It's a teacher, get all attempts if possible.\n            const canGetUsers = await AddonModH5PActivity.canGetUsersAttempts(siteId);\n            if (!canGetUsers) {\n                return;\n            }\n\n            const users = await AddonModH5PActivity.getAllUsersAttempts(h5pActivity.id, options);\n\n            const userIds = users.map(user => user.userid);\n            await CoreUser.prefetchProfiles(userIds, h5pActivity.course, siteId);\n        }\n    }\n\n    /**\n     * Prefetch state.\n     *\n     * @param h5pActivity Activity instance.\n     * @param accessInfo Access info.\n     * @param siteId Site ID.\n     * @returns Promise resolved when done.\n     */\n    protected async prefetchState(\n        h5pActivity: AddonModH5PActivityData,\n        accessInfo: AddonModH5PActivityAccessInfo,\n        siteId: string,\n    ): Promise<void> {\n        if (!AddonModH5PActivity.isSaveStateEnabled(h5pActivity, accessInfo)) {\n            return;\n        }\n\n        await CoreXAPI.getStateFromServer(\n            AddonModH5PActivityProvider.TRACK_COMPONENT,\n            h5pActivity.context,\n            MOD_H5PACTIVITY_STATE_ID,\n            {\n                appComponent: AddonModH5PActivityProvider.COMPONENT,\n                appComponentId: h5pActivity.coursemodule,\n                readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n                siteId,\n            },\n        );\n    }\n\n}\n\nexport const AddonModH5PActivityPrefetchHandler = makeSingleton(AddonModH5PActivityPrefetchHandlerService);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}