{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourseActivityPrefetchHandlerBase } from '@features/course/classes/activity-prefetch-handler';\nimport { makeSingleton } from '@singletons';\nimport { AddonModLti, AddonModLtiProvider } from '../lti';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to prefetch LTIs. LTIs cannot be prefetched, but the handler will be used to invalidate some data on course PTR.\n */\nexport class AddonModLtiPrefetchHandlerService extends CoreCourseActivityPrefetchHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModLti';\n    this.modName = 'lti';\n    this.component = AddonModLtiProvider.COMPONENT;\n  }\n  /**\n   * @inheritdoc\n   */\n  download() {\n    return _asyncToGenerator(function* () {\n      return;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateModule(module, courseId) {\n    return AddonModLti.invalidateLti(courseId);\n  }\n  /**\n   * @inheritdoc\n   */\n  isDownloadable() {\n    return _asyncToGenerator(function* () {\n      return false; // LTIs aren't downloadable.\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  prefetch() {\n    return _asyncToGenerator(function* () {\n      return;\n    })();\n  }\n}\n_class = AddonModLtiPrefetchHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModLtiPrefetchHandlerService_BaseFactory;\n  return function AddonModLtiPrefetchHandlerService_Factory(t) {\n    return (ɵAddonModLtiPrefetchHandlerService_BaseFactory || (ɵAddonModLtiPrefetchHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModLtiPrefetchHandler = makeSingleton(AddonModLtiPrefetchHandlerService);","map":{"version":3,"names":["CoreCourseActivityPrefetchHandlerBase","makeSingleton","AddonModLti","AddonModLtiProvider","AddonModLtiPrefetchHandlerService","constructor","name","modName","component","COMPONENT","download","_asyncToGenerator","invalidateModule","module","courseId","invalidateLti","isDownloadable","prefetch","t","factory","ɵfac","providedIn","AddonModLtiPrefetchHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/lti/services/handlers/prefetch.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreCourseActivityPrefetchHandlerBase } from '@features/course/classes/activity-prefetch-handler';\nimport { CoreCourseAnyModuleData } from '@features/course/services/course';\nimport { makeSingleton } from '@singletons';\nimport { AddonModLti, AddonModLtiProvider } from '../lti';\n\n/**\n * Handler to prefetch LTIs. LTIs cannot be prefetched, but the handler will be used to invalidate some data on course PTR.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModLtiPrefetchHandlerService extends CoreCourseActivityPrefetchHandlerBase {\n\n    name = 'AddonModLti';\n    modName = 'lti';\n    component = AddonModLtiProvider.COMPONENT;\n\n    /**\n     * @inheritdoc\n     */\n    async download(): Promise<void> {\n        return;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    invalidateModule(module: CoreCourseAnyModuleData, courseId: number): Promise<void> {\n        return AddonModLti.invalidateLti(courseId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isDownloadable(): Promise<boolean> {\n        return false; // LTIs aren't downloadable.\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async prefetch(): Promise<void> {\n        return;\n    }\n\n}\n\nexport const AddonModLtiPrefetchHandler = makeSingleton(AddonModLtiPrefetchHandlerService);\n"],"mappings":";;AAgBA,SAASA,qCAAqC,QAAQ,oDAAoD;AAE1G,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,QAAQ;;AAEzD;;;AAIA,OAAM,MAAOC,iCAAkC,SAAQJ,qCAAqC;EAD5FK,YAAA;;IAGI,KAAAC,IAAI,GAAG,aAAa;IACpB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,SAAS,GAAGL,mBAAmB,CAACM,SAAS;;EAEzC;;;EAGMC,QAAQA,CAAA;IAAA,OAAAC,iBAAA;MACV;IAAO;EACX;EAEA;;;EAGAC,gBAAgBA,CAACC,MAA+B,EAAEC,QAAgB;IAC9D,OAAOZ,WAAW,CAACa,aAAa,CAACD,QAAQ,CAAC;EAC9C;EAEA;;;EAGME,cAAcA,CAAA;IAAA,OAAAL,iBAAA;MAChB,OAAO,KAAK,CAAC,CAAC;IAAA;EAClB;EAEA;;;EAGMM,QAAQA,CAAA;IAAA,OAAAN,iBAAA;MACV;IAAO;EACX;;SAhCSP,iCAAkC;;;;yIAAlCA,MAAiC,IAAAc,CAAA,IAAjCd,MAAiC;EAAA;AAAA;;SAAjCA,MAAiC;EAAAe,OAAA,EAAjCf,MAAiC,CAAAgB,IAAA;EAAAC,UAAA,EADpB;AAAM;AAqChC,OAAO,MAAMC,0BAA0B,GAAGrB,aAAa,CAACG,iCAAiC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}