{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\n/**\n * Component to render the preflight for password.\n */\nexport class AddonModQuizAccessPasswordComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this$form;\n    // Add the control for the password.\n    (_this$form = this.form) === null || _this$form === void 0 || _this$form.addControl('quizpassword', this.fb.control(''));\n  }\n}\n_class = AddonModQuizAccessPasswordComponent;\n_class.ɵfac = function AddonModQuizAccessPasswordComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-quiz-access-password\"]],\n  inputs: {\n    rule: \"rule\",\n    quiz: \"quiz\",\n    attempt: \"attempt\",\n    prefetch: \"prefetch\",\n    siteId: \"siteId\",\n    form: \"form\"\n  },\n  decls: 15,\n  vars: 16,\n  consts: [[1, \"ion-text-wrap\"], [1, \"item-heading\"], [3, \"formGroup\"], [1, \"sr-only\"], [3, \"name\"], [\"id\", \"addon-mod_quiz-accessrule-password-input\", \"name\", \"quizpassword\", \"type\", \"password\", 3, \"placeholder\", \"formControlName\", \"clearOnEdit\"]],\n  template: function AddonModQuizAccessPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-item\", 0)(1, \"ion-label\")(2, \"p\", 1);\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"ion-item\", 2)(9, \"ion-label\", 3);\n      i0.ɵɵtext(10);\n      i0.ɵɵpipe(11, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"core-show-password\", 4);\n      i0.ɵɵelement(13, \"ion-input\", 5);\n      i0.ɵɵpipe(14, \"translate\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 8, \"addon.mod_quiz.quizpassword\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 10, \"addon.mod_quiz.requirepasswordmessage\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 12, \"addon.mod_quiz.quizpassword\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"name\", \"quizpassword\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(14, 14, \"addon.mod_quiz.quizpassword\"));\n      i0.ɵɵproperty(\"formControlName\", \"quizpassword\")(\"clearOnEdit\", false);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonModQuizAccessPasswordComponent","constructor","fb","ngOnInit","_this$form","form","addControl","control","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","inputs","rule","quiz","attempt","prefetch","siteId","decls","vars","consts","template","AddonModQuizAccessPasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/accessrules/password/component/password.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/accessrules/password/component/addon-mod-quiz-access-password.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { AddonModQuizAttemptWSData, AddonModQuizQuizWSData } from '@addons/mod/quiz/services/quiz';\n\n/**\n * Component to render the preflight for password.\n */\n@Component({\n    selector: 'addon-mod-quiz-access-password',\n    templateUrl: 'addon-mod-quiz-access-password.html',\n})\nexport class AddonModQuizAccessPasswordComponent implements OnInit {\n\n    @Input() rule?: string; // The name of the rule.\n    @Input() quiz?: AddonModQuizQuizWSData; // The quiz the rule belongs to.\n    @Input() attempt?: AddonModQuizAttemptWSData; // The attempt being started/continued.\n    @Input() prefetch?: boolean; // Whether the user is prefetching the quiz.\n    @Input() siteId?: string; // Site ID.\n    @Input() form?: FormGroup; // Form where to add the form control.\n\n    constructor(private fb: FormBuilder) { }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        // Add the control for the password.\n        this.form?.addControl('quizpassword', this.fb.control(''));\n    }\n\n}\n","<ion-item class=\"ion-text-wrap\">\n    <ion-label>\n        <p class=\"item-heading\">{{ 'addon.mod_quiz.quizpassword' | translate }}</p>\n        <p>{{ 'addon.mod_quiz.requirepasswordmessage' | translate}}</p>\n    </ion-label>\n</ion-item>\n<ion-item [formGroup]=\"form\">\n    <ion-label class=\"sr-only\">{{ 'addon.mod_quiz.quizpassword' | translate }}</ion-label>\n    <core-show-password [name]=\"'quizpassword'\">\n        <ion-input id=\"addon-mod_quiz-accessrule-password-input\" name=\"quizpassword\" type=\"password\"\n            placeholder=\"{{ 'addon.mod_quiz.quizpassword' | translate }}\" [formControlName]=\"'quizpassword'\" [clearOnEdit]=\"false\" />\n    </core-show-password>\n</ion-item>\n"],"mappings":";;;AAmBA;;;AAOA,OAAM,MAAOA,mCAAmC;EAS5CC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;EAAiB;EAEvC;;;EAGAC,QAAQA,CAAA;IAAA,IAAAC,UAAA;IACJ;IACA,CAAAA,UAAA,OAAI,CAACC,IAAI,cAAAD,UAAA,eAATA,UAAA,CAAWE,UAAU,CAAC,cAAc,EAAE,IAAI,CAACJ,EAAE,CAACK,OAAO,CAAC,EAAE,CAAC,CAAC;EAC9D;;SAjBSP,mCAAmC;;mBAAnCA,MAAmC,EAAAQ,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAnCX,MAAmC;EAAAY,SAAA;EAAAC,MAAA;IAAAC,IAAA;IAAAC,IAAA;IAAAC,OAAA;IAAAC,QAAA;IAAAC,MAAA;IAAAb,IAAA;EAAA;EAAAc,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6CAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC1BhDhB,EAAA,CAAAkB,cAAA,kBAAgC;MAEAlB,EAAA,CAAAmB,MAAA,GAA+C;;MAAAnB,EAAA,CAAAoB,YAAA,EAAI;MAC3EpB,EAAA,CAAAkB,cAAA,QAAG;MAAAlB,EAAA,CAAAmB,MAAA,GAAwD;;MAAAnB,EAAA,CAAAoB,YAAA,EAAI;MAGvEpB,EAAA,CAAAkB,cAAA,kBAA6B;MACElB,EAAA,CAAAmB,MAAA,IAA+C;;MAAAnB,EAAA,CAAAoB,YAAA,EAAY;MACtFpB,EAAA,CAAAkB,cAAA,6BAA4C;MACxClB,EAAA,CAAAqB,SAAA,oBAC6H;;MACjIrB,EAAA,CAAAoB,YAAA,EAAqB;;;MATOpB,EAAA,CAAAsB,SAAA,GAA+C;MAA/CtB,EAAA,CAAAuB,iBAAA,CAAAvB,EAAA,CAAAwB,WAAA,sCAA+C;MACpExB,EAAA,CAAAsB,SAAA,GAAwD;MAAxDtB,EAAA,CAAAuB,iBAAA,CAAAvB,EAAA,CAAAwB,WAAA,iDAAwD;MAGzDxB,EAAA,CAAAsB,SAAA,GAAkB;MAAlBtB,EAAA,CAAAyB,UAAA,cAAAR,GAAA,CAAApB,IAAA,CAAkB;MACGG,EAAA,CAAAsB,SAAA,GAA+C;MAA/CtB,EAAA,CAAAuB,iBAAA,CAAAvB,EAAA,CAAAwB,WAAA,wCAA+C;MACtDxB,EAAA,CAAAsB,SAAA,GAAuB;MAAvBtB,EAAA,CAAAyB,UAAA,wBAAuB;MAEnCzB,EAAA,CAAAsB,SAAA,GAA6D;MAA7DtB,EAAA,CAAA0B,qBAAA,gBAAA1B,EAAA,CAAAwB,WAAA,wCAA6D;MAACxB,EAAA,CAAAyB,UAAA,mCAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}