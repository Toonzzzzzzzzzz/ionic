{"ast":null,"code":"var _class;\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreTime } from '@singletons/time';\nimport * as i0 from \"@angular/core\";\n/**\n * Filter to turn a number of seconds to a duration. E.g. 60 -> 1 minute.\n */\nexport class CoreDurationPipe {\n  constructor() {\n    this.logger = CoreLogger.getInstance('CoreBytesToSizePipe');\n  }\n  /**\n   * Turn a number of seconds to a duration. E.g. 60 -> 1 minute.\n   *\n   * @param seconds The number of seconds.\n   * @returns Formatted duration.\n   */\n  transform(seconds) {\n    if (typeof seconds == 'string') {\n      // Convert the value to a number.\n      const numberSeconds = parseInt(seconds, 10);\n      if (isNaN(numberSeconds)) {\n        this.logger.error('Invalid value received', seconds);\n        return seconds;\n      }\n      seconds = numberSeconds;\n    }\n    return CoreTime.formatTime(seconds);\n  }\n}\n_class = CoreDurationPipe;\n_class.ɵfac = function CoreDurationPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"coreDuration\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["CoreLogger","CoreTime","CoreDurationPipe","constructor","logger","getInstance","transform","seconds","numberSeconds","parseInt","isNaN","error","formatTime","pure"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/pipes/duration.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreTime } from '@singletons/time';\n\n/**\n * Filter to turn a number of seconds to a duration. E.g. 60 -> 1 minute.\n */\n@Pipe({\n    name: 'coreDuration',\n})\nexport class CoreDurationPipe implements PipeTransform {\n\n    protected logger: CoreLogger;\n\n    constructor() {\n        this.logger = CoreLogger.getInstance('CoreBytesToSizePipe');\n    }\n\n    /**\n     * Turn a number of seconds to a duration. E.g. 60 -> 1 minute.\n     *\n     * @param seconds The number of seconds.\n     * @returns Formatted duration.\n     */\n    transform(seconds: string | number): string {\n        if (typeof seconds == 'string') {\n            // Convert the value to a number.\n            const numberSeconds = parseInt(seconds, 10);\n            if (isNaN(numberSeconds)) {\n                this.logger.error('Invalid value received', seconds);\n\n                return seconds;\n            }\n            seconds = numberSeconds;\n        }\n\n        return CoreTime.formatTime(seconds);\n    }\n\n}\n"],"mappings":";AAeA,SAASA,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;;;AAMA,OAAM,MAAOC,gBAAgB;EAIzBC,YAAA;IACI,IAAI,CAACC,MAAM,GAAGJ,UAAU,CAACK,WAAW,CAAC,qBAAqB,CAAC;EAC/D;EAEA;;;;;;EAMAC,SAASA,CAACC,OAAwB;IAC9B,IAAI,OAAOA,OAAO,IAAI,QAAQ,EAAE;MAC5B;MACA,MAAMC,aAAa,GAAGC,QAAQ,CAACF,OAAO,EAAE,EAAE,CAAC;MAC3C,IAAIG,KAAK,CAACF,aAAa,CAAC,EAAE;QACtB,IAAI,CAACJ,MAAM,CAACO,KAAK,CAAC,wBAAwB,EAAEJ,OAAO,CAAC;QAEpD,OAAOA,OAAO;;MAElBA,OAAO,GAAGC,aAAa;;IAG3B,OAAOP,QAAQ,CAACW,UAAU,CAACL,OAAO,CAAC;EACvC;;SA3BSL,gBAAgB;;mBAAhBA,MAAgB;AAAA;;;QAAhBA,MAAgB;EAAAW,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}