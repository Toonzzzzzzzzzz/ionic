{"ast":null,"code":"var _class;\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Service that stores error logs in memory.\n */\nexport class CoreErrorLogsService {\n  constructor() {\n    this.errorLogs = [];\n  }\n  /**\n   * Retrieve error logs displayed in the DOM.\n   *\n   * @returns Error logs\n   */\n  getErrorLogs() {\n    return this.errorLogs;\n  }\n  /**\n   * Add an error to error logs list.\n   *\n   * @param error Error.\n   */\n  addErrorLog(error) {\n    this.errorLogs.push(error);\n  }\n}\n_class = CoreErrorLogsService;\n_class.ɵfac = function CoreErrorLogsService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreErrorLogs = makeSingleton(CoreErrorLogsService);","map":{"version":3,"names":["makeSingleton","CoreErrorLogsService","constructor","errorLogs","getErrorLogs","addErrorLog","error","push","factory","ɵfac","providedIn","CoreErrorLogs"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/singletons/error-logs.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Injectable } from '@angular/core';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Service that stores error logs in memory.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreErrorLogsService {\n\n    protected errorLogs: CoreSettingsErrorLog[] = [];\n\n    /**\n     * Retrieve error logs displayed in the DOM.\n     *\n     * @returns Error logs\n     */\n    getErrorLogs(): CoreSettingsErrorLog[] {\n        return this.errorLogs;\n    }\n\n    /**\n     * Add an error to error logs list.\n     *\n     * @param error Error.\n     */\n    addErrorLog(error: CoreSettingsErrorLog): void {\n        this.errorLogs.push(error);\n    }\n\n}\n\nexport const CoreErrorLogs = makeSingleton(CoreErrorLogsService);\n\nexport type CoreSettingsErrorLog = {\n    data?: unknown;\n    message: string;\n    method?: string;\n    time: number;\n    type: string;\n};\n"],"mappings":";AAcA,SAASA,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,oBAAoB;EADjCC,YAAA;IAGc,KAAAC,SAAS,GAA2B,EAAE;;EAEhD;;;;;EAKAC,YAAYA,CAAA;IACR,OAAO,IAAI,CAACD,SAAS;EACzB;EAEA;;;;;EAKAE,WAAWA,CAACC,KAA2B;IACnC,IAAI,CAACH,SAAS,CAACI,IAAI,CAACD,KAAK,CAAC;EAC9B;;SApBSL,oBAAoB;;mBAApBA,MAAoB;AAAA;;SAApBA,MAAoB;EAAAO,OAAA,EAApBP,MAAoB,CAAAQ,IAAA;EAAAC,UAAA,EADP;AAAM;AAyBhC,OAAO,MAAMC,aAAa,GAAGX,aAAa,CAACC,oBAAoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}