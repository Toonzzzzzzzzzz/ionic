{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreUtils } from '@services/utils/utils';\nimport { LoadingController } from '@singletons';\n/**\n * Class to improve the behaviour of HTMLIonLoadingElement.\n *\n * In addition to present/dismiss, this loader can also be paused/resumed in order to allow stacking\n * modals in top of one another without interfering. Conceptually, a paused loader is still\n * active but will not be shown in the UI.\n */\nexport class CoreIonLoadingElement {\n  constructor(text) {\n    this.text = text;\n    this.scheduled = false;\n    this.paused = false;\n    this.listeners = [];\n  }\n  /**\n   * Dismiss the loading element.\n   *\n   * @param data Dismiss data.\n   * @param role Dismiss role.\n   */\n  dismiss(data, role) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.paused) {\n        _this.paused = false;\n        _this.listeners.forEach(listener => listener());\n        return;\n      }\n      if (!_this.asyncLoadingElement) {\n        if (_this.scheduled) {\n          _this.scheduled = false;\n          _this.listeners.forEach(listener => listener());\n        }\n        return;\n      }\n      const asyncLoadingElement = _this.asyncLoadingElement;\n      delete _this.asyncLoadingElement;\n      const loadingElement = yield asyncLoadingElement;\n      yield loadingElement.dismiss(data, role);\n      _this.listeners.forEach(listener => listener());\n    })();\n  }\n  /**\n   * Register dismiss listener.\n   *\n   * @param listener Listener.\n   */\n  onDismiss(listener) {\n    this.listeners.push(listener);\n  }\n  /**\n   * Hide the loading element.\n   */\n  pause() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.asyncLoadingElement) {\n        return;\n      }\n      _this2.paused = true;\n      const asyncLoadingElement = _this2.asyncLoadingElement;\n      delete _this2.asyncLoadingElement;\n      const loadingElement = yield asyncLoadingElement;\n      loadingElement.dismiss();\n    })();\n  }\n  /**\n   * Present the loading element.\n   */\n  present() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.paused || _this3.scheduled || _this3.asyncLoadingElement) {\n        return;\n      }\n      // Wait a bit before presenting the modal, to prevent it being displayed if dismiss is called fast.\n      _this3.scheduled = true;\n      yield CoreUtils.wait(40);\n      if (!_this3.scheduled) {\n        return;\n      }\n      // Present modal.\n      _this3.scheduled = false;\n      yield _this3.presentLoadingElement();\n    })();\n  }\n  /**\n   * Show loading element.\n   */\n  resume() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.paused) {\n        return;\n      }\n      _this4.paused = false;\n      yield _this4.presentLoadingElement();\n    })();\n  }\n  /**\n   * Update text in the loading element.\n   *\n   * @param text Text.\n   */\n  updateText(text) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.text = text;\n      if (!_this5.asyncLoadingElement) {\n        return;\n      }\n      const loadingElement = yield _this5.asyncLoadingElement;\n      const contentElement = loadingElement.querySelector('.loading-content');\n      if (contentElement) {\n        contentElement.innerHTML = text;\n      }\n    })();\n  }\n  /**\n   * Create and present the loading element.\n   */\n  presentLoadingElement() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      let resolveLoadingElement;\n      _this6.asyncLoadingElement = new Promise(resolve => resolveLoadingElement = resolve);\n      const loadingElement = yield LoadingController.create({\n        message: _this6.text\n      });\n      yield loadingElement.present();\n      resolveLoadingElement(loadingElement);\n    })();\n  }\n}","map":{"version":3,"names":["CoreUtils","LoadingController","CoreIonLoadingElement","constructor","text","scheduled","paused","listeners","dismiss","data","role","_this","_asyncToGenerator","forEach","listener","asyncLoadingElement","loadingElement","onDismiss","push","pause","_this2","present","_this3","wait","presentLoadingElement","resume","_this4","updateText","_this5","contentElement","querySelector","innerHTML","_this6","resolveLoadingElement","Promise","resolve","create","message"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/classes/ion-loading.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreUtils } from '@services/utils/utils';\nimport { LoadingController } from '@singletons';\n\n/**\n * Dismiss listener.\n */\nexport type CoreIonLoadingElementDismissListener = () => unknown;\n\n/**\n * Class to improve the behaviour of HTMLIonLoadingElement.\n *\n * In addition to present/dismiss, this loader can also be paused/resumed in order to allow stacking\n * modals in top of one another without interfering. Conceptually, a paused loader is still\n * active but will not be shown in the UI.\n */\nexport class CoreIonLoadingElement {\n\n    protected scheduled = false;\n    protected paused = false;\n    protected listeners: CoreIonLoadingElementDismissListener[] = [];\n    protected asyncLoadingElement?: Promise<HTMLIonLoadingElement>;\n\n    constructor(protected text?: string) { }\n\n    /**\n     * Dismiss the loading element.\n     *\n     * @param data Dismiss data.\n     * @param role Dismiss role.\n     */\n    async dismiss(data?: unknown, role?: string): Promise<void> {\n        if (this.paused) {\n            this.paused = false;\n            this.listeners.forEach(listener => listener());\n\n            return;\n        }\n\n        if (!this.asyncLoadingElement) {\n            if (this.scheduled) {\n                this.scheduled = false;\n                this.listeners.forEach(listener => listener());\n            }\n\n            return;\n        }\n\n        const asyncLoadingElement = this.asyncLoadingElement;\n        delete this.asyncLoadingElement;\n\n        const loadingElement = await asyncLoadingElement;\n        await loadingElement.dismiss(data, role);\n\n        this.listeners.forEach(listener => listener());\n    }\n\n    /**\n     * Register dismiss listener.\n     *\n     * @param listener Listener.\n     */\n    onDismiss(listener: CoreIonLoadingElementDismissListener): void {\n        this.listeners.push(listener);\n    }\n\n    /**\n     * Hide the loading element.\n     */\n    async pause(): Promise<void> {\n        if (!this.asyncLoadingElement) {\n            return;\n        }\n\n        this.paused = true;\n\n        const asyncLoadingElement = this.asyncLoadingElement;\n        delete this.asyncLoadingElement;\n\n        const loadingElement = await asyncLoadingElement;\n        loadingElement.dismiss();\n    }\n\n    /**\n     * Present the loading element.\n     */\n    async present(): Promise<void> {\n        if (this.paused || this.scheduled || this.asyncLoadingElement) {\n            return;\n        }\n\n        // Wait a bit before presenting the modal, to prevent it being displayed if dismiss is called fast.\n        this.scheduled = true;\n\n        await CoreUtils.wait(40);\n\n        if (!this.scheduled) {\n            return;\n        }\n\n        // Present modal.\n        this.scheduled = false;\n\n        await this.presentLoadingElement();\n    }\n\n    /**\n     * Show loading element.\n     */\n    async resume(): Promise<void> {\n        if (!this.paused) {\n            return;\n        }\n\n        this.paused = false;\n\n        await this.presentLoadingElement();\n    }\n\n    /**\n     * Update text in the loading element.\n     *\n     * @param text Text.\n     */\n    async updateText(text: string): Promise<void> {\n        this.text = text;\n\n        if (!this.asyncLoadingElement) {\n            return;\n        }\n\n        const loadingElement = await this.asyncLoadingElement;\n        const contentElement = loadingElement.querySelector('.loading-content');\n\n        if (contentElement) {\n            contentElement.innerHTML = text;\n        }\n    }\n\n    /**\n     * Create and present the loading element.\n     */\n    private async presentLoadingElement(): Promise<void> {\n        let resolveLoadingElement!: ((loadingElement: HTMLIonLoadingElement) => void);\n        this.asyncLoadingElement = new Promise(resolve => resolveLoadingElement = resolve);\n\n        const loadingElement = await LoadingController.create({ message: this.text });\n\n        await loadingElement.present();\n\n        resolveLoadingElement(loadingElement);\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}