{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { AddonCalendar } from '../calendar';\nimport moment from 'moment-timezone';\nimport * as i0 from \"@angular/core\";\nconst SUPPORTED_VIEWS = ['month', 'mini', 'minithree', 'day', 'upcoming', 'upcoming_mini'];\n/**\n * Content links handler for calendar view page.\n */\nexport class AddonCalendarViewLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonCalendarViewLinkHandler';\n    this.pattern = /\\/calendar\\/view\\.php/;\n  }\n  /**\n   * Get the list of actions for a link (url).\n   *\n   * @param siteIds List of sites the URL belongs to.\n   * @param url The URL to treat.\n   * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n   * @returns List of (or promise resolved with list of) actions.\n   */\n  getActions(siteIds, url, params) {\n    return [{\n      action: siteId => {\n        if (!params.view || params.view == 'month' || params.view == 'mini' || params.view == 'minithree') {\n          // Monthly view, open the calendar tab.\n          const stateParams = {\n            courseId: params.course\n          };\n          const timestamp = params.time ? Number(params.time) * 1000 : Date.now();\n          const momentInstance = moment(timestamp);\n          stateParams.year = momentInstance.year();\n          stateParams.month = momentInstance.month() + 1;\n          CoreNavigator.navigateToSitePath('/calendar/index', {\n            params: stateParams,\n            siteId,\n            preferCurrentTab: false\n          });\n        } else if (params.view == 'day') {\n          // Daily view, open the page.\n          const stateParams = {\n            courseId: params.course\n          };\n          const timestamp = params.time ? Number(params.time) * 1000 : Date.now();\n          const momentInstance = moment(timestamp);\n          stateParams.year = momentInstance.year();\n          stateParams.month = momentInstance.month() + 1;\n          stateParams.day = momentInstance.date();\n          CoreNavigator.navigateToSitePath('/calendar/day', {\n            params: stateParams,\n            siteId\n          });\n        } else if (params.view == 'upcoming' || params.view == 'upcoming_mini') {\n          // Upcoming view, open the calendar tab.\n          const stateParams = {\n            courseId: params.course,\n            upcoming: true\n          };\n          CoreNavigator.navigateToSitePath('/calendar/index', {\n            params: stateParams,\n            siteId,\n            preferCurrentTab: false\n          });\n        }\n      }\n    }];\n  }\n  /**\n   * Check if the handler is enabled for a certain site (site + user) and a URL.\n   * If not defined, defaults to true.\n   *\n   * @param siteId The site ID.\n   * @param url The URL to treat.\n   * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n   * @returns Whether the handler is enabled for the URL and site.\n   */\n  isEnabled(siteId, url, params) {\n    return _asyncToGenerator(function* () {\n      if (params.view && SUPPORTED_VIEWS.indexOf(params.view) == -1) {\n        // This type of view isn't supported in the app.\n        return false;\n      }\n      const disabled = yield AddonCalendar.isDisabled(siteId);\n      return !disabled;\n    })();\n  }\n}\n_class = AddonCalendarViewLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonCalendarViewLinkHandlerService_BaseFactory;\n  return function AddonCalendarViewLinkHandlerService_Factory(t) {\n    return (ɵAddonCalendarViewLinkHandlerService_BaseFactory || (ɵAddonCalendarViewLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonCalendarViewLinkHandler = makeSingleton(AddonCalendarViewLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreNavigator","makeSingleton","AddonCalendar","moment","SUPPORTED_VIEWS","AddonCalendarViewLinkHandlerService","constructor","name","pattern","getActions","siteIds","url","params","action","siteId","view","stateParams","courseId","course","timestamp","time","Number","Date","now","momentInstance","year","month","navigateToSitePath","preferCurrentTab","day","date","upcoming","isEnabled","_asyncToGenerator","indexOf","disabled","isDisabled","t","factory","ɵfac","providedIn","AddonCalendarViewLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/calendar/services/handlers/view-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\n\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreNavigator } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { AddonCalendar } from '../calendar';\nimport moment from 'moment-timezone';\n\nconst SUPPORTED_VIEWS = ['month', 'mini', 'minithree', 'day', 'upcoming', 'upcoming_mini'];\n\n/**\n * Content links handler for calendar view page.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonCalendarViewLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'AddonCalendarViewLinkHandler';\n    pattern = /\\/calendar\\/view\\.php/;\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param siteIds List of sites the URL belongs to.\n     * @param url The URL to treat.\n     * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @returns List of (or promise resolved with list of) actions.\n     */\n    getActions(\n        siteIds: string[],\n        url: string,\n        params: Record<string, string>,\n    ): CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId?: string): void => {\n                if (!params.view || params.view == 'month' || params.view == 'mini' || params.view == 'minithree') {\n                    // Monthly view, open the calendar tab.\n                    const stateParams: Params = {\n                        courseId: params.course,\n                    };\n                    const timestamp = params.time ? Number(params.time) * 1000 : Date.now();\n\n                    const momentInstance = moment(timestamp);\n                    stateParams.year = momentInstance.year();\n                    stateParams.month = momentInstance.month() + 1;\n\n                    CoreNavigator.navigateToSitePath('/calendar/index', {\n                        params: stateParams,\n                        siteId,\n                        preferCurrentTab: false,\n                    });\n\n                } else if (params.view == 'day') {\n                    // Daily view, open the page.\n                    const stateParams: Params = {\n                        courseId: params.course,\n                    };\n                    const timestamp = params.time ? Number(params.time) * 1000 : Date.now();\n\n                    const momentInstance = moment(timestamp);\n                    stateParams.year = momentInstance.year();\n                    stateParams.month = momentInstance.month() + 1;\n                    stateParams.day = momentInstance.date();\n\n                    CoreNavigator.navigateToSitePath('/calendar/day', { params: stateParams, siteId });\n\n                } else if (params.view == 'upcoming' || params.view == 'upcoming_mini') {\n                    // Upcoming view, open the calendar tab.\n                    const stateParams: Params = {\n                        courseId: params.course,\n                        upcoming: true,\n                    };\n\n                    CoreNavigator.navigateToSitePath('/calendar/index', {\n                        params: stateParams,\n                        siteId,\n                        preferCurrentTab: false,\n                    });\n\n                }\n            },\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param siteId The site ID.\n     * @param url The URL to treat.\n     * @param params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @returns Whether the handler is enabled for the URL and site.\n     */\n    async isEnabled(siteId: string, url: string, params: Record<string, string>): Promise<boolean> {\n        if (params.view && SUPPORTED_VIEWS.indexOf(params.view) == -1) {\n            // This type of view isn't supported in the app.\n            return false;\n        }\n\n        const disabled = await AddonCalendar.isDisabled(siteId);\n\n        return !disabled;\n    }\n\n}\n\nexport const AddonCalendarViewLinkHandler = makeSingleton(AddonCalendarViewLinkHandlerService);\n"],"mappings":";;AAiBA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,aAAa,QAAQ,aAAa;AAC3C,OAAOC,MAAM,MAAM,iBAAiB;;AAEpC,MAAMC,eAAe,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE,eAAe,CAAC;AAE1F;;;AAIA,OAAM,MAAOC,mCAAoC,SAAQN,2BAA2B;EADpFO,YAAA;;IAGI,KAAAC,IAAI,GAAG,8BAA8B;IACrC,KAAAC,OAAO,GAAG,uBAAuB;;EAEjC;;;;;;;;EAQAC,UAAUA,CACNC,OAAiB,EACjBC,GAAW,EACXC,MAA8B;IAE9B,OAAO,CAAC;MACJC,MAAM,EAAGC,MAAe,IAAU;QAC9B,IAAI,CAACF,MAAM,CAACG,IAAI,IAAIH,MAAM,CAACG,IAAI,IAAI,OAAO,IAAIH,MAAM,CAACG,IAAI,IAAI,MAAM,IAAIH,MAAM,CAACG,IAAI,IAAI,WAAW,EAAE;UAC/F;UACA,MAAMC,WAAW,GAAW;YACxBC,QAAQ,EAAEL,MAAM,CAACM;WACpB;UACD,MAAMC,SAAS,GAAGP,MAAM,CAACQ,IAAI,GAAGC,MAAM,CAACT,MAAM,CAACQ,IAAI,CAAC,GAAG,IAAI,GAAGE,IAAI,CAACC,GAAG,EAAE;UAEvE,MAAMC,cAAc,GAAGrB,MAAM,CAACgB,SAAS,CAAC;UACxCH,WAAW,CAACS,IAAI,GAAGD,cAAc,CAACC,IAAI,EAAE;UACxCT,WAAW,CAACU,KAAK,GAAGF,cAAc,CAACE,KAAK,EAAE,GAAG,CAAC;UAE9C1B,aAAa,CAAC2B,kBAAkB,CAAC,iBAAiB,EAAE;YAChDf,MAAM,EAAEI,WAAW;YACnBF,MAAM;YACNc,gBAAgB,EAAE;WACrB,CAAC;SAEL,MAAM,IAAIhB,MAAM,CAACG,IAAI,IAAI,KAAK,EAAE;UAC7B;UACA,MAAMC,WAAW,GAAW;YACxBC,QAAQ,EAAEL,MAAM,CAACM;WACpB;UACD,MAAMC,SAAS,GAAGP,MAAM,CAACQ,IAAI,GAAGC,MAAM,CAACT,MAAM,CAACQ,IAAI,CAAC,GAAG,IAAI,GAAGE,IAAI,CAACC,GAAG,EAAE;UAEvE,MAAMC,cAAc,GAAGrB,MAAM,CAACgB,SAAS,CAAC;UACxCH,WAAW,CAACS,IAAI,GAAGD,cAAc,CAACC,IAAI,EAAE;UACxCT,WAAW,CAACU,KAAK,GAAGF,cAAc,CAACE,KAAK,EAAE,GAAG,CAAC;UAC9CV,WAAW,CAACa,GAAG,GAAGL,cAAc,CAACM,IAAI,EAAE;UAEvC9B,aAAa,CAAC2B,kBAAkB,CAAC,eAAe,EAAE;YAAEf,MAAM,EAAEI,WAAW;YAAEF;UAAM,CAAE,CAAC;SAErF,MAAM,IAAIF,MAAM,CAACG,IAAI,IAAI,UAAU,IAAIH,MAAM,CAACG,IAAI,IAAI,eAAe,EAAE;UACpE;UACA,MAAMC,WAAW,GAAW;YACxBC,QAAQ,EAAEL,MAAM,CAACM,MAAM;YACvBa,QAAQ,EAAE;WACb;UAED/B,aAAa,CAAC2B,kBAAkB,CAAC,iBAAiB,EAAE;YAChDf,MAAM,EAAEI,WAAW;YACnBF,MAAM;YACNc,gBAAgB,EAAE;WACrB,CAAC;;MAGV;KACH,CAAC;EACN;EAEA;;;;;;;;;EASMI,SAASA,CAAClB,MAAc,EAAEH,GAAW,EAAEC,MAA8B;IAAA,OAAAqB,iBAAA;MACvE,IAAIrB,MAAM,CAACG,IAAI,IAAIX,eAAe,CAAC8B,OAAO,CAACtB,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;QAC3D;QACA,OAAO,KAAK;;MAGhB,MAAMoB,QAAQ,SAASjC,aAAa,CAACkC,UAAU,CAACtB,MAAM,CAAC;MAEvD,OAAO,CAACqB,QAAQ;IAAC;EACrB;;SAvFS9B,mCAAoC;;;;6IAApCA,MAAmC,IAAAgC,CAAA,IAAnChC,MAAmC;EAAA;AAAA;;SAAnCA,MAAmC;EAAAiC,OAAA,EAAnCjC,MAAmC,CAAAkC,IAAA;EAAAC,UAAA,EADtB;AAAM;AA4FhC,OAAO,MAAMC,4BAA4B,GAAGxC,aAAa,CAACI,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}