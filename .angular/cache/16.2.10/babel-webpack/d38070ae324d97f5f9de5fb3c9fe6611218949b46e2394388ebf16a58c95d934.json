{"ast":null,"code":"import _objectSpread from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nconst _excluded = [\"delay\"];\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreConstants } from '@/core/constants';\nimport { asyncInstance } from '@/core/utils/async-instance';\nimport { CoreDatabaseCachingStrategy, CoreDatabaseTableProxy } from '@classes/database/database-table-proxy';\nimport { CoreApp } from '@services/app';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AngularFrameworkDelegate, makeSingleton } from '@singletons';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreSubscriptions } from '@singletons/subscriptions';\nimport { CoreUserToursUserTourComponent } from '../components/user-tour/user-tour';\nimport { APP_SCHEMA, USER_TOURS_TABLE_NAME } from './database/user-tours';\nimport { CorePromisedValue } from '@classes/promised-value';\nimport * as i0 from \"@angular/core\";\n/**\n * Service to manage User Tours.\n */\nexport class CoreUserToursService {\n  constructor() {\n    this.table = asyncInstance();\n    this.tours = [];\n    this.toursListeners = {};\n  }\n  /**\n   * Initialize database.\n   */\n  initializeDatabase() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(CoreApp.createTablesFromSchema(APP_SCHEMA));\n      _this.table.setLazyConstructor( /*#__PURE__*/_asyncToGenerator(function* () {\n        const table = new CoreDatabaseTableProxy({\n          cachingStrategy: CoreDatabaseCachingStrategy.Eager\n        }, CoreApp.getDB(), USER_TOURS_TABLE_NAME, ['id']);\n        yield table.initialize();\n        return table;\n      }));\n    })();\n  }\n  /**\n   * Check whether a User Tour is pending or not.\n   *\n   * @param id User Tour id.\n   * @returns Whether the User Tour is pending or not.\n   */\n  isPending(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.isDisabled(id)) {\n        return false;\n      }\n      const isAcknowledged = yield _this2.table.hasAnyByPrimaryKey({\n        id\n      });\n      return !isAcknowledged;\n    })();\n  }\n  /**\n   * Confirm that a User Tour has been seen by the user.\n   *\n   * @param id User Tour id.\n   */\n  acknowledge(id) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.table.insert({\n        id,\n        acknowledgedTime: Date.now()\n      });\n    })();\n  }\n  showIfPending(options) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const isPending = yield CoreUserTours.isPending(options.id);\n      if (!isPending) {\n        return null;\n      }\n      return _this4.show(options);\n    })();\n  }\n  show(options) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      var _document$querySelect, _this5$toursListeners, _options$watch;\n      const {\n          delay\n        } = options,\n        componentOptions = _objectWithoutProperties(options, _excluded);\n      yield CoreUtils.wait(delay !== null && delay !== void 0 ? delay : 200);\n      options.after && (yield _this5.waitForUserTour(options.after, options.afterTimeout));\n      const container = (_document$querySelect = document.querySelector('ion-app')) !== null && _document$querySelect !== void 0 ? _document$querySelect : document.body;\n      const viewContainer = container.querySelector('ion-router-outlet, ion-nav, #ion-view-container-root');\n      const element = yield AngularFrameworkDelegate.attachViewToDom(container, CoreUserToursUserTourComponent, _objectSpread(_objectSpread({}, componentOptions), {}, {\n        container\n      }));\n      const tour = CoreDirectivesRegistry.require(element, CoreUserToursUserTourComponent);\n      viewContainer === null || viewContainer === void 0 || viewContainer.setAttribute('aria-hidden', 'true');\n      (_this5$toursListeners = _this5.toursListeners[options.id]) === null || _this5$toursListeners === void 0 || _this5$toursListeners.forEach(listener => listener.resolve());\n      return _this5.startTour(tour, (_options$watch = options.watch) !== null && _options$watch !== void 0 ? _options$watch : options.focus);\n    })();\n  }\n  /**\n   * Dismiss the active User Tour, if any.\n   *\n   * @param acknowledge Whether to acknowledge that the user has seen this User Tour or not.\n   */\n  dismiss(acknowledge = true) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      var _this6$getForegroundT, _document$querySelect2;\n      yield (_this6$getForegroundT = _this6.getForegroundTour()) === null || _this6$getForegroundT === void 0 ? void 0 : _this6$getForegroundT.dismiss(acknowledge);\n      if (_this6.hasVisibleTour()) {\n        return;\n      }\n      const container = (_document$querySelect2 = document.querySelector('ion-app')) !== null && _document$querySelect2 !== void 0 ? _document$querySelect2 : document.body;\n      const viewContainer = container.querySelector('ion-router-outlet, ion-nav, #ion-view-container-root');\n      viewContainer === null || viewContainer === void 0 || viewContainer.removeAttribute('aria-hidden');\n    })();\n  }\n  /**\n   * Activate a tour component and bind its lifecycle to an element if provided.\n   *\n   * @param tour User tour.\n   * @param watchElement Element to watch in order to update tour lifecycle.\n   * @returns User tour controller.\n   */\n  startTour(tour, watchElement) {\n    if (!watchElement) {\n      this.activateTour(tour);\n      return {\n        cancel: () => tour.dismiss(false)\n      };\n    }\n    let unsubscribeVisible;\n    let visiblePromise = CoreDom.waitToBeInViewport(watchElement);\n    // eslint-disable-next-line promise/catch-or-return, promise/always-return\n    visiblePromise.then(() => {\n      visiblePromise = undefined;\n      this.activateTour(tour);\n      unsubscribeVisible = CoreDom.watchElementInViewport(watchElement, visible => visible ? this.activateTour(tour) : this.deactivateTour(tour));\n      CoreSubscriptions.once(tour.beforeDismiss, () => {\n        var _unsubscribeVisible;\n        (_unsubscribeVisible = unsubscribeVisible) === null || _unsubscribeVisible === void 0 || _unsubscribeVisible();\n        visiblePromise = undefined;\n        unsubscribeVisible = undefined;\n      });\n    });\n    return {\n      cancel: function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          var _visiblePromise;\n          (_visiblePromise = visiblePromise) === null || _visiblePromise === void 0 || _visiblePromise.cancel();\n          if (!unsubscribeVisible) {\n            return;\n          }\n          unsubscribeVisible();\n          yield tour.dismiss(false);\n        });\n        return function cancel() {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    };\n  }\n  /**\n   * Activate the given user tour.\n   *\n   * @param tour User tour.\n   */\n  activateTour(tour) {\n    var _this$getForegroundTo2;\n    // Handle show/dismiss lifecycle.\n    CoreSubscriptions.once(tour.beforeDismiss, () => {\n      var _this$getForegroundTo;\n      const index = this.getTourIndex(tour);\n      if (index === -1) {\n        return;\n      }\n      this.tours.splice(index, 1);\n      (_this$getForegroundTo = this.getForegroundTour()) === null || _this$getForegroundTo === void 0 || _this$getForegroundTo.show();\n    });\n    // Add to existing tours and show it if it's on top.\n    const index = this.getTourIndex(tour);\n    const previousForegroundTour = this.getForegroundTour();\n    if ((previousForegroundTour === null || previousForegroundTour === void 0 ? void 0 : previousForegroundTour.id) === tour.id) {\n      // Already activated.\n      return;\n    }\n    if (index !== -1) {\n      this.tours[index].visible = true;\n    } else {\n      this.tours.push({\n        visible: true,\n        component: tour\n      });\n    }\n    if (((_this$getForegroundTo2 = this.getForegroundTour()) === null || _this$getForegroundTo2 === void 0 ? void 0 : _this$getForegroundTo2.id) !== tour.id) {\n      // Another tour is in use.\n      return;\n    }\n    tour.show();\n  }\n  /**\n   * Returns the first visible tour in the stack.\n   *\n   * @returns foreground tour if found or undefined.\n   */\n  getForegroundTour() {\n    var _this$tours$find;\n    return (_this$tours$find = this.tours.find(({\n      visible\n    }) => visible)) === null || _this$tours$find === void 0 ? void 0 : _this$tours$find.component;\n  }\n  /**\n   * Check whether any tour is visible.\n   *\n   * @returns Whether any tour is visible.\n   */\n  hasVisibleTour() {\n    return this.tours.some(({\n      visible\n    }) => visible);\n  }\n  /**\n   * Returns the tour index in the stack.\n   *\n   * @returns Tour index if found or -1 otherwise.\n   */\n  getTourIndex(tour) {\n    return this.tours.findIndex(({\n      component\n    }) => component === tour);\n  }\n  /**\n   * Hide User Tour if visible.\n   *\n   * @param tour User tour.\n   */\n  deactivateTour(tour) {\n    const index = this.getTourIndex(tour);\n    if (index === -1) {\n      return;\n    }\n    const foregroundTour = this.getForegroundTour();\n    this.tours[index].visible = false;\n    if ((foregroundTour === null || foregroundTour === void 0 ? void 0 : foregroundTour.id) !== tour.id) {\n      // Another tour is in use.\n      return;\n    }\n    tour.hide();\n  }\n  /**\n   * Is user Tour disabled?\n   *\n   * @param tourId Tour Id or undefined to check all user tours.\n   * @returns Whether a particular or all user tours are disabled.\n   */\n  isDisabled(tourId) {\n    var _CoreConstants$CONFIG;\n    if (CoreConstants.CONFIG.disableUserTours) {\n      return true;\n    }\n    return !!tourId && !!((_CoreConstants$CONFIG = CoreConstants.CONFIG.disabledUserTours) !== null && _CoreConstants$CONFIG !== void 0 && _CoreConstants$CONFIG.includes(tourId));\n  }\n  /**\n   * It will reset all user tours.\n   */\n  resetTours() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (_this7.isDisabled()) {\n        return;\n      }\n      yield _this7.table.delete();\n    })();\n  }\n  /**\n   * Wait for another user tour to be shown.\n   *\n   * @param id Id of the user tour to wait for.\n   * @param timeout Timeout after which the waiting will end regardless of the user tour having been shown or not.\n   */\n  waitForUserTour(id, timeout) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      var _this8$toursListeners;\n      const listener = new CorePromisedValue();\n      const listeners = _this8.toursListeners[id] = (_this8$toursListeners = _this8.toursListeners[id]) !== null && _this8$toursListeners !== void 0 ? _this8$toursListeners : [];\n      const removeListener = () => {\n        const index = listeners.indexOf(listener);\n        if (index !== -1) {\n          listeners.splice(index, 1);\n        }\n      };\n      listeners.push(listener);\n      listener.then(removeListener).catch(removeListener);\n      timeout && setTimeout(() => listener.resolve(), timeout);\n      yield listener;\n    })();\n  }\n}\n_class = CoreUserToursService;\n_class.ɵfac = function CoreUserToursService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreUserTours = makeSingleton(CoreUserToursService);","map":{"version":3,"names":["CoreConstants","asyncInstance","CoreDatabaseCachingStrategy","CoreDatabaseTableProxy","CoreApp","CoreUtils","AngularFrameworkDelegate","makeSingleton","CoreDirectivesRegistry","CoreDom","CoreSubscriptions","CoreUserToursUserTourComponent","APP_SCHEMA","USER_TOURS_TABLE_NAME","CorePromisedValue","CoreUserToursService","constructor","table","tours","toursListeners","initializeDatabase","_this","_asyncToGenerator","ignoreErrors","createTablesFromSchema","setLazyConstructor","cachingStrategy","Eager","getDB","initialize","isPending","id","_this2","isDisabled","isAcknowledged","hasAnyByPrimaryKey","acknowledge","_this3","insert","acknowledgedTime","Date","now","showIfPending","options","_this4","CoreUserTours","show","_this5","_document$querySelect","_this5$toursListeners","_options$watch","delay","componentOptions","_objectWithoutProperties","_excluded","wait","after","waitForUserTour","afterTimeout","container","document","querySelector","body","viewContainer","element","attachViewToDom","_objectSpread","tour","require","setAttribute","forEach","listener","resolve","startTour","watch","focus","dismiss","_this6","_this6$getForegroundT","_document$querySelect2","getForegroundTour","hasVisibleTour","removeAttribute","watchElement","activateTour","cancel","unsubscribeVisible","visiblePromise","waitToBeInViewport","then","undefined","watchElementInViewport","visible","deactivateTour","once","beforeDismiss","_unsubscribeVisible","_ref2","_visiblePromise","apply","arguments","_this$getForegroundTo2","_this$getForegroundTo","index","getTourIndex","splice","previousForegroundTour","push","component","_this$tours$find","find","some","findIndex","foregroundTour","hide","tourId","_CoreConstants$CONFIG","CONFIG","disableUserTours","disabledUserTours","includes","resetTours","_this7","delete","timeout","_this8","_this8$toursListeners","listeners","removeListener","indexOf","catch","setTimeout","factory","ɵfac","providedIn"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/usertours/services/user-tours.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreConstants } from '@/core/constants';\nimport { asyncInstance } from '@/core/utils/async-instance';\nimport { Injectable } from '@angular/core';\nimport { CoreCancellablePromise } from '@classes/cancellable-promise';\nimport { CoreDatabaseTable } from '@classes/database/database-table';\nimport { CoreDatabaseCachingStrategy, CoreDatabaseTableProxy } from '@classes/database/database-table-proxy';\nimport { CoreApp } from '@services/app';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AngularFrameworkDelegate, makeSingleton } from '@singletons';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreSubscriptions } from '@singletons/subscriptions';\nimport { CoreUserToursUserTourComponent } from '../components/user-tour/user-tour';\nimport { APP_SCHEMA, CoreUserToursDBEntry, USER_TOURS_TABLE_NAME } from './database/user-tours';\nimport { CorePromisedValue } from '@classes/promised-value';\n\n/**\n * Service to manage User Tours.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreUserToursService {\n\n    protected table = asyncInstance<CoreDatabaseTable<CoreUserToursDBEntry>>();\n    protected tours: { component: CoreUserToursUserTourComponent; visible: boolean }[] = [];\n    protected toursListeners: Partial<Record<string, CorePromisedValue<void>[]>> = {};\n\n    /**\n     * Initialize database.\n     */\n    async initializeDatabase(): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreApp.createTablesFromSchema(APP_SCHEMA));\n\n        this.table.setLazyConstructor(async () => {\n            const table = new CoreDatabaseTableProxy<CoreUserToursDBEntry>(\n                { cachingStrategy: CoreDatabaseCachingStrategy.Eager },\n                CoreApp.getDB(),\n                USER_TOURS_TABLE_NAME,\n                ['id'],\n            );\n\n            await table.initialize();\n\n            return table;\n        });\n    }\n\n    /**\n     * Check whether a User Tour is pending or not.\n     *\n     * @param id User Tour id.\n     * @returns Whether the User Tour is pending or not.\n     */\n    async isPending(id: string): Promise<boolean> {\n        if (this.isDisabled(id)) {\n            return false;\n        }\n\n        const isAcknowledged = await this.table.hasAnyByPrimaryKey({ id });\n\n        return !isAcknowledged;\n    }\n\n    /**\n     * Confirm that a User Tour has been seen by the user.\n     *\n     * @param id User Tour id.\n     */\n    async acknowledge(id: string): Promise<void> {\n        await this.table.insert({ id, acknowledgedTime: Date.now() });\n    }\n\n    /**\n     * Show a User Tour if it's pending.\n     *\n     * @param options User Tour options.\n     * @returns User tour controller, if any.\n     */\n    async showIfPending(options: CoreUserToursBasicOptions): Promise<CoreUserToursUserTour | null>;\n    async showIfPending(options: CoreUserToursFocusedOptions): Promise<CoreUserToursUserTour | null>;\n    async showIfPending(\n        options: CoreUserToursBasicOptions | CoreUserToursFocusedOptions,\n    ): Promise<CoreUserToursUserTour | null> {\n        const isPending = await CoreUserTours.isPending(options.id);\n\n        if (!isPending) {\n            return null;\n        }\n\n        return this.show(options);\n    }\n\n    /**\n     * Show a User Tour.\n     *\n     * @param options User Tour options.\n     * @returns User tour controller.\n     */\n    protected async show(options: CoreUserToursBasicOptions): Promise<CoreUserToursUserTour>;\n    protected async show(options: CoreUserToursFocusedOptions): Promise<CoreUserToursUserTour>;\n    protected async show(options: CoreUserToursBasicOptions | CoreUserToursFocusedOptions): Promise<CoreUserToursUserTour> {\n        const { delay, ...componentOptions } = options;\n\n        await CoreUtils.wait(delay ?? 200);\n\n        options.after && await this.waitForUserTour(options.after, options.afterTimeout);\n\n        const container = document.querySelector('ion-app') ?? document.body;\n        const viewContainer = container.querySelector('ion-router-outlet, ion-nav, #ion-view-container-root');\n        const element = await AngularFrameworkDelegate.attachViewToDom(\n            container,\n            CoreUserToursUserTourComponent,\n            { ...componentOptions, container },\n        );\n        const tour = CoreDirectivesRegistry.require(element, CoreUserToursUserTourComponent);\n\n        viewContainer?.setAttribute('aria-hidden', 'true');\n\n        this.toursListeners[options.id]?.forEach(listener => listener.resolve());\n\n        return this.startTour(tour, options.watch ?? (options as CoreUserToursFocusedOptions).focus);\n    }\n\n    /**\n     * Dismiss the active User Tour, if any.\n     *\n     * @param acknowledge Whether to acknowledge that the user has seen this User Tour or not.\n     */\n    async dismiss(acknowledge: boolean = true): Promise<void> {\n        await this.getForegroundTour()?.dismiss(acknowledge);\n\n        if (this.hasVisibleTour()) {\n            return;\n        }\n\n        const container = document.querySelector('ion-app') ?? document.body;\n        const viewContainer = container.querySelector('ion-router-outlet, ion-nav, #ion-view-container-root');\n\n        viewContainer?.removeAttribute('aria-hidden');\n    }\n\n    /**\n     * Activate a tour component and bind its lifecycle to an element if provided.\n     *\n     * @param tour User tour.\n     * @param watchElement Element to watch in order to update tour lifecycle.\n     * @returns User tour controller.\n     */\n    protected startTour(tour: CoreUserToursUserTourComponent, watchElement?: HTMLElement | false): CoreUserToursUserTour {\n        if (!watchElement) {\n            this.activateTour(tour);\n\n            return {\n                cancel: () => tour.dismiss(false),\n            };\n        }\n\n        let unsubscribeVisible: (() => void) | undefined;\n        let visiblePromise: CoreCancellablePromise | undefined = CoreDom.waitToBeInViewport(watchElement);\n\n        // eslint-disable-next-line promise/catch-or-return, promise/always-return\n        visiblePromise.then(() => {\n            visiblePromise = undefined;\n\n            this.activateTour(tour);\n\n            unsubscribeVisible = CoreDom.watchElementInViewport(\n                watchElement,\n                visible => visible ? this.activateTour(tour) : this.deactivateTour(tour),\n            );\n\n            CoreSubscriptions.once(tour.beforeDismiss, () => {\n                unsubscribeVisible?.();\n\n                visiblePromise = undefined;\n                unsubscribeVisible = undefined;\n            });\n        });\n\n        return {\n            cancel: async () => {\n                visiblePromise?.cancel();\n\n                if (!unsubscribeVisible) {\n                    return;\n                }\n\n                unsubscribeVisible();\n\n                await tour.dismiss(false);\n            },\n        };\n    }\n\n    /**\n     * Activate the given user tour.\n     *\n     * @param tour User tour.\n     */\n    protected activateTour(tour: CoreUserToursUserTourComponent): void {\n        // Handle show/dismiss lifecycle.\n        CoreSubscriptions.once(tour.beforeDismiss, () => {\n            const index = this.getTourIndex(tour);\n\n            if (index === -1) {\n                return;\n            }\n\n            this.tours.splice(index, 1);\n\n            this.getForegroundTour()?.show();\n        });\n\n        // Add to existing tours and show it if it's on top.\n        const index = this.getTourIndex(tour);\n        const previousForegroundTour = this.getForegroundTour();\n\n        if (previousForegroundTour?.id === tour.id) {\n            // Already activated.\n            return;\n        }\n\n        if (index !== -1) {\n            this.tours[index].visible = true;\n        } else {\n            this.tours.push({\n                visible: true,\n                component: tour,\n            });\n        }\n\n        if (this.getForegroundTour()?.id !== tour.id) {\n            // Another tour is in use.\n            return;\n        }\n\n        tour.show();\n    }\n\n    /**\n     * Returns the first visible tour in the stack.\n     *\n     * @returns foreground tour if found or undefined.\n     */\n    protected getForegroundTour(): CoreUserToursUserTourComponent | undefined {\n        return this.tours.find(({ visible }) => visible)?.component;\n    }\n\n    /**\n     * Check whether any tour is visible.\n     *\n     * @returns Whether any tour is visible.\n     */\n    protected hasVisibleTour(): boolean {\n        return this.tours.some(({ visible }) => visible);\n    }\n\n    /**\n     * Returns the tour index in the stack.\n     *\n     * @returns Tour index if found or -1 otherwise.\n     */\n    protected getTourIndex(tour: CoreUserToursUserTourComponent): number {\n        return this.tours.findIndex(({ component }) => component === tour);\n    }\n\n    /**\n     * Hide User Tour if visible.\n     *\n     * @param tour User tour.\n     */\n    protected deactivateTour(tour: CoreUserToursUserTourComponent): void {\n        const index = this.getTourIndex(tour);\n        if (index === -1) {\n            return;\n        }\n\n        const foregroundTour = this.getForegroundTour();\n\n        this.tours[index].visible = false;\n\n        if (foregroundTour?.id !== tour.id) {\n            // Another tour is in use.\n            return;\n        }\n\n        tour.hide();\n    }\n\n    /**\n     * Is user Tour disabled?\n     *\n     * @param tourId Tour Id or undefined to check all user tours.\n     * @returns Whether a particular or all user tours are disabled.\n     */\n    isDisabled(tourId?: string): boolean {\n        if (CoreConstants.CONFIG.disableUserTours) {\n            return true;\n        }\n\n        return !!tourId && !!CoreConstants.CONFIG.disabledUserTours?.includes(tourId);\n    }\n\n    /**\n     * It will reset all user tours.\n     */\n    async resetTours(): Promise<void> {\n        if (this.isDisabled()) {\n            return;\n        }\n\n        await this.table.delete();\n    }\n\n    /**\n     * Wait for another user tour to be shown.\n     *\n     * @param id Id of the user tour to wait for.\n     * @param timeout Timeout after which the waiting will end regardless of the user tour having been shown or not.\n     */\n    async waitForUserTour(id: string, timeout?: number): Promise<void> {\n        const listener = new CorePromisedValue<void>();\n        const listeners = this.toursListeners[id] = this.toursListeners[id] ?? [];\n        const removeListener = () => {\n            const index = listeners.indexOf(listener);\n\n            if (index !== -1) {\n                listeners.splice(index, 1);\n            }\n        };\n\n        listeners.push(listener);\n        listener.then(removeListener).catch(removeListener);\n        timeout && setTimeout(() => listener.resolve(), timeout);\n\n        await listener;\n    }\n\n}\n\nexport const CoreUserTours = makeSingleton(CoreUserToursService);\n\n/**\n * User Tour controller.\n */\nexport interface CoreUserToursUserTour {\n\n    /**\n     * Cancelling a User Tour removes it from the queue if it was pending or dismisses it without\n     * acknowledging.\n     */\n    cancel(): Promise<void>;\n\n}\n\n/**\n * User Tour side.\n */\nexport const enum CoreUserToursSide {\n    Top = 'top',\n    Bottom = 'bottom',\n    Right = 'right',\n    Left = 'left',\n    Start = 'start',\n    End = 'end',\n}\n\n/**\n * User Tour alignment.\n */\nexport const enum CoreUserToursAlignment {\n    Start = 'start',\n    Center = 'center',\n    End = 'end',\n}\n\n/**\n * Basic options to create a User Tour.\n */\nexport interface CoreUserToursBasicOptions {\n\n    /**\n     * Unique identifier.\n     */\n    id: string;\n\n    /**\n     * User Tour component.\n     */\n    component: unknown;\n\n    /**\n     * Properties to pass to the User Tour component.\n     */\n    componentProps?: Record<string, unknown>;\n\n    /**\n     * Milliseconds to wait until the User Tour is shown.\n     *\n     * Defaults to 200ms.\n     */\n    delay?: number;\n\n    /**\n     * Whether to watch an element to bind the User Tour lifecycle. Whenever this element appears or\n     * leaves the screen, the user tour will do it as well. Focused user tours do it by default with\n     * the focused element, but it can be disabled by explicitly using `false` here.\n     */\n    watch?: HTMLElement | false;\n\n    /**\n     * Whether to show this user tour only after another user tour with the given id has been shown.\n     */\n    after?: string;\n\n    /**\n     * Whether to show this user tour after the given timeout (in milliseconds) if the other user-tour hasn't been shown.\n     */\n    afterTimeout?: number;\n\n}\n\n/**\n * Options to create a focused User Tour.\n */\nexport interface CoreUserToursFocusedOptions extends CoreUserToursBasicOptions {\n\n    /**\n     * Element to focus.\n     */\n    focus: HTMLElement;\n\n    /**\n     * Position relative to the focused element.\n     */\n    side: CoreUserToursSide;\n\n    /**\n     * Alignment relative to the focused element.\n     */\n    alignment: CoreUserToursAlignment;\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}