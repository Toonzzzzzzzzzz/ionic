{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { CoreNetwork } from '@services/network';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CorePluginFileDelegate } from '@services/plugin-file-delegate';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils, OpenFileAction } from '@services/utils/utils';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreEvents } from '@singletons/events';\nimport { CorePlatform } from '@services/platform';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../directives/fa-icon\";\nimport * as i4 from \"../../directives/update-non-reactive-attributes\";\nimport * as i5 from \"../download-refresh/download-refresh\";\nimport * as i6 from \"@ngx-translate/core\";\nimport * as i7 from \"../../pipes/format-date\";\nfunction CoreFileComponent_ion_item_1_p_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.fileSizeReadable);\n  }\n}\nfunction CoreFileComponent_ion_item_1_p_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" \\u00B7 \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction CoreFileComponent_ion_item_1_p_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"coreFormatDate\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r6.timemodified * 1000));\n  }\n}\nfunction CoreFileComponent_ion_item_1_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtemplate(1, CoreFileComponent_ion_item_1_p_6_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵtemplate(2, CoreFileComponent_ion_item_1_p_6_ng_container_2_Template, 2, 0, \"ng-container\", 6);\n    i0.ɵɵtemplate(3, CoreFileComponent_ion_item_1_p_6_ng_container_3_Template, 3, 3, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fileSizeReadable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fileSizeReadable && ctx_r1.showTime);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showTime);\n  }\n}\nfunction CoreFileComponent_ion_item_1_ion_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 11);\n    i0.ɵɵlistener(\"click\", function CoreFileComponent_ion_item_1_ion_button_9_Template_ion_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.openFile($event, true));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 2, ctx_r2.openButtonLabel));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"name\", ctx_r2.openButtonIcon);\n  }\n}\nfunction CoreFileComponent_ion_item_1_ion_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 13);\n    i0.ɵɵlistener(\"click\", function CoreFileComponent_ion_item_1_ion_button_10_Template_ion_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.delete($event));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"core.delete\"));\n  }\n}\nfunction CoreFileComponent_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 2);\n    i0.ɵɵlistener(\"click\", function CoreFileComponent_ion_item_1_Template_ion_item_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.download($event, true));\n    });\n    i0.ɵɵelementStart(1, \"ion-thumbnail\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CoreFileComponent_ion_item_1_p_6_Template, 4, 3, \"p\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7)(8, \"core-download-refresh\", 8);\n    i0.ɵɵlistener(\"action\", function CoreFileComponent_ion_item_1_Template_core_download_refresh_action_8_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.download());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, CoreFileComponent_ion_item_1_ion_button_9_Template, 3, 4, \"ion-button\", 9);\n    i0.ɵɵtemplate(10, CoreFileComponent_ion_item_1_ion_button_10_Template, 3, 3, \"ion-button\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"detail\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.fileIcon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.fileName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fileSizeReadable || ctx_r0.showTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"status\", ctx_r0.state)(\"enabled\", ctx_r0.canDownload)(\"loading\", ctx_r0.isDownloading)(\"canTrustDownload\", !ctx_r0.alwaysDownload);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isDownloaded && ctx_r0.isIOS);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isDownloading && ctx_r0.canDelete);\n  }\n}\n/**\n * Component to handle a remote file. Shows the file name, icon (depending on mimetype) and a button\n * to download/refresh it.\n */\nexport class CoreFileComponent {\n  constructor() {\n    this.canDownload = true; // Whether file can be downloaded.\n    this.showSize = true; // Whether show filesize.\n    this.showTime = true; // Whether show file time modified.\n    this.isIOS = false;\n    this.openButtonIcon = '';\n    this.openButtonLabel = '';\n    this.defaultIsOpenWithPicker = false;\n    this.onDelete = new EventEmitter();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.file) {\n        return;\n      }\n      _this.canDelete = CoreUtils.isTrueOrOne(_this.canDelete);\n      _this.alwaysDownload = CoreUtils.isTrueOrOne(_this.alwaysDownload);\n      _this.canDownload = CoreUtils.isTrueOrOne(_this.canDownload);\n      _this.fileUrl = CoreFileHelper.getFileUrl(_this.file);\n      _this.timemodified = _this.file.timemodified || 0;\n      _this.siteId = CoreSites.getCurrentSiteId();\n      _this.fileSize = _this.file.filesize;\n      _this.fileName = _this.file.filename || '';\n      _this.isIOS = CorePlatform.isIOS();\n      _this.defaultIsOpenWithPicker = CoreFileHelper.defaultIsOpenWithPicker();\n      _this.openButtonIcon = _this.defaultIsOpenWithPicker ? 'fas-file' : 'fas-share-from-square';\n      _this.openButtonLabel = _this.defaultIsOpenWithPicker ? 'core.openfile' : 'core.openwith';\n      if (CoreUtils.isTrueOrOne(_this.showSize) && _this.fileSize && _this.fileSize >= 0) {\n        _this.fileSizeReadable = CoreTextUtils.bytesToSize(_this.fileSize, 2);\n      }\n      _this.showTime = CoreUtils.isTrueOrOne(_this.showTime) && _this.timemodified > 0;\n      if ('isexternalfile' in _this.file && _this.file.isexternalfile) {\n        _this.alwaysDownload = true; // Always show the download button in external files.\n      }\n\n      _this.fileIcon = 'mimetype' in _this.file && _this.file.mimetype ? CoreMimetypeUtils.getMimetypeIcon(_this.file.mimetype) : CoreMimetypeUtils.getFileIcon(_this.fileName);\n      if (_this.canDownload) {\n        _this.calculateState();\n        try {\n          // Update state when receiving events about this file.\n          const eventName = yield CoreFilepool.getFileEventNameByUrl(_this.siteId, _this.fileUrl);\n          _this.observer = CoreEvents.on(eventName, () => {\n            _this.calculateState();\n          });\n        } catch (_unused) {\n          // File not downloadable.\n        }\n      }\n    })();\n  }\n  /**\n   * Convenience function to get the file state and set variables based on it.\n   *\n   * @returns Promise resolved when state has been calculated.\n   */\n  calculateState() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.siteId) {\n        return;\n      }\n      const state = yield CoreFilepool.getFileStateByUrl(_this2.siteId, _this2.fileUrl, _this2.timemodified);\n      const site = yield CoreSites.getSite(_this2.siteId);\n      _this2.canDownload = site.canDownloadFiles();\n      _this2.state = state;\n      _this2.isDownloading = _this2.canDownload && state === CoreConstants.DOWNLOADING;\n      _this2.isDownloaded = _this2.canDownload && CoreFileHelper.isStateDownloaded(state);\n    })();\n  }\n  /**\n   * Convenience function to open a file, downloading it if needed.\n   *\n   * @param ev Click event (if any).\n   * @param isOpenButton Whether the open button was clicked.\n   * @returns Promise resolved when file is opened.\n   */\n  openFile(ev, isOpenButton = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      ev === null || ev === void 0 || ev.preventDefault();\n      ev === null || ev === void 0 || ev.stopPropagation();\n      if (!_this3.file) {\n        return;\n      }\n      const options = {};\n      if (isOpenButton) {\n        // Use the non-default method.\n        options.iOSOpenFileAction = _this3.defaultIsOpenWithPicker ? OpenFileAction.OPEN : OpenFileAction.OPEN_WITH;\n      }\n      try {\n        return yield CoreFileHelper.downloadAndOpenFile(_this3.file, _this3.component, _this3.componentId, _this3.state, event => {\n          if (event && 'calculating' in event && event.calculating) {\n            // The process is calculating some data required for the download, show the spinner.\n            _this3.isDownloading = true;\n          }\n        }, undefined, options);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n      }\n    })();\n  }\n  /**\n   * Download a file and, optionally, open it afterwards.\n   *\n   * @param e Click event.\n   * @param openAfterDownload Whether the file should be opened after download.\n   */\n  download(e, openAfterDownload = false) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      e && e.preventDefault();\n      e && e.stopPropagation();\n      if (!_this4.file || !_this4.siteId) {\n        return;\n      }\n      if (_this4.isDownloading && !openAfterDownload) {\n        return;\n      }\n      if (!_this4.canDownload || !_this4.state || _this4.state == CoreConstants.NOT_DOWNLOADABLE) {\n        // File cannot be downloaded, just open it.\n        if (CoreUrlUtils.isLocalFileUrl(_this4.fileUrl)) {\n          CoreUtils.openFile(_this4.fileUrl);\n        } else {\n          CoreUtils.openOnlineFile(CoreUrlUtils.unfixPluginfileURL(_this4.fileUrl));\n        }\n        return;\n      }\n      if (!CoreNetwork.isOnline() && (!openAfterDownload || openAfterDownload && !CoreFileHelper.isStateDownloaded(_this4.state))) {\n        CoreDomUtils.showErrorModal('core.networkerrormsg', true);\n        return;\n      }\n      if (openAfterDownload) {\n        // File needs to be opened now.\n        try {\n          yield _this4.openFile();\n        } catch (error) {\n          CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        }\n      } else {\n        try {\n          // File doesn't need to be opened (it's a prefetch). Show confirm modal if file size is defined and it's big.\n          const size = yield CorePluginFileDelegate.getFileSize(_this4.file, _this4.siteId);\n          if (size) {\n            yield CoreDomUtils.confirmDownloadSize({\n              size: size,\n              total: true\n            });\n          }\n          // User confirmed, add the file to queue.\n          // @todo Is the invalidate really needed?\n          yield CoreUtils.ignoreErrors(CoreFilepool.invalidateFileByUrl(_this4.siteId, _this4.fileUrl));\n          _this4.isDownloading = true;\n          try {\n            yield CoreFilepool.addToQueueByUrl(_this4.siteId, _this4.fileUrl, _this4.component, _this4.componentId, _this4.timemodified, undefined, undefined, 0, _this4.file);\n          } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            _this4.calculateState();\n          }\n        } catch (error) {\n          CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        }\n      }\n    })();\n  }\n  /**\n   * Delete the file.\n   *\n   * @param e Click event.\n   */\n  delete(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.canDelete) {\n      this.onDelete.emit();\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$observer;\n    (_this$observer = this.observer) === null || _this$observer === void 0 || _this$observer.off();\n  }\n}\n_class = CoreFileComponent;\n_class.ɵfac = function CoreFileComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-file\"]],\n  inputs: {\n    file: \"file\",\n    component: \"component\",\n    componentId: \"componentId\",\n    canDelete: \"canDelete\",\n    alwaysDownload: \"alwaysDownload\",\n    canDownload: \"canDownload\",\n    showSize: \"showSize\",\n    showTime: \"showTime\"\n  },\n  outputs: {\n    onDelete: \"onDelete\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"card-file\"], [\"button\", \"\", \"class\", \"ion-text-wrap item-file\", 3, \"detail\", \"click\", 4, \"ngIf\"], [\"button\", \"\", 1, \"ion-text-wrap\", \"item-file\", 3, \"detail\", \"click\"], [\"slot\", \"start\"], [\"alt\", \"\", \"role\", \"presentation\", 3, \"src\"], [1, \"item-heading\"], [4, \"ngIf\"], [\"slot\", \"end\", 1, \"flex-row\"], [3, \"status\", \"enabled\", \"loading\", \"canTrustDownload\", \"action\"], [\"fill\", \"clear\", 3, \"title\", \"click\", 4, \"ngIf\"], [\"fill\", \"clear\", \"color\", \"danger\", 3, \"click\", 4, \"ngIf\"], [\"fill\", \"clear\", 3, \"title\", \"click\"], [\"slot\", \"icon-only\", \"aria-hidden\", \"true\", 3, \"name\"], [\"fill\", \"clear\", \"color\", \"danger\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"fas-trash\", \"aria-hidden\", \"true\"]],\n  template: function CoreFileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-card\", 0);\n      i0.ɵɵtemplate(1, CoreFileComponent_ion_item_1_Template, 11, 10, \"ion-item\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.file);\n    }\n  },\n  dependencies: [i1.NgIf, i2.IonButton, i2.IonCard, i2.IonIcon, i2.IonItem, i2.IonLabel, i2.IonThumbnail, i3.CoreFaIconDirective, i4.CoreUpdateNonReactiveAttributesDirective, i5.CoreDownloadRefreshComponent, i6.TranslatePipe, i7.CoreFormatDatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","CoreNetwork","CoreFilepool","CoreFileHelper","CorePluginFileDelegate","CoreSites","CoreDomUtils","CoreMimetypeUtils","CoreUrlUtils","CoreUtils","OpenFileAction","CoreTextUtils","CoreConstants","CoreEvents","CorePlatform","i0","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r4","fileSizeReadable","ɵɵpipeBind1","ctx_r6","timemodified","ɵɵelementStart","ɵɵtemplate","CoreFileComponent_ion_item_1_p_6_ng_container_1_Template","CoreFileComponent_ion_item_1_p_6_ng_container_2_Template","CoreFileComponent_ion_item_1_p_6_ng_container_3_Template","ɵɵelementEnd","ɵɵproperty","ctx_r1","showTime","ɵɵlistener","CoreFileComponent_ion_item_1_ion_button_9_Template_ion_button_click_0_listener","$event","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","openFile","ɵɵelement","ctx_r2","openButtonLabel","openButtonIcon","CoreFileComponent_ion_item_1_ion_button_10_Template_ion_button_click_0_listener","_r10","ctx_r9","delete","ɵɵattribute","CoreFileComponent_ion_item_1_Template_ion_item_click_0_listener","_r12","ctx_r11","download","CoreFileComponent_ion_item_1_p_6_Template","CoreFileComponent_ion_item_1_Template_core_download_refresh_action_8_listener","ctx_r13","CoreFileComponent_ion_item_1_ion_button_9_Template","CoreFileComponent_ion_item_1_ion_button_10_Template","ctx_r0","fileIcon","ɵɵsanitizeUrl","fileName","state","canDownload","isDownloading","alwaysDownload","isDownloaded","isIOS","canDelete","CoreFileComponent","constructor","showSize","defaultIsOpenWithPicker","onDelete","ngOnInit","_this","_asyncToGenerator","file","isTrueOrOne","fileUrl","getFileUrl","siteId","getCurrentSiteId","fileSize","filesize","filename","bytesToSize","isexternalfile","mimetype","getMimetypeIcon","getFileIcon","calculateState","eventName","getFileEventNameByUrl","observer","on","_unused","_this2","getFileStateByUrl","site","getSite","canDownloadFiles","DOWNLOADING","isStateDownloaded","ev","isOpenButton","_this3","preventDefault","stopPropagation","options","iOSOpenFileAction","OPEN","OPEN_WITH","downloadAndOpenFile","component","componentId","event","calculating","undefined","error","showErrorModalDefault","e","openAfterDownload","_this4","NOT_DOWNLOADABLE","isLocalFileUrl","openOnlineFile","unfixPluginfileURL","isOnline","showErrorModal","size","getFileSize","confirmDownloadSize","total","ignoreErrors","invalidateFileByUrl","addToQueueByUrl","emit","ngOnDestroy","_this$observer","off","selectors","inputs","outputs","decls","vars","consts","template","CoreFileComponent_Template","rf","ctx","CoreFileComponent_ion_item_1_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/file/file.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/file/core-file.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { CoreNetwork } from '@services/network';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { CorePluginFileDelegate } from '@services/plugin-file-delegate';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils, CoreUtilsOpenFileOptions, OpenFileAction } from '@services/utils/utils';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreWSFile } from '@services/ws';\nimport { CorePlatform } from '@services/platform';\n\n/**\n * Component to handle a remote file. Shows the file name, icon (depending on mimetype) and a button\n * to download/refresh it.\n */\n@Component({\n    selector: 'core-file',\n    templateUrl: 'core-file.html',\n})\nexport class CoreFileComponent implements OnInit, OnDestroy {\n\n    @Input() file?: CoreWSFile; // The file.\n    @Input() component?: string; // Component the file belongs to.\n    @Input() componentId?: string | number; // Component ID.\n    @Input() canDelete?: boolean | string; // Whether file can be deleted.\n    @Input() alwaysDownload?: boolean | string; // Whether it should always display the refresh button when the file is downloaded.\n    @Input() canDownload?: boolean | string = true; // Whether file can be downloaded.\n    @Input() showSize?: boolean | string = true; // Whether show filesize.\n    @Input() showTime?: boolean | string = true; // Whether show file time modified.\n    @Output() onDelete: EventEmitter<void>; // Will notify when the delete button is clicked.\n\n    isDownloading?: boolean;\n    isDownloaded?: boolean;\n    fileIcon?: string;\n    fileName!: string;\n    fileSizeReadable?: string;\n    state?: string;\n    timemodified!: number;\n    isIOS = false;\n    openButtonIcon = '';\n    openButtonLabel = '';\n\n    protected fileUrl!: string;\n    protected siteId?: string;\n    protected fileSize?: number;\n    protected observer?: CoreEventObserver;\n    protected defaultIsOpenWithPicker = false;\n\n    constructor() {\n        this.onDelete = new EventEmitter<void>();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        if (!this.file) {\n            return;\n        }\n\n        this.canDelete = CoreUtils.isTrueOrOne(this.canDelete);\n        this.alwaysDownload = CoreUtils.isTrueOrOne(this.alwaysDownload);\n        this.canDownload = CoreUtils.isTrueOrOne(this.canDownload);\n\n        this.fileUrl = CoreFileHelper.getFileUrl(this.file);\n        this.timemodified = this.file.timemodified || 0;\n        this.siteId = CoreSites.getCurrentSiteId();\n        this.fileSize = this.file.filesize;\n        this.fileName = this.file.filename || '';\n\n        this.isIOS = CorePlatform.isIOS();\n        this.defaultIsOpenWithPicker = CoreFileHelper.defaultIsOpenWithPicker();\n        this.openButtonIcon = this.defaultIsOpenWithPicker ? 'fas-file' : 'fas-share-from-square';\n        this.openButtonLabel = this.defaultIsOpenWithPicker ? 'core.openfile' : 'core.openwith';\n\n        if (CoreUtils.isTrueOrOne(this.showSize) && this.fileSize && this.fileSize >= 0) {\n            this.fileSizeReadable = CoreTextUtils.bytesToSize(this.fileSize, 2);\n        }\n\n        this.showTime = CoreUtils.isTrueOrOne(this.showTime) && this.timemodified > 0;\n\n        if ('isexternalfile' in this.file && this.file.isexternalfile) {\n            this.alwaysDownload = true; // Always show the download button in external files.\n        }\n\n        this.fileIcon = 'mimetype' in this.file && this.file.mimetype ?\n            CoreMimetypeUtils.getMimetypeIcon(this.file.mimetype) : CoreMimetypeUtils.getFileIcon(this.fileName);\n\n        if (this.canDownload) {\n            this.calculateState();\n\n            try {\n                // Update state when receiving events about this file.\n                const eventName = await CoreFilepool.getFileEventNameByUrl(this.siteId, this.fileUrl);\n\n                this.observer = CoreEvents.on(eventName, () => {\n                    this.calculateState();\n                });\n            } catch {\n                // File not downloadable.\n            }\n        }\n    }\n\n    /**\n     * Convenience function to get the file state and set variables based on it.\n     *\n     * @returns Promise resolved when state has been calculated.\n     */\n    protected async calculateState(): Promise<void> {\n        if (!this.siteId) {\n            return;\n        }\n\n        const state = await CoreFilepool.getFileStateByUrl(this.siteId, this.fileUrl, this.timemodified);\n\n        const site = await CoreSites.getSite(this.siteId);\n\n        this.canDownload = site.canDownloadFiles();\n\n        this.state = state;\n        this.isDownloading = this.canDownload && state === CoreConstants.DOWNLOADING;\n        this.isDownloaded = this.canDownload && CoreFileHelper.isStateDownloaded(state);\n    }\n\n    /**\n     * Convenience function to open a file, downloading it if needed.\n     *\n     * @param ev Click event (if any).\n     * @param isOpenButton Whether the open button was clicked.\n     * @returns Promise resolved when file is opened.\n     */\n    async openFile(ev?: Event, isOpenButton = false): Promise<void> {\n        ev?.preventDefault();\n        ev?.stopPropagation();\n\n        if (!this.file) {\n            return;\n        }\n\n        const options: CoreUtilsOpenFileOptions = {};\n        if (isOpenButton) {\n            // Use the non-default method.\n            options.iOSOpenFileAction = this.defaultIsOpenWithPicker ? OpenFileAction.OPEN : OpenFileAction.OPEN_WITH;\n        }\n\n        try {\n            return await CoreFileHelper.downloadAndOpenFile(this.file, this.component, this.componentId, this.state, (event) => {\n                if (event && 'calculating' in event && event.calculating) {\n                    // The process is calculating some data required for the download, show the spinner.\n                    this.isDownloading = true;\n                }\n            }, undefined, options);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        }\n    }\n\n    /**\n     * Download a file and, optionally, open it afterwards.\n     *\n     * @param e Click event.\n     * @param openAfterDownload Whether the file should be opened after download.\n     */\n    async download(e?: Event, openAfterDownload = false): Promise<void> {\n        e && e.preventDefault();\n        e && e.stopPropagation();\n\n        if (!this.file || !this.siteId) {\n            return;\n        }\n\n        if (this.isDownloading && !openAfterDownload) {\n            return;\n        }\n\n        if (!this.canDownload || !this.state || this.state == CoreConstants.NOT_DOWNLOADABLE) {\n            // File cannot be downloaded, just open it.\n            if (CoreUrlUtils.isLocalFileUrl(this.fileUrl)) {\n                CoreUtils.openFile(this.fileUrl);\n            } else {\n                CoreUtils.openOnlineFile(CoreUrlUtils.unfixPluginfileURL(this.fileUrl));\n            }\n\n            return;\n        }\n\n        if (!CoreNetwork.isOnline() && (!openAfterDownload || (openAfterDownload &&\n                !CoreFileHelper.isStateDownloaded(this.state)))) {\n            CoreDomUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        if (openAfterDownload) {\n            // File needs to be opened now.\n            try {\n                await this.openFile();\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            }\n        } else {\n            try {\n                // File doesn't need to be opened (it's a prefetch). Show confirm modal if file size is defined and it's big.\n                const size = await CorePluginFileDelegate.getFileSize(this.file, this.siteId);\n\n                if (size) {\n                    await CoreDomUtils.confirmDownloadSize({ size: size, total: true });\n                }\n\n                // User confirmed, add the file to queue.\n                // @todo Is the invalidate really needed?\n                await CoreUtils.ignoreErrors(CoreFilepool.invalidateFileByUrl(this.siteId, this.fileUrl));\n\n                this.isDownloading = true;\n\n                try {\n                    await CoreFilepool.addToQueueByUrl(\n                        this.siteId,\n                        this.fileUrl,\n                        this.component,\n                        this.componentId,\n                        this.timemodified,\n                        undefined,\n                        undefined,\n                        0,\n                        this.file,\n                    );\n                } catch (error) {\n                    CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n                    this.calculateState();\n                }\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            }\n        }\n    }\n\n    /**\n     * Delete the file.\n     *\n     * @param e Click event.\n     */\n    delete(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.canDelete) {\n            this.onDelete.emit();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.observer?.off();\n    }\n\n}\n","<ion-card class=\"card-file\">\n    <ion-item *ngIf=\"file\" button class=\"ion-text-wrap item-file\" (click)=\"download($event, true)\" [detail]=\"false\">\n        <ion-thumbnail slot=\"start\">\n            <img [src]=\"fileIcon\" alt=\"\" role=\"presentation\" />\n        </ion-thumbnail>\n        <ion-label>\n            <p class=\"item-heading\">{{fileName}}</p>\n            <p *ngIf=\"fileSizeReadable || showTime\">\n                <ng-container *ngIf=\"fileSizeReadable\">{{ fileSizeReadable }}</ng-container>\n                <ng-container *ngIf=\"fileSizeReadable && showTime\"> · </ng-container>\n                <ng-container *ngIf=\"showTime\">{{ timemodified * 1000 | coreFormatDate }}</ng-container>\n            </p>\n        </ion-label>\n        <div slot=\"end\" class=\"flex-row\">\n            <core-download-refresh [status]=\"state\" [enabled]=\"canDownload\" [loading]=\"isDownloading\" [canTrustDownload]=\"!alwaysDownload\"\n                (action)=\"download()\" />\n\n            <ion-button fill=\"clear\" *ngIf=\"isDownloaded && isIOS\" (click)=\"openFile($event, true)\" [title]=\"openButtonLabel | translate\">\n                <ion-icon slot=\"icon-only\" [name]=\"openButtonIcon\" aria-hidden=\"true\" />\n            </ion-button>\n\n            <ion-button fill=\"clear\" *ngIf=\"!isDownloading && canDelete\" (click)=\"delete($event)\"\n                [attr.aria-label]=\"'core.delete' | translate\" color=\"danger\">\n                <ion-icon slot=\"icon-only\" name=\"fas-trash\" aria-hidden=\"true\" />\n            </ion-button>\n        </div>\n    </ion-item>\n</ion-card>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}