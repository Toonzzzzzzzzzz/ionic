{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { isSafeNumber } from '@/core/utils/types';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { AddonModQuiz, AddonModQuizProvider } from '../../services/quiz';\nimport { AddonModQuizHelper } from '../../services/quiz-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/loading/loading\";\nimport * as i3 from \"../../../../../core/directives/fa-icon\";\nimport * as i4 from \"../../../../../core/directives/format-text\";\nimport * as i5 from \"../../../../../core/directives/collapsible-footer\";\nimport * as i6 from \"../../../../../core/directives/content\";\nimport * as i7 from \"../../../../../core/directives/update-non-reactive-attributes\";\nimport * as i8 from \"@ionic/angular\";\nimport * as i9 from \"@ngx-translate/core\";\nfunction AddonModQuizAttemptPage_core_format_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-format-text\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r0.quiz.name)(\"contextInstanceId\", ctx_r0.quiz.coursemodule)(\"courseId\", ctx_r0.courseId);\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"addon.mod_quiz.preview\"));\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.attempt.attempt);\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sentence_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(sentence_r10);\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_ion_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 3, \"addon.mod_quiz.marks\"), \" / \", ctx_r6.quiz.sumGradesFormatted, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r6.attempt.readableMark);\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_ion_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 3, \"addon.mod_quiz.grade\"), \" / \", ctx_r7.quiz.gradeFormatted, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.attempt.readableGrade);\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_ion_item_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 10)(1, \"ion-label\")(2, \"p\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵelement(6, \"core-format-text\", 15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 6, \"addon.mod_quiz.feedback\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"component\", ctx_r8.component)(\"componentId\", ctx_r8.componentId)(\"text\", ctx_r8.feedback)(\"contextInstanceId\", ctx_r8.cmId)(\"courseId\", ctx_r8.courseId);\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_ion_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 16)(1, \"ion-label\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, \"addon.mod_quiz.noreviewattempt\"));\n  }\n}\nfunction AddonModQuizAttemptPage_ion_list_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\")(1, \"ion-item\", 10)(2, \"ion-label\")(3, \"p\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddonModQuizAttemptPage_ion_list_13_p_6_Template, 3, 3, \"p\", 7);\n    i0.ɵɵtemplate(7, AddonModQuizAttemptPage_ion_list_13_p_7_Template, 2, 1, \"p\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ion-item\", 10)(9, \"ion-label\")(10, \"p\", 11);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, AddonModQuizAttemptPage_ion_list_13_p_13_Template, 2, 1, \"p\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(14, AddonModQuizAttemptPage_ion_list_13_ion_item_14_Template, 7, 5, \"ion-item\", 13);\n    i0.ɵɵtemplate(15, AddonModQuizAttemptPage_ion_list_13_ion_item_15_Template, 7, 5, \"ion-item\", 13);\n    i0.ɵɵtemplate(16, AddonModQuizAttemptPage_ion_list_13_ion_item_16_Template, 7, 8, \"ion-item\", 13);\n    i0.ɵɵtemplate(17, AddonModQuizAttemptPage_ion_list_13_ion_item_17_Template, 5, 3, \"ion-item\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 9, \"addon.mod_quiz.attemptnumber\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.attempt.preview);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.attempt.preview);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 11, \"addon.mod_quiz.attemptstate\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.attempt.readableState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.quiz.showMarkColumn && ctx_r1.attempt.readableMark !== \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.quiz.showGradeColumn && ctx_r1.attempt.readableGrade !== \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.quiz.showFeedbackColumn && ctx_r1.feedback);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.showReviewColumn);\n  }\n}\nfunction AddonModQuizAttemptPage_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"ion-button\", 19);\n    i0.ɵɵlistener(\"click\", function AddonModQuizAttemptPage_div_14_Template_ion_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.reviewAttempt());\n    });\n    i0.ɵɵelement(3, \"ion-icon\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 1, \"addon.mod_quiz.review\"), \" \");\n  }\n}\n/**\n * Page that displays some summary data about an attempt.\n */\nexport class AddonModQuizAttemptPage {\n  constructor() {\n    this.component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    this.loaded = false; // Whether data has been loaded.\n    this.showReviewColumn = false;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    try {\n      this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n      this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n      this.attemptId = CoreNavigator.getRequiredRouteNumberParam('attemptId');\n    } catch (error) {\n      CoreDomUtils.showErrorModal(error);\n      CoreNavigator.back();\n      return;\n    }\n    this.fetchQuizData().finally(() => {\n      this.loaded = true;\n    });\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   */\n  doRefresh(refresher) {\n    this.refreshData().finally(() => {\n      refresher.complete();\n    });\n  }\n  /**\n   * Get quiz data and attempt data.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchQuizData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.quiz = yield AddonModQuiz.getQuiz(_this.courseId, _this.cmId);\n        _this.componentId = _this.quiz.coursemodule;\n        // Load attempt data.\n        const [options, accessInfo, attempt] = yield Promise.all([AddonModQuiz.getCombinedReviewOptions(_this.quiz.id, {\n          cmId: _this.quiz.coursemodule\n        }), _this.fetchAccessInfo(_this.quiz), _this.fetchAttempt(_this.quiz.id)]);\n        // Set calculated data.\n        _this.showReviewColumn = accessInfo.canreviewmyattempts;\n        AddonModQuizHelper.setQuizCalculatedData(_this.quiz, options);\n        _this.attempt = yield AddonModQuizHelper.setAttemptCalculatedData(_this.quiz, attempt, false, undefined, true);\n        // Check if the feedback should be displayed.\n        const grade = Number(_this.attempt.rescaledGrade);\n        if (_this.quiz.showFeedbackColumn && AddonModQuiz.isAttemptFinished(_this.attempt.state) && options.someoptions.overallfeedback && isSafeNumber(grade)) {\n          // Feedback should be displayed, get the feedback for the grade.\n          const response = yield AddonModQuiz.getFeedbackForGrade(_this.quiz.id, grade, {\n            cmId: _this.quiz.coursemodule\n          });\n          _this.feedback = response.feedbacktext;\n        } else {\n          delete _this.feedback;\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetattempt', true);\n      }\n    })();\n  }\n  /**\n   * Get the attempt.\n   *\n   * @param quizId Quiz ID.\n   * @returns Promise resolved when done.\n   */\n  fetchAttempt(quizId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Get all the attempts and search the one we want.\n      const attempts = yield AddonModQuiz.getUserAttempts(quizId, {\n        cmId: _this2.cmId\n      });\n      const attempt = attempts.find(attempt => attempt.id == _this2.attemptId);\n      if (!attempt) {\n        // Attempt not found, error.\n        _this2.attempt = undefined;\n        throw new CoreError(Translate.instant('addon.mod_quiz.errorgetattempt'));\n      }\n      return attempt;\n    })();\n  }\n  /**\n   * Get the access info.\n   *\n   * @param quiz Quiz instance.\n   * @returns Promise resolved when done.\n   */\n  fetchAccessInfo(quiz) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const accessInfo = yield AddonModQuiz.getQuizAccessInformation(quiz.id, {\n        cmId: _this3.cmId\n      });\n      if (!accessInfo.canreviewmyattempts) {\n        return accessInfo;\n      }\n      // Check if the user can review the attempt.\n      yield CoreUtils.ignoreErrors(AddonModQuiz.invalidateAttemptReviewForPage(_this3.attemptId, -1));\n      try {\n        yield AddonModQuiz.getAttemptReview(_this3.attemptId, {\n          page: -1,\n          cmId: quiz.coursemodule\n        });\n      } catch (_unused) {\n        // Error getting the review, assume the user cannot review the attempt.\n        accessInfo.canreviewmyattempts = false;\n      }\n      return accessInfo;\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @returns Promise resolved when done.\n   */\n  refreshData() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonModQuiz.invalidateQuizData(_this4.courseId));\n      promises.push(AddonModQuiz.invalidateAttemptReview(_this4.attemptId));\n      if (_this4.quiz) {\n        promises.push(AddonModQuiz.invalidateUserAttemptsForUser(_this4.quiz.id));\n        promises.push(AddonModQuiz.invalidateQuizAccessInformation(_this4.quiz.id));\n        promises.push(AddonModQuiz.invalidateCombinedReviewOptionsForUser(_this4.quiz.id));\n        if (_this4.attempt && _this4.feedback !== undefined) {\n          promises.push(AddonModQuiz.invalidateFeedback(_this4.quiz.id));\n        }\n      }\n      yield CoreUtils.ignoreErrors(Promise.all(promises));\n      yield _this4.fetchQuizData();\n    })();\n  }\n  /**\n   * Go to the page to review the attempt.\n   *\n   * @returns Promise resolved when done.\n   */\n  reviewAttempt() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.attempt) {\n        return;\n      }\n      CoreNavigator.navigate(`../../review/${_this5.attempt.id}`);\n    })();\n  }\n}\n_class = AddonModQuizAttemptPage;\n_class.ɵfac = function AddonModQuizAttemptPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-quiz-attempt\"]],\n  decls: 15,\n  vars: 11,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\", 4, \"ngIf\"], [1, \"limited-width\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [4, \"ngIf\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\", 4, \"ngIf\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [1, \"ion-text-wrap\"], [1, \"item-heading\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap core-danger-item\", 4, \"ngIf\"], [\"contextLevel\", \"module\", 3, \"component\", \"componentId\", \"text\", \"contextInstanceId\", \"courseId\"], [1, \"ion-text-wrap\", \"core-danger-item\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\"], [1, \"list-item-limited-width\"], [\"expand\", \"block\", 1, \"ion-margin\", \"ion-text-wrap\", 3, \"click\"], [\"name\", \"fas-magnifying-glass\", \"slot\", \"start\", \"aria-hidden\", \"true\"]],\n  template: function AddonModQuizAttemptPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtemplate(7, AddonModQuizAttemptPage_core_format_text_7_Template, 1, 3, \"core-format-text\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(8, \"ion-content\", 3)(9, \"ion-refresher\", 4);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModQuizAttemptPage_Template_ion_refresher_ionRefresh_9_listener($event) {\n        return ctx.doRefresh($event.target);\n      });\n      i0.ɵɵelement(10, \"ion-refresher-content\", 5);\n      i0.ɵɵpipe(11, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"core-loading\", 6);\n      i0.ɵɵtemplate(13, AddonModQuizAttemptPage_ion_list_13_Template, 18, 13, \"ion-list\", 7);\n      i0.ɵɵtemplate(14, AddonModQuizAttemptPage_div_14_Template, 6, 3, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 7, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.quiz);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(11, 9, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.attempt);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded && ctx.attempt && ctx.showReviewColumn && ctx.attempt.finished);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreLoadingComponent, i3.CoreFaIconDirective, i4.CoreFormatTextDirective, i5.CoreCollapsibleFooterDirective, i6.CoreContentDirective, i7.CoreUpdateNonReactiveAttributesDirective, i8.IonButton, i8.IonButtons, i8.IonContent, i8.IonHeader, i8.IonIcon, i8.IonItem, i8.IonLabel, i8.IonList, i8.IonRefresher, i8.IonRefresherContent, i8.IonTitle, i8.IonToolbar, i8.IonBackButton, i9.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["isSafeNumber","CoreError","CoreNavigator","CoreDomUtils","CoreUtils","Translate","AddonModQuiz","AddonModQuizProvider","AddonModQuizHelper","i0","ɵɵelement","ɵɵproperty","ctx_r0","quiz","name","coursemodule","courseId","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r4","attempt","sentence_r10","ɵɵtextInterpolate2","ctx_r6","sumGradesFormatted","readableMark","ctx_r7","gradeFormatted","readableGrade","ctx_r8","component","componentId","feedback","cmId","ɵɵtemplate","AddonModQuizAttemptPage_ion_list_13_p_6_Template","AddonModQuizAttemptPage_ion_list_13_p_7_Template","AddonModQuizAttemptPage_ion_list_13_p_13_Template","AddonModQuizAttemptPage_ion_list_13_ion_item_14_Template","AddonModQuizAttemptPage_ion_list_13_ion_item_15_Template","AddonModQuizAttemptPage_ion_list_13_ion_item_16_Template","AddonModQuizAttemptPage_ion_list_13_ion_item_17_Template","ctx_r1","preview","readableState","showMarkColumn","showGradeColumn","showFeedbackColumn","showReviewColumn","ɵɵlistener","AddonModQuizAttemptPage_div_14_Template_ion_button_click_2_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","reviewAttempt","ɵɵtextInterpolate1","AddonModQuizAttemptPage","constructor","COMPONENT","loaded","ngOnInit","getRequiredRouteNumberParam","attemptId","error","showErrorModal","back","fetchQuizData","finally","doRefresh","refresher","refreshData","complete","_this","_asyncToGenerator","getQuiz","options","accessInfo","Promise","all","getCombinedReviewOptions","id","fetchAccessInfo","fetchAttempt","canreviewmyattempts","setQuizCalculatedData","setAttemptCalculatedData","undefined","grade","Number","rescaledGrade","isAttemptFinished","state","someoptions","overallfeedback","response","getFeedbackForGrade","feedbacktext","showErrorModalDefault","quizId","_this2","attempts","getUserAttempts","find","instant","_this3","getQuizAccessInformation","ignoreErrors","invalidateAttemptReviewForPage","getAttemptReview","page","_unused","_this4","promises","push","invalidateQuizData","invalidateAttemptReview","invalidateUserAttemptsForUser","invalidateQuizAccessInformation","invalidateCombinedReviewOptionsForUser","invalidateFeedback","_this5","navigate","selectors","decls","vars","consts","template","AddonModQuizAttemptPage_Template","rf","ctx","AddonModQuizAttemptPage_core_format_text_7_Template","AddonModQuizAttemptPage_Template_ion_refresher_ionRefresh_9_listener","$event","target","AddonModQuizAttemptPage_ion_list_13_Template","AddonModQuizAttemptPage_div_14_Template","ɵɵpropertyInterpolate","finished"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/pages/attempt/attempt.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/pages/attempt/attempt.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { isSafeNumber } from '@/core/utils/types';\nimport { Component, OnInit } from '@angular/core';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport {\n    AddonModQuiz,\n    AddonModQuizAttemptWSData,\n    AddonModQuizGetQuizAccessInformationWSResponse,\n    AddonModQuizProvider,\n} from '../../services/quiz';\nimport { AddonModQuizAttempt, AddonModQuizHelper, AddonModQuizQuizData } from '../../services/quiz-helper';\n\n/**\n * Page that displays some summary data about an attempt.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-attempt',\n    templateUrl: 'attempt.html',\n})\nexport class AddonModQuizAttemptPage implements OnInit {\n\n    courseId!: number; // The course ID the quiz belongs to.\n    quiz?: AddonModQuizQuizData; // The quiz the attempt belongs to.\n    attempt?: AddonModQuizAttempt; // The attempt to view.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    componentId?: number; // Component ID to use in conjunction with the component.\n    loaded = false; // Whether data has been loaded.\n    feedback?: string; // Attempt feedback.\n    showReviewColumn = false;\n    cmId!: number; // Course module id the attempt belongs to.\n\n    protected attemptId!: number; // Attempt to view.\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.attemptId = CoreNavigator.getRequiredRouteNumberParam('attemptId');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.fetchQuizData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher: HTMLIonRefresherElement): void {\n        this.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Get quiz data and attempt data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchQuizData(): Promise<void> {\n        try {\n            this.quiz = await AddonModQuiz.getQuiz(this.courseId, this.cmId);\n\n            this.componentId = this.quiz.coursemodule;\n\n            // Load attempt data.\n            const [options, accessInfo, attempt] = await Promise.all([\n                AddonModQuiz.getCombinedReviewOptions(this.quiz.id, { cmId: this.quiz.coursemodule }),\n                this.fetchAccessInfo(this.quiz),\n                this.fetchAttempt(this.quiz.id),\n            ]);\n\n            // Set calculated data.\n            this.showReviewColumn = accessInfo.canreviewmyattempts;\n            AddonModQuizHelper.setQuizCalculatedData(this.quiz, options);\n\n            this.attempt = await AddonModQuizHelper.setAttemptCalculatedData(this.quiz, attempt, false, undefined, true);\n\n            // Check if the feedback should be displayed.\n            const grade = Number(this.attempt.rescaledGrade);\n\n            if (this.quiz.showFeedbackColumn && AddonModQuiz.isAttemptFinished(this.attempt.state) &&\n                    options.someoptions.overallfeedback && isSafeNumber(grade)) {\n\n                // Feedback should be displayed, get the feedback for the grade.\n                const response = await AddonModQuiz.getFeedbackForGrade(this.quiz.id, grade, {\n                    cmId: this.quiz.coursemodule,\n                });\n\n                this.feedback = response.feedbacktext;\n            } else {\n                delete this.feedback;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetattempt', true);\n        }\n    }\n\n    /**\n     * Get the attempt.\n     *\n     * @param quizId Quiz ID.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchAttempt(quizId: number): Promise<AddonModQuizAttemptWSData> {\n        // Get all the attempts and search the one we want.\n        const attempts = await AddonModQuiz.getUserAttempts(quizId, { cmId: this.cmId });\n\n        const attempt = attempts.find(attempt => attempt.id == this.attemptId);\n\n        if (!attempt) {\n            // Attempt not found, error.\n            this.attempt = undefined;\n\n            throw new CoreError(Translate.instant('addon.mod_quiz.errorgetattempt'));\n        }\n\n        return attempt;\n    }\n\n    /**\n     * Get the access info.\n     *\n     * @param quiz Quiz instance.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchAccessInfo(quiz: AddonModQuizQuizData): Promise<AddonModQuizGetQuizAccessInformationWSResponse> {\n        const accessInfo = await AddonModQuiz.getQuizAccessInformation(quiz.id, { cmId: this.cmId });\n\n        if (!accessInfo.canreviewmyattempts) {\n            return accessInfo;\n        }\n\n        // Check if the user can review the attempt.\n        await CoreUtils.ignoreErrors(AddonModQuiz.invalidateAttemptReviewForPage(this.attemptId, -1));\n\n        try {\n            await AddonModQuiz.getAttemptReview(this.attemptId, { page: -1, cmId: quiz.coursemodule });\n        } catch {\n            // Error getting the review, assume the user cannot review the attempt.\n            accessInfo.canreviewmyattempts = false;\n        }\n\n        return accessInfo;\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async refreshData(): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModQuiz.invalidateQuizData(this.courseId));\n        promises.push(AddonModQuiz.invalidateAttemptReview(this.attemptId));\n\n        if (this.quiz) {\n            promises.push(AddonModQuiz.invalidateUserAttemptsForUser(this.quiz.id));\n            promises.push(AddonModQuiz.invalidateQuizAccessInformation(this.quiz.id));\n            promises.push(AddonModQuiz.invalidateCombinedReviewOptionsForUser(this.quiz.id));\n\n            if (this.attempt && this.feedback !== undefined) {\n                promises.push(AddonModQuiz.invalidateFeedback(this.quiz.id));\n            }\n        }\n\n        await CoreUtils.ignoreErrors(Promise.all(promises));\n\n        await this.fetchQuizData();\n    }\n\n    /**\n     * Go to the page to review the attempt.\n     *\n     * @returns Promise resolved when done.\n     */\n    async reviewAttempt(): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        CoreNavigator.navigate(`../../review/${this.attempt.id}`);\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                <core-format-text *ngIf=\"quiz\" [text]=\"quiz.name\" contextLevel=\"module\" [contextInstanceId]=\"quiz.coursemodule\"\n                    [courseId]=\"courseId\" />\n            </h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"doRefresh($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"loaded\">\n        <ion-list *ngIf=\"attempt\">\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.mod_quiz.attemptnumber' | translate }}</p>\n                    <p *ngIf=\"attempt.preview\">{{ 'addon.mod_quiz.preview' | translate }}</p>\n                    <p *ngIf=\"!attempt.preview\">{{ attempt.attempt }}</p>\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.mod_quiz.attemptstate' | translate }}</p>\n                    <p *ngFor=\"let sentence of attempt.readableState\">{{ sentence }}</p>\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"quiz!.showMarkColumn && attempt.readableMark !== ''\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.mod_quiz.marks' | translate }} / {{ quiz!.sumGradesFormatted }}</p>\n                    <p>{{ attempt.readableMark }}</p>\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"quiz!.showGradeColumn && attempt.readableGrade !== ''\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.mod_quiz.grade' | translate }} / {{ quiz!.gradeFormatted }}</p>\n                    <p>{{ attempt.readableGrade }}</p>\n                </ion-label>\n            </ion-item>\n            <ion-item class=\"ion-text-wrap\" *ngIf=\"quiz!.showFeedbackColumn && feedback\">\n                <ion-label>\n                    <p class=\"item-heading\">{{ 'addon.mod_quiz.feedback' | translate }}</p>\n                    <p>\n                        <core-format-text [component]=\"component\" [componentId]=\"componentId\" [text]=\"feedback\" contextLevel=\"module\"\n                            [contextInstanceId]=\"cmId\" [courseId]=\"courseId\" />\n                    </p>\n                </ion-label>\n            </ion-item>\n\n            <ion-item class=\"ion-text-wrap core-danger-item\" *ngIf=\"!showReviewColumn\">\n                <ion-label>\n                    <p>{{ 'addon.mod_quiz.noreviewattempt' | translate }}</p>\n                </ion-label>\n            </ion-item>\n        </ion-list>\n\n        <div collapsible-footer appearOnBottom *ngIf=\"loaded && attempt && showReviewColumn && attempt.finished\" slot=\"fixed\">\n            <div class=\"list-item-limited-width\">\n                <ion-button class=\"ion-margin ion-text-wrap\" expand=\"block\" (click)=\"reviewAttempt()\">\n                    <ion-icon name=\"fas-magnifying-glass\" slot=\"start\" aria-hidden=\"true\" />\n                    {{ 'addon.mod_quiz.review' | translate }}\n                </ion-button>\n            </div>\n        </div>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}