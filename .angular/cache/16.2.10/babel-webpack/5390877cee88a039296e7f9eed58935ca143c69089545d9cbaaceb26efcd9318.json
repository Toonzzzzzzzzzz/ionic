{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { makeSingleton } from '@singletons';\nimport { AddonModForumModuleHandlerService } from './module';\nimport * as i0 from \"@angular/core\";\n/**\n * Content links handler for forum new discussion.\n * Match mod/forum/post.php?forum=6 with a valid data.\n */\nexport class AddonModForumPostLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModForumPostLinkHandler';\n    this.featureName = 'CoreCourseModuleDelegate_AddonModForum';\n    this.pattern = /\\/mod\\/forum\\/post\\.php.*([?&](forum)=\\d+)/;\n  }\n  /**\n   * @inheritdoc\n   */\n  getActions(siteIds, url, params) {\n    return [{\n      action: function () {\n        var _ref = _asyncToGenerator(function* (siteId) {\n          const modal = yield CoreDomUtils.showModalLoading();\n          const forumId = parseInt(params.forum, 10);\n          try {\n            const module = yield CoreCourse.getModuleBasicInfoByInstance(forumId, 'forum', {\n              siteId,\n              readingStrategy: 1 /* CoreSitesReadingStrategy.PREFER_CACHE */\n            });\n            yield CoreNavigator.navigateToSitePath(`${AddonModForumModuleHandlerService.PAGE_NAME}/${module.course}/${module.id}/new/0`, {\n              siteId,\n              params: {\n                forumId: module.instance\n              }\n            });\n          } finally {\n            // Just in case. In fact we need to dismiss the modal before showing a toast or error message.\n            modal.dismiss();\n          }\n        });\n        return function action(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled(siteId, url, params) {\n    return _asyncToGenerator(function* () {\n      return params.forum !== undefined;\n    })();\n  }\n}\n_class = AddonModForumPostLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModForumPostLinkHandlerService_BaseFactory;\n  return function AddonModForumPostLinkHandlerService_Factory(t) {\n    return (ɵAddonModForumPostLinkHandlerService_BaseFactory || (ɵAddonModForumPostLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModForumPostLinkHandler = makeSingleton(AddonModForumPostLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","CoreCourse","CoreNavigator","CoreDomUtils","makeSingleton","AddonModForumModuleHandlerService","AddonModForumPostLinkHandlerService","constructor","name","featureName","pattern","getActions","siteIds","url","params","action","_ref","_asyncToGenerator","siteId","modal","showModalLoading","forumId","parseInt","forum","module","getModuleBasicInfoByInstance","readingStrategy","navigateToSitePath","PAGE_NAME","course","id","instance","dismiss","_x","apply","arguments","isEnabled","undefined","t","factory","ɵfac","providedIn","AddonModForumPostLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/forum/services/handlers/post-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { makeSingleton } from '@singletons';\nimport { AddonModForumModuleHandlerService } from './module';\n\n/**\n * Content links handler for forum new discussion.\n * Match mod/forum/post.php?forum=6 with a valid data.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModForumPostLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'AddonModForumPostLinkHandler';\n    featureName = 'CoreCourseModuleDelegate_AddonModForum';\n    pattern = /\\/mod\\/forum\\/post\\.php.*([?&](forum)=\\d+)/;\n\n    /**\n     * @inheritdoc\n     */\n    getActions(\n        siteIds: string[],\n        url: string,\n        params: Params,\n    ): CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: async (siteId): Promise<void> => {\n                const modal = await CoreDomUtils.showModalLoading();\n                const forumId = parseInt(params.forum, 10);\n\n                try {\n                    const module = await CoreCourse.getModuleBasicInfoByInstance(\n                        forumId,\n                        'forum',\n                        { siteId, readingStrategy: CoreSitesReadingStrategy.PREFER_CACHE },\n                    );\n\n                    await CoreNavigator.navigateToSitePath(\n                        `${AddonModForumModuleHandlerService.PAGE_NAME}/${module.course}/${module.id}/new/0`,\n                        { siteId, params: { forumId: module.instance } },\n                    );\n                } finally {\n                    // Just in case. In fact we need to dismiss the modal before showing a toast or error message.\n                    modal.dismiss();\n                }\n            },\n        }];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(siteId: string, url: string, params: Params): Promise<boolean> {\n        return params.forum !== undefined;\n    }\n\n}\n\nexport const AddonModForumPostLinkHandler = makeSingleton(AddonModForumPostLinkHandlerService);\n"],"mappings":";;AAgBA,SAASA,2BAA2B,QAAQ,6CAA6C;AAEzF,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,aAAa,QAAQ,qBAAqB;AAEnD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,iCAAiC,QAAQ,UAAU;;AAE5D;;;;AAKA,OAAM,MAAOC,mCAAoC,SAAQN,2BAA2B;EADpFO,YAAA;;IAGI,KAAAC,IAAI,GAAG,8BAA8B;IACrC,KAAAC,WAAW,GAAG,wCAAwC;IACtD,KAAAC,OAAO,GAAG,4CAA4C;;EAEtD;;;EAGAC,UAAUA,CACNC,OAAiB,EACjBC,GAAW,EACXC,MAAc;IAEd,OAAO,CAAC;MACJC,MAAM;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAE,WAAOC,MAAM,EAAmB;UACpC,MAAMC,KAAK,SAAShB,YAAY,CAACiB,gBAAgB,EAAE;UACnD,MAAMC,OAAO,GAAGC,QAAQ,CAACR,MAAM,CAACS,KAAK,EAAE,EAAE,CAAC;UAE1C,IAAI;YACA,MAAMC,MAAM,SAASvB,UAAU,CAACwB,4BAA4B,CACxDJ,OAAO,EACP,OAAO,EACP;cAAEH,MAAM;cAAEQ,eAAe;YAAuC,CAAE,CACrE;YAED,MAAMxB,aAAa,CAACyB,kBAAkB,CAClC,GAAGtB,iCAAiC,CAACuB,SAAS,IAAIJ,MAAM,CAACK,MAAM,IAAIL,MAAM,CAACM,EAAE,QAAQ,EACpF;cAAEZ,MAAM;cAAEJ,MAAM,EAAE;gBAAEO,OAAO,EAAEG,MAAM,CAACO;cAAQ;YAAE,CAAE,CACnD;WACJ,SAAS;YACN;YACAZ,KAAK,CAACa,OAAO,EAAE;;QAEvB,CAAC;QAAA,gBAAAjB,OAAAkB,EAAA;UAAA,OAAAjB,IAAA,CAAAkB,KAAA,OAAAC,SAAA;QAAA;MAAA;KACJ,CAAC;EACN;EAEA;;;EAGMC,SAASA,CAAClB,MAAc,EAAEL,GAAW,EAAEC,MAAc;IAAA,OAAAG,iBAAA;MACvD,OAAOH,MAAM,CAACS,KAAK,KAAKc,SAAS;IAAC;EACtC;;SA3CS/B,mCAAoC;;;;6IAApCA,MAAmC,IAAAgC,CAAA,IAAnChC,MAAmC;EAAA;AAAA;;SAAnCA,MAAmC;EAAAiC,OAAA,EAAnCjC,MAAmC,CAAAkC,IAAA;EAAAC,UAAA,EADtB;AAAM;AAgDhC,OAAO,MAAMC,4BAA4B,GAAGtC,aAAa,CAACE,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}