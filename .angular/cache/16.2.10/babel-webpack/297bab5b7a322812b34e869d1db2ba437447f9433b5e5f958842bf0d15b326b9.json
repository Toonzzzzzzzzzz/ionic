{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova, cordovaPropertyGet, cordovaPropertySet } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar StatusBar = /** @class */function (_super) {\n  __extends(StatusBar, _super);\n  function StatusBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StatusBar.prototype.overlaysWebView = function (doesOverlay) {\n    return cordova(this, \"overlaysWebView\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.styleDefault = function () {\n    return cordova(this, \"styleDefault\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.styleLightContent = function () {\n    return cordova(this, \"styleLightContent\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.styleBlackTranslucent = function () {\n    return cordova(this, \"styleBlackTranslucent\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.styleBlackOpaque = function () {\n    return cordova(this, \"styleBlackOpaque\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.backgroundColorByName = function (colorName) {\n    return cordova(this, \"backgroundColorByName\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.backgroundColorByHexString = function (hexString) {\n    return cordova(this, \"backgroundColorByHexString\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.hide = function () {\n    return cordova(this, \"hide\", {\n      \"sync\": true\n    }, arguments);\n  };\n  StatusBar.prototype.show = function () {\n    return cordova(this, \"show\", {\n      \"sync\": true\n    }, arguments);\n  };\n  Object.defineProperty(StatusBar.prototype, \"isVisible\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"isVisible\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"isVisible\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StatusBar.ɵfac = /* @__PURE__ */function () {\n    let ɵStatusBar_BaseFactory;\n    return function StatusBar_Factory(t) {\n      return (ɵStatusBar_BaseFactory || (ɵStatusBar_BaseFactory = i0.ɵɵgetInheritedFactory(StatusBar)))(t || StatusBar);\n    };\n  }();\n  StatusBar.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StatusBar,\n    factory: StatusBar.ɵfac\n  });\n  StatusBar.pluginName = \"StatusBar\";\n  StatusBar.plugin = \"cordova-plugin-statusbar\";\n  StatusBar.pluginRef = \"StatusBar\";\n  StatusBar.repo = \"https://github.com/apache/cordova-plugin-statusbar\";\n  StatusBar.platforms = [\"Android\", \"iOS\", \"Windows\"];\n  StatusBar = __decorate([], StatusBar);\n  return StatusBar;\n}(AwesomeCordovaNativePlugin);\nexport { StatusBar };\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StatusBar, [{\n    type: Injectable\n  }], null, {\n    isVisible: [],\n    overlaysWebView: [],\n    styleDefault: [],\n    styleLightContent: [],\n    styleBlackTranslucent: [],\n    styleBlackOpaque: [],\n    backgroundColorByName: [],\n    backgroundColorByHexString: [],\n    hide: [],\n    show: []\n  });\n})();","map":{"version":3,"names":["__decorate","__extends","Injectable","AwesomeCordovaNativePlugin","cordova","cordovaPropertyGet","cordovaPropertySet","i0","StatusBar","_super","apply","arguments","prototype","overlaysWebView","doesOverlay","styleDefault","styleLightContent","styleBlackTranslucent","styleBlackOpaque","backgroundColorByName","colorName","backgroundColorByHexString","hexString","hide","show","Object","defineProperty","get","set","value","enumerable","configurable","ɵfac","ɵStatusBar_BaseFactory","StatusBar_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","pluginName","plugin","pluginRef","repo","platforms","ngDevMode","ɵsetClassMetadata","type","isVisible"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@awesome-cordova-plugins/status-bar/ngx/index.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova, cordovaPropertyGet, cordovaPropertySet } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar StatusBar = /** @class */ (function (_super) {\n    __extends(StatusBar, _super);\n    function StatusBar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StatusBar.prototype.overlaysWebView = function (doesOverlay) { return cordova(this, \"overlaysWebView\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.styleDefault = function () { return cordova(this, \"styleDefault\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.styleLightContent = function () { return cordova(this, \"styleLightContent\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.styleBlackTranslucent = function () { return cordova(this, \"styleBlackTranslucent\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.styleBlackOpaque = function () { return cordova(this, \"styleBlackOpaque\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.backgroundColorByName = function (colorName) { return cordova(this, \"backgroundColorByName\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.backgroundColorByHexString = function (hexString) { return cordova(this, \"backgroundColorByHexString\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.hide = function () { return cordova(this, \"hide\", { \"sync\": true }, arguments); };\n    StatusBar.prototype.show = function () { return cordova(this, \"show\", { \"sync\": true }, arguments); };\n    Object.defineProperty(StatusBar.prototype, \"isVisible\", {\n        get: function () { return cordovaPropertyGet(this, \"isVisible\"); },\n        set: function (value) { cordovaPropertySet(this, \"isVisible\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    StatusBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StatusBar, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    StatusBar.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StatusBar });\n    StatusBar.pluginName = \"StatusBar\";\n    StatusBar.plugin = \"cordova-plugin-statusbar\";\n    StatusBar.pluginRef = \"StatusBar\";\n    StatusBar.repo = \"https://github.com/apache/cordova-plugin-statusbar\";\n    StatusBar.platforms = [\"Android\", \"iOS\", \"Windows\"];\n    StatusBar = __decorate([], StatusBar);\n    return StatusBar;\n}(AwesomeCordovaNativePlugin));\nexport { StatusBar };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: StatusBar, decorators: [{\n            type: Injectable\n        }], propDecorators: { isVisible: [], overlaysWebView: [], styleDefault: [], styleLightContent: [], styleBlackTranslucent: [], styleBlackOpaque: [], backgroundColorByName: [], backgroundColorByHexString: [], hide: [], show: [] } });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}