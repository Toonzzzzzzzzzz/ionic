{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreBlockDelegate } from '@features/block/services/block-delegate';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreCoursesDashboard } from '../dashboard';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to add dashboard into home page.\n */\nexport class CoreDashboardHomeHandlerService {\n  constructor() {\n    this.name = 'CoreCoursesDashboard';\n    this.priority = 1200;\n    this.logger = CoreLogger.getInstance('CoreDashboardHomeHandlerService');\n  }\n  /**\n   * Check if the handler is enabled on a site level.\n   *\n   * @returns Whether or not the handler is enabled on a site level.\n   */\n  isEnabled() {\n    return this.isEnabledForSite();\n  }\n  /**\n   * Check if the handler is enabled on a certain site.\n   *\n   * @param siteId Site ID. If not defined, current site.\n   * @returns Whether or not the handler is enabled on a site level.\n   */\n  isEnabledForSite(siteId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const site = yield CoreSites.getSite(siteId);\n      // Check if blocks and 3.6 dashboard is enabled.\n      const [blocksDisabled, dashboardDisabled, dashboardAvailable, dashboardConfig] = yield Promise.all([CoreBlockDelegate.areBlocksDisabled(site.getId()), CoreCoursesDashboard.isDisabled(site.getId()), CoreCoursesDashboard.isAvailable(site.getId()), CoreUtils.ignoreErrors(site.getConfig('enabledashboard'), '1')]);\n      const dashboardEnabled = !dashboardDisabled && dashboardConfig !== '0';\n      if (dashboardAvailable && dashboardEnabled && !blocksDisabled) {\n        try {\n          const blocks = yield CoreCoursesDashboard.getDashboardBlocks(undefined, siteId);\n          return CoreBlockDelegate.hasSupportedBlock(blocks.mainBlocks) || CoreBlockDelegate.hasSupportedBlock(blocks.sideBlocks);\n        } catch (error) {\n          // Error getting blocks, assume it's enabled.\n          _this.logger.error('Error getting Dashboard blocks', error);\n          return true;\n        }\n      }\n      // Dashboard is enabled but not available, we will fake blocks.\n      return dashboardEnabled && !blocksDisabled;\n    })();\n  }\n  /**\n   * Returns the data needed to render the handler.\n   *\n   * @returns Data needed to render the handler.\n   */\n  getDisplayData() {\n    return {\n      title: 'core.courses.mymoodle',\n      page: CoreDashboardHomeHandlerService.PAGE_NAME,\n      class: 'core-courses-dashboard-handler',\n      icon: 'fas-gauge-high'\n    };\n  }\n}\n_class = CoreDashboardHomeHandlerService;\n_class.PAGE_NAME = 'dashboard';\n_class.ɵfac = function CoreDashboardHomeHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreDashboardHomeHandler = makeSingleton(CoreDashboardHomeHandlerService);","map":{"version":3,"names":["CoreBlockDelegate","CoreSites","CoreUtils","makeSingleton","CoreLogger","CoreCoursesDashboard","CoreDashboardHomeHandlerService","constructor","name","priority","logger","getInstance","isEnabled","isEnabledForSite","siteId","_this","_asyncToGenerator","site","getSite","blocksDisabled","dashboardDisabled","dashboardAvailable","dashboardConfig","Promise","all","areBlocksDisabled","getId","isDisabled","isAvailable","ignoreErrors","getConfig","dashboardEnabled","blocks","getDashboardBlocks","undefined","hasSupportedBlock","mainBlocks","sideBlocks","error","getDisplayData","title","page","PAGE_NAME","class","icon","_class","factory","ɵfac","providedIn","CoreDashboardHomeHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/courses/services/handlers/dashboard-home.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreBlockDelegate } from '@features/block/services/block-delegate';\nimport { CoreMainMenuHomeHandler, CoreMainMenuHomeHandlerToDisplay } from '@features/mainmenu/services/home-delegate';\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreCoursesDashboard } from '../dashboard';\n\n/**\n * Handler to add dashboard into home page.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreDashboardHomeHandlerService implements CoreMainMenuHomeHandler {\n\n    static readonly PAGE_NAME = 'dashboard';\n\n    name = 'CoreCoursesDashboard';\n    priority = 1200;\n    logger: CoreLogger;\n\n    constructor() {\n        this.logger = CoreLogger.getInstance('CoreDashboardHomeHandlerService');\n    }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @returns Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): Promise<boolean> {\n        return this.isEnabledForSite();\n    }\n\n    /**\n     * Check if the handler is enabled on a certain site.\n     *\n     * @param siteId Site ID. If not defined, current site.\n     * @returns Whether or not the handler is enabled on a site level.\n     */\n    async isEnabledForSite(siteId?: string): Promise<boolean> {\n        const site = await CoreSites.getSite(siteId);\n\n        // Check if blocks and 3.6 dashboard is enabled.\n        const [blocksDisabled, dashboardDisabled, dashboardAvailable, dashboardConfig] = await Promise.all([\n            CoreBlockDelegate.areBlocksDisabled(site.getId()),\n            CoreCoursesDashboard.isDisabled(site.getId()),\n            CoreCoursesDashboard.isAvailable(site.getId()),\n            CoreUtils.ignoreErrors(site.getConfig('enabledashboard'), '1'),\n        ]);\n        const dashboardEnabled = !dashboardDisabled && dashboardConfig !== '0';\n\n        if (dashboardAvailable && dashboardEnabled && !blocksDisabled) {\n            try {\n                const blocks = await CoreCoursesDashboard.getDashboardBlocks(undefined, siteId);\n\n                return CoreBlockDelegate.hasSupportedBlock(blocks.mainBlocks) ||\n                    CoreBlockDelegate.hasSupportedBlock(blocks.sideBlocks);\n            } catch (error) {\n                // Error getting blocks, assume it's enabled.\n                this.logger.error('Error getting Dashboard blocks', error);\n\n                return true;\n            }\n        }\n\n        // Dashboard is enabled but not available, we will fake blocks.\n        return dashboardEnabled && !blocksDisabled;\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @returns Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHomeHandlerToDisplay {\n        return {\n            title: 'core.courses.mymoodle',\n            page: CoreDashboardHomeHandlerService.PAGE_NAME,\n            class: 'core-courses-dashboard-handler',\n            icon: 'fas-gauge-high',\n        };\n    }\n\n}\n\nexport const CoreDashboardHomeHandler = makeSingleton(CoreDashboardHomeHandlerService);\n"],"mappings":";;AAeA,SAASA,iBAAiB,QAAQ,yCAAyC;AAE3E,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,oBAAoB,QAAQ,cAAc;;AAEnD;;;AAIA,OAAM,MAAOC,+BAA+B;EAQxCC,YAAA;IAJA,KAAAC,IAAI,GAAG,sBAAsB;IAC7B,KAAAC,QAAQ,GAAG,IAAI;IAIX,IAAI,CAACC,MAAM,GAAGN,UAAU,CAACO,WAAW,CAAC,iCAAiC,CAAC;EAC3E;EAEA;;;;;EAKAC,SAASA,CAAA;IACL,OAAO,IAAI,CAACC,gBAAgB,EAAE;EAClC;EAEA;;;;;;EAMMA,gBAAgBA,CAACC,MAAe;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClC,MAAMC,IAAI,SAAShB,SAAS,CAACiB,OAAO,CAACJ,MAAM,CAAC;MAE5C;MACA,MAAM,CAACK,cAAc,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAEC,eAAe,CAAC,SAASC,OAAO,CAACC,GAAG,CAAC,CAC/FxB,iBAAiB,CAACyB,iBAAiB,CAACR,IAAI,CAACS,KAAK,EAAE,CAAC,EACjDrB,oBAAoB,CAACsB,UAAU,CAACV,IAAI,CAACS,KAAK,EAAE,CAAC,EAC7CrB,oBAAoB,CAACuB,WAAW,CAACX,IAAI,CAACS,KAAK,EAAE,CAAC,EAC9CxB,SAAS,CAAC2B,YAAY,CAACZ,IAAI,CAACa,SAAS,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CACjE,CAAC;MACF,MAAMC,gBAAgB,GAAG,CAACX,iBAAiB,IAAIE,eAAe,KAAK,GAAG;MAEtE,IAAID,kBAAkB,IAAIU,gBAAgB,IAAI,CAACZ,cAAc,EAAE;QAC3D,IAAI;UACA,MAAMa,MAAM,SAAS3B,oBAAoB,CAAC4B,kBAAkB,CAACC,SAAS,EAAEpB,MAAM,CAAC;UAE/E,OAAOd,iBAAiB,CAACmC,iBAAiB,CAACH,MAAM,CAACI,UAAU,CAAC,IACzDpC,iBAAiB,CAACmC,iBAAiB,CAACH,MAAM,CAACK,UAAU,CAAC;SAC7D,CAAC,OAAOC,KAAK,EAAE;UACZ;UACAvB,KAAI,CAACL,MAAM,CAAC4B,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;UAE1D,OAAO,IAAI;;;MAInB;MACA,OAAOP,gBAAgB,IAAI,CAACZ,cAAc;IAAC;EAC/C;EAEA;;;;;EAKAoB,cAAcA,CAAA;IACV,OAAO;MACHC,KAAK,EAAE,uBAAuB;MAC9BC,IAAI,EAAEnC,+BAA+B,CAACoC,SAAS;MAC/CC,KAAK,EAAE,gCAAgC;MACvCC,IAAI,EAAE;KACT;EACL;;SArEStC,+BAA+B;AAExBuC,MAAA,CAAAH,SAAS,GAAG,WAAW;;mBAF9BpC,MAA+B;AAAA;;SAA/BA,MAA+B;EAAAwC,OAAA,EAA/BxC,MAA+B,CAAAyC,IAAA;EAAAC,UAAA,EADlB;AAAM;AA0EhC,OAAO,MAAMC,wBAAwB,GAAG9C,aAAa,CAACG,+BAA+B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}