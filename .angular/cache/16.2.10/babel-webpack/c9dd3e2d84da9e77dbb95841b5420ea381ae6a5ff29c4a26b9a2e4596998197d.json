{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { ADDON_COMPETENCY_COMPETENCIES_PAGE } from '../competency.module';\nimport { AddonCompetency, AddonCompetencyProvider } from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n/**\n * Provides a collection of learning plans.\n */\nexport class AddonCompetencyPlansSource extends CoreRoutedItemsManagerSource {\n  /**\n   * @inheritdoc\n   */\n  static getSourceId(userId) {\n    return userId ? String(userId) : 'current-user';\n  }\n  constructor(userId) {\n    super();\n    this.USER_ID = userId;\n  }\n  /**\n   * @inheritdoc\n   */\n  getItemPath(plan) {\n    return `${plan.id}/${ADDON_COMPETENCY_COMPETENCIES_PAGE}`;\n  }\n  /**\n   * @inheritdoc\n   */\n  getItemQueryParams() {\n    if (this.USER_ID) {\n      return {\n        userId: this.USER_ID\n      };\n    }\n    return {};\n  }\n  /**\n   * Invalidate learning plans cache.\n   */\n  invalidateCache() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield AddonCompetency.invalidateLearningPlans(_this.USER_ID);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  loadPageItems() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const plans = yield AddonCompetency.getLearningPlans(_this2.USER_ID);\n      plans.forEach(plan => {\n        plan.statusname = AddonCompetencyHelper.getPlanStatusName(plan.status);\n        switch (plan.status) {\n          case AddonCompetencyProvider.STATUS_ACTIVE:\n            plan.statuscolor = 'success';\n            break;\n          case AddonCompetencyProvider.STATUS_COMPLETE:\n            plan.statuscolor = 'danger';\n            break;\n          default:\n            plan.statuscolor = 'warning';\n            break;\n        }\n      });\n      return {\n        items: plans\n      };\n    })();\n  }\n}","map":{"version":3,"names":["CoreRoutedItemsManagerSource","ADDON_COMPETENCY_COMPETENCIES_PAGE","AddonCompetency","AddonCompetencyProvider","AddonCompetencyHelper","AddonCompetencyPlansSource","getSourceId","userId","String","constructor","USER_ID","getItemPath","plan","id","getItemQueryParams","invalidateCache","_this","_asyncToGenerator","invalidateLearningPlans","loadPageItems","_this2","plans","getLearningPlans","forEach","statusname","getPlanStatusName","status","STATUS_ACTIVE","statuscolor","STATUS_COMPLETE","items"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/classes/competency-plans-source.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Params } from '@angular/router';\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { ADDON_COMPETENCY_COMPETENCIES_PAGE } from '../competency.module';\nimport { AddonCompetency, AddonCompetencyPlan, AddonCompetencyProvider } from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n\n/**\n * Provides a collection of learning plans.\n */\nexport class AddonCompetencyPlansSource extends CoreRoutedItemsManagerSource<AddonCompetencyPlanFormatted> {\n\n    /**\n     * @inheritdoc\n     */\n    static getSourceId(userId?: number): string {\n        return userId ? String(userId) : 'current-user';\n    }\n\n    readonly USER_ID?: number;\n\n    constructor(userId?: number) {\n        super();\n\n        this.USER_ID = userId;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(plan: AddonCompetencyPlanFormatted): string {\n        return `${plan.id}/${ADDON_COMPETENCY_COMPETENCIES_PAGE}`;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemQueryParams(): Params {\n        if (this.USER_ID) {\n            return { userId: this.USER_ID };\n        }\n\n        return {};\n    }\n\n    /**\n     * Invalidate learning plans cache.\n     */\n    async invalidateCache(): Promise<void> {\n        await AddonCompetency.invalidateLearningPlans(this.USER_ID);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: AddonCompetencyPlanFormatted[] }> {\n        const plans = await AddonCompetency.getLearningPlans(this.USER_ID);\n\n        plans.forEach((plan: AddonCompetencyPlanFormatted) => {\n            plan.statusname = AddonCompetencyHelper.getPlanStatusName(plan.status);\n            switch (plan.status) {\n                case AddonCompetencyProvider.STATUS_ACTIVE:\n                    plan.statuscolor = 'success';\n                    break;\n                case AddonCompetencyProvider.STATUS_COMPLETE:\n                    plan.statuscolor = 'danger';\n                    break;\n                default:\n                    plan.statuscolor = 'warning';\n                    break;\n            }\n        });\n\n        return { items: plans };\n    }\n\n}\n\n/**\n * Competency plan with some calculated data.\n */\nexport type AddonCompetencyPlanFormatted = AddonCompetencyPlan & {\n    statuscolor?: string; // Calculated in the app. Color of the plan's status.\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,4BAA4B,QAAQ,uDAAuD;AACpG,SAASC,kCAAkC,QAAQ,sBAAsB;AACzE,SAASC,eAAe,EAAuBC,uBAAuB,QAAQ,wBAAwB;AACtG,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE;;;AAGA,OAAM,MAAOC,0BAA2B,SAAQL,4BAA0D;EAEtG;;;EAGA,OAAOM,WAAWA,CAACC,MAAe;IAC9B,OAAOA,MAAM,GAAGC,MAAM,CAACD,MAAM,CAAC,GAAG,cAAc;EACnD;EAIAE,YAAYF,MAAe;IACvB,KAAK,EAAE;IAEP,IAAI,CAACG,OAAO,GAAGH,MAAM;EACzB;EAEA;;;EAGAI,WAAWA,CAACC,IAAkC;IAC1C,OAAO,GAAGA,IAAI,CAACC,EAAE,IAAIZ,kCAAkC,EAAE;EAC7D;EAEA;;;EAGAa,kBAAkBA,CAAA;IACd,IAAI,IAAI,CAACJ,OAAO,EAAE;MACd,OAAO;QAAEH,MAAM,EAAE,IAAI,CAACG;MAAO,CAAE;;IAGnC,OAAO,EAAE;EACb;EAEA;;;EAGMK,eAAeA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACjB,MAAMf,eAAe,CAACgB,uBAAuB,CAACF,KAAI,CAACN,OAAO,CAAC;IAAC;EAChE;EAEA;;;EAGgBS,aAAaA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAH,iBAAA;MACzB,MAAMI,KAAK,SAASnB,eAAe,CAACoB,gBAAgB,CAACF,MAAI,CAACV,OAAO,CAAC;MAElEW,KAAK,CAACE,OAAO,CAAEX,IAAkC,IAAI;QACjDA,IAAI,CAACY,UAAU,GAAGpB,qBAAqB,CAACqB,iBAAiB,CAACb,IAAI,CAACc,MAAM,CAAC;QACtE,QAAQd,IAAI,CAACc,MAAM;UACf,KAAKvB,uBAAuB,CAACwB,aAAa;YACtCf,IAAI,CAACgB,WAAW,GAAG,SAAS;YAC5B;UACJ,KAAKzB,uBAAuB,CAAC0B,eAAe;YACxCjB,IAAI,CAACgB,WAAW,GAAG,QAAQ;YAC3B;UACJ;YACIhB,IAAI,CAACgB,WAAW,GAAG,SAAS;YAC5B;;MAEZ,CAAC,CAAC;MAEF,OAAO;QAAEE,KAAK,EAAET;MAAK,CAAE;IAAC;EAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}