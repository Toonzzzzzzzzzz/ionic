{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar Badge = /** @class */function (_super) {\n  __extends(Badge, _super);\n  function Badge() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Badge.prototype.clear = function () {\n    return cordova(this, \"clear\", {}, arguments);\n  };\n  Badge.prototype.set = function (badgeNumber) {\n    return cordova(this, \"set\", {}, arguments);\n  };\n  Badge.prototype.get = function () {\n    return cordova(this, \"get\", {}, arguments);\n  };\n  Badge.prototype.increase = function (increaseBy) {\n    return cordova(this, \"increase\", {}, arguments);\n  };\n  Badge.prototype.decrease = function (decreaseBy) {\n    return cordova(this, \"decrease\", {}, arguments);\n  };\n  Badge.prototype.isSupported = function () {\n    return cordova(this, \"isSupported\", {}, arguments);\n  };\n  Badge.prototype.hasPermission = function () {\n    return cordova(this, \"hasPermission\", {}, arguments);\n  };\n  Badge.prototype.requestPermission = function () {\n    return cordova(this, \"requestPermission\", {}, arguments);\n  };\n  Badge.ɵfac = /* @__PURE__ */function () {\n    let ɵBadge_BaseFactory;\n    return function Badge_Factory(t) {\n      return (ɵBadge_BaseFactory || (ɵBadge_BaseFactory = i0.ɵɵgetInheritedFactory(Badge)))(t || Badge);\n    };\n  }();\n  Badge.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Badge,\n    factory: Badge.ɵfac\n  });\n  Badge.pluginName = \"Badge\";\n  Badge.plugin = \"cordova-plugin-badge\";\n  Badge.pluginRef = \"cordova.plugins.notification.badge\";\n  Badge.repo = \"https://github.com/katzer/cordova-plugin-badge\";\n  Badge.platforms = [\"Android\", \"Browser\", \"iOS\", \"Windows\"];\n  Badge = __decorate([], Badge);\n  return Badge;\n}(AwesomeCordovaNativePlugin);\nexport { Badge };\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Badge, [{\n    type: Injectable\n  }], null, {\n    clear: [],\n    set: [],\n    get: [],\n    increase: [],\n    decrease: [],\n    isSupported: [],\n    hasPermission: [],\n    requestPermission: []\n  });\n})();","map":{"version":3,"names":["__decorate","__extends","Injectable","AwesomeCordovaNativePlugin","cordova","i0","Badge","_super","apply","arguments","prototype","clear","set","badgeNumber","get","increase","increaseBy","decrease","decreaseBy","isSupported","hasPermission","requestPermission","ɵfac","ɵBadge_BaseFactory","Badge_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","pluginName","plugin","pluginRef","repo","platforms","ngDevMode","ɵsetClassMetadata","type"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@awesome-cordova-plugins/badge/ngx/index.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar Badge = /** @class */ (function (_super) {\n    __extends(Badge, _super);\n    function Badge() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Badge.prototype.clear = function () { return cordova(this, \"clear\", {}, arguments); };\n    Badge.prototype.set = function (badgeNumber) { return cordova(this, \"set\", {}, arguments); };\n    Badge.prototype.get = function () { return cordova(this, \"get\", {}, arguments); };\n    Badge.prototype.increase = function (increaseBy) { return cordova(this, \"increase\", {}, arguments); };\n    Badge.prototype.decrease = function (decreaseBy) { return cordova(this, \"decrease\", {}, arguments); };\n    Badge.prototype.isSupported = function () { return cordova(this, \"isSupported\", {}, arguments); };\n    Badge.prototype.hasPermission = function () { return cordova(this, \"hasPermission\", {}, arguments); };\n    Badge.prototype.requestPermission = function () { return cordova(this, \"requestPermission\", {}, arguments); };\n    Badge.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Badge, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    Badge.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Badge });\n    Badge.pluginName = \"Badge\";\n    Badge.plugin = \"cordova-plugin-badge\";\n    Badge.pluginRef = \"cordova.plugins.notification.badge\";\n    Badge.repo = \"https://github.com/katzer/cordova-plugin-badge\";\n    Badge.platforms = [\"Android\", \"Browser\", \"iOS\", \"Windows\"];\n    Badge = __decorate([], Badge);\n    return Badge;\n}(AwesomeCordovaNativePlugin));\nexport { Badge };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Badge, decorators: [{\n            type: Injectable\n        }], propDecorators: { clear: [], set: [], get: [], increase: [], decrease: [], isSupported: [], hasPermission: [], requestPermission: [] } });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}