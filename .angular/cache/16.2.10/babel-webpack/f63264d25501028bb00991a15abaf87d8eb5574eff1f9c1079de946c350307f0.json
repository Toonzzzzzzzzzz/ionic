{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Helpers to interact with Browser APIs.\n */\nexport class CoreBrowser {\n  /**\n   * Check whether the given cookie is set.\n   *\n   * @param name Cookie name.\n   * @returns Whether the cookie is set.\n   */\n  static hasCookie(name) {\n    var _document$cookie;\n    return new RegExp(`(\\\\s|;|^)${name}=`).test((_document$cookie = document.cookie) !== null && _document$cookie !== void 0 ? _document$cookie : '');\n  }\n  /**\n   * Check whether a development setting is set.\n   *\n   * @param name Setting name.\n   * @returns Whether the development setting is set.\n   */\n  static hasDevelopmentSetting(name) {\n    const setting = this.getDevelopmentSettingKey(name);\n    return this.hasCookie(setting) || this.hasLocalStorage(setting);\n  }\n  /**\n   * Check whether the given localStorage key is set.\n   *\n   * @param key localStorage key.\n   * @returns Whether the key is set.\n   */\n  static hasLocalStorage(key) {\n    return localStorage.getItem(key) !== null;\n  }\n  /**\n   * Read a cookie.\n   *\n   * @param name Cookie name.\n   * @returns Cookie value.\n   */\n  static getCookie(name) {\n    var _document$cookie2, _cookies$name;\n    const cookies = ((_document$cookie2 = document.cookie) !== null && _document$cookie2 !== void 0 ? _document$cookie2 : '').split(';').reduce((cookies, cookie) => {\n      const [name, value] = cookie.trim().split('=');\n      cookies[name] = value;\n      return cookies;\n    }, {});\n    return (_cookies$name = cookies[name]) !== null && _cookies$name !== void 0 ? _cookies$name : null;\n  }\n  /**\n   * Read a localStorage key.\n   *\n   * @param key localStorage key.\n   * @returns localStorage value.\n   */\n  static getLocalStorage(key) {\n    return localStorage.getItem(key);\n  }\n  /**\n   * Get development setting value.\n   *\n   * @param name Setting name.\n   * @returns Development setting value.\n   */\n  static getDevelopmentSetting(name) {\n    var _this$getCookie;\n    const setting = this.getDevelopmentSettingKey(name);\n    return (_this$getCookie = this.getCookie(setting)) !== null && _this$getCookie !== void 0 ? _this$getCookie : this.getLocalStorage(setting);\n  }\n  /**\n   * Set development setting.\n   *\n   * @param name Setting name.\n   * @param value Setting value.\n   */\n  static setDevelopmentSetting(name, value) {\n    const setting = this.getDevelopmentSettingKey(name);\n    document.cookie = `${setting}=${value};path=/`;\n    localStorage.setItem(setting, value);\n  }\n  /**\n   * Unset development setting.\n   *\n   * @param name Setting name.\n   */\n  static clearDevelopmentSetting(name) {\n    const setting = this.getDevelopmentSettingKey(name);\n    document.cookie = `${setting}=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT`;\n    localStorage.removeItem(setting);\n  }\n  /**\n   * Get development setting key.\n   *\n   * @param name Development setting name.\n   * @returns THe development setting key.\n   */\n  static getDevelopmentSettingKey(name) {\n    return `MoodleApp${name}`;\n  }\n}","map":{"version":3,"names":["CoreBrowser","hasCookie","name","_document$cookie","RegExp","test","document","cookie","hasDevelopmentSetting","setting","getDevelopmentSettingKey","hasLocalStorage","key","localStorage","getItem","getCookie","_document$cookie2","_cookies$name","cookies","split","reduce","value","trim","getLocalStorage","getDevelopmentSetting","_this$getCookie","setDevelopmentSetting","setItem","clearDevelopmentSetting","removeItem"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/singletons/browser.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Helpers to interact with Browser APIs.\n */\nexport class CoreBrowser {\n\n    /**\n     * Check whether the given cookie is set.\n     *\n     * @param name Cookie name.\n     * @returns Whether the cookie is set.\n     */\n    static hasCookie(name: string): boolean {\n        return new RegExp(`(\\\\s|;|^)${name}=`).test(document.cookie ?? '');\n    }\n\n    /**\n     * Check whether a development setting is set.\n     *\n     * @param name Setting name.\n     * @returns Whether the development setting is set.\n     */\n    static hasDevelopmentSetting(name: string): boolean {\n        const setting = this.getDevelopmentSettingKey(name);\n\n        return this.hasCookie(setting) || this.hasLocalStorage(setting);\n    }\n\n    /**\n     * Check whether the given localStorage key is set.\n     *\n     * @param key localStorage key.\n     * @returns Whether the key is set.\n     */\n    static hasLocalStorage(key: string): boolean {\n        return localStorage.getItem(key) !== null;\n    }\n\n    /**\n     * Read a cookie.\n     *\n     * @param name Cookie name.\n     * @returns Cookie value.\n     */\n    static getCookie(name: string): string | null {\n        const cookies = (document.cookie ?? '').split(';').reduce((cookies, cookie) => {\n            const [name, value] = cookie.trim().split('=');\n\n            cookies[name] = value;\n\n            return cookies;\n        }, {});\n\n        return cookies[name] ?? null;\n    }\n\n    /**\n     * Read a localStorage key.\n     *\n     * @param key localStorage key.\n     * @returns localStorage value.\n     */\n    static getLocalStorage(key: string): string | null {\n        return localStorage.getItem(key);\n    }\n\n    /**\n     * Get development setting value.\n     *\n     * @param name Setting name.\n     * @returns Development setting value.\n     */\n    static getDevelopmentSetting(name: string): string | null {\n        const setting = this.getDevelopmentSettingKey(name);\n\n        return this.getCookie(setting) ?? this.getLocalStorage(setting);\n    }\n\n    /**\n     * Set development setting.\n     *\n     * @param name Setting name.\n     * @param value Setting value.\n     */\n    static setDevelopmentSetting(name: string, value: string): void {\n        const setting = this.getDevelopmentSettingKey(name);\n\n        document.cookie = `${setting}=${value};path=/`;\n        localStorage.setItem(setting, value);\n    }\n\n    /**\n     * Unset development setting.\n     *\n     * @param name Setting name.\n     */\n    static clearDevelopmentSetting(name: string): void {\n        const setting = this.getDevelopmentSettingKey(name);\n\n        document.cookie = `${setting}=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT`;\n        localStorage.removeItem(setting);\n    }\n\n    /**\n     * Get development setting key.\n     *\n     * @param name Development setting name.\n     * @returns THe development setting key.\n     */\n    protected static getDevelopmentSettingKey(name: string): string {\n        return `MoodleApp${name}`;\n    }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA,OAAM,MAAOA,WAAW;EAEpB;;;;;;EAMA,OAAOC,SAASA,CAACC,IAAY;IAAA,IAAAC,gBAAA;IACzB,OAAO,IAAIC,MAAM,CAAC,YAAYF,IAAI,GAAG,CAAC,CAACG,IAAI,EAAAF,gBAAA,GAACG,QAAQ,CAACC,MAAM,cAAAJ,gBAAA,cAAAA,gBAAA,GAAI,EAAE,CAAC;EACtE;EAEA;;;;;;EAMA,OAAOK,qBAAqBA,CAACN,IAAY;IACrC,MAAMO,OAAO,GAAG,IAAI,CAACC,wBAAwB,CAACR,IAAI,CAAC;IAEnD,OAAO,IAAI,CAACD,SAAS,CAACQ,OAAO,CAAC,IAAI,IAAI,CAACE,eAAe,CAACF,OAAO,CAAC;EACnE;EAEA;;;;;;EAMA,OAAOE,eAAeA,CAACC,GAAW;IAC9B,OAAOC,YAAY,CAACC,OAAO,CAACF,GAAG,CAAC,KAAK,IAAI;EAC7C;EAEA;;;;;;EAMA,OAAOG,SAASA,CAACb,IAAY;IAAA,IAAAc,iBAAA,EAAAC,aAAA;IACzB,MAAMC,OAAO,GAAG,EAAAF,iBAAA,GAACV,QAAQ,CAACC,MAAM,cAAAS,iBAAA,cAAAA,iBAAA,GAAI,EAAE,EAAEG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACF,OAAO,EAAEX,MAAM,KAAI;MAC1E,MAAM,CAACL,IAAI,EAAEmB,KAAK,CAAC,GAAGd,MAAM,CAACe,IAAI,EAAE,CAACH,KAAK,CAAC,GAAG,CAAC;MAE9CD,OAAO,CAAChB,IAAI,CAAC,GAAGmB,KAAK;MAErB,OAAOH,OAAO;IAClB,CAAC,EAAE,EAAE,CAAC;IAEN,QAAAD,aAAA,GAAOC,OAAO,CAAChB,IAAI,CAAC,cAAAe,aAAA,cAAAA,aAAA,GAAI,IAAI;EAChC;EAEA;;;;;;EAMA,OAAOM,eAAeA,CAACX,GAAW;IAC9B,OAAOC,YAAY,CAACC,OAAO,CAACF,GAAG,CAAC;EACpC;EAEA;;;;;;EAMA,OAAOY,qBAAqBA,CAACtB,IAAY;IAAA,IAAAuB,eAAA;IACrC,MAAMhB,OAAO,GAAG,IAAI,CAACC,wBAAwB,CAACR,IAAI,CAAC;IAEnD,QAAAuB,eAAA,GAAO,IAAI,CAACV,SAAS,CAACN,OAAO,CAAC,cAAAgB,eAAA,cAAAA,eAAA,GAAI,IAAI,CAACF,eAAe,CAACd,OAAO,CAAC;EACnE;EAEA;;;;;;EAMA,OAAOiB,qBAAqBA,CAACxB,IAAY,EAAEmB,KAAa;IACpD,MAAMZ,OAAO,GAAG,IAAI,CAACC,wBAAwB,CAACR,IAAI,CAAC;IAEnDI,QAAQ,CAACC,MAAM,GAAG,GAAGE,OAAO,IAAIY,KAAK,SAAS;IAC9CR,YAAY,CAACc,OAAO,CAAClB,OAAO,EAAEY,KAAK,CAAC;EACxC;EAEA;;;;;EAKA,OAAOO,uBAAuBA,CAAC1B,IAAY;IACvC,MAAMO,OAAO,GAAG,IAAI,CAACC,wBAAwB,CAACR,IAAI,CAAC;IAEnDI,QAAQ,CAACC,MAAM,GAAG,GAAGE,OAAO,gDAAgD;IAC5EI,YAAY,CAACgB,UAAU,CAACpB,OAAO,CAAC;EACpC;EAEA;;;;;;EAMU,OAAOC,wBAAwBA,CAACR,IAAY;IAClD,OAAO,YAAYA,IAAI,EAAE;EAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}