{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonQtypeShortAnswerComponent } from '../../component/shortanswer';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support short answer question type.\n */\nexport class AddonQtypeShortAnswerHandlerService {\n  constructor() {\n    this.name = 'AddonQtypeShortAnswer';\n    this.type = 'qtype_shortanswer';\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return AddonQtypeShortAnswerComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isCompleteResponse(question, answers) {\n    return answers.answer ? 1 : 0;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isGradableResponse(question, answers) {\n    return this.isCompleteResponse(question, answers);\n  }\n  /**\n   * @inheritdoc\n   */\n  isSameResponse(question, prevAnswers, newAnswers) {\n    return CoreUtils.sameAtKeyMissingIsBlank(prevAnswers, newAnswers, 'answer');\n  }\n}\n_class = AddonQtypeShortAnswerHandlerService;\n_class.ɵfac = function AddonQtypeShortAnswerHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonQtypeShortAnswerHandler = makeSingleton(AddonQtypeShortAnswerHandlerService);","map":{"version":3,"names":["CoreUtils","makeSingleton","AddonQtypeShortAnswerComponent","AddonQtypeShortAnswerHandlerService","constructor","name","type","getComponent","isCompleteResponse","question","answers","answer","isEnabled","_asyncToGenerator","isGradableResponse","isSameResponse","prevAnswers","newAnswers","sameAtKeyMissingIsBlank","factory","ɵfac","providedIn","AddonQtypeShortAnswerHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qtype/shortanswer/services/handlers/shortanswer.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { CoreQuestionQuestionParsed, CoreQuestionsAnswers } from '@features/question/services/question';\nimport { CoreQuestionHandler } from '@features/question/services/question-delegate';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonQtypeShortAnswerComponent } from '../../component/shortanswer';\n\n/**\n * Handler to support short answer question type.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonQtypeShortAnswerHandlerService implements CoreQuestionHandler {\n\n    name = 'AddonQtypeShortAnswer';\n    type = 'qtype_shortanswer';\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<unknown> {\n        return AddonQtypeShortAnswerComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isCompleteResponse(\n        question: CoreQuestionQuestionParsed,\n        answers: CoreQuestionsAnswers,\n    ): number {\n        return answers.answer ? 1 : 0;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isGradableResponse(\n        question: CoreQuestionQuestionParsed,\n        answers: CoreQuestionsAnswers,\n    ): number {\n        return this.isCompleteResponse(question, answers);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isSameResponse(\n        question: CoreQuestionQuestionParsed,\n        prevAnswers: CoreQuestionsAnswers,\n        newAnswers: CoreQuestionsAnswers,\n    ): boolean {\n        return CoreUtils.sameAtKeyMissingIsBlank(prevAnswers, newAnswers, 'answer');\n    }\n\n}\n\nexport const AddonQtypeShortAnswerHandler = makeSingleton(AddonQtypeShortAnswerHandlerService);\n"],"mappings":";;AAkBA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,8BAA8B,QAAQ,6BAA6B;;AAE5E;;;AAIA,OAAM,MAAOC,mCAAmC;EADhDC,YAAA;IAGI,KAAAC,IAAI,GAAG,uBAAuB;IAC9B,KAAAC,IAAI,GAAG,mBAAmB;;EAE1B;;;EAGAC,YAAYA,CAAA;IACR,OAAOL,8BAA8B;EACzC;EAEA;;;EAGAM,kBAAkBA,CACdC,QAAoC,EACpCC,OAA6B;IAE7B,OAAOA,OAAO,CAACC,MAAM,GAAG,CAAC,GAAG,CAAC;EACjC;EAEA;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGAC,kBAAkBA,CACdL,QAAoC,EACpCC,OAA6B;IAE7B,OAAO,IAAI,CAACF,kBAAkB,CAACC,QAAQ,EAAEC,OAAO,CAAC;EACrD;EAEA;;;EAGAK,cAAcA,CACVN,QAAoC,EACpCO,WAAiC,EACjCC,UAAgC;IAEhC,OAAOjB,SAAS,CAACkB,uBAAuB,CAACF,WAAW,EAAEC,UAAU,EAAE,QAAQ,CAAC;EAC/E;;SAhDSd,mCAAmC;;mBAAnCA,MAAmC;AAAA;;SAAnCA,MAAmC;EAAAgB,OAAA,EAAnChB,MAAmC,CAAAiB,IAAA;EAAAC,UAAA,EADtB;AAAM;AAqDhC,OAAO,MAAMC,4BAA4B,GAAGrB,aAAa,CAACE,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}