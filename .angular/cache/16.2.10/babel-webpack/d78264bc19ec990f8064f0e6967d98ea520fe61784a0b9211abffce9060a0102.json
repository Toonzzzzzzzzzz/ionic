{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTag } from '@features/tag/services/tag';\nimport { CoreTagAreaDelegate } from '../../services/tag-area-delegate';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../../components/dynamic-component/dynamic-component\";\nimport * as i3 from \"../../../../components/infinite-loading/infinite-loading\";\nimport * as i4 from \"../../../../components/loading/loading\";\nimport * as i5 from \"../../../../directives/content\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@ngx-translate/core\";\nconst _c0 = function (a0, a1) {\n  return {\n    tagarea: a0,\n    tag: a1\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    items: a0\n  };\n};\n/**\n * Page that displays the tag index area.\n */\nexport class CoreTagIndexAreaPage {\n  constructor(route) {\n    this.route = route;\n    this.tagId = 0;\n    this.tagName = '';\n    this.collectionId = 0;\n    this.areaId = 0;\n    this.fromContextId = 0;\n    this.contextId = 0;\n    this.recursive = true;\n    this.areaNameKey = '';\n    this.loaded = false;\n    this.items = [];\n    this.nextPage = 0;\n    this.canLoadMore = false;\n    this.loadMoreError = false;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.route.queryParams.subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n        var _CoreNavigator$getRou;\n        _this.loaded = false;\n        _this.tagId = CoreNavigator.getRouteNumberParam('tagId') || _this.tagId;\n        _this.tagName = CoreNavigator.getRouteParam('tagName') || _this.tagName;\n        _this.collectionId = CoreNavigator.getRouteNumberParam('collectionId') || _this.collectionId;\n        _this.areaId = CoreNavigator.getRouteNumberParam('areaId') || _this.areaId;\n        _this.fromContextId = CoreNavigator.getRouteNumberParam('fromContextId') || _this.fromContextId;\n        _this.contextId = CoreNavigator.getRouteNumberParam('contextId') || _this.contextId;\n        _this.recursive = (_CoreNavigator$getRou = CoreNavigator.getRouteBooleanParam('recursive')) !== null && _CoreNavigator$getRou !== void 0 ? _CoreNavigator$getRou : true;\n        _this.areaNameKey = CoreNavigator.getRouteParam('areaNameKey') || '';\n        // Pass the the following parameters to avoid fetching the first page.\n        _this.componentName = CoreNavigator.getRouteParam('componentName');\n        _this.itemType = CoreNavigator.getRouteParam('itemType');\n        _this.items = CoreNavigator.getRouteParam('items') || [];\n        _this.nextPage = CoreNavigator.getRouteNumberParam('nextPage') || 0;\n        _this.canLoadMore = CoreNavigator.getRouteBooleanParam('canLoadMore') || false;\n        try {\n          if (!_this.componentName || !_this.itemType || !_this.items.length || _this.nextPage == 0) {\n            yield _this.fetchData(true);\n          }\n          if (_this.componentName && _this.itemType) {\n            _this.areaComponent = yield CoreTagAreaDelegate.getComponent(_this.componentName, _this.itemType);\n          }\n        } finally {\n          _this.loaded = true;\n        }\n      }));\n    })();\n  }\n  /**\n   * Fetch next page of the tag index area.\n   *\n   * @param refresh Whether to refresh the data or fetch a new page.\n   * @returns Resolved when done.\n   */\n  fetchData(refresh = false) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.loadMoreError = false;\n      const page = refresh ? 0 : _this2.nextPage;\n      try {\n        const areas = yield CoreTag.getTagIndexPerArea(_this2.tagId, _this2.tagName, _this2.collectionId, _this2.areaId, _this2.fromContextId, _this2.contextId, _this2.recursive, page);\n        const area = areas[0];\n        const items = yield CoreTagAreaDelegate.parseContent(area.component, area.itemtype, area.content);\n        if (!items || !items.length) {\n          // Tag area not supported.\n          throw Translate.instant('core.tag.errorareanotsupported');\n        }\n        if (page == 0) {\n          _this2.items = items;\n        } else {\n          _this2.items.push(...items);\n        }\n        _this2.componentName = area.component;\n        _this2.itemType = area.itemtype;\n        _this2.areaNameKey = CoreTagAreaDelegate.getDisplayNameKey(area.component, area.itemtype);\n        _this2.canLoadMore = !!area.nextpageurl;\n        _this2.nextPage = page + 1;\n      } catch (error) {\n        _this2.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n        CoreDomUtils.showErrorModalDefault(error, 'Error loading tag index');\n      }\n    })();\n  }\n  /**\n   * Load more items.\n   *\n   * @param infiniteComplete Infinite scroll complete function.\n   * @returns Resolved when done.\n   */\n  loadMore(infiniteComplete) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this3.fetchData();\n      } finally {\n        infiniteComplete === null || infiniteComplete === void 0 || infiniteComplete();\n      }\n    })();\n  }\n  /**\n   * Refresh data.\n   *\n   * @param refresher Refresher.\n   */\n  refreshData(refresher) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield CoreTag.invalidateTagIndexPerArea(_this4.tagId, _this4.tagName, _this4.collectionId, _this4.areaId, _this4.fromContextId, _this4.contextId, _this4.recursive);\n      } finally {\n        try {\n          yield _this4.fetchData(true);\n        } finally {\n          refresher === null || refresher === void 0 || refresher.complete();\n        }\n      }\n    })();\n  }\n}\n_class = CoreTagIndexAreaPage;\n_class.ɵfac = function CoreTagIndexAreaPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-tag-index-area\"]],\n  decls: 17,\n  vars: 25,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [1, \"limited-width\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [3, \"component\", \"data\"], [3, \"enabled\", \"error\", \"action\"]],\n  template: function CoreTagIndexAreaPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵpipe(9, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"ion-content\", 2)(11, \"ion-refresher\", 3);\n      i0.ɵɵlistener(\"ionRefresh\", function CoreTagIndexAreaPage_Template_ion_refresher_ionRefresh_11_listener($event) {\n        return ctx.refreshData($event.target);\n      });\n      i0.ɵɵelement(12, \"ion-refresher-content\", 4);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"core-loading\", 5);\n      i0.ɵɵelement(15, \"core-dynamic-component\", 6);\n      i0.ɵɵelementStart(16, \"core-infinite-loading\", 7);\n      i0.ɵɵlistener(\"action\", function CoreTagIndexAreaPage_Template_core_infinite_loading_action_16_listener($event) {\n        return ctx.loadMore($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 9, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 11, \"core.tag.itemstaggedwith\", i0.ɵɵpureFunction1(21, _c1, i0.ɵɵpureFunction2(18, _c0, i0.ɵɵpipeBind1(9, 14, ctx.areaNameKey), ctx.tagName))), \" \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(13, 16, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"component\", ctx.areaComponent)(\"data\", i0.ɵɵpureFunction1(23, _c2, ctx.items));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"enabled\", ctx.canLoadMore)(\"error\", ctx.loadMoreError);\n    }\n  },\n  dependencies: [i2.CoreDynamicComponent, i3.CoreInfiniteLoadingComponent, i4.CoreLoadingComponent, i5.CoreContentDirective, i6.IonButtons, i6.IonContent, i6.IonHeader, i6.IonRefresher, i6.IonRefresherContent, i6.IonTitle, i6.IonToolbar, i6.IonBackButton, i7.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreDomUtils","CoreTag","CoreTagAreaDelegate","Translate","CoreNavigator","CoreTagIndexAreaPage","constructor","route","tagId","tagName","collectionId","areaId","fromContextId","contextId","recursive","areaNameKey","loaded","items","nextPage","canLoadMore","loadMoreError","ngOnInit","_this","_asyncToGenerator","queryParams","subscribe","_CoreNavigator$getRou","getRouteNumberParam","getRouteParam","getRouteBooleanParam","componentName","itemType","length","fetchData","areaComponent","getComponent","refresh","_this2","page","areas","getTagIndexPerArea","area","parseContent","component","itemtype","content","instant","push","getDisplayNameKey","nextpageurl","error","showErrorModalDefault","loadMore","infiniteComplete","_this3","refreshData","refresher","_this4","invalidateTagIndexPerArea","complete","i0","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","decls","vars","consts","template","CoreTagIndexAreaPage_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","CoreTagIndexAreaPage_Template_ion_refresher_ionRefresh_11_listener","$event","target","CoreTagIndexAreaPage_Template_core_infinite_loading_action_16_listener","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵpureFunction1","_c1","ɵɵpureFunction2","_c0","ɵɵpropertyInterpolate","_c2"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/tag/pages/index-area/index-area.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/tag/pages/index-area/index-area.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Type } from '@angular/core';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTag } from '@features/tag/services/tag';\nimport { ActivatedRoute } from '@angular/router';\nimport { CoreTagAreaDelegate } from '../../services/tag-area-delegate';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays the tag index area.\n */\n@Component({\n    selector: 'page-core-tag-index-area',\n    templateUrl: 'index-area.html',\n})\nexport class CoreTagIndexAreaPage implements OnInit {\n\n    tagId = 0;\n    tagName = '';\n    collectionId = 0;\n    areaId = 0;\n    fromContextId = 0;\n    contextId = 0;\n    recursive = true;\n\n    areaNameKey = '';\n    loaded = false;\n    componentName?: string;\n    itemType?: string;\n    items: unknown[] = [];\n    nextPage = 0;\n    canLoadMore = false;\n    areaComponent?: Type<unknown>;\n    loadMoreError = false;\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) { }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.route.queryParams.subscribe(async () => {\n            this.loaded = false;\n\n            this.tagId = CoreNavigator.getRouteNumberParam('tagId') || this.tagId;\n            this.tagName = CoreNavigator.getRouteParam('tagName') || this.tagName;\n            this.collectionId = CoreNavigator.getRouteNumberParam('collectionId') || this.collectionId;\n            this.areaId = CoreNavigator.getRouteNumberParam('areaId') || this.areaId;\n            this.fromContextId = CoreNavigator.getRouteNumberParam('fromContextId') || this.fromContextId;\n            this.contextId = CoreNavigator.getRouteNumberParam('contextId') || this.contextId;\n            this.recursive = CoreNavigator.getRouteBooleanParam('recursive') ?? true;\n\n            this.areaNameKey = CoreNavigator.getRouteParam('areaNameKey') || '';\n            // Pass the the following parameters to avoid fetching the first page.\n            this.componentName = CoreNavigator.getRouteParam('componentName');\n            this.itemType = CoreNavigator.getRouteParam('itemType');\n            this.items = CoreNavigator.getRouteParam<unknown[]>('items') || [];\n            this.nextPage = CoreNavigator.getRouteNumberParam('nextPage') || 0;\n            this.canLoadMore = CoreNavigator.getRouteBooleanParam('canLoadMore') || false;\n\n            try {\n                if (!this.componentName || !this.itemType || !this.items.length || this.nextPage == 0) {\n                    await this.fetchData(true);\n                }\n\n                if (this.componentName && this.itemType) {\n                    this.areaComponent = await CoreTagAreaDelegate.getComponent(this.componentName, this.itemType);\n                }\n            } finally {\n                this.loaded = true;\n            }\n        });\n    }\n\n    /**\n     * Fetch next page of the tag index area.\n     *\n     * @param refresh Whether to refresh the data or fetch a new page.\n     * @returns Resolved when done.\n     */\n    async fetchData(refresh: boolean = false): Promise<void> {\n        this.loadMoreError = false;\n        const page = refresh ? 0 : this.nextPage;\n\n        try {\n            const areas = await CoreTag.getTagIndexPerArea(\n                this.tagId,\n                this.tagName,\n                this.collectionId,\n                this.areaId,\n                this.fromContextId,\n                this.contextId,\n                this.recursive,\n                page,\n            );\n            const area = areas[0];\n\n            const items = await CoreTagAreaDelegate.parseContent(area.component, area.itemtype, area.content);\n            if (!items || !items.length) {\n                // Tag area not supported.\n                throw Translate.instant('core.tag.errorareanotsupported');\n            }\n\n            if (page == 0) {\n                this.items = items;\n            } else {\n                this.items.push(...items);\n            }\n            this.componentName = area.component;\n            this.itemType = area.itemtype;\n            this.areaNameKey = CoreTagAreaDelegate.getDisplayNameKey(area.component, area.itemtype);\n            this.canLoadMore = !!area.nextpageurl;\n            this.nextPage = page + 1;\n        } catch (error) {\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading tag index');\n        }\n    }\n\n    /**\n     * Load more items.\n     *\n     * @param infiniteComplete Infinite scroll complete function.\n     * @returns Resolved when done.\n     */\n    async loadMore(infiniteComplete?: () => void): Promise<void> {\n        try {\n            await this.fetchData();\n        } finally {\n            infiniteComplete?.();\n        }\n    }\n\n    /**\n     * Refresh data.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshData(refresher?: HTMLIonRefresherElement): Promise<void> {\n        try {\n            await CoreTag.invalidateTagIndexPerArea(\n                this.tagId,\n                this.tagName,\n                this.collectionId,\n                this.areaId,\n                this.fromContextId,\n                this.contextId,\n                this.recursive,\n            );\n        } finally {\n            try {\n                await this.fetchData(true);\n            } finally {\n                refresher?.complete();\n            }\n        }\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                {{ 'core.tag.itemstaggedwith' | translate: { $a: {tagarea: areaNameKey | translate, tag: tagName} } }}\n            </h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content class=\"limited-width\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refreshData($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"loaded\">\n        <core-dynamic-component [component]=\"areaComponent\" [data]=\"{items: items}\" />\n        <core-infinite-loading [enabled]=\"canLoadMore\" (action)=\"loadMore($event)\" [error]=\"loadMoreError\" />\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}