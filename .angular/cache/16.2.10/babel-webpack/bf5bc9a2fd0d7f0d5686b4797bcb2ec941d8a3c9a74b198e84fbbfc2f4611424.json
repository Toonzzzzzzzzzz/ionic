{"ast":null,"code":"var _class;\nimport { AddonModDataFieldPluginBaseComponent } from '../../../classes/base-field-plugin-component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../../core/components/input-errors/input-errors\";\nimport * as i3 from \"../../../../../../core/components/mark-required/mark-required\";\nimport * as i4 from \"../../../../../../core/directives/link\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ionic/angular\";\nfunction AddonModDataFieldUrlComponent_span_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"core-mark-required\", ctx_r2.field.required);\n  }\n}\nfunction AddonModDataFieldUrlComponent_span_0_core_input_errors_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-input-errors\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"control\", ctx_r3.form.controls[\"f_\" + ctx_r3.field.id])(\"errorText\", ctx_r3.error);\n  }\n}\nfunction AddonModDataFieldUrlComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtemplate(1, AddonModDataFieldUrlComponent_span_0_span_1_Template, 1, 1, \"span\", 3);\n    i0.ɵɵelement(2, \"ion-input\", 4);\n    i0.ɵɵtemplate(3, AddonModDataFieldUrlComponent_span_0_core_input_errors_3_Template, 1, 2, \"core-input-errors\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", \"f_\" + ctx_r0.field.id)(\"placeholder\", ctx_r0.field.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.error && ctx_r0.editMode);\n  }\n}\nfunction AddonModDataFieldUrlComponent_ng_container_1_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"href\", ctx_r4.value.content, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.displayValue);\n  }\n}\nfunction AddonModDataFieldUrlComponent_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.displayValue);\n  }\n}\nfunction AddonModDataFieldUrlComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonModDataFieldUrlComponent_ng_container_1_a_1_Template, 2, 2, \"a\", 8);\n    i0.ɵɵtemplate(2, AddonModDataFieldUrlComponent_ng_container_1_span_2_Template, 2, 1, \"span\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.autoLink);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.autoLink);\n  }\n}\n/**\n * Component to render data url field.\n */\nexport class AddonModDataFieldUrlComponent extends AddonModDataFieldPluginBaseComponent {\n  constructor() {\n    super(...arguments);\n    this.autoLink = false;\n    this.displayValue = '';\n  }\n  /**\n   * @inheritdoc\n   */\n  init() {\n    if (this.displayMode) {\n      return;\n    }\n    let value;\n    if (this.editMode && this.value) {\n      value = this.value.content;\n    }\n    this.addControl('f_' + this.field.id, value);\n  }\n  /**\n   * Calculate data for show or list mode.\n   */\n  calculateShowListData() {\n    if (!this.value || !this.value.content) {\n      return;\n    }\n    const url = this.value.content;\n    const text = this.field.param2 || this.value.content1; // Param2 forces the text to display.\n    this.autoLink = parseInt(this.field.param1, 10) === 1;\n    if (this.autoLink) {\n      this.displayValue = text || url;\n    } else {\n      // No auto link, always display the URL.\n      this.displayValue = url;\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  updateValue(value) {\n    super.updateValue(value);\n    if (this.displayMode) {\n      this.calculateShowListData();\n    }\n  }\n}\n_class = AddonModDataFieldUrlComponent;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModDataFieldUrlComponent_BaseFactory;\n  return function AddonModDataFieldUrlComponent_Factory(t) {\n    return (ɵAddonModDataFieldUrlComponent_BaseFactory || (ɵAddonModDataFieldUrlComponent_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-data-field-url\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"formGroup\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"formGroup\"], [\"class\", \"core-mark-required\", 3, \"core-mark-required\", 4, \"ngIf\"], [\"type\", \"url\", 3, \"formControlName\", \"placeholder\"], [3, \"control\", \"errorText\", 4, \"ngIf\"], [1, \"core-mark-required\", 3, \"core-mark-required\"], [3, \"control\", \"errorText\"], [\"core-link\", \"\", \"capture\", \"true\", 3, \"href\", 4, \"ngIf\"], [\"core-link\", \"\", \"capture\", \"true\", 3, \"href\"]],\n  template: function AddonModDataFieldUrlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddonModDataFieldUrlComponent_span_0_Template, 4, 5, \"span\", 0);\n      i0.ɵɵtemplate(1, AddonModDataFieldUrlComponent_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.inputMode && ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.displayMode && ctx.value && ctx.value.content);\n    }\n  },\n  dependencies: [i1.NgIf, i2.CoreInputErrorsComponent, i3.CoreMarkRequiredComponent, i4.CoreLinkDirective, i5.NgControlStatus, i5.NgControlStatusGroup, i6.IonInput, i6.TextValueAccessor, i5.FormGroupDirective, i5.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonModDataFieldPluginBaseComponent","i0","ɵɵelement","ɵɵproperty","ctx_r2","field","required","ctx_r3","form","controls","id","error","ɵɵelementStart","ɵɵtemplate","AddonModDataFieldUrlComponent_span_0_span_1_Template","AddonModDataFieldUrlComponent_span_0_core_input_errors_3_Template","ɵɵelementEnd","ctx_r0","ɵɵadvance","editMode","name","ɵɵtext","ctx_r4","value","content","ɵɵsanitizeUrl","ɵɵtextInterpolate","displayValue","ctx_r5","ɵɵelementContainerStart","AddonModDataFieldUrlComponent_ng_container_1_a_1_Template","AddonModDataFieldUrlComponent_ng_container_1_span_2_Template","ɵɵelementContainerEnd","ctx_r1","autoLink","AddonModDataFieldUrlComponent","constructor","init","displayMode","addControl","calculateShowListData","url","text","param2","content1","parseInt","param1","updateValue","t","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonModDataFieldUrlComponent_Template","rf","ctx","AddonModDataFieldUrlComponent_span_0_Template","AddonModDataFieldUrlComponent_ng_container_1_Template","inputMode"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/url/component/url.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/url/component/addon-mod-data-field-url.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonModDataEntryField } from '@addons/mod/data/services/data';\nimport { Component } from '@angular/core';\nimport { AddonModDataFieldPluginBaseComponent } from '../../../classes/base-field-plugin-component';\n\n/**\n * Component to render data url field.\n */\n@Component({\n    selector: 'addon-mod-data-field-url',\n    templateUrl: 'addon-mod-data-field-url.html',\n})\nexport class AddonModDataFieldUrlComponent extends AddonModDataFieldPluginBaseComponent {\n\n    autoLink = false;\n    displayValue = '';\n\n    /**\n     * @inheritdoc\n     */\n    protected init(): void {\n        if (this.displayMode) {\n            return;\n        }\n\n        let value: string | undefined;\n        if (this.editMode && this.value) {\n            value = this.value.content;\n        }\n\n        this.addControl('f_' + this.field.id, value);\n    }\n\n    /**\n     * Calculate data for show or list mode.\n     */\n    protected calculateShowListData(): void {\n        if (!this.value || !this.value.content) {\n            return;\n        }\n\n        const url = this.value.content;\n        const text = this.field.param2 || this.value.content1; // Param2 forces the text to display.\n\n        this.autoLink = parseInt(this.field.param1, 10) === 1;\n\n        if (this.autoLink) {\n            this.displayValue = text || url;\n        } else {\n            // No auto link, always display the URL.\n            this.displayValue = url;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected updateValue(value?: Partial<AddonModDataEntryField>): void {\n        super.updateValue(value);\n\n        if (this.displayMode) {\n            this.calculateShowListData();\n        }\n    }\n\n}\n","<span *ngIf=\"inputMode && form\" [formGroup]=\"form\">\n    <span *ngIf=\"editMode\" [core-mark-required]=\"field.required\" class=\"core-mark-required\"></span>\n    <ion-input type=\"url\" [formControlName]=\"'f_'+field.id\" [placeholder]=\"field.name\" />\n    <core-input-errors *ngIf=\"error && editMode\" [control]=\"form.controls['f_'+field.id]\" [errorText]=\"error\" />\n</span>\n\n<ng-container *ngIf=\"displayMode && value && value.content\">\n    <a *ngIf=\"autoLink\" [href]=\"value.content\" core-link capture=\"true\">{{ displayValue }}</a>\n    <span *ngIf=\"!autoLink\">{{ displayValue }}</span>\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}