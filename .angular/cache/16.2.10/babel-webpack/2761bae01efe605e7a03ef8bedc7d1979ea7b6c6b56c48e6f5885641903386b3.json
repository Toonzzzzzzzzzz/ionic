{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreCourseModuleMainActivityComponent } from '@features/course/classes/main-activity-component';\nimport { CoreH5PHelper } from '@features/h5p/classes/helper';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { CoreXAPIOffline } from '@features/xapi/services/offline';\nimport { CoreXAPI } from '@features/xapi/services/xapi';\nimport { CoreNetwork } from '@services/network';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModH5PActivity, AddonModH5PActivityProvider, MOD_H5PACTIVITY_STATE_ID } from '../../services/h5pactivity';\nimport { AddonModH5PActivitySync, AddonModH5PActivitySyncProvider } from '../../services/h5pactivity-sync';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { AddonModH5PActivityModuleHandlerService } from '../../services/handlers/module';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@features/course/pages/contents/contents\";\nfunction AddonModH5PActivityIndexComponent_core_context_menu_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 10);\n    i0.ɵɵlistener(\"action\", function AddonModH5PActivityIndexComponent_core_context_menu_item_2_Template_core_context_menu_item_action_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.viewMyAttempts());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"priority\", 1000)(\"content\", i0.ɵɵpipeBind1(1, 2, \"addon.mod_h5pactivity.attempts_report\"));\n  }\n}\nfunction AddonModH5PActivityIndexComponent_core_context_menu_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 10);\n    i0.ɵɵlistener(\"action\", function AddonModH5PActivityIndexComponent_core_context_menu_item_3_Template_core_context_menu_item_action_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.viewAllAttempts());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"priority\", 1000)(\"content\", i0.ɵɵpipeBind1(1, 2, \"addon.mod_h5pactivity.attempts_report\"));\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_card_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 11)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 12);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(5, 2, \"core.h5p.offlinedisabled\"), \" \", i0.ɵɵpipeBind1(6, 4, \"addon.mod_h5pactivity.offlinedisabledwarning\"), \" \");\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_card_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 11)(1, \"ion-item\");\n    i0.ɵɵelement(2, \"ion-icon\", 12);\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 1, \"addon.mod_h5pactivity.previewmode\"), \" \");\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_list_11_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 16)(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, ctx_r10.stateMessage));\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_list_11_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 17);\n    i0.ɵɵlistener(\"click\", function AddonModH5PActivityIndexComponent_ion_list_11_ion_button_2_Template_ion_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.downloadAndPlay($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.mod_h5pactivity.downloadh5pfile\"), \" \");\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r15.progressMessage));\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_core_progress_bar_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-progress-bar\", 22);\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"progress\", ctx_r16.percentage)(\"a11yText\", ctx_r16.progressMessage);\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 18)(1, \"ion-label\");\n    i0.ɵɵelement(2, \"ion-spinner\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵtemplate(4, AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_p_4_Template, 3, 3, \"p\", 19);\n    i0.ɵɵtemplate(5, AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_core_progress_bar_5_Template, 1, 2, \"core-progress-bar\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(3, 3, \"core.loading\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.progressMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.showPercentage);\n  }\n}\nfunction AddonModH5PActivityIndexComponent_ion_list_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, AddonModH5PActivityIndexComponent_ion_list_11_ion_item_1_Template, 4, 3, \"ion-item\", 13);\n    i0.ɵɵtemplate(2, AddonModH5PActivityIndexComponent_ion_list_11_ion_button_2_Template, 3, 3, \"ion-button\", 14);\n    i0.ɵɵtemplate(3, AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_Template, 6, 5, \"ion-item\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.stateMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.downloading && ctx_r4.needsDownload);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.downloading);\n  }\n}\nfunction AddonModH5PActivityIndexComponent_core_h5p_iframe_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-h5p-iframe\", 23);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"fileUrl\", ctx_r5.fileUrl)(\"displayOptions\", ctx_r5.displayOptions)(\"onlinePlayerUrl\", ctx_r5.onlinePlayerUrl)(\"trackComponent\", ctx_r5.trackComponent)(\"contextId\", ctx_r5.h5pActivity == null ? null : ctx_r5.h5pActivity.context)(\"enableInAppFullscreen\", true)(\"saveFreq\", ctx_r5.saveFreq)(\"state\", ctx_r5.contentState);\n  }\n}\n/**\n * Component that displays an H5P activity entry page.\n */\nexport class AddonModH5PActivityIndexComponent extends CoreCourseModuleMainActivityComponent {\n  constructor(content, courseContentsPage) {\n    super('AddonModH5PActivityIndexComponent', content, courseContentsPage);\n    this.content = content;\n    this.onActivityFinish = new EventEmitter();\n    this.component = AddonModH5PActivityProvider.COMPONENT;\n    this.pluginName = 'h5pactivity';\n    this.downloading = false; // Whether the H5P file is being downloaded.\n    this.needsDownload = false; // Whether the file needs to be downloaded.\n    this.showPercentage = false; // Whether to show the percentage.\n    this.playing = false; // Whether the package is being played.\n    this.siteCanDownload = false;\n    this.hasOffline = false;\n    this.isOpeningPage = false;\n    this.canViewAllAttempts = false;\n    this.saveStateEnabled = false;\n    this.fetchContentDefaultError = 'addon.mod_h5pactivity.errorgetactivity';\n    this.syncEventName = AddonModH5PActivitySyncProvider.AUTO_SYNCED;\n    this.checkCompletionAfterLog = false; // It's called later, when the user plays the package.\n    this.site = CoreSites.getRequiredCurrentSite();\n    this.siteCanDownload = this.site.canDownloadFiles() && !CoreH5P.isOfflineDisabledInSite();\n    // Listen for messages from the iframe.\n    this.messageListenerFunction = event => this.onIframeMessage(event);\n    window.addEventListener('message', this.messageListenerFunction);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _superprop_getNgOnInit = () => super.ngOnInit,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      _superprop_getNgOnInit().call(_this);\n      _this.loadContent(false, true);\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  fetchContent(refresh, sync = false, showErrors = false) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var _this2$accessInfo, _this2$accessInfo2, _this2$deployedFile;\n      // Always show loading and stop playing, the package needs to be reloaded with the latest data.\n      _this2.showLoading = true;\n      _this2.playing = false;\n      _this2.h5pActivity = yield AddonModH5PActivity.getH5PActivity(_this2.courseId, _this2.module.id, {\n        siteId: _this2.siteId\n      });\n      _this2.dataRetrieved.emit(_this2.h5pActivity);\n      _this2.description = _this2.h5pActivity.intro;\n      _this2.displayOptions = CoreH5PHelper.decodeDisplayOptions(_this2.h5pActivity.displayoptions);\n      if (sync) {\n        yield _this2.syncActivity(showErrors);\n      }\n      yield Promise.all([_this2.checkHasOffline(), _this2.fetchAccessInfo(), _this2.fetchDeployedFileData()]);\n      yield _this2.loadContentState(); // Loading the state requires the access info.\n      _this2.trackComponent = (_this2$accessInfo = _this2.accessInfo) !== null && _this2$accessInfo !== void 0 && _this2$accessInfo.cansubmit ? AddonModH5PActivityProvider.TRACK_COMPONENT : '';\n      _this2.canViewAllAttempts = !!_this2.h5pActivity.enabletracking && !!((_this2$accessInfo2 = _this2.accessInfo) !== null && _this2$accessInfo2 !== void 0 && _this2$accessInfo2.canreviewattempts) && AddonModH5PActivity.canGetUsersAttemptsInSite();\n      if (_this2.h5pActivity.package && _this2.h5pActivity.package[0]) {\n        // The online player should use the original file, not the trusted one.\n        _this2.onlinePlayerUrl = CoreH5P.h5pPlayer.calculateOnlinePlayerUrl(_this2.site.getURL(), _this2.h5pActivity.package[0].fileurl, _this2.displayOptions, _this2.trackComponent);\n      }\n      if (!_this2.siteCanDownload || _this2.state == CoreConstants.DOWNLOADED) {\n        // Cannot download the file or already downloaded, play the package directly.\n        _this2.play();\n      } else if ((_this2.state == CoreConstants.NOT_DOWNLOADED || _this2.state == CoreConstants.OUTDATED) && CoreNetwork.isOnline() && (_this2$deployedFile = _this2.deployedFile) !== null && _this2$deployedFile !== void 0 && _this2$deployedFile.filesize && CoreFilepool.shouldDownload(_this2.deployedFile.filesize)) {\n        // Package is small, download it automatically. Don't block this function for this.\n        _this2.downloadAutomatically();\n      }\n    })();\n  }\n  /**\n   * Fetch the access info and store it in the right variables.\n   *\n   * @returns Promise resolved when done.\n   */\n  checkHasOffline() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this3.h5pActivity) {\n        return;\n      }\n      _this3.hasOffline = yield CoreXAPIOffline.contextHasData(_this3.h5pActivity.context, _this3.siteId);\n    })();\n  }\n  /**\n   * Fetch the access info and store it in the right variables.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchAccessInfo() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.h5pActivity) {\n        return;\n      }\n      _this4.accessInfo = yield AddonModH5PActivity.getAccessInformation(_this4.h5pActivity.id, {\n        cmId: _this4.module.id,\n        siteId: _this4.siteId\n      });\n    })();\n  }\n  /**\n   * Fetch the deployed file data if needed and store it in the right variables.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchDeployedFileData() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.siteCanDownload || !_this5.h5pActivity) {\n        // Cannot download the file, no need to fetch the file data.\n        return;\n      }\n      _this5.deployedFile = yield AddonModH5PActivity.getDeployedFile(_this5.h5pActivity, {\n        displayOptions: _this5.displayOptions,\n        siteId: _this5.siteId\n      });\n      _this5.fileUrl = CoreFileHelper.getFileUrl(_this5.deployedFile);\n      // Listen for changes in the state.\n      const eventName = yield CoreFilepool.getFileEventNameByUrl(_this5.site.getId(), _this5.fileUrl);\n      if (!_this5.observer) {\n        _this5.observer = CoreEvents.on(eventName, () => {\n          _this5.calculateFileState();\n        });\n      }\n      yield _this5.calculateFileState();\n    })();\n  }\n  /**\n   * Load the content's state (if enabled and there's any).\n   */\n  loadContentState() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      var _contentStateObj$h5p;\n      if (!_this6.h5pActivity || !_this6.accessInfo || !AddonModH5PActivity.isSaveStateEnabled(_this6.h5pActivity, _this6.accessInfo)) {\n        _this6.saveStateEnabled = false;\n        return;\n      }\n      _this6.saveStateEnabled = true;\n      _this6.saveFreq = _this6.h5pActivity.savestatefreq;\n      const contentState = yield CoreXAPI.getState(AddonModH5PActivityProvider.TRACK_COMPONENT, _this6.h5pActivity.context, MOD_H5PACTIVITY_STATE_ID, {\n        appComponent: AddonModH5PActivityProvider.COMPONENT,\n        appComponentId: _this6.h5pActivity.coursemodule,\n        readingStrategy: 3 /* CoreSitesReadingStrategy.PREFER_NETWORK */\n      });\n\n      if (contentState === null) {\n        return;\n      }\n      const contentStateObj = CoreTextUtils.parseJSON(contentState, {\n        h5p: '{}'\n      });\n      // The H5P state doesn't always use JSON, so an h5p property was added to jsonize it.\n      _this6.contentState = (_contentStateObj$h5p = contentStateObj.h5p) !== null && _contentStateObj$h5p !== void 0 ? _contentStateObj$h5p : '{}';\n    })();\n  }\n  /**\n   * Calculate the state of the deployed file.\n   *\n   * @returns Promise resolved when done.\n   */\n  calculateFileState() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this7.fileUrl || !_this7.deployedFile) {\n        return;\n      }\n      _this7.state = yield CoreFilepool.getFileStateByUrl(_this7.site.getId(), _this7.fileUrl, _this7.deployedFile.timemodified);\n      _this7.showFileState();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  invalidateContent() {\n    return AddonModH5PActivity.invalidateActivityData(this.courseId);\n  }\n  /**\n   * Displays some data based on the state of the main file.\n   */\n  showFileState() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      if (_this8.state == CoreConstants.OUTDATED) {\n        _this8.stateMessage = 'addon.mod_h5pactivity.filestateoutdated';\n        _this8.needsDownload = true;\n      } else if (_this8.state == CoreConstants.NOT_DOWNLOADED) {\n        _this8.stateMessage = 'addon.mod_h5pactivity.filestatenotdownloaded';\n        _this8.needsDownload = true;\n      } else if (_this8.state == CoreConstants.DOWNLOADING) {\n        _this8.stateMessage = '';\n        if (!_this8.downloading) {\n          // It's being downloaded right now but the view isn't tracking it. \"Restore\" the download.\n          yield _this8.downloadDeployedFile();\n          _this8.play();\n        }\n      } else {\n        _this8.stateMessage = '';\n        _this8.needsDownload = false;\n      }\n    })();\n  }\n  /**\n   * Download the file and play it.\n   *\n   * @param event Click event.\n   * @returns Promise resolved when done.\n   */\n  downloadAndPlay(event) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      event === null || event === void 0 || event.preventDefault();\n      event === null || event === void 0 || event.stopPropagation();\n      if (!_this9.deployedFile) {\n        return;\n      }\n      if (!CoreNetwork.isOnline()) {\n        CoreDomUtils.showErrorModal('core.networkerrormsg', true);\n        return;\n      }\n      try {\n        // Confirm the download if needed.\n        yield CoreDomUtils.confirmDownloadSize({\n          size: _this9.deployedFile.filesize || 0,\n          total: true\n        });\n        yield _this9.downloadDeployedFile();\n        if (!_this9.isDestroyed) {\n          _this9.play();\n        }\n      } catch (error) {\n        if (CoreDomUtils.isCanceledError(error) || _this9.isDestroyed) {\n          // User cancelled or view destroyed, stop.\n          return;\n        }\n        CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n      }\n    })();\n  }\n  /**\n   * Download the file automatically.\n   *\n   * @returns Promise resolved when done.\n   */\n  downloadAutomatically() {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this10.downloadDeployedFile();\n        if (!_this10.isDestroyed) {\n          _this10.play();\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n      }\n    })();\n  }\n  /**\n   * Download athe H5P deployed file or restores an ongoing download.\n   *\n   * @returns Promise resolved when done.\n   */\n  downloadDeployedFile() {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this11.fileUrl || !_this11.deployedFile) {\n        return;\n      }\n      const deployedFile = _this11.deployedFile;\n      _this11.downloading = true;\n      _this11.progressMessage = 'core.downloading';\n      // Delete offline states when downloading the package because it means the package has changed or user deleted it.\n      _this11.deleteOfflineStates();\n      try {\n        yield CoreFilepool.downloadUrl(_this11.site.getId(), _this11.fileUrl, false, _this11.component, _this11.componentId, deployedFile.timemodified, data => {\n          if (!data) {\n            return;\n          }\n          _this11.percentage = undefined;\n          _this11.showPercentage = false;\n          if (data.message) {\n            // Show a message.\n            _this11.progressMessage = data.message;\n          } else if (data.loaded !== undefined) {\n            // Downloading or unzipping.\n            const totalSize = _this11.progressMessage == 'core.downloading' ? deployedFile.filesize : data.total;\n            if (totalSize !== undefined) {\n              const percentageNumber = Number(data.loaded / totalSize) * 100;\n              _this11.percentage = percentageNumber.toFixed(1);\n              _this11.showPercentage = percentageNumber >= 0 && percentageNumber <= 100;\n            }\n          }\n        });\n      } finally {\n        _this11.progressMessage = undefined;\n        _this11.percentage = undefined;\n        _this11.showPercentage = false;\n        _this11.downloading = false;\n      }\n    })();\n  }\n  /**\n   * Play the package.\n   */\n  play() {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this12.h5pActivity) {\n        return;\n      }\n      _this12.playing = true;\n      // Mark the activity as viewed.\n      yield AddonModH5PActivity.logView(_this12.h5pActivity.id, _this12.siteId);\n      _this12.checkCompletion();\n      _this12.analyticsLogEvent('mod_h5pactivity_view_h5pactivity');\n    })();\n  }\n  /**\n   * Go to view user attempts.\n   */\n  viewMyAttempts() {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      _this13.isOpeningPage = true;\n      const userId = CoreSites.getCurrentSiteUserId();\n      try {\n        yield CoreNavigator.navigateToSitePath(`${AddonModH5PActivityModuleHandlerService.PAGE_NAME}/${_this13.courseId}/${_this13.module.id}/userattempts/${userId}`);\n      } finally {\n        _this13.isOpeningPage = false;\n      }\n    })();\n  }\n  /**\n   * Go to view all user attempts.\n   */\n  viewAllAttempts() {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      _this14.isOpeningPage = true;\n      try {\n        yield CoreNavigator.navigateToSitePath(`${AddonModH5PActivityModuleHandlerService.PAGE_NAME}/${_this14.courseId}/${_this14.module.id}/users`);\n      } finally {\n        _this14.isOpeningPage = false;\n      }\n    })();\n  }\n  /**\n   * Treat an iframe message event.\n   *\n   * @param event Event.\n   * @returns Promise resolved when done.\n   */\n  onIframeMessage(event) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      const data = event.data;\n      if (!data || !_this15.h5pActivity) {\n        return;\n      }\n      if (CoreXAPI.canPostStatementsInSite(_this15.site) && _this15.isCurrentXAPIPostStatement(data)) {\n        _this15.postStatements(data);\n      } else if (_this15.saveStateEnabled && _this15.isCurrentXAPIState(data, 'xapi_post_state') && _this15.isXAPIPostState(data)) {\n        _this15.postState(data);\n      } else if (_this15.saveStateEnabled && _this15.isCurrentXAPIState(data, 'xapi_delete_state')) {\n        _this15.deleteState(data);\n      }\n    })();\n  }\n  /**\n   * Check if an event is an H5P event meant for this app.\n   *\n   * @param data Event data.\n   * @returns Whether it's an H5P event meant for this app.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isH5PEventForApp(data) {\n    return data.environment === 'moodleapp' && data.context === 'h5p';\n  }\n  /**\n   * Check if an activity ID (an IRI) belongs to the current activity.\n   *\n   * @param activityId Activity ID (IRI).\n   * @returns Whether it belongs to the current activity.\n   */\n  activityIdIsCurrentActivity(activityId) {\n    if (!activityId || !this.h5pActivity) {\n      return false;\n    }\n    if (!this.site.containsUrl(activityId)) {\n      // The event belongs to another site, weird scenario. Maybe some JS running in background.\n      return false;\n    }\n    const match = activityId.match(/xapi\\/activity\\/(\\d+)/);\n    return !!match && Number(match[1]) === this.h5pActivity.context;\n  }\n  /**\n   * Check if an event is an XAPI post statement of the current activity.\n   *\n   * @param data Event data.\n   * @returns Whether it's an XAPI post statement of the current activity.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isCurrentXAPIPostStatement(data) {\n    if (!this.h5pActivity) {\n      return false;\n    }\n    if (!this.isH5PEventForApp(data) || data.action !== 'xapi_post_statement' || !data.statements) {\n      return false;\n    }\n    // Check the event belongs to this activity.\n    return this.activityIdIsCurrentActivity(data.statements[0] && data.statements[0].object && data.statements[0].object.id);\n  }\n  /**\n   * Post statements.\n   *\n   * @param data Event data.\n   */\n  postStatements(data) {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this16.h5pActivity) {\n        return;\n      }\n      try {\n        const options = {\n          offline: _this16.hasOffline,\n          courseId: _this16.courseId,\n          extra: _this16.h5pActivity.name,\n          siteId: _this16.site.getId()\n        };\n        const sent = yield CoreXAPI.postStatements(_this16.h5pActivity.context, data.component, JSON.stringify(data.statements), options);\n        _this16.hasOffline = !sent;\n        _this16.deleteOfflineStates(); // Posting statements means attempt has finished, delete any offline state.\n        if (sent) {\n          try {\n            // Invalidate attempts.\n            yield AddonModH5PActivity.invalidateUserAttempts(_this16.h5pActivity.id, undefined, _this16.siteId);\n          } catch (_unused) {\n            // Ignore errors.\n          }\n          // Check if the H5P has ended. Final statements don't include a subContentId.\n          const hasEnded = data.statements.some(statement => !statement.object.id.includes('subContentId='));\n          if (hasEnded) {\n            _this16.onActivityFinish.emit(hasEnded);\n            _this16.checkCompletion();\n          }\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error sending tracking data.');\n      }\n    })();\n  }\n  /**\n   * Check if an event is an XAPI state event of the current activity.\n   *\n   * @param data Event data.\n   * @param action Action to check.\n   * @returns Whether it's an XAPI state event of the current activity.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isCurrentXAPIState(data, action) {\n    if (!this.h5pActivity) {\n      return false;\n    }\n    if (!this.isH5PEventForApp(data) || data.action !== action) {\n      return false;\n    }\n    // Check the event belongs to this activity.\n    return this.activityIdIsCurrentActivity(data.activityId);\n  }\n  /**\n   * Check if an xAPI state event data is a post state event.\n   *\n   * @param data Event data.\n   * @returns Whether it's an XAPI post state.\n   */\n  isXAPIPostState(data) {\n    return 'stateData' in data;\n  }\n  /**\n   * Post state.\n   *\n   * @param data Event data.\n   */\n  postState(data) {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        var _this17$h5pActivity;\n        const options = {\n          offline: _this17.hasOffline,\n          courseId: _this17.courseId,\n          extra: (_this17$h5pActivity = _this17.h5pActivity) === null || _this17$h5pActivity === void 0 ? void 0 : _this17$h5pActivity.name,\n          siteId: _this17.site.getId()\n        };\n        const sent = yield CoreXAPI.postState(data.component, data.activityId, data.agent, data.stateId, data.stateData, options);\n        _this17.hasOffline = !sent;\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error sending tracking data.');\n      }\n    })();\n  }\n  /**\n   * Delete state.\n   *\n   * @param data Event data.\n   */\n  deleteState(data) {\n    var _this18 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield CoreXAPI.deleteState(data.component, data.activityId, data.agent, data.stateId, {\n          siteId: _this18.site.getId()\n        });\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error sending tracking data.');\n      }\n    })();\n  }\n  /**\n   * Delete offline states for current activity.\n   */\n  deleteOfflineStates() {\n    var _this19 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this19.h5pActivity) {\n        return;\n      }\n      yield CoreUtils.ignoreErrors(CoreXAPIOffline.deleteStates(AddonModH5PActivityProvider.TRACK_COMPONENT, {\n        itemId: _this19.h5pActivity.context\n      }));\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  sync() {\n    var _this20 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this20.h5pActivity) {\n        return {\n          updated: false,\n          warnings: []\n        };\n      }\n      return AddonModH5PActivitySync.syncActivity(_this20.h5pActivity.context, _this20.site.getId());\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  autoSyncEventReceived() {\n    this.checkHasOffline();\n  }\n  /**\n   * Component destroyed.\n   */\n  ngOnDestroy() {\n    var _this$observer;\n    super.ngOnDestroy();\n    (_this$observer = this.observer) === null || _this$observer === void 0 || _this$observer.off();\n    // Wait a bit to make sure all messages have been received.\n    setTimeout(() => {\n      window.removeEventListener('message', this.messageListenerFunction);\n    }, 2000);\n  }\n}\n_class = AddonModH5PActivityIndexComponent;\n_class.ɵfac = function AddonModH5PActivityIndexComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.IonContent), i0.ɵɵdirectiveInject(i2.CoreCourseContentsPage, 8));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-h5pactivity-index\"]],\n  outputs: {\n    onActivityFinish: \"onActivityFinish\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 14,\n  vars: 19,\n  consts: [[\"slot\", \"end\"], [\"iconAction\", \"fas-chart-bar\", 3, \"priority\", \"content\", \"action\", 4, \"ngIf\"], [\"fill\", \"clear\", \"aria-haspopup\", \"true\", 3, \"click\"], [\"name\", \"fas-circle-info\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"hideUntil\"], [3, \"module\", \"description\", \"component\", \"componentId\", \"courseId\", \"hasDataToSync\", \"completionChanged\"], [\"class\", \"core-warning-card\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"fileUrl\", \"displayOptions\", \"onlinePlayerUrl\", \"trackComponent\", \"contextId\", \"enableInAppFullscreen\", \"saveFreq\", \"state\", 4, \"ngIf\"], [\"collapsible-footer\", \"\", 3, \"hidden\", \"courseId\", \"currentModuleId\"], [\"iconAction\", \"fas-chart-bar\", 3, \"priority\", \"content\", \"action\"], [1, \"core-warning-card\"], [\"name\", \"fas-triangle-exclamation\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap ion-margin\", \"expand\", \"block\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ion-text-center\", 4, \"ngIf\"], [1, \"ion-text-wrap\"], [\"expand\", \"block\", 1, \"ion-text-wrap\", \"ion-margin\", 3, \"click\"], [1, \"ion-text-center\"], [\"class\", \"item-heading\", 4, \"ngIf\"], [3, \"progress\", \"a11yText\", 4, \"ngIf\"], [1, \"item-heading\"], [3, \"progress\", \"a11yText\"], [3, \"fileUrl\", \"displayOptions\", \"onlinePlayerUrl\", \"trackComponent\", \"contextId\", \"enableInAppFullscreen\", \"saveFreq\", \"state\"]],\n  template: function AddonModH5PActivityIndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"core-navbar-buttons\", 0)(1, \"core-context-menu\");\n      i0.ɵɵtemplate(2, AddonModH5PActivityIndexComponent_core_context_menu_item_2_Template, 2, 4, \"core-context-menu-item\", 1);\n      i0.ɵɵtemplate(3, AddonModH5PActivityIndexComponent_core_context_menu_item_3_Template, 2, 4, \"core-context-menu-item\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-button\", 2);\n      i0.ɵɵlistener(\"click\", function AddonModH5PActivityIndexComponent_Template_ion_button_click_4_listener() {\n        return ctx.openModuleSummary();\n      });\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelement(6, \"ion-icon\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"core-loading\", 4)(8, \"core-course-module-info\", 5);\n      i0.ɵɵlistener(\"completionChanged\", function AddonModH5PActivityIndexComponent_Template_core_course_module_info_completionChanged_8_listener() {\n        return ctx.onCompletionChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, AddonModH5PActivityIndexComponent_ion_card_9_Template, 7, 6, \"ion-card\", 6);\n      i0.ɵɵtemplate(10, AddonModH5PActivityIndexComponent_ion_card_10_Template, 6, 3, \"ion-card\", 6);\n      i0.ɵɵtemplate(11, AddonModH5PActivityIndexComponent_ion_list_11_Template, 4, 3, \"ion-list\", 7);\n      i0.ɵɵtemplate(12, AddonModH5PActivityIndexComponent_core_h5p_iframe_12_Template, 1, 8, \"core-h5p-iframe\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"core-course-module-navigation\", 9);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.h5pActivity && ctx.h5pActivity.enabletracking && ctx.accessInfo && !ctx.accessInfo.canreviewattempts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.canViewAllAttempts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(5, 17, \"core.info\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hideUntil\", !ctx.showLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"module\", ctx.module)(\"description\", ctx.description)(\"component\", ctx.component)(\"componentId\", ctx.componentId)(\"courseId\", ctx.courseId)(\"hasDataToSync\", ctx.hasOffline);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.siteCanDownload && ctx.playing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.accessInfo && !ctx.trackComponent);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.deployedFile && !ctx.playing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.playing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", ctx.showLoading)(\"courseId\", ctx.courseId)(\"currentModuleId\", ctx.module.id);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","CoreConstants","CoreCourseModuleMainActivityComponent","CoreH5PHelper","CoreH5P","CoreXAPIOffline","CoreXAPI","CoreNetwork","CoreFilepool","CoreNavigator","CoreSites","CoreDomUtils","CoreEvents","AddonModH5PActivity","AddonModH5PActivityProvider","MOD_H5PACTIVITY_STATE_ID","AddonModH5PActivitySync","AddonModH5PActivitySyncProvider","CoreFileHelper","AddonModH5PActivityModuleHandlerService","CoreTextUtils","CoreUtils","i0","ɵɵelementStart","ɵɵlistener","AddonModH5PActivityIndexComponent_core_context_menu_item_2_Template_core_context_menu_item_action_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","viewMyAttempts","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind1","AddonModH5PActivityIndexComponent_core_context_menu_item_3_Template_core_context_menu_item_action_0_listener","_r9","ctx_r8","viewAllAttempts","ɵɵelement","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate2","ɵɵtextInterpolate1","ɵɵtextInterpolate","ctx_r10","stateMessage","AddonModH5PActivityIndexComponent_ion_list_11_ion_button_2_Template_ion_button_click_0_listener","$event","_r14","ctx_r13","downloadAndPlay","ctx_r15","progressMessage","ctx_r16","percentage","ɵɵtemplate","AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_p_4_Template","AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_core_progress_bar_5_Template","ɵɵattribute","ctx_r12","showPercentage","AddonModH5PActivityIndexComponent_ion_list_11_ion_item_1_Template","AddonModH5PActivityIndexComponent_ion_list_11_ion_button_2_Template","AddonModH5PActivityIndexComponent_ion_list_11_ion_item_3_Template","ctx_r4","downloading","needsDownload","ctx_r5","fileUrl","displayOptions","onlinePlayerUrl","trackComponent","h5pActivity","context","saveFreq","contentState","AddonModH5PActivityIndexComponent","constructor","content","courseContentsPage","onActivityFinish","component","COMPONENT","pluginName","playing","siteCanDownload","hasOffline","isOpeningPage","canViewAllAttempts","saveStateEnabled","fetchContentDefaultError","syncEventName","AUTO_SYNCED","checkCompletionAfterLog","site","getRequiredCurrentSite","canDownloadFiles","isOfflineDisabledInSite","messageListenerFunction","event","onIframeMessage","window","addEventListener","ngOnInit","_superprop_getNgOnInit","_this","_asyncToGenerator","call","loadContent","fetchContent","refresh","sync","showErrors","_this2","_this2$accessInfo","_this2$accessInfo2","_this2$deployedFile","showLoading","getH5PActivity","courseId","module","id","siteId","dataRetrieved","emit","description","intro","decodeDisplayOptions","displayoptions","syncActivity","Promise","all","checkHasOffline","fetchAccessInfo","fetchDeployedFileData","loadContentState","accessInfo","cansubmit","TRACK_COMPONENT","enabletracking","canreviewattempts","canGetUsersAttemptsInSite","package","h5pPlayer","calculateOnlinePlayerUrl","getURL","fileurl","state","DOWNLOADED","play","NOT_DOWNLOADED","OUTDATED","isOnline","deployedFile","filesize","shouldDownload","downloadAutomatically","_this3","contextHasData","_this4","getAccessInformation","cmId","_this5","getDeployedFile","getFileUrl","eventName","getFileEventNameByUrl","getId","observer","on","calculateFileState","_this6","_contentStateObj$h5p","isSaveStateEnabled","savestatefreq","getState","appComponent","appComponentId","coursemodule","readingStrategy","contentStateObj","parseJSON","h5p","_this7","getFileStateByUrl","timemodified","showFileState","invalidateContent","invalidateActivityData","_this8","DOWNLOADING","downloadDeployedFile","_this9","preventDefault","stopPropagation","showErrorModal","confirmDownloadSize","size","total","isDestroyed","error","isCanceledError","showErrorModalDefault","_this10","_this11","deleteOfflineStates","downloadUrl","componentId","data","undefined","message","loaded","totalSize","percentageNumber","Number","toFixed","_this12","logView","checkCompletion","analyticsLogEvent","_this13","userId","getCurrentSiteUserId","navigateToSitePath","PAGE_NAME","_this14","_this15","canPostStatementsInSite","isCurrentXAPIPostStatement","postStatements","isCurrentXAPIState","isXAPIPostState","postState","deleteState","isH5PEventForApp","environment","activityIdIsCurrentActivity","activityId","containsUrl","match","action","statements","object","_this16","options","offline","extra","name","sent","JSON","stringify","invalidateUserAttempts","_unused","hasEnded","some","statement","includes","_this17","_this17$h5pActivity","agent","stateId","stateData","_this18","_this19","ignoreErrors","deleteStates","itemId","_this20","updated","warnings","autoSyncEventReceived","ngOnDestroy","_this$observer","off","setTimeout","removeEventListener","ɵɵdirectiveInject","i1","IonContent","i2","CoreCourseContentsPage","selectors","outputs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonModH5PActivityIndexComponent_Template","rf","ctx","AddonModH5PActivityIndexComponent_core_context_menu_item_2_Template","AddonModH5PActivityIndexComponent_core_context_menu_item_3_Template","AddonModH5PActivityIndexComponent_Template_ion_button_click_4_listener","openModuleSummary","AddonModH5PActivityIndexComponent_Template_core_course_module_info_completionChanged_8_listener","onCompletionChange","AddonModH5PActivityIndexComponent_ion_card_9_Template","AddonModH5PActivityIndexComponent_ion_card_10_Template","AddonModH5PActivityIndexComponent_ion_list_11_Template","AddonModH5PActivityIndexComponent_core_h5p_iframe_12_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/h5pactivity/components/index/index.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/h5pactivity/components/index/addon-mod-h5pactivity-index.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Optional, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\n\nimport { CoreConstants } from '@/core/constants';\nimport { CoreSite } from '@classes/sites/site';\nimport { CoreCourseModuleMainActivityComponent } from '@features/course/classes/main-activity-component';\nimport { CoreCourseContentsPage } from '@features/course/pages/contents/contents';\nimport { CoreH5PDisplayOptions } from '@features/h5p/classes/core';\nimport { CoreH5PHelper } from '@features/h5p/classes/helper';\nimport { CoreH5P } from '@features/h5p/services/h5p';\nimport { CoreXAPIOffline } from '@features/xapi/services/offline';\nimport { CoreXAPI } from '@features/xapi/services/xapi';\nimport { CoreNetwork } from '@services/network';\nimport { CoreFilepool } from '@services/filepool';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreWSFile } from '@services/ws';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport {\n    AddonModH5PActivity,\n    AddonModH5PActivityAccessInfo,\n    AddonModH5PActivityData,\n    AddonModH5PActivityProvider,\n    AddonModH5PActivityXAPIPostStateData,\n    AddonModH5PActivityXAPIStateData,\n    AddonModH5PActivityXAPIStatementsData,\n    MOD_H5PACTIVITY_STATE_ID,\n} from '../../services/h5pactivity';\nimport {\n    AddonModH5PActivitySync,\n    AddonModH5PActivitySyncProvider,\n    AddonModH5PActivitySyncResult,\n} from '../../services/h5pactivity-sync';\nimport { CoreFileHelper } from '@services/file-helper';\nimport { AddonModH5PActivityModuleHandlerService } from '../../services/handlers/module';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\n\n/**\n * Component that displays an H5P activity entry page.\n */\n@Component({\n    selector: 'addon-mod-h5pactivity-index',\n    templateUrl: 'addon-mod-h5pactivity-index.html',\n})\nexport class AddonModH5PActivityIndexComponent extends CoreCourseModuleMainActivityComponent implements OnInit, OnDestroy {\n\n    @Output() onActivityFinish = new EventEmitter<boolean>();\n\n    component = AddonModH5PActivityProvider.COMPONENT;\n    pluginName = 'h5pactivity';\n\n    h5pActivity?: AddonModH5PActivityData; // The H5P activity object.\n    accessInfo?: AddonModH5PActivityAccessInfo; // Info about the user capabilities.\n    deployedFile?: CoreWSFile; // The H5P deployed file.\n\n    stateMessage?: string; // Message about the file state.\n    downloading = false; // Whether the H5P file is being downloaded.\n    needsDownload = false; // Whether the file needs to be downloaded.\n    percentage?: string; // Download/unzip percentage.\n    showPercentage = false; // Whether to show the percentage.\n    progressMessage?: string; // Message about download/unzip.\n    playing = false; // Whether the package is being played.\n    displayOptions?: CoreH5PDisplayOptions; // Display options for the package.\n    onlinePlayerUrl?: string; // URL to play the package in online.\n    fileUrl?: string; // The fileUrl to use to play the package.\n    state?: string; // State of the file.\n    siteCanDownload = false;\n    trackComponent?: string; // Component for tracking.\n    hasOffline = false;\n    isOpeningPage = false;\n    canViewAllAttempts = false;\n    saveStateEnabled = false;\n    saveFreq?: number;\n    contentState?: string;\n\n    protected fetchContentDefaultError = 'addon.mod_h5pactivity.errorgetactivity';\n    protected syncEventName = AddonModH5PActivitySyncProvider.AUTO_SYNCED;\n    protected site: CoreSite;\n    protected observer?: CoreEventObserver;\n    protected messageListenerFunction: (event: MessageEvent) => Promise<void>;\n    protected checkCompletionAfterLog = false; // It's called later, when the user plays the package.\n\n    constructor(\n        protected content?: IonContent,\n        @Optional() courseContentsPage?: CoreCourseContentsPage,\n    ) {\n        super('AddonModH5PActivityIndexComponent', content, courseContentsPage);\n\n        this.site = CoreSites.getRequiredCurrentSite();\n        this.siteCanDownload = this.site.canDownloadFiles() && !CoreH5P.isOfflineDisabledInSite();\n\n        // Listen for messages from the iframe.\n        this.messageListenerFunction = (event) => this.onIframeMessage(event);\n        window.addEventListener('message', this.messageListenerFunction);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        super.ngOnInit();\n\n        this.loadContent(false, true);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async fetchContent(refresh?: boolean, sync = false, showErrors = false): Promise<void> {\n        // Always show loading and stop playing, the package needs to be reloaded with the latest data.\n        this.showLoading = true;\n        this.playing = false;\n\n        this.h5pActivity = await AddonModH5PActivity.getH5PActivity(this.courseId, this.module.id, {\n            siteId: this.siteId,\n        });\n\n        this.dataRetrieved.emit(this.h5pActivity);\n        this.description = this.h5pActivity.intro;\n        this.displayOptions = CoreH5PHelper.decodeDisplayOptions(this.h5pActivity.displayoptions);\n\n        if (sync) {\n            await this.syncActivity(showErrors);\n        }\n\n        await Promise.all([\n            this.checkHasOffline(),\n            this.fetchAccessInfo(),\n            this.fetchDeployedFileData(),\n        ]);\n\n        await this.loadContentState(); // Loading the state requires the access info.\n\n        this.trackComponent = this.accessInfo?.cansubmit ? AddonModH5PActivityProvider.TRACK_COMPONENT : '';\n        this.canViewAllAttempts = !!this.h5pActivity.enabletracking && !!this.accessInfo?.canreviewattempts &&\n                AddonModH5PActivity.canGetUsersAttemptsInSite();\n\n        if (this.h5pActivity.package && this.h5pActivity.package[0]) {\n            // The online player should use the original file, not the trusted one.\n            this.onlinePlayerUrl = CoreH5P.h5pPlayer.calculateOnlinePlayerUrl(\n                this.site.getURL(),\n                this.h5pActivity.package[0].fileurl,\n                this.displayOptions,\n                this.trackComponent,\n            );\n        }\n\n        if (!this.siteCanDownload || this.state == CoreConstants.DOWNLOADED) {\n            // Cannot download the file or already downloaded, play the package directly.\n            this.play();\n\n        } else if ((this.state == CoreConstants.NOT_DOWNLOADED || this.state == CoreConstants.OUTDATED) && CoreNetwork.isOnline() &&\n                    this.deployedFile?.filesize && CoreFilepool.shouldDownload(this.deployedFile.filesize)) {\n            // Package is small, download it automatically. Don't block this function for this.\n            this.downloadAutomatically();\n        }\n    }\n\n    /**\n     * Fetch the access info and store it in the right variables.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async checkHasOffline(): Promise<void> {\n        if (!this.h5pActivity) {\n            return;\n        }\n\n        this.hasOffline = await CoreXAPIOffline.contextHasData(this.h5pActivity.context, this.siteId);\n    }\n\n    /**\n     * Fetch the access info and store it in the right variables.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchAccessInfo(): Promise<void> {\n        if (!this.h5pActivity) {\n            return;\n        }\n\n        this.accessInfo = await AddonModH5PActivity.getAccessInformation(this.h5pActivity.id, {\n            cmId: this.module.id,\n            siteId: this.siteId,\n        });\n    }\n\n    /**\n     * Fetch the deployed file data if needed and store it in the right variables.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchDeployedFileData(): Promise<void> {\n        if (!this.siteCanDownload || !this.h5pActivity) {\n            // Cannot download the file, no need to fetch the file data.\n            return;\n        }\n\n        this.deployedFile = await AddonModH5PActivity.getDeployedFile(this.h5pActivity, {\n            displayOptions: this.displayOptions,\n            siteId: this.siteId,\n        });\n\n        this.fileUrl = CoreFileHelper.getFileUrl(this.deployedFile);\n\n        // Listen for changes in the state.\n        const eventName = await CoreFilepool.getFileEventNameByUrl(this.site.getId(), this.fileUrl);\n\n        if (!this.observer) {\n            this.observer = CoreEvents.on(eventName, () => {\n                this.calculateFileState();\n            });\n        }\n\n        await this.calculateFileState();\n    }\n\n    /**\n     * Load the content's state (if enabled and there's any).\n     */\n    protected async loadContentState(): Promise<void> {\n        if (!this.h5pActivity || !this.accessInfo || !AddonModH5PActivity.isSaveStateEnabled(this.h5pActivity, this.accessInfo)) {\n            this.saveStateEnabled = false;\n\n            return;\n        }\n\n        this.saveStateEnabled = true;\n        this.saveFreq = this.h5pActivity.savestatefreq;\n\n        const contentState = await CoreXAPI.getState(\n            AddonModH5PActivityProvider.TRACK_COMPONENT,\n            this.h5pActivity.context,\n            MOD_H5PACTIVITY_STATE_ID,\n            {\n                appComponent: AddonModH5PActivityProvider.COMPONENT,\n                appComponentId: this.h5pActivity.coursemodule,\n                readingStrategy: CoreSitesReadingStrategy.PREFER_NETWORK,\n            },\n        );\n\n        if (contentState === null) {\n            return;\n        }\n\n        const contentStateObj = CoreTextUtils.parseJSON<{h5p: string}>(contentState, { h5p: '{}' });\n\n        // The H5P state doesn't always use JSON, so an h5p property was added to jsonize it.\n        this.contentState = contentStateObj.h5p ?? '{}';\n    }\n\n    /**\n     * Calculate the state of the deployed file.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async calculateFileState(): Promise<void> {\n        if (!this.fileUrl || !this.deployedFile) {\n            return;\n        }\n\n        this.state = await CoreFilepool.getFileStateByUrl(\n            this.site.getId(),\n            this.fileUrl,\n            this.deployedFile.timemodified,\n        );\n\n        this.showFileState();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected invalidateContent(): Promise<void> {\n        return AddonModH5PActivity.invalidateActivityData(this.courseId);\n    }\n\n    /**\n     * Displays some data based on the state of the main file.\n     */\n    protected async showFileState(): Promise<void> {\n        if (this.state == CoreConstants.OUTDATED) {\n            this.stateMessage = 'addon.mod_h5pactivity.filestateoutdated';\n            this.needsDownload = true;\n        } else if (this.state == CoreConstants.NOT_DOWNLOADED) {\n            this.stateMessage = 'addon.mod_h5pactivity.filestatenotdownloaded';\n            this.needsDownload = true;\n        } else if (this.state == CoreConstants.DOWNLOADING) {\n            this.stateMessage = '';\n\n            if (!this.downloading) {\n                // It's being downloaded right now but the view isn't tracking it. \"Restore\" the download.\n                await this.downloadDeployedFile();\n\n                this.play();\n            }\n        } else {\n            this.stateMessage = '';\n            this.needsDownload = false;\n        }\n    }\n\n    /**\n     * Download the file and play it.\n     *\n     * @param event Click event.\n     * @returns Promise resolved when done.\n     */\n    async downloadAndPlay(event?: MouseEvent): Promise<void> {\n        event?.preventDefault();\n        event?.stopPropagation();\n\n        if (!this.deployedFile) {\n            return;\n        }\n\n        if (!CoreNetwork.isOnline()) {\n            CoreDomUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        try {\n            // Confirm the download if needed.\n            await CoreDomUtils.confirmDownloadSize({ size: this.deployedFile.filesize || 0, total: true });\n\n            await this.downloadDeployedFile();\n\n            if (!this.isDestroyed) {\n                this.play();\n            }\n\n        } catch (error) {\n            if (CoreDomUtils.isCanceledError(error) || this.isDestroyed) {\n                // User cancelled or view destroyed, stop.\n                return;\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        }\n    }\n\n    /**\n     * Download the file automatically.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async downloadAutomatically(): Promise<void> {\n        try {\n            await this.downloadDeployedFile();\n\n            if (!this.isDestroyed) {\n                this.play();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        }\n    }\n\n    /**\n     * Download athe H5P deployed file or restores an ongoing download.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async downloadDeployedFile(): Promise<void> {\n        if (!this.fileUrl || !this.deployedFile) {\n            return;\n        }\n\n        const deployedFile = this.deployedFile;\n        this.downloading = true;\n        this.progressMessage = 'core.downloading';\n\n        // Delete offline states when downloading the package because it means the package has changed or user deleted it.\n        this.deleteOfflineStates();\n\n        try {\n            await CoreFilepool.downloadUrl(\n                this.site.getId(),\n                this.fileUrl,\n                false,\n                this.component,\n                this.componentId,\n                deployedFile.timemodified,\n                (data: DownloadProgressData) => {\n                    if (!data) {\n                        return;\n                    }\n\n                    this.percentage = undefined;\n                    this.showPercentage = false;\n\n                    if (data.message) {\n                        // Show a message.\n                        this.progressMessage = data.message;\n                    } else if (data.loaded !== undefined) {\n                        // Downloading or unzipping.\n                        const totalSize = this.progressMessage == 'core.downloading' ? deployedFile.filesize : data.total;\n\n                        if (totalSize !== undefined) {\n                            const percentageNumber = (Number(data.loaded / totalSize) * 100);\n                            this.percentage = percentageNumber.toFixed(1);\n                            this.showPercentage = percentageNumber >= 0 && percentageNumber <= 100;\n                        }\n                    }\n                },\n            );\n\n        } finally {\n            this.progressMessage = undefined;\n            this.percentage = undefined;\n            this.showPercentage = false;\n            this.downloading = false;\n        }\n    }\n\n    /**\n     * Play the package.\n     */\n    async play(): Promise<void> {\n        if (!this.h5pActivity) {\n            return;\n        }\n\n        this.playing = true;\n\n        // Mark the activity as viewed.\n        await AddonModH5PActivity.logView(this.h5pActivity.id, this.siteId);\n\n        this.checkCompletion();\n\n        this.analyticsLogEvent('mod_h5pactivity_view_h5pactivity');\n    }\n\n    /**\n     * Go to view user attempts.\n     */\n    async viewMyAttempts(): Promise<void> {\n        this.isOpeningPage = true;\n        const userId = CoreSites.getCurrentSiteUserId();\n\n        try {\n            await CoreNavigator.navigateToSitePath(\n                `${AddonModH5PActivityModuleHandlerService.PAGE_NAME}/${this.courseId}/${this.module.id}/userattempts/${userId}`,\n            );\n        } finally {\n            this.isOpeningPage = false;\n        }\n    }\n\n    /**\n     * Go to view all user attempts.\n     */\n    async viewAllAttempts(): Promise<void> {\n        this.isOpeningPage = true;\n\n        try {\n            await CoreNavigator.navigateToSitePath(\n                `${AddonModH5PActivityModuleHandlerService.PAGE_NAME}/${this.courseId}/${this.module.id}/users`,\n            );\n        } finally {\n            this.isOpeningPage = false;\n        }\n    }\n\n    /**\n     * Treat an iframe message event.\n     *\n     * @param event Event.\n     * @returns Promise resolved when done.\n     */\n    protected async onIframeMessage(event: MessageEvent): Promise<void> {\n        const data = event.data;\n        if (!data || !this.h5pActivity) {\n            return;\n        }\n\n        if (CoreXAPI.canPostStatementsInSite(this.site) && this.isCurrentXAPIPostStatement(data)) {\n            this.postStatements(data);\n        } else if (this.saveStateEnabled && this.isCurrentXAPIState(data, 'xapi_post_state') && this.isXAPIPostState(data)) {\n            this.postState(data);\n        } else if (this.saveStateEnabled && this.isCurrentXAPIState(data, 'xapi_delete_state')) {\n            this.deleteState(data);\n        }\n    }\n\n    /**\n     * Check if an event is an H5P event meant for this app.\n     *\n     * @param data Event data.\n     * @returns Whether it's an H5P event meant for this app.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected isH5PEventForApp(data: any): boolean {\n        return data.environment === 'moodleapp' && data.context === 'h5p';\n    }\n\n    /**\n     * Check if an activity ID (an IRI) belongs to the current activity.\n     *\n     * @param activityId Activity ID (IRI).\n     * @returns Whether it belongs to the current activity.\n     */\n    protected activityIdIsCurrentActivity(activityId?: string): boolean {\n        if (!activityId || !this.h5pActivity) {\n            return false;\n        }\n\n        if (!this.site.containsUrl(activityId)) {\n            // The event belongs to another site, weird scenario. Maybe some JS running in background.\n            return false;\n        }\n\n        const match = activityId.match(/xapi\\/activity\\/(\\d+)/);\n\n        return !!match && Number(match[1]) === this.h5pActivity.context;\n    }\n\n    /**\n     * Check if an event is an XAPI post statement of the current activity.\n     *\n     * @param data Event data.\n     * @returns Whether it's an XAPI post statement of the current activity.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected isCurrentXAPIPostStatement(data: any): data is AddonModH5PActivityXAPIStatementsData {\n        if (!this.h5pActivity) {\n            return false;\n        }\n\n        if (!this.isH5PEventForApp(data) || data.action !== 'xapi_post_statement' || !data.statements) {\n            return false;\n        }\n\n        // Check the event belongs to this activity.\n        return this.activityIdIsCurrentActivity(data.statements[0] && data.statements[0].object && data.statements[0].object.id);\n    }\n\n    /**\n     * Post statements.\n     *\n     * @param data Event data.\n     */\n    protected async postStatements(data: AddonModH5PActivityXAPIStatementsData): Promise<void> {\n        if (!this.h5pActivity) {\n            return;\n        }\n\n        try {\n            const options = {\n                offline: this.hasOffline,\n                courseId: this.courseId,\n                extra: this.h5pActivity.name,\n                siteId: this.site.getId(),\n            };\n\n            const sent = await CoreXAPI.postStatements(\n                this.h5pActivity.context,\n                data.component,\n                JSON.stringify(data.statements),\n                options,\n            );\n\n            this.hasOffline = !sent;\n            this.deleteOfflineStates(); // Posting statements means attempt has finished, delete any offline state.\n\n            if (sent) {\n                try {\n                    // Invalidate attempts.\n                    await AddonModH5PActivity.invalidateUserAttempts(this.h5pActivity.id, undefined, this.siteId);\n                } catch {\n                    // Ignore errors.\n                }\n\n                // Check if the H5P has ended. Final statements don't include a subContentId.\n                const hasEnded = data.statements.some(statement => !statement.object.id.includes('subContentId='));\n                if (hasEnded) {\n                    this.onActivityFinish.emit(hasEnded);\n                    this.checkCompletion();\n                }\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error sending tracking data.');\n        }\n    }\n\n    /**\n     * Check if an event is an XAPI state event of the current activity.\n     *\n     * @param data Event data.\n     * @param action Action to check.\n     * @returns Whether it's an XAPI state event of the current activity.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected isCurrentXAPIState(data: any, action: string): data is AddonModH5PActivityXAPIStateData {\n        if (!this.h5pActivity) {\n            return false;\n        }\n\n        if (!this.isH5PEventForApp(data) || data.action !== action) {\n            return false;\n        }\n\n        // Check the event belongs to this activity.\n        return this.activityIdIsCurrentActivity(data.activityId);\n    }\n\n    /**\n     * Check if an xAPI state event data is a post state event.\n     *\n     * @param data Event data.\n     * @returns Whether it's an XAPI post state.\n     */\n    protected isXAPIPostState(data: AddonModH5PActivityXAPIStateData): data is AddonModH5PActivityXAPIPostStateData {\n        return 'stateData' in data;\n    }\n\n    /**\n     * Post state.\n     *\n     * @param data Event data.\n     */\n    protected async postState(data: AddonModH5PActivityXAPIPostStateData): Promise<void> {\n        try {\n            const options = {\n                offline: this.hasOffline,\n                courseId: this.courseId,\n                extra: this.h5pActivity?.name,\n                siteId: this.site.getId(),\n            };\n\n            const sent = await CoreXAPI.postState(\n                data.component,\n                data.activityId,\n                data.agent,\n                data.stateId,\n                data.stateData,\n                options,\n            );\n\n            this.hasOffline = !sent;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error sending tracking data.');\n        }\n    }\n\n    /**\n     * Delete state.\n     *\n     * @param data Event data.\n     */\n    protected async deleteState(data: AddonModH5PActivityXAPIStateData): Promise<void> {\n        try {\n            await CoreXAPI.deleteState(\n                data.component,\n                data.activityId,\n                data.agent,\n                data.stateId,\n                {\n                    siteId: this.site.getId(),\n                },\n            );\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error sending tracking data.');\n        }\n    }\n\n    /**\n     * Delete offline states for current activity.\n     */\n    protected async deleteOfflineStates(): Promise<void> {\n        if (!this.h5pActivity) {\n            return;\n        }\n\n        await CoreUtils.ignoreErrors(CoreXAPIOffline.deleteStates(AddonModH5PActivityProvider.TRACK_COMPONENT, {\n            itemId: this.h5pActivity.context,\n        }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async sync(): Promise<AddonModH5PActivitySyncResult> {\n        if (!this.h5pActivity) {\n            return {\n                updated: false,\n                warnings: [],\n            };\n        }\n\n        return AddonModH5PActivitySync.syncActivity(this.h5pActivity.context, this.site.getId());\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected autoSyncEventReceived(): void {\n        this.checkHasOffline();\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n\n        this.observer?.off();\n\n        // Wait a bit to make sure all messages have been received.\n        setTimeout(() => {\n            window.removeEventListener('message', this.messageListenerFunction);\n        }, 2000);\n    }\n\n}\n\ntype DownloadProgressData = {\n    message?: string;\n    loaded?: number;\n    total?: number;\n};\n","<!-- Buttons to add to the header. -->\n<core-navbar-buttons slot=\"end\">\n    <core-context-menu>\n        <core-context-menu-item *ngIf=\"h5pActivity && h5pActivity.enabletracking && accessInfo && !accessInfo.canreviewattempts\"\n            [priority]=\"1000\" [content]=\"'addon.mod_h5pactivity.attempts_report' | translate\" (action)=\"viewMyAttempts()\"\n            iconAction=\"fas-chart-bar\" />\n        <core-context-menu-item *ngIf=\"canViewAllAttempts\" [priority]=\"1000\" [content]=\"'addon.mod_h5pactivity.attempts_report' | translate\"\n            (action)=\"viewAllAttempts()\" iconAction=\"fas-chart-bar\" />\n    </core-context-menu>\n\n    <ion-button fill=\"clear\" (click)=\"openModuleSummary()\" aria-haspopup=\"true\" [attr.aria-label]=\"'core.info' | translate\">\n        <ion-icon name=\"fas-circle-info\" slot=\"icon-only\" aria-hidden=\"true\" />\n    </ion-button>\n</core-navbar-buttons>\n\n<!-- Content. -->\n<core-loading [hideUntil]=\"!showLoading\">\n\n    <!-- Activity info. -->\n    <core-course-module-info [module]=\"module\" [description]=\"description\" [component]=\"component\" [componentId]=\"componentId\"\n        [courseId]=\"courseId\" [hasDataToSync]=\"hasOffline\" (completionChanged)=\"onCompletionChange()\" />\n\n    <!-- Offline disabled. -->\n    <ion-card class=\"core-warning-card\" *ngIf=\"!siteCanDownload && playing\">\n        <ion-item>\n            <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>\n                {{ 'core.h5p.offlinedisabled' | translate }} {{ 'addon.mod_h5pactivity.offlinedisabledwarning' | translate }}\n            </ion-label>\n        </ion-item>\n    </ion-card>\n\n    <!-- Preview mode. -->\n    <ion-card class=\"core-warning-card\" *ngIf=\"accessInfo && !trackComponent\">\n        <ion-item>\n            <ion-icon name=\"fas-triangle-exclamation\" slot=\"start\" aria-hidden=\"true\" />\n            <ion-label>\n                {{ 'addon.mod_h5pactivity.previewmode' | translate }}\n            </ion-label>\n        </ion-item>\n    </ion-card>\n\n    <ion-list *ngIf=\"deployedFile && !playing\">\n        <ion-item class=\"ion-text-wrap\" *ngIf=\"stateMessage\">\n            <ion-label>{{ stateMessage | translate }}</ion-label>\n        </ion-item>\n\n        <!-- Button to download the package. -->\n        <ion-button *ngIf=\"!downloading && needsDownload\" class=\"ion-text-wrap ion-margin\" expand=\"block\" (click)=\"downloadAndPlay($event)\">\n            {{ 'addon.mod_h5pactivity.downloadh5pfile' | translate }}\n        </ion-button>\n\n        <!-- Download progress. -->\n        <ion-item class=\"ion-text-center\" *ngIf=\"downloading\">\n            <ion-label>\n                <ion-spinner [attr.aria-label]=\"'core.loading' | translate\" />\n                <p class=\"item-heading\" *ngIf=\"progressMessage\">{{ progressMessage | translate }}</p>\n                <core-progress-bar *ngIf=\"showPercentage\" [progress]=\"percentage\" [a11yText]=\"progressMessage\" />\n            </ion-label>\n        </ion-item>\n    </ion-list>\n\n    <core-h5p-iframe *ngIf=\"playing\" [fileUrl]=\"fileUrl\" [displayOptions]=\"displayOptions\" [onlinePlayerUrl]=\"onlinePlayerUrl\"\n        [trackComponent]=\"trackComponent\" [contextId]=\"h5pActivity?.context\" [enableInAppFullscreen]=\"true\" [saveFreq]=\"saveFreq\"\n        [state]=\"contentState\" />\n</core-loading>\n\n<core-course-module-navigation collapsible-footer [hidden]=\"showLoading\" [courseId]=\"courseId\" [currentModuleId]=\"module.id\" />\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}