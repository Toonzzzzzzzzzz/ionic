{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldRadiobuttonComponent } from '../component/radiobutton';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for checkbox data field plugin.\n */\nexport class AddonModDataFieldRadiobuttonHandlerService {\n  constructor() {\n    this.name = 'AddonModDataFieldRadiobuttonHandler';\n    this.type = 'radiobutton';\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return AddonModDataFieldRadiobuttonComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldSearchData(field, inputData) {\n    const fieldName = 'f_' + field.id;\n    if (inputData[fieldName]) {\n      return [{\n        name: fieldName,\n        value: inputData[fieldName]\n      }];\n    }\n    return [];\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldEditData(field, inputData) {\n    const fieldName = 'f_' + field.id;\n    return [{\n      fieldid: field.id,\n      value: inputData[fieldName] || ''\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  hasFieldDataChanged(field, inputData, originalFieldData) {\n    const fieldName = 'f_' + field.id;\n    const input = inputData[fieldName] || '';\n    const content = (originalFieldData === null || originalFieldData === void 0 ? void 0 : originalFieldData.content) || '';\n    return input != content;\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldsNotifications(field, inputData) {\n    if (field.required && (!inputData || !inputData.length || !inputData[0].value)) {\n      return Translate.instant('addon.mod_data.errormustsupplyvalue');\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  overrideData(originalContent, offlineContent) {\n    originalContent.content = offlineContent[''] || '';\n    return originalContent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n}\n_class = AddonModDataFieldRadiobuttonHandlerService;\n_class.ɵfac = function AddonModDataFieldRadiobuttonHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModDataFieldRadiobuttonHandler = makeSingleton(AddonModDataFieldRadiobuttonHandlerService);","map":{"version":3,"names":["makeSingleton","Translate","AddonModDataFieldRadiobuttonComponent","AddonModDataFieldRadiobuttonHandlerService","constructor","name","type","getComponent","getFieldSearchData","field","inputData","fieldName","id","value","getFieldEditData","fieldid","hasFieldDataChanged","originalFieldData","input","content","getFieldsNotifications","required","length","instant","overrideData","originalContent","offlineContent","isEnabled","_asyncToGenerator","factory","ɵfac","providedIn","AddonModDataFieldRadiobuttonHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/radiobutton/services/handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    AddonModDataEntryField,\n    AddonModDataField,\n    AddonModDataSearchEntriesAdvancedFieldFormatted,\n    AddonModDataSubfieldData,\n} from '@addons/mod/data/services/data';\nimport { AddonModDataFieldHandler } from '@addons/mod/data/services/data-fields-delegate';\nimport { Injectable, Type } from '@angular/core';\nimport { CoreFormFields } from '@singletons/form';\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldRadiobuttonComponent } from '../component/radiobutton';\nimport type { AddonModDataFieldPluginBaseComponent } from '@addons/mod/data/classes/base-field-plugin-component';\n\n/**\n * Handler for checkbox data field plugin.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModDataFieldRadiobuttonHandlerService implements AddonModDataFieldHandler {\n\n    name = 'AddonModDataFieldRadiobuttonHandler';\n    type = 'radiobutton';\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<AddonModDataFieldPluginBaseComponent> {\n        return AddonModDataFieldRadiobuttonComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldSearchData(\n        field: AddonModDataField,\n        inputData: CoreFormFields<string>,\n    ): AddonModDataSearchEntriesAdvancedFieldFormatted[] {\n        const fieldName = 'f_' + field.id;\n        if (inputData[fieldName]) {\n            return [{\n                name: fieldName,\n                value: inputData[fieldName],\n            }];\n        }\n\n        return [];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldEditData(field: AddonModDataField, inputData: CoreFormFields<string>): AddonModDataSubfieldData[] {\n        const fieldName = 'f_' + field.id;\n\n        return [{\n            fieldid: field.id,\n            value: inputData[fieldName] || '',\n        }];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    hasFieldDataChanged(\n        field: AddonModDataField,\n        inputData: CoreFormFields<string>,\n        originalFieldData: AddonModDataEntryField,\n    ): boolean {\n        const fieldName = 'f_' + field.id;\n        const input = inputData[fieldName] || '';\n        const content = originalFieldData?.content || '';\n\n        return input != content;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldsNotifications(field: AddonModDataField, inputData: AddonModDataSubfieldData[]): string | undefined {\n        if (field.required && (!inputData || !inputData.length || !inputData[0].value)) {\n            return Translate.instant('addon.mod_data.errormustsupplyvalue');\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    overrideData(originalContent: AddonModDataEntryField, offlineContent: CoreFormFields<string>): AddonModDataEntryField {\n        originalContent.content = offlineContent[''] || '';\n\n        return originalContent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n}\nexport const AddonModDataFieldRadiobuttonHandler = makeSingleton(AddonModDataFieldRadiobuttonHandlerService);\n"],"mappings":";;AAuBA,SAASA,aAAa,EAAEC,SAAS,QAAQ,aAAa;AACtD,SAASC,qCAAqC,QAAQ,0BAA0B;;AAGhF;;;AAIA,OAAM,MAAOC,0CAA0C;EADvDC,YAAA;IAGI,KAAAC,IAAI,GAAG,qCAAqC;IAC5C,KAAAC,IAAI,GAAG,aAAa;;EAEpB;;;EAGAC,YAAYA,CAAA;IACR,OAAOL,qCAAqC;EAChD;EAEA;;;EAGAM,kBAAkBA,CACdC,KAAwB,EACxBC,SAAiC;IAEjC,MAAMC,SAAS,GAAG,IAAI,GAAGF,KAAK,CAACG,EAAE;IACjC,IAAIF,SAAS,CAACC,SAAS,CAAC,EAAE;MACtB,OAAO,CAAC;QACJN,IAAI,EAAEM,SAAS;QACfE,KAAK,EAAEH,SAAS,CAACC,SAAS;OAC7B,CAAC;;IAGN,OAAO,EAAE;EACb;EAEA;;;EAGAG,gBAAgBA,CAACL,KAAwB,EAAEC,SAAiC;IACxE,MAAMC,SAAS,GAAG,IAAI,GAAGF,KAAK,CAACG,EAAE;IAEjC,OAAO,CAAC;MACJG,OAAO,EAAEN,KAAK,CAACG,EAAE;MACjBC,KAAK,EAAEH,SAAS,CAACC,SAAS,CAAC,IAAI;KAClC,CAAC;EACN;EAEA;;;EAGAK,mBAAmBA,CACfP,KAAwB,EACxBC,SAAiC,EACjCO,iBAAyC;IAEzC,MAAMN,SAAS,GAAG,IAAI,GAAGF,KAAK,CAACG,EAAE;IACjC,MAAMM,KAAK,GAAGR,SAAS,CAACC,SAAS,CAAC,IAAI,EAAE;IACxC,MAAMQ,OAAO,GAAG,CAAAF,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEE,OAAO,KAAI,EAAE;IAEhD,OAAOD,KAAK,IAAIC,OAAO;EAC3B;EAEA;;;EAGAC,sBAAsBA,CAACX,KAAwB,EAAEC,SAAqC;IAClF,IAAID,KAAK,CAACY,QAAQ,KAAK,CAACX,SAAS,IAAI,CAACA,SAAS,CAACY,MAAM,IAAI,CAACZ,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,EAAE;MAC5E,OAAOZ,SAAS,CAACsB,OAAO,CAAC,qCAAqC,CAAC;;EAEvE;EAEA;;;EAGAC,YAAYA,CAACC,eAAuC,EAAEC,cAAsC;IACxFD,eAAe,CAACN,OAAO,GAAGO,cAAc,CAAC,EAAE,CAAC,IAAI,EAAE;IAElD,OAAOD,eAAe;EAC1B;EAEA;;;EAGME,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;;SAhFSzB,0CAA0C;;mBAA1CA,MAA0C;AAAA;;SAA1CA,MAA0C;EAAA0B,OAAA,EAA1C1B,MAA0C,CAAA2B,IAAA;EAAAC,UAAA,EAD7B;AAAM;AAoFhC,OAAO,MAAMC,mCAAmC,GAAGhC,aAAa,CAACG,0CAA0C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}