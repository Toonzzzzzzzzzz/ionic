{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSwipeNavigationItemsManager } from '@classes/items-management/swipe-navigation-items-manager';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { AddonModAssignSubmissionsSource } from '../../classes/submissions-source';\nimport { AddonModAssignSubmissionComponent } from '../../components/submission/submission';\nimport { AddonModAssign } from '../../services/assign';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../../core/components/loading/loading\";\nimport * as i4 from \"../../../../../core/components/navbar-buttons/navbar-buttons\";\nimport * as i5 from \"../../../../../core/directives/format-text\";\nimport * as i6 from \"../../../../../core/directives/swipe-navigation\";\nimport * as i7 from \"../../../../../core/directives/content\";\nimport * as i8 from \"../../../../../core/directives/update-non-reactive-attributes\";\nimport * as i9 from \"@ionic/angular\";\nimport * as i10 from \"../../components/submission/submission\";\nimport * as i11 from \"@ngx-translate/core\";\nfunction AddonModAssignSubmissionReviewPage_addon_mod_assign_submission_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"addon-mod-assign-submission\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"courseId\", ctx_r0.courseId)(\"moduleId\", ctx_r0.moduleId)(\"submitId\", ctx_r0.submitId)(\"blindId\", ctx_r0.blindId);\n  }\n}\n/**\n * Page that displays a submission.\n */\nexport class AddonModAssignSubmissionReviewPage {\n  constructor(route) {\n    this.route = route;\n    this.title = ''; // Title to display.\n    this.loaded = false; // Whether data has been loaded.\n    this.canSaveGrades = false; // Whether the user can save grades.\n    this.blindMarking = false; // Whether it uses blind marking.\n    this.forceLeave = false; // To allow leaving the page without checking for changes.\n    this.logView = CoreTime.once(() => {\n      if (!this.assign) {\n        return;\n      }\n      const id = this.blindMarking ? this.blindId : this.submitId;\n      const paramName = this.blindMarking ? 'blindid' : 'userid';\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'mod_assign_get_submission_status',\n        name: Translate.instant('addon.mod_assign.subpagetitle', {\n          contextname: this.assign.name,\n          subpage: Translate.instant('addon.mod_assign.grading')\n        }),\n        data: {\n          id,\n          assignid: this.assign.id,\n          category: 'assign'\n        },\n        url: `/mod/assign/view.php?id=${this.assign.cmid}&action=grader&${paramName}=${id}`\n      });\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      try {\n        var _this$submissions;\n        this.moduleId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n        this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n        this.submitId = CoreNavigator.getRouteNumberParam('submitId') || 0;\n        this.blindId = CoreNavigator.getRouteNumberParam('blindId', {\n          params\n        });\n        const groupId = CoreNavigator.getRequiredRouteNumberParam('groupId');\n        const selectedStatus = CoreNavigator.getRouteParam('selectedStatus');\n        const submissionsSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonModAssignSubmissionsSource, [this.courseId, this.moduleId, selectedStatus]);\n        (_this$submissions = this.submissions) === null || _this$submissions === void 0 || _this$submissions.destroy();\n        submissionsSource.groupId = groupId;\n        this.submissions = new AddonModAssignSubmissionSwipeItemsManager(submissionsSource);\n        this.submissions.start();\n      } catch (error) {\n        CoreDomUtils.showErrorModal(error);\n        CoreNavigator.back();\n        return;\n      }\n      this.fetchSubmission().finally(() => {\n        this.logView();\n        this.loaded = true;\n      });\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$submissions2;\n    (_this$submissions2 = this.submissions) === null || _this$submissions2 === void 0 || _this$submissions2.destroy();\n  }\n  /**\n   * Check if we can leave the page or not.\n   *\n   * @returns Resolved if we can leave it, rejected if not.\n   */\n  canLeave() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.submissionComponent || _this.forceLeave) {\n        return true;\n      }\n      // Check if data has changed.\n      return _this.submissionComponent.canLeave();\n    })();\n  }\n  /**\n   * User entered the page.\n   */\n  ionViewDidEnter() {\n    var _this$submissionCompo;\n    (_this$submissionCompo = this.submissionComponent) === null || _this$submissionCompo === void 0 || _this$submissionCompo.ionViewDidEnter();\n  }\n  /**\n   * User left the page.\n   */\n  ionViewDidLeave() {\n    var _this$submissionCompo2;\n    (_this$submissionCompo2 = this.submissionComponent) === null || _this$submissionCompo2 === void 0 || _this$submissionCompo2.ionViewDidLeave();\n  }\n  /**\n   * Get the submission.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchSubmission() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.assign = yield AddonModAssign.getAssignment(_this2.courseId, _this2.moduleId);\n      _this2.title = _this2.assign.name;\n      _this2.blindMarking = !!_this2.assign.blindmarking && !_this2.assign.revealidentities;\n      const gradeInfo = yield CoreCourse.getModuleBasicGradeInfo(_this2.moduleId);\n      if (!gradeInfo) {\n        return;\n      }\n      // Grades can be saved if simple grading.\n      if (gradeInfo.advancedgrading && gradeInfo.advancedgrading[0] && gradeInfo.advancedgrading[0].method !== undefined) {\n        const method = gradeInfo.advancedgrading[0].method || 'simple';\n        _this2.canSaveGrades = method == 'simple';\n      } else {\n        _this2.canSaveGrades = true;\n      }\n    })();\n  }\n  /**\n   * Refresh all the data.\n   *\n   * @returns Promise resolved when done.\n   */\n  refreshAllData() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonModAssign.invalidateAssignmentData(_this3.courseId));\n      if (_this3.assign) {\n        promises.push(AddonModAssign.invalidateSubmissionData(_this3.assign.id));\n        promises.push(AddonModAssign.invalidateAssignmentUserMappingsData(_this3.assign.id));\n        promises.push(AddonModAssign.invalidateSubmissionStatusData(_this3.assign.id, _this3.submitId, undefined, _this3.blindMarking));\n      }\n      try {\n        yield Promise.all(promises);\n      } finally {\n        _this3.submissionComponent && _this3.submissionComponent.invalidateAndRefresh(true);\n        yield _this3.fetchSubmission();\n      }\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   */\n  refreshSubmission(refresher) {\n    this.refreshAllData().finally(() => {\n      refresher === null || refresher === void 0 || refresher.complete();\n    });\n  }\n  /**\n   * Submit a grade and feedback.\n   */\n  submitGrade() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.submissionComponent) {\n        return;\n      }\n      try {\n        yield _this4.submissionComponent.submitGrade();\n        // Grade submitted, leave the view if not in tablet.\n        if (!CoreScreen.isTablet) {\n          _this4.forceLeave = true;\n          CoreNavigator.back();\n        }\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n      }\n    })();\n  }\n}\n/**\n * Helper to manage swiping within a collection of submissions.\n */\n_class = AddonModAssignSubmissionReviewPage;\n_class.ɵfac = function AddonModAssignSubmissionReviewPage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-mod-assign-submission-review\"]],\n  viewQuery: function AddonModAssignSubmissionReviewPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(AddonModAssignSubmissionComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.submissionComponent = _t.first);\n    }\n  },\n  decls: 19,\n  vars: 17,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"contextLevel\", \"module\", 3, \"text\", \"contextInstanceId\", \"courseId\"], [\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"hidden\", \"click\"], [3, \"core-swipe-navigation\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [3, \"courseId\", \"moduleId\", \"submitId\", \"blindId\", 4, \"ngIf\"], [3, \"courseId\", \"moduleId\", \"submitId\", \"blindId\"]],\n  template: function AddonModAssignSubmissionReviewPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵelement(7, \"core-format-text\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"ion-buttons\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"core-navbar-buttons\", 3)(10, \"ion-button\", 4);\n      i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionReviewPage_Template_ion_button_click_10_listener() {\n        return ctx.submitGrade();\n      });\n      i0.ɵɵtext(11);\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"ion-content\", 5)(14, \"ion-refresher\", 6);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonModAssignSubmissionReviewPage_Template_ion_refresher_ionRefresh_14_listener($event) {\n        return ctx.refreshSubmission($event.target);\n      });\n      i0.ɵɵelement(15, \"ion-refresher-content\", 7);\n      i0.ɵɵpipe(16, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"core-loading\", 8);\n      i0.ɵɵtemplate(18, AddonModAssignSubmissionReviewPage_addon_mod_assign_submission_18_Template, 1, 4, \"addon-mod-assign-submission\", 9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 11, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"text\", ctx.title)(\"contextInstanceId\", ctx.moduleId)(\"courseId\", ctx.courseId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hidden\", !ctx.canSaveGrades);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 13, \"core.done\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"core-swipe-navigation\", ctx.submissions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(16, 15, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded);\n    }\n  },\n  dependencies: [i2.NgIf, i3.CoreLoadingComponent, i4.CoreNavBarButtonsComponent, i5.CoreFormatTextDirective, i6.CoreSwipeNavigationDirective, i7.CoreContentDirective, i8.CoreUpdateNonReactiveAttributesDirective, i9.IonButton, i9.IonButtons, i9.IonContent, i9.IonHeader, i9.IonRefresher, i9.IonRefresherContent, i9.IonTitle, i9.IonToolbar, i9.IonBackButton, i10.AddonModAssignSubmissionComponent, i11.TranslatePipe],\n  encapsulation: 2\n});\nclass AddonModAssignSubmissionSwipeItemsManager extends CoreSwipeNavigationItemsManager {\n  /**\n   * @inheritdoc\n   */\n  getSelectedItemPathFromRoute(route) {\n    return route.params.submitId;\n  }\n}","map":{"version":3,"names":["CoreRoutedItemsManagerSourcesTracker","CoreSwipeNavigationItemsManager","CoreCourse","CoreNavigator","CoreScreen","CoreDomUtils","AddonModAssignSubmissionsSource","AddonModAssignSubmissionComponent","AddonModAssign","CoreTime","CoreAnalytics","CoreAnalyticsEventType","Translate","i0","ɵɵelement","ɵɵproperty","ctx_r0","courseId","moduleId","submitId","blindId","AddonModAssignSubmissionReviewPage","constructor","route","title","loaded","canSaveGrades","blindMarking","forceLeave","logView","once","assign","id","paramName","logEvent","type","VIEW_ITEM","ws","name","instant","contextname","subpage","data","assignid","category","url","cmid","ngOnInit","queryParams","subscribe","params","_this$submissions","getRequiredRouteNumberParam","getRouteNumberParam","groupId","selectedStatus","getRouteParam","submissionsSource","getOrCreateSource","submissions","destroy","AddonModAssignSubmissionSwipeItemsManager","start","error","showErrorModal","back","fetchSubmission","finally","ngOnDestroy","_this$submissions2","canLeave","_this","_asyncToGenerator","submissionComponent","ionViewDidEnter","_this$submissionCompo","ionViewDidLeave","_this$submissionCompo2","_this2","getAssignment","blindmarking","revealidentities","gradeInfo","getModuleBasicGradeInfo","advancedgrading","method","undefined","refreshAllData","_this3","promises","push","invalidateAssignmentData","invalidateSubmissionData","invalidateAssignmentUserMappingsData","invalidateSubmissionStatusData","Promise","all","invalidateAndRefresh","refreshSubmission","refresher","complete","submitGrade","_this4","isTablet","showErrorModalDefault","_class","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","viewQuery","AddonModAssignSubmissionReviewPage_Query","rf","ctx","ɵɵelementStart","ɵɵelementEnd","ɵɵlistener","AddonModAssignSubmissionReviewPage_Template_ion_button_click_10_listener","ɵɵtext","AddonModAssignSubmissionReviewPage_Template_ion_refresher_ionRefresh_14_listener","$event","target","ɵɵtemplate","AddonModAssignSubmissionReviewPage_addon_mod_assign_submission_18_Template","ɵɵadvance","ɵɵpipeBind1","ɵɵtextInterpolate1","ɵɵpropertyInterpolate","getSelectedItemPathFromRoute"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/pages/submission-review/submission-review.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/pages/submission-review/submission-review.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSwipeNavigationItemsManager } from '@classes/items-management/swipe-navigation-items-manager';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { AddonModAssignListFilterName, AddonModAssignSubmissionsSource } from '../../classes/submissions-source';\nimport { AddonModAssignSubmissionComponent } from '../../components/submission/submission';\nimport { AddonModAssign, AddonModAssignAssign } from '../../services/assign';\nimport { CoreTime } from '@singletons/time';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { Translate } from '@singletons';\n\n/**\n * Page that displays a submission.\n */\n@Component({\n    selector: 'page-addon-mod-assign-submission-review',\n    templateUrl: 'submission-review.html',\n})\nexport class AddonModAssignSubmissionReviewPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(AddonModAssignSubmissionComponent) submissionComponent?: AddonModAssignSubmissionComponent;\n\n    title = ''; // Title to display.\n    submissions?: AddonModAssignSubmissionSwipeItemsManager;\n    moduleId!: number; // Module ID the submission belongs to.\n    courseId!: number; // Course ID the assignment belongs to.\n    submitId!: number; // User that did the submission.\n    blindId?: number; // Blinded user ID (if it's blinded).\n    loaded = false; // Whether data has been loaded.\n    canSaveGrades = false; // Whether the user can save grades.\n\n    protected assign?: AddonModAssignAssign; // The assignment the submission belongs to.\n    protected blindMarking = false; // Whether it uses blind marking.\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\n    protected logView: () => void;\n\n    constructor(protected route: ActivatedRoute) {\n        this.logView = CoreTime.once(() => {\n            if (!this.assign) {\n                return;\n            }\n\n            const id = this.blindMarking ? this.blindId : this.submitId;\n            const paramName = this.blindMarking ? 'blindid' : 'userid';\n\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM,\n                ws: 'mod_assign_get_submission_status',\n                name: Translate.instant('addon.mod_assign.subpagetitle', {\n                    contextname: this.assign.name,\n                    subpage: Translate.instant('addon.mod_assign.grading'),\n                }),\n                data: { id, assignid: this.assign.id, category: 'assign' },\n                url: `/mod/assign/view.php?id=${this.assign.cmid}&action=grader&${paramName}=${id}`,\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.route.queryParams.subscribe((params) => {\n            try {\n                this.moduleId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n                this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n                this.submitId = CoreNavigator.getRouteNumberParam('submitId') || 0;\n                this.blindId = CoreNavigator.getRouteNumberParam('blindId', { params });\n                const groupId = CoreNavigator.getRequiredRouteNumberParam('groupId');\n                const selectedStatus = CoreNavigator.getRouteParam<AddonModAssignListFilterName>('selectedStatus');\n                const submissionsSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                    AddonModAssignSubmissionsSource,\n                    [this.courseId, this.moduleId, selectedStatus],\n                );\n\n                this.submissions?.destroy();\n\n                submissionsSource.groupId = groupId;\n                this.submissions = new AddonModAssignSubmissionSwipeItemsManager(submissionsSource);\n\n                this.submissions.start();\n            } catch (error) {\n                CoreDomUtils.showErrorModal(error);\n\n                CoreNavigator.back();\n\n                return;\n            }\n\n            this.fetchSubmission().finally(() => {\n                this.logView();\n                this.loaded = true;\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.submissions?.destroy();\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (!this.submissionComponent || this.forceLeave) {\n            return true;\n        }\n\n        // Check if data has changed.\n        return this.submissionComponent.canLeave();\n    }\n\n    /**\n     * User entered the page.\n     */\n    ionViewDidEnter(): void {\n        this.submissionComponent?.ionViewDidEnter();\n    }\n\n    /**\n     * User left the page.\n     */\n    ionViewDidLeave(): void {\n        this.submissionComponent?.ionViewDidLeave();\n    }\n\n    /**\n     * Get the submission.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchSubmission(): Promise<void> {\n        this.assign = await AddonModAssign.getAssignment(this.courseId, this.moduleId);\n        this.title = this.assign.name;\n\n        this.blindMarking = !!this.assign.blindmarking && !this.assign.revealidentities;\n\n        const gradeInfo = await CoreCourse.getModuleBasicGradeInfo(this.moduleId);\n        if (!gradeInfo) {\n            return;\n        }\n\n        // Grades can be saved if simple grading.\n        if (gradeInfo.advancedgrading && gradeInfo.advancedgrading[0] &&\n                gradeInfo.advancedgrading[0].method !== undefined) {\n\n            const method = gradeInfo.advancedgrading[0].method || 'simple';\n            this.canSaveGrades = method == 'simple';\n        } else {\n            this.canSaveGrades = true;\n        }\n    }\n\n    /**\n     * Refresh all the data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async refreshAllData(): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModAssign.invalidateAssignmentData(this.courseId));\n        if (this.assign) {\n            promises.push(AddonModAssign.invalidateSubmissionData(this.assign.id));\n            promises.push(AddonModAssign.invalidateAssignmentUserMappingsData(this.assign.id));\n            promises.push(AddonModAssign.invalidateSubmissionStatusData(\n                this.assign.id,\n                this.submitId,\n                undefined,\n                this.blindMarking,\n            ));\n        }\n\n        try {\n            await Promise.all(promises);\n        } finally {\n            this.submissionComponent && this.submissionComponent.invalidateAndRefresh(true);\n\n            await this.fetchSubmission();\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    refreshSubmission(refresher?: HTMLIonRefresherElement): void {\n        this.refreshAllData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Submit a grade and feedback.\n     */\n    async submitGrade(): Promise<void> {\n        if (!this.submissionComponent) {\n            return;\n        }\n\n        try {\n            await this.submissionComponent.submitGrade();\n            // Grade submitted, leave the view if not in tablet.\n            if (!CoreScreen.isTablet) {\n                this.forceLeave = true;\n                CoreNavigator.back();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n        }\n    }\n\n}\n\n/**\n * Helper to manage swiping within a collection of submissions.\n */\nclass AddonModAssignSubmissionSwipeItemsManager extends CoreSwipeNavigationItemsManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return route.params.submitId;\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                <core-format-text [text]=\"title\" contextLevel=\"module\" [contextInstanceId]=\"moduleId\" [courseId]=\"courseId\" />\n            </h1>\n        </ion-title>\n\n        <ion-buttons slot=\"end\" />\n    </ion-toolbar>\n\n    <core-navbar-buttons slot=\"end\">\n        <ion-button [hidden]=\"!canSaveGrades\" fill=\"clear\" (click)=\"submitGrade()\">\n            {{ 'core.done' | translate }}\n        </ion-button>\n    </core-navbar-buttons>\n</ion-header>\n<ion-content [core-swipe-navigation]=\"submissions\">\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refreshSubmission($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"loaded\">\n        <addon-mod-assign-submission *ngIf=\"loaded\" [courseId]=\"courseId\" [moduleId]=\"moduleId\" [submitId]=\"submitId\" [blindId]=\"blindId\" />\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}