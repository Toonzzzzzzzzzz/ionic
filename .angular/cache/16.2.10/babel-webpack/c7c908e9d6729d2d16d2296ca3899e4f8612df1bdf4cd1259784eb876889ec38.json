{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUserTagAreaComponent } from '@features/user/components/tag-area/tag-area';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support tags.\n */\nexport class CoreUserTagAreaHandlerService {\n  constructor() {\n    this.name = 'CoreUserTagAreaHandler';\n    this.type = 'core/user';\n  }\n  /**\n   * Whether or not the handler is enabled on a site level.\n   *\n   * @returns Whether or not the handler is enabled on a site level.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * Parses the rendered content of a tag index and returns the items.\n   *\n   * @param content Rendered content.\n   * @returns Area items (or promise resolved with the items).\n   */\n  parseContent(content) {\n    const items = [];\n    const element = CoreDomUtils.convertToElement(content);\n    Array.from(element.querySelectorAll('div.user-box')).forEach(userbox => {\n      const avatarLink = userbox.querySelector('a:first-child');\n      if (!avatarLink) {\n        return;\n      }\n      const profileUrl = avatarLink.getAttribute('href') || '';\n      const match = profileUrl.match(/.*\\/user\\/(?:profile|view)\\.php\\?id=(\\d+)/);\n      if (!match) {\n        return;\n      }\n      const avatarImg = avatarLink.querySelector('img.userpicture');\n      const avatarUrl = avatarImg ? avatarImg.getAttribute('src') : '';\n      items.push({\n        avatarUrl,\n        heading: userbox.innerText,\n        details: [],\n        url: profileUrl,\n        user: {\n          id: Number(match[1]),\n          profileimageurl: avatarUrl || '',\n          fullname: userbox.innerText\n        }\n      });\n    });\n    return items;\n  }\n  /**\n   * Get the component to use to display items.\n   *\n   * @returns The component (or promise resolved with component) to use, undefined if not found.\n   */\n  getComponent() {\n    return CoreUserTagAreaComponent;\n  }\n}\n_class = CoreUserTagAreaHandlerService;\n_class.ɵfac = function CoreUserTagAreaHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreUserTagAreaHandler = makeSingleton(CoreUserTagAreaHandlerService);","map":{"version":3,"names":["CoreDomUtils","CoreUserTagAreaComponent","makeSingleton","CoreUserTagAreaHandlerService","constructor","name","type","isEnabled","_asyncToGenerator","parseContent","content","items","element","convertToElement","Array","from","querySelectorAll","forEach","userbox","avatarLink","querySelector","profileUrl","getAttribute","match","avatarImg","avatarUrl","push","heading","innerText","details","url","user","id","Number","profileimageurl","fullname","getComponent","factory","ɵfac","providedIn","CoreUserTagAreaHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/user/services/handlers/tag-area.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTagAreaHandler } from '@features/tag/services/tag-area-delegate';\nimport { CoreUserTagAreaComponent } from '@features/user/components/tag-area/tag-area';\nimport { CoreTagFeedElement } from '@features/tag/services/tag-helper';\nimport { CoreUserBasicData } from '../user';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support tags.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreUserTagAreaHandlerService implements CoreTagAreaHandler {\n\n    name = 'CoreUserTagAreaHandler';\n    type = 'core/user';\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @returns Whether or not the handler is enabled on a site level.\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Parses the rendered content of a tag index and returns the items.\n     *\n     * @param content Rendered content.\n     * @returns Area items (or promise resolved with the items).\n     */\n    parseContent(content: string): CoreUserTagFeedElement[] {\n        const items: CoreUserTagFeedElement[] = [];\n        const element = CoreDomUtils.convertToElement(content);\n\n        Array.from(element.querySelectorAll('div.user-box')).forEach((userbox: HTMLElement) => {\n            const avatarLink = userbox.querySelector('a:first-child');\n            if (!avatarLink) {\n                return;\n            }\n\n            const profileUrl = avatarLink.getAttribute('href') || '';\n            const match = profileUrl.match(/.*\\/user\\/(?:profile|view)\\.php\\?id=(\\d+)/);\n            if (!match) {\n                return;\n            }\n\n            const avatarImg = avatarLink.querySelector('img.userpicture');\n            const avatarUrl = avatarImg ? avatarImg.getAttribute('src') : '';\n\n            items.push({\n                avatarUrl,\n                heading: userbox.innerText,\n                details: [],\n                url: profileUrl,\n                user: {\n                    id: Number(match[1]),\n                    profileimageurl: avatarUrl || '',\n                    fullname: userbox.innerText,\n                },\n            });\n        });\n\n        return items;\n    }\n\n    /**\n     * Get the component to use to display items.\n     *\n     * @returns The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(): Type<unknown> | Promise<Type<unknown>> {\n        return CoreUserTagAreaComponent;\n    }\n\n}\n\nexport const CoreUserTagAreaHandler = makeSingleton(CoreUserTagAreaHandlerService);\n\nexport type CoreUserTagFeedElement = CoreTagFeedElement & {\n    user: CoreUserBasicData;\n};\n"],"mappings":";;AAgBA,SAASA,YAAY,QAAQ,qBAAqB;AAElD,SAASC,wBAAwB,QAAQ,6CAA6C;AAGtF,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,6BAA6B;EAD1CC,YAAA;IAGI,KAAAC,IAAI,GAAG,wBAAwB;IAC/B,KAAAC,IAAI,GAAG,WAAW;;EAElB;;;;;EAKMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;;;;EAMAC,YAAYA,CAACC,OAAe;IACxB,MAAMC,KAAK,GAA6B,EAAE;IAC1C,MAAMC,OAAO,GAAGZ,YAAY,CAACa,gBAAgB,CAACH,OAAO,CAAC;IAEtDI,KAAK,CAACC,IAAI,CAACH,OAAO,CAACI,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAACC,OAAO,CAAEC,OAAoB,IAAI;MAClF,MAAMC,UAAU,GAAGD,OAAO,CAACE,aAAa,CAAC,eAAe,CAAC;MACzD,IAAI,CAACD,UAAU,EAAE;QACb;;MAGJ,MAAME,UAAU,GAAGF,UAAU,CAACG,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE;MACxD,MAAMC,KAAK,GAAGF,UAAU,CAACE,KAAK,CAAC,2CAA2C,CAAC;MAC3E,IAAI,CAACA,KAAK,EAAE;QACR;;MAGJ,MAAMC,SAAS,GAAGL,UAAU,CAACC,aAAa,CAAC,iBAAiB,CAAC;MAC7D,MAAMK,SAAS,GAAGD,SAAS,GAAGA,SAAS,CAACF,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE;MAEhEX,KAAK,CAACe,IAAI,CAAC;QACPD,SAAS;QACTE,OAAO,EAAET,OAAO,CAACU,SAAS;QAC1BC,OAAO,EAAE,EAAE;QACXC,GAAG,EAAET,UAAU;QACfU,IAAI,EAAE;UACFC,EAAE,EAAEC,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC;UACpBW,eAAe,EAAET,SAAS,IAAI,EAAE;UAChCU,QAAQ,EAAEjB,OAAO,CAACU;;OAEzB,CAAC;IACN,CAAC,CAAC;IAEF,OAAOjB,KAAK;EAChB;EAEA;;;;;EAKAyB,YAAYA,CAAA;IACR,OAAOnC,wBAAwB;EACnC;;SA9DSE,6BAA6B;;mBAA7BA,MAA6B;AAAA;;SAA7BA,MAA6B;EAAAkC,OAAA,EAA7BlC,MAA6B,CAAAmC,IAAA;EAAAC,UAAA,EADhB;AAAM;AAmEhC,OAAO,MAAMC,sBAAsB,GAAGtC,aAAa,CAACC,6BAA6B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}