{"ast":null,"code":"var _class;\nimport { CoreFilterDefaultHandler } from '@features/filter/services/handlers/default-filter';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support the Algebra notation filter.\n */\nexport class AddonFilterAlgebraHandlerService extends CoreFilterDefaultHandler {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonFilterAlgebraHandler';\n    this.filterName = 'algebra';\n  }\n  /**\n   * Check if the filter should be applied in a certain site based on some filter options.\n   *\n   * @param options Options.\n   * @param site Site.\n   * @returns Whether filter should be applied.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldBeApplied(options, site) {\n    // This filter is handled by Moodle, nothing to do in the app.\n    return false;\n  }\n}\n_class = AddonFilterAlgebraHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonFilterAlgebraHandlerService_BaseFactory;\n  return function AddonFilterAlgebraHandlerService_Factory(t) {\n    return (ɵAddonFilterAlgebraHandlerService_BaseFactory || (ɵAddonFilterAlgebraHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonFilterAlgebraHandler = makeSingleton(AddonFilterAlgebraHandlerService);","map":{"version":3,"names":["CoreFilterDefaultHandler","makeSingleton","AddonFilterAlgebraHandlerService","constructor","name","filterName","shouldBeApplied","options","site","t","factory","ɵfac","providedIn","AddonFilterAlgebraHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/filter/algebra/services/handlers/algebra.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreFilterDefaultHandler } from '@features/filter/services/handlers/default-filter';\nimport { CoreFilterFormatTextOptions } from '@features/filter/services/filter';\nimport { CoreSite } from '@classes/sites/site';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support the Algebra notation filter.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonFilterAlgebraHandlerService extends CoreFilterDefaultHandler {\n\n    name = 'AddonFilterAlgebraHandler';\n    filterName = 'algebra';\n\n    /**\n     * Check if the filter should be applied in a certain site based on some filter options.\n     *\n     * @param options Options.\n     * @param site Site.\n     * @returns Whether filter should be applied.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    shouldBeApplied(options: CoreFilterFormatTextOptions, site?: CoreSite): boolean {\n        // This filter is handled by Moodle, nothing to do in the app.\n        return false;\n    }\n\n}\n\nexport const AddonFilterAlgebraHandler = makeSingleton(AddonFilterAlgebraHandlerService);\n"],"mappings":";AAgBA,SAASA,wBAAwB,QAAQ,mDAAmD;AAG5F,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,gCAAiC,SAAQF,wBAAwB;EAD9EG,YAAA;;IAGI,KAAAC,IAAI,GAAG,2BAA2B;IAClC,KAAAC,UAAU,GAAG,SAAS;;EAEtB;;;;;;;EAOA;EACAC,eAAeA,CAACC,OAAoC,EAAEC,IAAe;IACjE;IACA,OAAO,KAAK;EAChB;;SAhBSN,gCAAiC;;;;uIAAjCA,MAAgC,IAAAO,CAAA,IAAhCP,MAAgC;EAAA;AAAA;;SAAhCA,MAAgC;EAAAQ,OAAA,EAAhCR,MAAgC,CAAAS,IAAA;EAAAC,UAAA,EADnB;AAAM;AAqBhC,OAAO,MAAMC,yBAAyB,GAAGZ,aAAa,CAACC,gCAAgC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}