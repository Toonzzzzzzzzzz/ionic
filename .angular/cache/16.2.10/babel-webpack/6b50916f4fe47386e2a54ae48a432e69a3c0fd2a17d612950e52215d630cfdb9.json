{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\n/**\n * Chooser plugin wrapper.\n */\nexport class Chooser {\n  /**\n   * Displays native prompt for user to select a file.\n   *\n   * @param accept Optional MIME type filter (e.g. 'image/gif,video/*').\n   * @returns Selected file's raw binary data, base64-encoded data: URI, MIME type, display name, and original URI.\n   * If user cancels, promise will be resolved as undefined.\n   * If error occurs, promise will be rejected.\n   */\n  getFile(accept) {\n    return cordova.chooser.getFile(accept);\n  }\n  /**\n   * Displays native prompt for user to select a file.\n   *\n   * @param accept Optional MIME type filter (e.g. 'image/gif,video/*').\n   * @returns Selected file's MIME type, display name, and original URI.\n   * If user cancels, promise will be resolved as undefined.\n   * If error occurs, promise will be rejected.\n   */\n  getFileMetadata(accept) {\n    return cordova.chooser.getFileMetadata(accept);\n  }\n}\n_class = Chooser;\n_class.ɵfac = function Chooser_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Chooser","getFile","accept","cordova","chooser","getFileMetadata","factory","ɵfac","providedIn"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/native/plugins/chooser.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\n/**\n * Chooser plugin wrapper.\n */\n@Injectable({ providedIn: 'root' })\nexport class Chooser {\n\n    /**\n     * Displays native prompt for user to select a file.\n     *\n     * @param accept Optional MIME type filter (e.g. 'image/gif,video/*').\n     * @returns Selected file's raw binary data, base64-encoded data: URI, MIME type, display name, and original URI.\n     * If user cancels, promise will be resolved as undefined.\n     * If error occurs, promise will be rejected.\n     */\n    getFile(accept?: string): Promise<IChooserResult | undefined> {\n        return cordova.chooser.getFile(accept);\n    }\n\n    /**\n     * Displays native prompt for user to select a file.\n     *\n     * @param accept Optional MIME type filter (e.g. 'image/gif,video/*').\n     * @returns Selected file's MIME type, display name, and original URI.\n     * If user cancels, promise will be resolved as undefined.\n     * If error occurs, promise will be rejected.\n     */\n    getFileMetadata(accept?: string): Promise<IChooserResult | undefined> {\n        return cordova.chooser.getFileMetadata(accept);\n    }\n\n}\n"],"mappings":";;AAgBA;;;AAIA,OAAM,MAAOA,OAAO;EAEhB;;;;;;;;EAQAC,OAAOA,CAACC,MAAe;IACnB,OAAOC,OAAO,CAACC,OAAO,CAACH,OAAO,CAACC,MAAM,CAAC;EAC1C;EAEA;;;;;;;;EAQAG,eAAeA,CAACH,MAAe;IAC3B,OAAOC,OAAO,CAACC,OAAO,CAACC,eAAe,CAACH,MAAM,CAAC;EAClD;;SAxBSF,OAAO;;mBAAPA,MAAO;AAAA;;SAAPA,MAAO;EAAAM,OAAA,EAAPN,MAAO,CAAAO,IAAA;EAAAC,UAAA,EADM;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}