{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { AddonModAssign, AddonModAssignProvider } from '@addons/mod/assign/services/assign';\nimport { AddonModAssignHelper } from '@addons/mod/assign/services/assign-helper';\nimport { AddonModAssignOffline } from '@addons/mod/assign/services/assign-offline';\nimport { CoreFileSession } from '@services/file-session';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModAssignSubmissionFileHandlerService } from '../services/handler';\nimport { AddonModAssignSubmissionPluginBaseComponent } from '@addons/mod/assign/classes/base-submission-plugin-component';\nimport * as i0 from \"@angular/core\";\nfunction AddonModAssignSubmissionFileComponent_ion_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 2)(1, \"ion-label\")(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelement(5, \"core-files\", 3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.plugin.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"files\", ctx_r0.files)(\"component\", ctx_r0.component)(\"componentId\", ctx_r0.assign.cmid)(\"alwaysDownload\", true);\n  }\n}\nfunction AddonModAssignSubmissionFileComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item-divider\", 4)(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(5, \"core-attachments\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"sticky\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.plugin.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"files\", ctx_r1.files)(\"maxSize\", ctx_r1.maxSize)(\"maxSubmissions\", ctx_r1.maxSubmissions)(\"courseId\", ctx_r1.assign.course)(\"component\", ctx_r1.component)(\"componentId\", ctx_r1.assign.cmid)(\"acceptedTypes\", ctx_r1.acceptedTypes)(\"allowOffline\", ctx_r1.allowOffline);\n  }\n}\n/**\n * Component to render a file submission plugin.\n */\nexport class AddonModAssignSubmissionFileComponent extends AddonModAssignSubmissionPluginBaseComponent {\n  constructor() {\n    super(...arguments);\n    this.component = AddonModAssignProvider.COMPONENT;\n    this.files = [];\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$configs, _this$configs2, _this$configs3;\n      _this.acceptedTypes = (_this$configs = _this.configs) === null || _this$configs === void 0 ? void 0 : _this$configs.filetypeslist;\n      _this.maxSize = (_this$configs2 = _this.configs) !== null && _this$configs2 !== void 0 && _this$configs2.maxsubmissionsizebytes ? parseInt(_this.configs.maxsubmissionsizebytes, 10) : undefined;\n      _this.maxSubmissions = (_this$configs3 = _this.configs) !== null && _this$configs3 !== void 0 && _this$configs3.maxfilesubmissions ? parseInt(_this.configs.maxfilesubmissions, 10) : undefined;\n      // Get the offline data.\n      const filesData = yield CoreUtils.ignoreErrors(AddonModAssignOffline.getSubmission(_this.assign.id), undefined);\n      try {\n        if (filesData && filesData.plugindata && filesData.plugindata.files_filemanager) {\n          const offlineDataFiles = filesData.plugindata.files_filemanager;\n          // It has offline data.\n          let offlineFiles = [];\n          if (offlineDataFiles.offline) {\n            offlineFiles = yield CoreUtils.ignoreErrors(AddonModAssignHelper.getStoredSubmissionFiles(_this.assign.id, AddonModAssignSubmissionFileHandlerService.FOLDER_NAME), []);\n          }\n          _this.files = offlineDataFiles.online || [];\n          _this.files = _this.files.concat(offlineFiles);\n        } else {\n          // No offline data, get the online files.\n          _this.files = AddonModAssign.getSubmissionPluginAttachments(_this.plugin);\n        }\n      } finally {\n        CoreFileSession.setFiles(_this.component, _this.assign.id, _this.files);\n      }\n    })();\n  }\n}\n_class = AddonModAssignSubmissionFileComponent;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModAssignSubmissionFileComponent_BaseFactory;\n  return function AddonModAssignSubmissionFileComponent_Factory(t) {\n    return (ɵAddonModAssignSubmissionFileComponent_BaseFactory || (ɵAddonModAssignSubmissionFileComponent_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-assign-submission-file\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ion-text-wrap\"], [3, \"files\", \"component\", \"componentId\", \"alwaysDownload\"], [1, \"ion-text-wrap\", 3, \"sticky\"], [3, \"files\", \"maxSize\", \"maxSubmissions\", \"courseId\", \"component\", \"componentId\", \"acceptedTypes\", \"allowOffline\"]],\n  template: function AddonModAssignSubmissionFileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddonModAssignSubmissionFileComponent_ion_item_0_Template, 6, 5, \"ion-item\", 0);\n      i0.ɵɵtemplate(1, AddonModAssignSubmissionFileComponent_div_1_Template, 6, 10, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.files && ctx.files.length && !ctx.edit);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.edit);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonModAssign","AddonModAssignProvider","AddonModAssignHelper","AddonModAssignOffline","CoreFileSession","CoreUtils","AddonModAssignSubmissionFileHandlerService","AddonModAssignSubmissionPluginBaseComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","plugin","name","ɵɵproperty","files","component","assign","cmid","ctx_r1","maxSize","maxSubmissions","course","acceptedTypes","allowOffline","AddonModAssignSubmissionFileComponent","constructor","COMPONENT","ngOnInit","_this","_asyncToGenerator","_this$configs","_this$configs2","_this$configs3","configs","filetypeslist","maxsubmissionsizebytes","parseInt","undefined","maxfilesubmissions","filesData","ignoreErrors","getSubmission","id","plugindata","files_filemanager","offlineDataFiles","offlineFiles","offline","getStoredSubmissionFiles","FOLDER_NAME","online","concat","getSubmissionPluginAttachments","setFiles","t","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonModAssignSubmissionFileComponent_Template","rf","ctx","ɵɵtemplate","AddonModAssignSubmissionFileComponent_ion_item_0_Template","AddonModAssignSubmissionFileComponent_div_1_Template","length","edit"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/submission/file/component/file.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/submission/file/component/addon-mod-assign-submission-file.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonModAssign, AddonModAssignProvider } from '@addons/mod/assign/services/assign';\nimport { AddonModAssignHelper } from '@addons/mod/assign/services/assign-helper';\nimport { AddonModAssignOffline } from '@addons/mod/assign/services/assign-offline';\nimport { Component, OnInit } from '@angular/core';\nimport { CoreFileUploaderStoreFilesResult } from '@features/fileuploader/services/fileuploader';\nimport { CoreFileSession } from '@services/file-session';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonModAssignSubmissionFileHandlerService } from '../services/handler';\nimport { FileEntry } from '@awesome-cordova-plugins/file/ngx';\nimport { AddonModAssignSubmissionPluginBaseComponent } from '@addons/mod/assign/classes/base-submission-plugin-component';\nimport { CoreFileEntry } from '@services/file-helper';\n\n/**\n * Component to render a file submission plugin.\n */\n@Component({\n    selector: 'addon-mod-assign-submission-file',\n    templateUrl: 'addon-mod-assign-submission-file.html',\n})\nexport class AddonModAssignSubmissionFileComponent extends AddonModAssignSubmissionPluginBaseComponent implements OnInit {\n\n    component = AddonModAssignProvider.COMPONENT;\n    files: CoreFileEntry[] = [];\n\n    maxSize?: number;\n    acceptedTypes?: string;\n    maxSubmissions?: number;\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.acceptedTypes = this.configs?.filetypeslist;\n        this.maxSize = this.configs?.maxsubmissionsizebytes\n            ? parseInt(this.configs.maxsubmissionsizebytes, 10)\n            : undefined;\n        this.maxSubmissions = this.configs?.maxfilesubmissions\n            ? parseInt(this.configs.maxfilesubmissions, 10)\n            : undefined;\n\n        // Get the offline data.\n        const filesData = await CoreUtils.ignoreErrors(\n            AddonModAssignOffline.getSubmission(this.assign.id),\n            undefined,\n        );\n\n        try {\n            if (filesData && filesData.plugindata && filesData.plugindata.files_filemanager) {\n                const offlineDataFiles = <CoreFileUploaderStoreFilesResult>filesData.plugindata.files_filemanager;\n                // It has offline data.\n                let offlineFiles: FileEntry[] = [];\n                if (offlineDataFiles.offline) {\n                    offlineFiles = <FileEntry[]>await CoreUtils.ignoreErrors(\n                        AddonModAssignHelper.getStoredSubmissionFiles(\n                            this.assign.id,\n                            AddonModAssignSubmissionFileHandlerService.FOLDER_NAME,\n                        ),\n                        [],\n                    );\n                }\n\n                this.files = offlineDataFiles.online || [];\n                this.files = this.files.concat(offlineFiles);\n            } else {\n                // No offline data, get the online files.\n                this.files = AddonModAssign.getSubmissionPluginAttachments(this.plugin);\n            }\n        } finally {\n            CoreFileSession.setFiles(this.component, this.assign.id, this.files);\n        }\n    }\n\n}\n","<!-- Read only. -->\n<ion-item class=\"ion-text-wrap\" *ngIf=\"files && files.length && !edit\">\n    <ion-label>\n        <h2>{{ plugin.name }}</h2>\n        <div>\n            <core-files [files]=\"files\" [component]=\"component\" [componentId]=\"assign.cmid\" [alwaysDownload]=\"true\" />\n        </div>\n    </ion-label>\n</ion-item>\n\n<!-- Edit -->\n<div *ngIf=\"edit\">\n    <ion-item-divider class=\"ion-text-wrap\" [sticky]=\"true\">\n        <ion-label>\n            <h2>{{ plugin.name }}</h2>\n        </ion-label>\n    </ion-item-divider>\n    <core-attachments [files]=\"files\" [maxSize]=\"maxSize\" [maxSubmissions]=\"maxSubmissions\" [courseId]=\"assign.course\"\n        [component]=\"component\" [componentId]=\"assign.cmid\" [acceptedTypes]=\"acceptedTypes\" [allowOffline]=\"allowOffline\" />\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}