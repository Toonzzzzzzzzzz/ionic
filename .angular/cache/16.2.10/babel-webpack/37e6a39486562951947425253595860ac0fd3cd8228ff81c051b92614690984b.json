{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { CoreDom } from '@singletons/dom';\nimport * as i0 from \"@angular/core\";\n/**\n * Directive to emulate click and key actions following aria role button.\n */\nexport class CoreAriaButtonClickDirective {\n  constructor(element) {\n    this.disabled = false;\n    this.ariaButtonClick = new EventEmitter();\n    this.element = element.nativeElement;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    CoreDom.initializeClickableElementA11y(this.element, event => this.ariaButtonClick.emit(event));\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnChanges(changes) {\n    if (!changes.disabled) {\n      return;\n    }\n    if (this.element.getAttribute('tabindex') === '0' && this.disabled) {\n      this.element.setAttribute('tabindex', '-1');\n    }\n    if (this.element.getAttribute('tabindex') === '-1' && !this.disabled) {\n      this.element.setAttribute('tabindex', '0');\n    }\n  }\n}\n_class = CoreAriaButtonClickDirective;\n_class.ɵfac = function CoreAriaButtonClickDirective_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: _class,\n  selectors: [[\"\", \"ariaButtonClick\", \"\"]],\n  inputs: {\n    disabled: \"disabled\"\n  },\n  outputs: {\n    ariaButtonClick: \"ariaButtonClick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});","map":{"version":3,"names":["EventEmitter","CoreDom","CoreAriaButtonClickDirective","constructor","element","disabled","ariaButtonClick","nativeElement","ngOnInit","initializeClickableElementA11y","event","emit","ngOnChanges","changes","getAttribute","setAttribute","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/directives/aria-button.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, ElementRef, OnInit, Output, EventEmitter, OnChanges, SimpleChanges, Input } from '@angular/core';\nimport { CoreDom } from '@singletons/dom';\n\n/**\n * Directive to emulate click and key actions following aria role button.\n */\n@Directive({\n    selector: '[ariaButtonClick]',\n})\nexport class CoreAriaButtonClickDirective implements OnInit, OnChanges {\n\n    protected element: HTMLElement;\n\n    @Input() disabled = false;\n    @Output() ariaButtonClick = new EventEmitter();\n\n    constructor(\n        element: ElementRef,\n    ) {\n        this.element = element.nativeElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        CoreDom.initializeClickableElementA11y(this.element, (event) => this.ariaButtonClick.emit(event));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!changes.disabled) {\n            return;\n        }\n\n        if (this.element.getAttribute('tabindex') === '0' && this.disabled) {\n            this.element.setAttribute('tabindex', '-1');\n        }\n\n        if (this.element.getAttribute('tabindex') === '-1' && !this.disabled) {\n            this.element.setAttribute('tabindex', '0');\n        }\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAgDA,YAAY,QAAyC,eAAe;AACpH,SAASC,OAAO,QAAQ,iBAAiB;;AAEzC;;;AAMA,OAAM,MAAOC,4BAA4B;EAOrCC,YACIC,OAAmB;IAJd,KAAAC,QAAQ,GAAG,KAAK;IACf,KAAAC,eAAe,GAAG,IAAIN,YAAY,EAAE;IAK1C,IAAI,CAACI,OAAO,GAAGA,OAAO,CAACG,aAAa;EACxC;EAEA;;;EAGAC,QAAQA,CAAA;IACJP,OAAO,CAACQ,8BAA8B,CAAC,IAAI,CAACL,OAAO,EAAGM,KAAK,IAAK,IAAI,CAACJ,eAAe,CAACK,IAAI,CAACD,KAAK,CAAC,CAAC;EACrG;EAEA;;;EAGAE,WAAWA,CAACC,OAAsB;IAC9B,IAAI,CAACA,OAAO,CAACR,QAAQ,EAAE;MACnB;;IAGJ,IAAI,IAAI,CAACD,OAAO,CAACU,YAAY,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,IAAI,CAACT,QAAQ,EAAE;MAChE,IAAI,CAACD,OAAO,CAACW,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;;IAG/C,IAAI,IAAI,CAACX,OAAO,CAACU,YAAY,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAACT,QAAQ,EAAE;MAClE,IAAI,CAACD,OAAO,CAACW,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;;EAElD;;SAnCSb,4BAA4B;;mBAA5BA,MAA4B,EAAAc,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;;QAA5BhB,MAA4B;EAAAiB,SAAA;EAAAC,MAAA;IAAAf,QAAA;EAAA;EAAAgB,OAAA;IAAAf,eAAA;EAAA;EAAAgB,QAAA,GAAAN,EAAA,CAAAO,oBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}