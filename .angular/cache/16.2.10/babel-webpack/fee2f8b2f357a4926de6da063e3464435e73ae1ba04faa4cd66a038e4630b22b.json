{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonModQuizAccessTimeLimitComponent } from '../../component/timelimit';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support time limit access rule.\n */\nexport class AddonModQuizAccessTimeLimitHandlerService {\n  constructor() {\n    this.name = 'AddonModQuizAccessTimeLimit';\n    this.ruleName = 'quizaccess_timelimit';\n  }\n  /**\n   * @inheritdoc\n   */\n  getPreflightComponent() {\n    return AddonModQuizAccessTimeLimitComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isPreflightCheckRequired(quiz, attempt) {\n    // Warning only required if the attempt is not already started.\n    return !attempt;\n  }\n  /**\n   * @inheritdoc\n   */\n  shouldShowTimeLeft(attempt, endTime, timeNow) {\n    // If this is a teacher preview after the time limit expires, don't show the time left.\n    return !(attempt.preview && timeNow > endTime);\n  }\n}\n_class = AddonModQuizAccessTimeLimitHandlerService;\n_class.ɵfac = function AddonModQuizAccessTimeLimitHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModQuizAccessTimeLimitHandler = makeSingleton(AddonModQuizAccessTimeLimitHandlerService);","map":{"version":3,"names":["AddonModQuizAccessTimeLimitComponent","makeSingleton","AddonModQuizAccessTimeLimitHandlerService","constructor","name","ruleName","getPreflightComponent","isEnabled","_asyncToGenerator","isPreflightCheckRequired","quiz","attempt","shouldShowTimeLeft","endTime","timeNow","preview","factory","ɵfac","providedIn","AddonModQuizAccessTimeLimitHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/quiz/accessrules/timelimit/services/handlers/timelimit.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { AddonModQuizAccessRuleHandler } from '@addons/mod/quiz/services/access-rules-delegate';\nimport { AddonModQuizAttemptWSData, AddonModQuizQuizWSData } from '@addons/mod/quiz/services/quiz';\nimport { AddonModQuizAccessTimeLimitComponent } from '../../component/timelimit';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support time limit access rule.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModQuizAccessTimeLimitHandlerService implements AddonModQuizAccessRuleHandler {\n\n    name = 'AddonModQuizAccessTimeLimit';\n    ruleName = 'quizaccess_timelimit';\n\n    /**\n     * @inheritdoc\n     */\n    getPreflightComponent(): Type<unknown> | Promise<Type<unknown>> {\n        return AddonModQuizAccessTimeLimitComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isPreflightCheckRequired(\n        quiz: AddonModQuizQuizWSData,\n        attempt?: AddonModQuizAttemptWSData,\n    ): boolean | Promise<boolean> {\n        // Warning only required if the attempt is not already started.\n        return !attempt;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    shouldShowTimeLeft(attempt: AddonModQuizAttemptWSData, endTime: number, timeNow: number): boolean {\n        // If this is a teacher preview after the time limit expires, don't show the time left.\n        return !(attempt.preview && timeNow > endTime);\n    }\n\n}\n\nexport const AddonModQuizAccessTimeLimitHandler = makeSingleton(AddonModQuizAccessTimeLimitHandlerService);\n"],"mappings":";;AAkBA,SAASA,oCAAoC,QAAQ,2BAA2B;AAChF,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,yCAAyC;EADtDC,YAAA;IAGI,KAAAC,IAAI,GAAG,6BAA6B;IACpC,KAAAC,QAAQ,GAAG,sBAAsB;;EAEjC;;;EAGAC,qBAAqBA,CAAA;IACjB,OAAON,oCAAoC;EAC/C;EAEA;;;EAGMO,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGAC,wBAAwBA,CACpBC,IAA4B,EAC5BC,OAAmC;IAEnC;IACA,OAAO,CAACA,OAAO;EACnB;EAEA;;;EAGAC,kBAAkBA,CAACD,OAAkC,EAAEE,OAAe,EAAEC,OAAe;IACnF;IACA,OAAO,EAAEH,OAAO,CAACI,OAAO,IAAID,OAAO,GAAGD,OAAO,CAAC;EAClD;;SApCSX,yCAAyC;;mBAAzCA,MAAyC;AAAA;;SAAzCA,MAAyC;EAAAc,OAAA,EAAzCd,MAAyC,CAAAe,IAAA;EAAAC,UAAA,EAD5B;AAAM;AAyChC,OAAO,MAAMC,kCAAkC,GAAGlB,aAAa,CAACC,yCAAyC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}