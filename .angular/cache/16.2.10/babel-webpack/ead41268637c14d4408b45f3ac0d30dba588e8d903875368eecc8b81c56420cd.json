{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\n/**\n * Pipe to search URLs that are not inside <a> tags and add the corresponding <a> tags.\n */\nexport class CoreCreateLinksPipe {\n  /**\n   * Takes some text and adds anchor tags to all links that aren't inside anchors.\n   *\n   * @param text Text to treat.\n   * @returns Treated text.\n   */\n  transform(text) {\n    return text.replace(CoreCreateLinksPipe.replacePattern, '<a href=\"$1\">$1</a>');\n  }\n}\n_class = CoreCreateLinksPipe;\n_class.replacePattern = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])(?![^<]*>|[^<>]*<\\/)/gim;\n_class.ɵfac = function CoreCreateLinksPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"coreCreateLinks\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["CoreCreateLinksPipe","transform","text","replace","replacePattern","_class","pure"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/pipes/create-links.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to search URLs that are not inside <a> tags and add the corresponding <a> tags.\n */\n@Pipe({\n    name: 'coreCreateLinks',\n})\nexport class CoreCreateLinksPipe implements PipeTransform {\n\n    protected static replacePattern = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])(?![^<]*>|[^<>]*<\\/)/gim;\n\n    /**\n     * Takes some text and adds anchor tags to all links that aren't inside anchors.\n     *\n     * @param text Text to treat.\n     * @returns Treated text.\n     */\n    transform(text: string): string {\n        return text.replace(CoreCreateLinksPipe.replacePattern, '<a href=\"$1\">$1</a>');\n    }\n\n}\n"],"mappings":";;AAgBA;;;AAMA,OAAM,MAAOA,mBAAmB;EAI5B;;;;;;EAMAC,SAASA,CAACC,IAAY;IAClB,OAAOA,IAAI,CAACC,OAAO,CAACH,mBAAmB,CAACI,cAAc,EAAE,qBAAqB,CAAC;EAClF;;SAZSJ,mBAAmB;AAEXK,MAAA,CAAAD,cAAc,GAAG,2FAA2F;;mBAFpHJ,MAAmB;AAAA;;;QAAnBA,MAAmB;EAAAM,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}