{"ast":null,"code":"var _class;\nimport { CoreContentLinksModuleIndexHandler } from '@features/contentlinks/classes/module-index-handler';\nimport { makeSingleton } from '@singletons';\nimport { AddonModBook } from '../book';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to treat links to book.\n */\nexport class AddonModBookIndexLinkHandlerService extends CoreContentLinksModuleIndexHandler {\n  constructor() {\n    super('AddonModBook', 'book', 'b');\n    this.name = 'AddonModBookLinkHandler';\n  }\n  /**\n   * @inheritdoc\n   */\n  getModNavOptions(url, params) {\n    const chapterId = params.chapterid ? parseInt(params.chapterid, 10) : undefined;\n    return {\n      nextNavigation: {\n        path: 'contents',\n        options: {\n          params: {\n            chapterId\n          }\n        }\n      }\n    };\n  }\n  /**\n   * @inheritdoc\n   */\n  getPageParams(url, params) {\n    return params.chapterid ? {\n      chapterId: parseInt(params.chapterid, 10)\n    } : {};\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled(siteId) {\n    return AddonModBook.isPluginEnabled(siteId);\n  }\n}\n_class = AddonModBookIndexLinkHandlerService;\n_class.ɵfac = function AddonModBookIndexLinkHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModBookIndexLinkHandler = makeSingleton(AddonModBookIndexLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksModuleIndexHandler","makeSingleton","AddonModBook","AddonModBookIndexLinkHandlerService","constructor","name","getModNavOptions","url","params","chapterId","chapterid","parseInt","undefined","nextNavigation","path","options","getPageParams","isEnabled","siteId","isPluginEnabled","factory","ɵfac","providedIn","AddonModBookIndexLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/book/services/handlers/index-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { CoreContentLinksModuleIndexHandler } from '@features/contentlinks/classes/module-index-handler';\nimport { CoreNavigationOptions } from '@services/navigator';\nimport { makeSingleton } from '@singletons';\nimport { AddonModBook } from '../book';\n\n/**\n * Handler to treat links to book.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModBookIndexLinkHandlerService extends CoreContentLinksModuleIndexHandler {\n\n    name = 'AddonModBookLinkHandler';\n\n    constructor() {\n        super('AddonModBook', 'book', 'b');\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getModNavOptions(url: string, params: Record<string, string>): CoreNavigationOptions {\n        const chapterId = params.chapterid ? parseInt(params.chapterid, 10) : undefined;\n\n        return {\n            nextNavigation: {\n                path: 'contents',\n                options: {\n                    params: {\n                        chapterId,\n                    },\n                },\n            },\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getPageParams(url: string, params: Record<string, string>): Params {\n        return params.chapterid ? { chapterId: parseInt(params.chapterid, 10) } : {};\n    }\n\n    /**\n     * @inheritdoc\n     */\n    isEnabled(siteId: string): Promise<boolean> {\n        return AddonModBook.isPluginEnabled(siteId);\n    }\n\n}\n\nexport const AddonModBookIndexLinkHandler = makeSingleton(AddonModBookIndexLinkHandlerService);\n"],"mappings":";AAgBA,SAASA,kCAAkC,QAAQ,qDAAqD;AAExG,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,YAAY,QAAQ,SAAS;;AAEtC;;;AAIA,OAAM,MAAOC,mCAAoC,SAAQH,kCAAkC;EAIvFI,YAAA;IACI,KAAK,CAAC,cAAc,EAAE,MAAM,EAAE,GAAG,CAAC;IAHtC,KAAAC,IAAI,GAAG,yBAAyB;EAIhC;EAEA;;;EAGAC,gBAAgBA,CAACC,GAAW,EAAEC,MAA8B;IACxD,MAAMC,SAAS,GAAGD,MAAM,CAACE,SAAS,GAAGC,QAAQ,CAACH,MAAM,CAACE,SAAS,EAAE,EAAE,CAAC,GAAGE,SAAS;IAE/E,OAAO;MACHC,cAAc,EAAE;QACZC,IAAI,EAAE,UAAU;QAChBC,OAAO,EAAE;UACLP,MAAM,EAAE;YACJC;;;;KAIf;EACL;EAEA;;;EAGAO,aAAaA,CAACT,GAAW,EAAEC,MAA8B;IACrD,OAAOA,MAAM,CAACE,SAAS,GAAG;MAAED,SAAS,EAAEE,QAAQ,CAACH,MAAM,CAACE,SAAS,EAAE,EAAE;IAAC,CAAE,GAAG,EAAE;EAChF;EAEA;;;EAGAO,SAASA,CAACC,MAAc;IACpB,OAAOhB,YAAY,CAACiB,eAAe,CAACD,MAAM,CAAC;EAC/C;;SAtCSf,mCAAoC;;mBAApCA,MAAmC;AAAA;;SAAnCA,MAAmC;EAAAiB,OAAA,EAAnCjB,MAAmC,CAAAkB,IAAA;EAAAC,UAAA,EADtB;AAAM;AA2ChC,OAAO,MAAMC,4BAA4B,GAAGtB,aAAa,CAACE,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}