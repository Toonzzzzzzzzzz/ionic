{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreTagHelper } from '@features/tag/services/tag-helper';\nimport { CoreTagFeedComponent } from '@features/tag/components/feed/feed';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support tags.\n */\nexport class CoreCourseModulesTagAreaHandlerService {\n  constructor() {\n    this.name = 'CoreCourseModulesTagAreaHandler';\n    this.type = 'core/course_modules';\n  }\n  /**\n   * Whether or not the handler is enabled on a site level.\n   *\n   * @returns Whether or not the handler is enabled on a site level.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * Parses the rendered content of a tag index and returns the items.\n   *\n   * @param content Rendered content.\n   * @returns Area items (or promise resolved with the items).\n   */\n  parseContent(content) {\n    return CoreTagHelper.parseFeedContent(content);\n  }\n  /**\n   * Get the component to use to display items.\n   *\n   * @returns The component (or promise resolved with component) to use, undefined if not found.\n   */\n  getComponent() {\n    return CoreTagFeedComponent;\n  }\n}\n_class = CoreCourseModulesTagAreaHandlerService;\n_class.ɵfac = function CoreCourseModulesTagAreaHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreCourseModulesTagAreaHandler = makeSingleton(CoreCourseModulesTagAreaHandlerService);","map":{"version":3,"names":["CoreTagHelper","CoreTagFeedComponent","makeSingleton","CoreCourseModulesTagAreaHandlerService","constructor","name","type","isEnabled","_asyncToGenerator","parseContent","content","parseFeedContent","getComponent","factory","ɵfac","providedIn","CoreCourseModulesTagAreaHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/course/services/handlers/modules-tag-area.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { CoreTagAreaHandler } from '@features/tag/services/tag-area-delegate';\nimport { CoreTagFeedElement, CoreTagHelper } from '@features/tag/services/tag-helper';\nimport { CoreTagFeedComponent } from '@features/tag/components/feed/feed';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support tags.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreCourseModulesTagAreaHandlerService implements CoreTagAreaHandler {\n\n    name = 'CoreCourseModulesTagAreaHandler';\n    type = 'core/course_modules';\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @returns Whether or not the handler is enabled on a site level.\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Parses the rendered content of a tag index and returns the items.\n     *\n     * @param content Rendered content.\n     * @returns Area items (or promise resolved with the items).\n     */\n    parseContent(content: string): CoreTagFeedElement[] | Promise<CoreTagFeedElement[]> {\n        return CoreTagHelper.parseFeedContent(content);\n    }\n\n    /**\n     * Get the component to use to display items.\n     *\n     * @returns The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(): Type<unknown> | Promise<Type<unknown>> {\n        return CoreTagFeedComponent;\n    }\n\n}\n\nexport const CoreCourseModulesTagAreaHandler = makeSingleton(CoreCourseModulesTagAreaHandlerService);\n"],"mappings":";;AAiBA,SAA6BA,aAAa,QAAQ,mCAAmC;AACrF,SAASC,oBAAoB,QAAQ,oCAAoC;AACzE,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,sCAAsC;EADnDC,YAAA;IAGI,KAAAC,IAAI,GAAG,iCAAiC;IACxC,KAAAC,IAAI,GAAG,qBAAqB;;EAE5B;;;;;EAKMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;;;;EAMAC,YAAYA,CAACC,OAAe;IACxB,OAAOV,aAAa,CAACW,gBAAgB,CAACD,OAAO,CAAC;EAClD;EAEA;;;;;EAKAE,YAAYA,CAAA;IACR,OAAOX,oBAAoB;EAC/B;;SA/BSE,sCAAsC;;mBAAtCA,MAAsC;AAAA;;SAAtCA,MAAsC;EAAAU,OAAA,EAAtCV,MAAsC,CAAAW,IAAA;EAAAC,UAAA,EADzB;AAAM;AAoChC,OAAO,MAAMC,+BAA+B,GAAGd,aAAa,CAACC,sCAAsC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}