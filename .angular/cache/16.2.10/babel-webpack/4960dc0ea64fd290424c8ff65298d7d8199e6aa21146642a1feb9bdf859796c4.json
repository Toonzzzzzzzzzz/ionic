{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { makeSingleton, Translate } from '@singletons';\nimport { CoreConstants } from '@/core/constants';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support weeks course format.\n */\nexport class CoreCourseFormatWeeksHandlerService {\n  constructor() {\n    this.name = 'CoreCourseFormatWeeks';\n    this.format = 'weeks';\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getCurrentSection(course, sections) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const now = CoreTimeUtils.timestamp();\n      if (course.startdate && now < course.startdate || course.enddate && now > course.enddate) {\n        // Course hasn't started yet or it has ended already. Return all sections.\n        return {\n          section: sections[0],\n          forceSelected: false\n        };\n      }\n      for (let i = 0; i < sections.length; i++) {\n        const section = sections[i];\n        if (section.section === undefined || section.section < 1) {\n          continue;\n        }\n        const dates = _this.getSectionDates(section, course.startdate || 0);\n        if (now >= dates.start && now < dates.end) {\n          return {\n            section,\n            forceSelected: false\n          };\n        }\n      }\n      // The section wasn't found, return all sections.\n      return {\n        section: sections[0],\n        forceSelected: false\n      };\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getSectionHightlightedName() {\n    return Translate.instant('core.course.thisweek');\n  }\n  /**\n   * Return the start and end date of a section.\n   *\n   * @param section The section to treat.\n   * @param startDate The course start date (in seconds).\n   * @returns An object with the start and end date of the section.\n   */\n  getSectionDates(section, startDate) {\n    // Hack alert. We add 2 hours to avoid possible DST problems. (e.g. we go into daylight savings and the date changes).\n    startDate = startDate + 7200;\n    const dates = {\n      start: startDate + CoreConstants.SECONDS_WEEK * ((section.section || 0) - 1),\n      end: 0\n    };\n    dates.end = dates.start + CoreConstants.SECONDS_WEEK;\n    return dates;\n  }\n}\n_class = CoreCourseFormatWeeksHandlerService;\n_class.ɵfac = function CoreCourseFormatWeeksHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreCourseFormatWeeksHandler = makeSingleton(CoreCourseFormatWeeksHandlerService);","map":{"version":3,"names":["CoreTimeUtils","makeSingleton","Translate","CoreConstants","CoreCourseFormatWeeksHandlerService","constructor","name","format","isEnabled","_asyncToGenerator","getCurrentSection","course","sections","_this","now","timestamp","startdate","enddate","section","forceSelected","i","length","undefined","dates","getSectionDates","start","end","getSectionHightlightedName","instant","startDate","SECONDS_WEEK","factory","ɵfac","providedIn","CoreCourseFormatWeeksHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/course/format/weeks/services/handlers/weeks-format.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { CoreCourseFormatCurrentSectionData, CoreCourseFormatHandler } from '@features/course/services/format-delegate';\nimport { makeSingleton, Translate } from '@singletons';\nimport { CoreCourseAnyCourseData } from '@features/courses/services/courses';\nimport { CoreCourseWSSection } from '@features/course/services/course';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreCourseSection } from '@features/course/services/course-helper';\n\n/**\n * Handler to support weeks course format.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreCourseFormatWeeksHandlerService implements CoreCourseFormatHandler {\n\n    name = 'CoreCourseFormatWeeks';\n    format = 'weeks';\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getCurrentSection(\n        course: CoreCourseAnyCourseData,\n        sections: CoreCourseSection[],\n    ): Promise<CoreCourseFormatCurrentSectionData<CoreCourseSection>> {\n        const now = CoreTimeUtils.timestamp();\n\n        if ((course.startdate && now < course.startdate) || (course.enddate && now > course.enddate)) {\n            // Course hasn't started yet or it has ended already. Return all sections.\n            return {\n                section: sections[0],\n                forceSelected: false,\n            };\n        }\n\n        for (let i = 0; i < sections.length; i++) {\n            const section = sections[i];\n            if (section.section === undefined || section.section < 1) {\n                continue;\n            }\n\n            const dates = this.getSectionDates(section, course.startdate || 0);\n            if (now >= dates.start && now < dates.end) {\n                return {\n                    section,\n                    forceSelected: false,\n                };\n            }\n        }\n\n        // The section wasn't found, return all sections.\n        return {\n            section: sections[0],\n            forceSelected: false,\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getSectionHightlightedName(): string {\n        return Translate.instant('core.course.thisweek');\n    }\n\n    /**\n     * Return the start and end date of a section.\n     *\n     * @param section The section to treat.\n     * @param startDate The course start date (in seconds).\n     * @returns An object with the start and end date of the section.\n     */\n    protected getSectionDates(section: CoreCourseWSSection, startDate: number): { start: number; end: number } {\n        // Hack alert. We add 2 hours to avoid possible DST problems. (e.g. we go into daylight savings and the date changes).\n        startDate = startDate + 7200;\n\n        const dates = {\n            start: startDate + (CoreConstants.SECONDS_WEEK * ((section.section || 0) - 1)),\n            end: 0,\n        };\n        dates.end = dates.start + CoreConstants.SECONDS_WEEK;\n\n        return dates;\n    }\n\n}\n\nexport const CoreCourseFormatWeeksHandler = makeSingleton(CoreCourseFormatWeeksHandlerService);\n"],"mappings":";;AAgBA,SAASA,aAAa,QAAQ,sBAAsB;AAEpD,SAASC,aAAa,EAAEC,SAAS,QAAQ,aAAa;AAGtD,SAASC,aAAa,QAAQ,kBAAkB;;AAGhD;;;AAIA,OAAM,MAAOC,mCAAmC;EADhDC,YAAA;IAGI,KAAAC,IAAI,GAAG,uBAAuB;IAC9B,KAAAC,MAAM,GAAG,OAAO;;EAEhB;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGMC,iBAAiBA,CACnBC,MAA+B,EAC/BC,QAA6B;IAAA,IAAAC,KAAA;IAAA,OAAAJ,iBAAA;MAE7B,MAAMK,GAAG,GAAGd,aAAa,CAACe,SAAS,EAAE;MAErC,IAAKJ,MAAM,CAACK,SAAS,IAAIF,GAAG,GAAGH,MAAM,CAACK,SAAS,IAAML,MAAM,CAACM,OAAO,IAAIH,GAAG,GAAGH,MAAM,CAACM,OAAQ,EAAE;QAC1F;QACA,OAAO;UACHC,OAAO,EAAEN,QAAQ,CAAC,CAAC,CAAC;UACpBO,aAAa,EAAE;SAClB;;MAGL,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,QAAQ,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,MAAMF,OAAO,GAAGN,QAAQ,CAACQ,CAAC,CAAC;QAC3B,IAAIF,OAAO,CAACA,OAAO,KAAKI,SAAS,IAAIJ,OAAO,CAACA,OAAO,GAAG,CAAC,EAAE;UACtD;;QAGJ,MAAMK,KAAK,GAAGV,KAAI,CAACW,eAAe,CAACN,OAAO,EAAEP,MAAM,CAACK,SAAS,IAAI,CAAC,CAAC;QAClE,IAAIF,GAAG,IAAIS,KAAK,CAACE,KAAK,IAAIX,GAAG,GAAGS,KAAK,CAACG,GAAG,EAAE;UACvC,OAAO;YACHR,OAAO;YACPC,aAAa,EAAE;WAClB;;;MAIT;MACA,OAAO;QACHD,OAAO,EAAEN,QAAQ,CAAC,CAAC,CAAC;QACpBO,aAAa,EAAE;OAClB;IAAC;EACN;EAEA;;;EAGAQ,0BAA0BA,CAAA;IACtB,OAAOzB,SAAS,CAAC0B,OAAO,CAAC,sBAAsB,CAAC;EACpD;EAEA;;;;;;;EAOUJ,eAAeA,CAACN,OAA4B,EAAEW,SAAiB;IACrE;IACAA,SAAS,GAAGA,SAAS,GAAG,IAAI;IAE5B,MAAMN,KAAK,GAAG;MACVE,KAAK,EAAEI,SAAS,GAAI1B,aAAa,CAAC2B,YAAY,IAAI,CAACZ,OAAO,CAACA,OAAO,IAAI,CAAC,IAAI,CAAC,CAAE;MAC9EQ,GAAG,EAAE;KACR;IACDH,KAAK,CAACG,GAAG,GAAGH,KAAK,CAACE,KAAK,GAAGtB,aAAa,CAAC2B,YAAY;IAEpD,OAAOP,KAAK;EAChB;;SA5ESnB,mCAAmC;;mBAAnCA,MAAmC;AAAA;;SAAnCA,MAAmC;EAAA2B,OAAA,EAAnC3B,MAAmC,CAAA4B,IAAA;EAAAC,UAAA,EADtB;AAAM;AAiFhC,OAAO,MAAMC,4BAA4B,GAAGjC,aAAa,CAACG,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}