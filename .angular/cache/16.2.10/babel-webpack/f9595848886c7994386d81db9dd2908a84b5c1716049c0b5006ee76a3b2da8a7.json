{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreDynamicComponent } from '@components/dynamic-component/dynamic-component';\nimport { CoreCourse, CoreCourseModuleCompletionStatus, CoreCourseProvider } from '@features/course/services/course';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreCourseFormatDelegate } from '@features/course/services/format-delegate';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreCourseCourseIndexComponent } from '../course-index/course-index';\nimport { CoreBlockHelper } from '@features/block/services/block-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreCourseCourseIndexTourComponent } from '../course-index-tour/course-index-tour';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreBlockSideBlocksComponent } from '@features/block/components/side-blocks/side-blocks';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nfunction CoreCourseFormatComponent_div_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction CoreCourseFormatComponent_div_6_core_empty_box_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 12);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.course.nocontentavailable\"));\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    section: a0\n  };\n};\nfunction CoreCourseFormatComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"core-dynamic-component\", 3);\n    i0.ɵɵtemplate(2, CoreCourseFormatComponent_div_6_ng_container_2_Template, 1, 0, \"ng-container\", 10);\n    i0.ɵɵtemplate(3, CoreCourseFormatComponent_div_6_core_empty_box_3_Template, 2, 3, \"core-empty-box\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"component\", ctx_r0.singleSectionComponent)(\"data\", ctx_r0.data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c0, ctx_r0.selectedSection));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.selectedSection.hasContent);\n  }\n}\nfunction CoreCourseFormatComponent_div_7_ng_container_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction CoreCourseFormatComponent_div_7_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreCourseFormatComponent_div_7_ng_container_2_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const section_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵnextContext(2);\n    const _r5 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, section_r10));\n  }\n}\nfunction CoreCourseFormatComponent_div_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreCourseFormatComponent_div_7_ng_container_2_ng_container_1_Template, 2, 4, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r11 = ctx.index;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r11 <= ctx_r9.lastShownSectionIndex);\n  }\n}\nfunction CoreCourseFormatComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"core-dynamic-component\", 3);\n    i0.ɵɵtemplate(2, CoreCourseFormatComponent_div_7_ng_container_2_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"core-infinite-loading\", 14);\n    i0.ɵɵlistener(\"action\", function CoreCourseFormatComponent_div_7_Template_core_infinite_loading_action_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.showMoreActivities($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"component\", ctx_r1.allSectionsComponent)(\"data\", ctx_r1.data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.sections);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"enabled\", ctx_r1.canLoadMore);\n  }\n}\nfunction CoreCourseFormatComponent_div_8_ion_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 18);\n    i0.ɵɵlistener(\"click\", function CoreCourseFormatComponent_div_8_ion_button_2_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.sectionChanged(ctx_r19.previousSection));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"ion-icon\", 19)(3, \"core-format-text\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 3, \"core.previous\") + \": \" + ctx_r17.previousSection.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", ctx_r17.previousSection.name)(\"contextInstanceId\", ctx_r17.course.id);\n  }\n}\nfunction CoreCourseFormatComponent_div_8_ion_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 18);\n    i0.ɵɵlistener(\"click\", function CoreCourseFormatComponent_div_8_ion_button_3_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.sectionChanged(ctx_r21.nextSection));\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"core-format-text\", 20)(3, \"ion-icon\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 3, \"core.next\") + \": \" + ctx_r18.nextSection.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", ctx_r18.nextSection.name)(\"contextInstanceId\", ctx_r18.course.id);\n  }\n}\nfunction CoreCourseFormatComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16);\n    i0.ɵɵtemplate(2, CoreCourseFormatComponent_div_8_ion_button_2_Template, 4, 5, \"ion-button\", 17);\n    i0.ɵɵtemplate(3, CoreCourseFormatComponent_div_8_ion_button_3_Template, 4, 5, \"ion-button\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.previousSection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.nextSection);\n  }\n}\nfunction CoreCourseFormatComponent_core_block_side_blocks_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-block-side-blocks-button\", 22);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"instanceId\", ctx_r3.course.id);\n  }\n}\nfunction CoreCourseFormatComponent_ion_fab_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-fab\", 23)(1, \"ion-fab-button\", 24);\n    i0.ɵɵlistener(\"click\", function CoreCourseFormatComponent_ion_fab_10_Template_ion_fab_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.openCourseIndex());\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 25);\n    i0.ɵɵelementStart(4, \"span\", 26);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"userTour\", ctx_r4.courseIndexTour);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 3, \"core.course.courseindex\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 5, \"core.course.courseindex\"));\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_h2_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 33);\n    i0.ɵɵelement(1, \"core-format-text\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r25 = i0.ɵɵnextContext(2).section;\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", \"core-section-name-\" + section_r25.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", section_r25.name)(\"contextInstanceId\", ctx_r27.course.id);\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-badge\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"core.course.hiddenfromstudents\"), \" \");\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-badge\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, \"core.notavailable\"), \" \");\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-chip\", 35);\n    i0.ɵɵelement(2, \"ion-icon\", 36);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"ion-label\");\n    i0.ɵɵelement(5, \"core-format-text\", 20);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r25 = i0.ɵɵnextContext(2).section;\n    const ctx_r30 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(3, 3, \"core.restricted\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"text\", section_r25.availabilityinfo)(\"contextInstanceId\", ctx_r30.course.id);\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_ion_badge_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r31.highlighted);\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 38)(1, \"ion-label\");\n    i0.ɵɵelement(2, \"core-format-text\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const section_r25 = i0.ɵɵnextContext(2).section;\n    const ctx_r32 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", section_r25.summary)(\"contextInstanceId\", ctx_r32.course.id);\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_ng_container_9_core_course_module_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-course-module\", 40);\n  }\n  if (rf & 2) {\n    const module_r37 = i0.ɵɵnextContext().$implicit;\n    const section_r25 = i0.ɵɵnextContext(2).section;\n    const ctx_r38 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"core-course-module-not-viewed\", !ctx_r38.viewedModules[module_r37.id] && (!module_r37.completiondata || module_r37.completiondata.state === ctx_r38.completionStatusIncomplete));\n    i0.ɵɵproperty(\"module\", module_r37)(\"section\", section_r25)(\"showActivityDates\", ctx_r38.course.showactivitydates)(\"showCompletionConditions\", ctx_r38.course.showcompletionconditions)(\"isLastViewed\", ctx_r38.lastModuleViewed && ctx_r38.lastModuleViewed.cmId === module_r37.id);\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreCourseFormatComponent_ng_template_11_section_0_ng_container_9_core_course_module_1_Template, 1, 7, \"core-course-module\", 39);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const module_r37 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", module_r37.visibleoncoursepage !== 0);\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 28)(1, \"ion-item-divider\", 29)(2, \"ion-label\");\n    i0.ɵɵtemplate(3, CoreCourseFormatComponent_ng_template_11_section_0_h2_3_Template, 2, 3, \"h2\", 30);\n    i0.ɵɵtemplate(4, CoreCourseFormatComponent_ng_template_11_section_0_div_4_Template, 4, 3, \"div\", 5);\n    i0.ɵɵtemplate(5, CoreCourseFormatComponent_ng_template_11_section_0_div_5_Template, 4, 3, \"div\", 5);\n    i0.ɵɵtemplate(6, CoreCourseFormatComponent_ng_template_11_section_0_div_6_Template, 6, 5, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, CoreCourseFormatComponent_ng_template_11_section_0_ion_badge_7_Template, 2, 1, \"ion-badge\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, CoreCourseFormatComponent_ng_template_11_section_0_ion_item_8_Template, 3, 2, \"ion-item\", 32);\n    i0.ɵɵtemplate(9, CoreCourseFormatComponent_ng_template_11_section_0_ng_container_9_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r25 = i0.ɵɵnextContext().section;\n    const ctx_r26 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", section_r25.id);\n    i0.ɵɵattribute(\"aria-labelledby\", section_r25.name ? \"core-section-name-\" + section_r25.id : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"item-dimmed\", section_r25.visible === 0 || section_r25.uservisible === false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", section_r25.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r25.visible === 0 && section_r25.uservisible !== false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r25.visible === 0 && section_r25.uservisible === false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r25.availabilityinfo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r25.highlighted && ctx_r26.highlighted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r25.summary);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r25.modules);\n  }\n}\nfunction CoreCourseFormatComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CoreCourseFormatComponent_ng_template_11_section_0_Template, 10, 11, \"section\", 27);\n  }\n  if (rf & 2) {\n    const section_r25 = ctx.section;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", !section_r25.hiddenbynumsections && section_r25.id !== ctx_r6.allSectionsId && section_r25.id !== ctx_r6.stealthModulesSectionId);\n  }\n}\n/**\n * Component to display course contents using a certain format. If the format isn't found, use default one.\n *\n * The inputs of this component will be shared with the course format components. Please use CoreCourseFormatDelegate\n * to register your handler for course formats.\n *\n * Example usage:\n *\n * <core-course-format [course]=\"course\" [sections]=\"sections\"></core-course-format>\n */\nexport class CoreCourseFormatComponent {\n  // How many activities should load each time showMoreActivities is called.\n  constructor(content, elementRef, changeDetectorRef) {\n    this.content = content;\n    this.elementRef = elementRef;\n    this.changeDetectorRef = changeDetectorRef;\n    this.sections = []; // List of course sections.\n    this.canLoadMore = false;\n    this.lastShownSectionIndex = 0;\n    this.data = {}; // Data to pass to the components.\n    this.courseIndexTour = {\n      id: 'course-index',\n      component: CoreCourseCourseIndexTourComponent,\n      side: \"top\" /* CoreUserToursSide.Top */,\n      alignment: \"end\" /* CoreUserToursAlignment.End */,\n      getFocusedElement: nativeButton => {\n        var _nativeButton$shadowR, _nativeButton$shadowR2;\n        const innerButton = Array.from((_nativeButton$shadowR = (_nativeButton$shadowR2 = nativeButton.shadowRoot) === null || _nativeButton$shadowR2 === void 0 ? void 0 : _nativeButton$shadowR2.children) !== null && _nativeButton$shadowR !== void 0 ? _nativeButton$shadowR : []).find(child => child.tagName === 'BUTTON');\n        return innerButton !== null && innerButton !== void 0 ? innerButton : nativeButton;\n      }\n    };\n    this.displayCourseIndex = false;\n    this.displayBlocks = false;\n    this.hasBlocks = false;\n    this.allSectionsId = CoreCourseProvider.ALL_SECTIONS_ID;\n    this.stealthModulesSectionId = CoreCourseProvider.STEALTH_MODULES_SECTION_ID;\n    this.loaded = false;\n    this.viewedModules = {};\n    this.completionStatusIncomplete = CoreCourseModuleCompletionStatus.COMPLETION_INCOMPLETE;\n    this.viewedModulesInitialized = false;\n    // Pass this instance to all components so they can use its methods and properties.\n    this.data.coreCourseFormatComponent = this;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    if (this.course === undefined) {\n      CoreDomUtils.showErrorModal('Course not set');\n      CoreNavigator.back();\n      return;\n    }\n    // Listen for select course tab events to select the right section if needed.\n    this.selectTabObserver = CoreEvents.on(CoreEvents.SELECT_COURSE_TAB, data => {\n      if (data.name) {\n        return;\n      }\n      let section;\n      if (data.sectionId !== undefined && this.sections) {\n        section = this.sections.find(section => section.id == data.sectionId);\n      } else if (data.sectionNumber !== undefined && this.sections) {\n        section = this.sections.find(section => section.section == data.sectionNumber);\n      }\n      if (section) {\n        this.sectionChanged(section);\n      }\n    });\n    this.modViewedObserver = CoreEvents.on(CoreEvents.COURSE_MODULE_VIEWED, data => {\n      if (data.courseId !== this.course.id) {\n        return;\n      }\n      this.viewedModules[data.cmId] = true;\n      if (!this.lastModuleViewed || data.timeaccess > this.lastModuleViewed.timeaccess) {\n        this.lastModuleViewed = data;\n        if (this.selectedSection && this.selectedSection.id !== this.allSectionsId) {\n          var _this$selectedSection;\n          // Change section to display the one with the last viewed module\n          const lastViewedSection = this.getViewedModuleSection(this.sections, data);\n          if (lastViewedSection && lastViewedSection.id !== ((_this$selectedSection = this.selectedSection) === null || _this$selectedSection === void 0 ? void 0 : _this$selectedSection.id)) {\n            this.sectionChanged(lastViewedSection, data.cmId);\n          }\n        }\n      }\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * Detect changes on input properties.\n   */\n  ngOnChanges(changes) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.setInputData();\n      if (changes.course && _this.course) {\n        // Course has changed, try to get the components.\n        _this.getComponents();\n        _this.displayCourseIndex = CoreCourseFormatDelegate.displayCourseIndex(_this.course);\n        _this.displayBlocks = CoreCourseFormatDelegate.displayBlocks(_this.course);\n        _this.hasBlocks = yield CoreBlockHelper.hasCourseBlocks(_this.course.id);\n      }\n      if (changes.sections && _this.sections) {\n        _this.treatSections(_this.sections);\n      }\n      _this.changeDetectorRef.markForCheck();\n    })();\n  }\n  /**\n   * Set the input data for components.\n   */\n  setInputData() {\n    this.data.course = this.course;\n    this.data.sections = this.sections;\n    this.data.initialSectionId = this.initialSectionId;\n    this.data.initialSectionNumber = this.initialSectionNumber;\n    this.data.moduleId = this.moduleId;\n  }\n  /**\n   * Get the components classes.\n   */\n  getComponents() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.course || _this2.course.format == _this2.lastCourseFormat) {\n        return;\n      }\n      // Format has changed or it's the first time, load all the components.\n      _this2.lastCourseFormat = _this2.course.format;\n      _this2.highlighted = CoreCourseFormatDelegate.getSectionHightlightedName(_this2.course);\n      const currentSectionData = yield CoreCourseFormatDelegate.getCurrentSection(_this2.course, _this2.sections);\n      currentSectionData.section.highlighted = true;\n      yield Promise.all([_this2.loadCourseFormatComponent(), _this2.loadSingleSectionComponent(), _this2.loadAllSectionsComponent()]);\n      _this2.changeDetectorRef.markForCheck();\n    })();\n  }\n  /**\n   * Load course format component.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadCourseFormatComponent() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.courseFormatComponent = yield CoreCourseFormatDelegate.getCourseFormatComponent(_this3.course);\n    })();\n  }\n  /**\n   * Load single section component.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadSingleSectionComponent() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.singleSectionComponent = yield CoreCourseFormatDelegate.getSingleSectionComponent(_this4.course);\n    })();\n  }\n  /**\n   * Load all sections component.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadAllSectionsComponent() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.allSectionsComponent = yield CoreCourseFormatDelegate.getAllSectionsComponent(_this5.course);\n    })();\n  }\n  /**\n   * Treat received sections.\n   *\n   * @param sections Sections to treat.\n   * @returns Promise resolved when done.\n   */\n  treatSections(sections) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const hasAllSections = sections[0].id == CoreCourseProvider.ALL_SECTIONS_ID;\n      const hasSeveralSections = sections.length > 2 || sections.length == 2 && !hasAllSections;\n      yield _this6.initializeViewedModules();\n      if (_this6.selectedSection) {\n        const selectedSection = _this6.selectedSection;\n        // We have a selected section, but the list has changed. Search the section in the list.\n        let newSection = sections.find(section => _this6.compareSections(section, selectedSection));\n        if (!newSection) {\n          // Section not found, calculate which one to use.\n          const currentSectionData = yield CoreCourseFormatDelegate.getCurrentSection(_this6.course, sections);\n          newSection = currentSectionData.section;\n        }\n        _this6.sectionChanged(newSection);\n        return;\n      }\n      // There is no selected section yet, calculate which one to load.\n      if (!hasSeveralSections) {\n        // Always load \"All sections\" to display the section title. If it isn't there just load the section.\n        _this6.loaded = true;\n        _this6.sectionChanged(sections[0]);\n      } else if (_this6.initialSectionId || _this6.initialSectionNumber !== undefined) {\n        // We have an input indicating the section ID to load. Search the section.\n        const section = sections.find(section => section.id == _this6.initialSectionId || section.section !== undefined && section.section == _this6.initialSectionNumber);\n        // Don't load the section if it cannot be viewed by the user.\n        if (section && _this6.canViewSection(section)) {\n          _this6.loaded = true;\n          _this6.sectionChanged(section);\n        }\n      } else if (_this6.initialBlockInstanceId && _this6.displayBlocks && _this6.hasBlocks) {\n        CoreDomUtils.openSideModal({\n          component: CoreBlockSideBlocksComponent,\n          componentProps: {\n            contextLevel: 'course',\n            instanceId: _this6.course.id,\n            initialBlockInstanceId: _this6.initialBlockInstanceId\n          }\n        });\n      }\n      if (!_this6.loaded) {\n        // No section specified, not found or not visible, load current section or the section with last module viewed.\n        const currentSectionData = yield CoreCourseFormatDelegate.getCurrentSection(_this6.course, sections);\n        const lastModuleViewed = _this6.lastModuleViewed;\n        let section = currentSectionData.section;\n        let moduleId;\n        if (!currentSectionData.forceSelected && lastModuleViewed) {\n          // Search the section with the last module viewed.\n          const lastModuleSection = _this6.getViewedModuleSection(sections, lastModuleViewed);\n          section = lastModuleSection || section;\n          moduleId = lastModuleSection ? lastModuleViewed === null || lastModuleViewed === void 0 ? void 0 : lastModuleViewed.cmId : undefined;\n        } else if (lastModuleViewed && currentSectionData.section.modules.some(module => module.id === lastModuleViewed.cmId)) {\n          // Last module viewed is inside the highlighted section.\n          moduleId = lastModuleViewed.cmId;\n        }\n        _this6.loaded = true;\n        _this6.sectionChanged(section, moduleId);\n      }\n      return;\n    })();\n  }\n  /**\n   * Initialize viewed modules.\n   *\n   * @returns Promise resolved when done.\n   */\n  initializeViewedModules() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (_this7.viewedModulesInitialized) {\n        return;\n      }\n      const viewedModules = yield CoreCourse.getViewedModules(_this7.course.id);\n      _this7.viewedModulesInitialized = true;\n      _this7.lastModuleViewed = viewedModules[0];\n      viewedModules.forEach(entry => {\n        _this7.viewedModules[entry.cmId] = true;\n      });\n    })();\n  }\n  /**\n   * Get the section of a viewed module.\n   *\n   * @param sections List of sections.\n   * @param viewedModule Viewed module.\n   * @returns Section, undefined if not found.\n   */\n  getViewedModuleSection(sections, viewedModule) {\n    if (viewedModule.sectionId) {\n      const lastModuleSection = sections.find(section => section.id === viewedModule.sectionId);\n      if (lastModuleSection) {\n        return lastModuleSection;\n      }\n    }\n    // No sectionId or section not found. Search the module.\n    return sections.find(section => section.modules.some(module => module.id === viewedModule.cmId));\n  }\n  /**\n   * Get selected section ID. If viewing all sections, use current scrolled section.\n   *\n   * @returns Section ID, undefined if not found.\n   */\n  getSelectedSectionId() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      var _this8$selectedSectio;\n      if (((_this8$selectedSectio = _this8.selectedSection) === null || _this8$selectedSectio === void 0 ? void 0 : _this8$selectedSectio.id) !== _this8.allSectionsId) {\n        var _this8$selectedSectio2;\n        return (_this8$selectedSectio2 = _this8.selectedSection) === null || _this8$selectedSectio2 === void 0 ? void 0 : _this8$selectedSectio2.id;\n      }\n      // Check current scrolled section.\n      const allSectionElements = _this8.elementRef.nativeElement.querySelectorAll('section.core-course-module-list-wrapper');\n      const scroll = yield _this8.content.getScrollElement();\n      const containerTop = scroll.getBoundingClientRect().top;\n      const element = Array.from(allSectionElements).find(element => {\n        const position = element.getBoundingClientRect();\n        // The bottom is inside the container or lower.\n        return position.bottom >= containerTop;\n      });\n      return Number(element === null || element === void 0 ? void 0 : element.getAttribute('id')) || undefined;\n    })();\n  }\n  /**\n   * Display the course index modal.\n   */\n  openCourseIndex() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      const selectedId = yield _this9.getSelectedSectionId();\n      const data = yield CoreDomUtils.openModal({\n        component: CoreCourseCourseIndexComponent,\n        componentProps: {\n          course: _this9.course,\n          sections: _this9.sections,\n          selectedId: selectedId\n        }\n      });\n      if (!data) {\n        return;\n      }\n      const section = _this9.sections.find(section => section.id == data.sectionId);\n      if (!section) {\n        return;\n      }\n      _this9.sectionChanged(section);\n      if (!data.moduleId) {\n        return;\n      }\n      const module = section.modules.find(module => module.id == data.moduleId);\n      if (!module) {\n        return;\n      }\n      if (!module.handlerData) {\n        module.handlerData = yield CoreCourseModuleDelegate.getModuleDataFor(module.modname, module, _this9.course.id);\n      }\n      if (CoreCourseHelper.canUserViewModule(module, section)) {\n        var _module$handlerData, _module$handlerData$a;\n        _this9.scrollToModule(module.id);\n        (_module$handlerData = module.handlerData) === null || _module$handlerData === void 0 || (_module$handlerData$a = _module$handlerData.action) === null || _module$handlerData$a === void 0 || _module$handlerData$a.call(_module$handlerData, data.event, module, module.course);\n      }\n      _this9.moduleId = data.moduleId;\n    })();\n  }\n  /**\n   * Open course downloads page.\n   */\n  gotoCourseDownloads() {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const selectedId = yield _this10.getSelectedSectionId();\n      CoreNavigator.navigateToSitePath(`storage/${_this10.course.id}`, {\n        params: {\n          title: _this10.course.fullname,\n          sectionId: selectedId,\n          isGuest: _this10.isGuest\n        }\n      });\n    })();\n  }\n  /**\n   * Function called when selected section changes.\n   *\n   * @param newSection The new selected section.\n   * @param moduleId The module to scroll to.\n   */\n  sectionChanged(newSection, moduleId) {\n    const previousValue = this.selectedSection;\n    this.selectedSection = newSection;\n    this.data.section = this.selectedSection;\n    if (newSection.id != this.allSectionsId) {\n      // Select next and previous sections to show the arrows.\n      const i = this.sections.findIndex(value => this.compareSections(value, newSection));\n      let j;\n      for (j = i - 1; j >= 1; j--) {\n        if (this.canViewSection(this.sections[j])) {\n          break;\n        }\n      }\n      this.previousSection = j >= 1 ? this.sections[j] : undefined;\n      for (j = i + 1; j < this.sections.length; j++) {\n        if (this.canViewSection(this.sections[j])) {\n          break;\n        }\n      }\n      this.nextSection = j < this.sections.length ? this.sections[j] : undefined;\n    } else {\n      this.previousSection = undefined;\n      this.nextSection = undefined;\n      this.lastShownSectionIndex = -1;\n      this.showMoreActivities();\n    }\n    // Scroll to module if needed. Give more priority to the input.\n    const moduleIdToScroll = this.moduleId && previousValue === undefined ? this.moduleId : moduleId;\n    if (moduleIdToScroll) {\n      this.scrollToModule(moduleIdToScroll);\n    }\n    if (!previousValue || previousValue.id !== newSection.id) {\n      // First load or section changed.\n      if (!moduleIdToScroll) {\n        this.content.scrollToTop(0);\n      }\n      this.logView(newSection.section, !previousValue);\n    }\n    this.changeDetectorRef.markForCheck();\n  }\n  /**\n   * Scroll to a certain module.\n   *\n   * @param moduleId Module ID.\n   */\n  scrollToModule(moduleId) {\n    CoreDom.scrollToElement(this.elementRef.nativeElement, '#core-course-module-' + moduleId, {\n      addYAxis: -10\n    });\n  }\n  /**\n   * Compare if two sections are equal.\n   *\n   * @param section1 First section.\n   * @param section2 Second section.\n   * @returns Whether they're equal.\n   */\n  compareSections(section1, section2) {\n    return section1 && section2 ? section1.id === section2.id : section1 === section2;\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   * @param done Function to call when done.\n   * @param afterCompletionChange Whether the refresh is due to a completion change.\n   * @returns Promise resolved when done.\n   */\n  doRefresh(refresher, done, afterCompletionChange) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      var _this11$dynamicCompon;\n      const promises = ((_this11$dynamicCompon = _this11.dynamicComponents) === null || _this11$dynamicCompon === void 0 ? void 0 : _this11$dynamicCompon.map( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (component) {\n          yield component.callComponentMethod('doRefresh', refresher, done, afterCompletionChange);\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }())) || [];\n      if (_this11.course) {\n        const courseId = _this11.course.id;\n        promises.push(CoreCourse.invalidateCourseBlocks(courseId).then( /*#__PURE__*/_asyncToGenerator(function* () {\n          _this11.hasBlocks = yield CoreBlockHelper.hasCourseBlocks(courseId);\n          return;\n        })));\n      }\n      yield Promise.all(promises);\n      refresher === null || refresher === void 0 || refresher.complete();\n      done === null || done === void 0 || done();\n    })();\n  }\n  /**\n   * Show more activities (only used when showing all the sections at the same time).\n   *\n   * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n   */\n  showMoreActivities(infiniteComplete) {\n    let modulesLoaded = 0;\n    while (this.lastShownSectionIndex < this.sections.length - 1 && modulesLoaded < CoreCourseFormatComponent.LOAD_MORE_ACTIVITIES) {\n      this.lastShownSectionIndex++;\n      if (!this.sections[this.lastShownSectionIndex].hasContent || !this.sections[this.lastShownSectionIndex].modules) {\n        continue;\n      }\n      modulesLoaded += this.sections[this.lastShownSectionIndex].modules.reduce((total, module) => !CoreCourseHelper.isModuleStealth(module, this.sections[this.lastShownSectionIndex]) ? total + 1 : total, 0);\n    }\n    this.canLoadMore = this.lastShownSectionIndex < this.sections.length - 1;\n    infiniteComplete === null || infiniteComplete === void 0 || infiniteComplete();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$selectTabObserv, _this$modViewedObserv;\n    (_this$selectTabObserv = this.selectTabObserver) === null || _this$selectTabObserv === void 0 || _this$selectTabObserv.off();\n    (_this$modViewedObserv = this.modViewedObserver) === null || _this$modViewedObserv === void 0 || _this$modViewedObserv.off();\n  }\n  /**\n   * User entered the page that contains the component.\n   */\n  ionViewDidEnter() {\n    var _this$dynamicComponen;\n    (_this$dynamicComponen = this.dynamicComponents) === null || _this$dynamicComponen === void 0 || _this$dynamicComponen.forEach(component => {\n      component.callComponentMethod('ionViewDidEnter');\n    });\n  }\n  /**\n   * User left the page that contains the component.\n   */\n  ionViewDidLeave() {\n    var _this$dynamicComponen2;\n    (_this$dynamicComponen2 = this.dynamicComponents) === null || _this$dynamicComponen2 === void 0 || _this$dynamicComponen2.forEach(component => {\n      component.callComponentMethod('ionViewDidLeave');\n    });\n  }\n  /**\n   * Check whether a section can be viewed.\n   *\n   * @param section The section to check.\n   * @returns Whether the section can be viewed.\n   */\n  canViewSection(section) {\n    return CoreCourseHelper.canUserViewSection(section) && !CoreCourseHelper.isSectionStealth(section);\n  }\n  /**\n   * Log view.\n   *\n   * @param sectionNumber Section loaded (if any).\n   * @param firstLoad Whether it's the first load when opening the course.\n   */\n  logView(sectionNumber, firstLoad = false) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(CoreCourse.logView(_this12.course.id, sectionNumber));\n      let extraParams = sectionNumber !== undefined ? `&section=${sectionNumber}` : '';\n      if (firstLoad && sectionNumber !== undefined) {\n        var _this12$course$course;\n        // If course is configured to show all sections in one page, don't include section in URL in first load.\n        const courseDisplay = 'courseformatoptions' in _this12.course && ((_this12$course$course = _this12.course.courseformatoptions) === null || _this12$course$course === void 0 ? void 0 : _this12$course$course.find(option => option.name === 'coursedisplay'));\n        if (!courseDisplay || Number(courseDisplay.value) !== 0) {\n          extraParams = '';\n        }\n      }\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'core_course_view_course',\n        name: _this12.course.fullname,\n        data: {\n          id: _this12.course.id,\n          sectionnumber: sectionNumber,\n          category: 'course'\n        },\n        url: `/course/view.php?id=${_this12.course.id}${extraParams}`\n      });\n    })();\n  }\n}\n_class = CoreCourseFormatComponent;\n_class.LOAD_MORE_ACTIVITIES = 10;\n_class.ɵfac = function CoreCourseFormatComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.IonContent), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-course-format\"]],\n  viewQuery: function CoreCourseFormatComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreDynamicComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicComponents = _t);\n    }\n  },\n  inputs: {\n    course: \"course\",\n    sections: \"sections\",\n    initialSectionId: \"initialSectionId\",\n    initialSectionNumber: \"initialSectionNumber\",\n    initialBlockInstanceId: \"initialBlockInstanceId\",\n    moduleId: \"moduleId\",\n    isGuest: \"isGuest\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 13,\n  vars: 11,\n  consts: [[\"slot\", \"end\", \"prepend\", \"\"], [\"fill\", \"clear\", 3, \"click\"], [\"name\", \"fas-cloud-arrow-down\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [3, \"component\", \"data\"], [3, \"hideUntil\"], [4, \"ngIf\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\", 4, \"ngIf\"], [\"slot\", \"fixed\", \"contextLevel\", \"course\", 3, \"instanceId\", 4, \"ngIf\"], [\"slot\", \"fixed\", \"core-fab\", \"\", \"vertical\", \"bottom\", \"horizontal\", \"end\", 4, \"ngIf\"], [\"sectionTemplate\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"icon\", \"fas-table-cells-large\", 3, \"message\", 4, \"ngIf\"], [\"icon\", \"fas-table-cells-large\", 3, \"message\"], [4, \"ngFor\", \"ngForOf\"], [3, \"enabled\", \"action\"], [\"collapsible-footer\", \"\", \"appearOnBottom\", \"\", \"slot\", \"fixed\"], [1, \"core-course-section-nav-buttons\", \"safe-area-padding-horizontal\", \"list-item-limited-width\"], [\"expand\", \"block\", 3, \"click\", 4, \"ngIf\"], [\"expand\", \"block\", 3, \"click\"], [\"name\", \"fas-arrow-left\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [\"contextLevel\", \"course\", 3, \"text\", \"contextInstanceId\"], [\"name\", \"fas-arrow-right\", \"slot\", \"end\", \"aria-hidden\", \"true\"], [\"slot\", \"fixed\", \"contextLevel\", \"course\", 3, \"instanceId\"], [\"slot\", \"fixed\", \"core-fab\", \"\", \"vertical\", \"bottom\", \"horizontal\", \"end\"], [\"color\", \"secondary\", 3, \"userTour\", \"click\"], [\"name\", \"fas-list-ul\", \"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"class\", \"core-course-module-list-wrapper\", 3, \"id\", 4, \"ngIf\"], [1, \"core-course-module-list-wrapper\", 3, \"id\"], [1, \"course-section\", \"ion-text-wrap\"], [\"class\", \"big\", 3, \"id\", 4, \"ngIf\"], [\"slot\", \"end\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap section-summary\", 4, \"ngIf\"], [1, \"big\", 3, \"id\"], [\"color\", \"warning\"], [1, \"clickable\"], [\"name\", \"fas-lock\"], [\"slot\", \"end\"], [1, \"ion-text-wrap\", \"section-summary\"], [3, \"module\", \"section\", \"showActivityDates\", \"showCompletionConditions\", \"isLastViewed\", \"core-course-module-not-viewed\", 4, \"ngIf\"], [3, \"module\", \"section\", \"showActivityDates\", \"showCompletionConditions\", \"isLastViewed\"]],\n  template: function CoreCourseFormatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"core-navbar-buttons\", 0)(1, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function CoreCourseFormatComponent_Template_ion_button_click_1_listener() {\n        return ctx.gotoCourseDownloads();\n      });\n      i0.ɵɵpipe(2, \"translate\");\n      i0.ɵɵelement(3, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"core-dynamic-component\", 3)(5, \"core-loading\", 4);\n      i0.ɵɵtemplate(6, CoreCourseFormatComponent_div_6_Template, 4, 7, \"div\", 5);\n      i0.ɵɵtemplate(7, CoreCourseFormatComponent_div_7_Template, 4, 4, \"div\", 5);\n      i0.ɵɵtemplate(8, CoreCourseFormatComponent_div_8_Template, 4, 2, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, CoreCourseFormatComponent_core_block_side_blocks_button_9_Template, 1, 1, \"core-block-side-blocks-button\", 7);\n      i0.ɵɵtemplate(10, CoreCourseFormatComponent_ion_fab_10_Template, 7, 7, \"ion-fab\", 8);\n      i0.ɵɵtemplate(11, CoreCourseFormatComponent_ng_template_11_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 9, \"addon.storagemanager.coursedownloads\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"component\", ctx.courseFormatComponent)(\"data\", ctx.data);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedSection && ctx.selectedSection.id !== ctx.allSectionsId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedSection && ctx.selectedSection.id === ctx.allSectionsId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.displayCourseIndex && (ctx.previousSection || ctx.nextSection));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded && ctx.course && ctx.displayBlocks && ctx.hasBlocks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loaded && ctx.displayCourseIndex);\n    }\n  },\n  styles: [\".core-course-section-nav-buttons[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  padding-left: 8px;\\n  padding-right: 8px;\\n}\\n.core-course-section-nav-buttons[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  text-transform: none;\\n  flex: 1;\\n  margin-left: 4px;\\n  margin-right: 4px;\\n}\\n\\n.course-section[_ngcontent-%COMP%] {\\n  --inner-padding-end: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL2NvdXJzZS9jb21wb25lbnRzL2NvdXJzZS1mb3JtYXQvY291cnNlLWZvcm1hdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLDhCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUNKO0FBQ0k7RUFDSSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxvQkFBQTtFQUNBLE9BQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0FBQ1I7O0FBR0E7RUFDSSx5QkFBQTtBQUFKIiwic291cmNlc0NvbnRlbnQiOlsiLmNvcmUtY291cnNlLXNlY3Rpb24tbmF2LWJ1dHRvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmctbGVmdDogOHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcblxuICAgIGlvbi1idXR0b24ge1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogNHB4O1xuICAgIH1cbn1cblxuLmNvdXJzZS1zZWN0aW9uIHtcbiAgICAtLWlubmVyLXBhZGRpbmctZW5kOiAxMnB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreDomUtils","CoreDynamicComponent","CoreCourse","CoreCourseModuleCompletionStatus","CoreCourseProvider","CoreCourseHelper","CoreCourseFormatDelegate","CoreEvents","CoreUtils","CoreCourseCourseIndexComponent","CoreBlockHelper","CoreNavigator","CoreCourseModuleDelegate","CoreCourseCourseIndexTourComponent","CoreDom","CoreAnalytics","CoreAnalyticsEventType","CoreBlockSideBlocksComponent","i0","ɵɵelementContainer","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ɵɵelementStart","ɵɵtemplate","CoreCourseFormatComponent_div_6_ng_container_2_Template","CoreCourseFormatComponent_div_6_core_empty_box_3_Template","ɵɵelementEnd","ɵɵadvance","ctx_r0","singleSectionComponent","data","_r5","ɵɵpureFunction1","_c0","selectedSection","hasContent","ɵɵelementContainerStart","CoreCourseFormatComponent_div_7_ng_container_2_ng_container_1_ng_container_1_Template","ɵɵelementContainerEnd","section_r10","CoreCourseFormatComponent_div_7_ng_container_2_ng_container_1_Template","i_r11","ctx_r9","lastShownSectionIndex","CoreCourseFormatComponent_div_7_ng_container_2_Template","ɵɵlistener","CoreCourseFormatComponent_div_7_Template_core_infinite_loading_action_3_listener","$event","ɵɵrestoreView","_r16","ctx_r15","ɵɵnextContext","ɵɵresetView","showMoreActivities","ctx_r1","allSectionsComponent","sections","canLoadMore","CoreCourseFormatComponent_div_8_ion_button_2_Template_ion_button_click_0_listener","_r20","ctx_r19","sectionChanged","previousSection","ɵɵattribute","ctx_r17","name","course","id","CoreCourseFormatComponent_div_8_ion_button_3_Template_ion_button_click_0_listener","_r22","ctx_r21","nextSection","ctx_r18","CoreCourseFormatComponent_div_8_ion_button_2_Template","CoreCourseFormatComponent_div_8_ion_button_3_Template","ctx_r2","ctx_r3","CoreCourseFormatComponent_ion_fab_10_Template_ion_fab_button_click_1_listener","_r24","ctx_r23","openCourseIndex","ɵɵtext","ctx_r4","courseIndexTour","ɵɵtextInterpolate","section_r25","ctx_r27","ɵɵtextInterpolate1","availabilityinfo","ctx_r30","ctx_r31","highlighted","summary","ctx_r32","ɵɵclassProp","ctx_r38","viewedModules","module_r37","completiondata","state","completionStatusIncomplete","showactivitydates","showcompletionconditions","lastModuleViewed","cmId","CoreCourseFormatComponent_ng_template_11_section_0_ng_container_9_core_course_module_1_Template","visibleoncoursepage","CoreCourseFormatComponent_ng_template_11_section_0_h2_3_Template","CoreCourseFormatComponent_ng_template_11_section_0_div_4_Template","CoreCourseFormatComponent_ng_template_11_section_0_div_5_Template","CoreCourseFormatComponent_ng_template_11_section_0_div_6_Template","CoreCourseFormatComponent_ng_template_11_section_0_ion_badge_7_Template","CoreCourseFormatComponent_ng_template_11_section_0_ion_item_8_Template","CoreCourseFormatComponent_ng_template_11_section_0_ng_container_9_Template","visible","uservisible","ctx_r26","modules","CoreCourseFormatComponent_ng_template_11_section_0_Template","hiddenbynumsections","ctx_r6","allSectionsId","stealthModulesSectionId","CoreCourseFormatComponent","constructor","content","elementRef","changeDetectorRef","component","side","alignment","getFocusedElement","nativeButton","_nativeButton$shadowR","_nativeButton$shadowR2","innerButton","Array","from","shadowRoot","children","find","child","tagName","displayCourseIndex","displayBlocks","hasBlocks","ALL_SECTIONS_ID","STEALTH_MODULES_SECTION_ID","loaded","COMPLETION_INCOMPLETE","viewedModulesInitialized","coreCourseFormatComponent","ngOnInit","undefined","showErrorModal","back","selectTabObserver","on","SELECT_COURSE_TAB","section","sectionId","sectionNumber","modViewedObserver","COURSE_MODULE_VIEWED","courseId","timeaccess","_this$selectedSection","lastViewedSection","getViewedModuleSection","markForCheck","ngOnChanges","changes","_this","_asyncToGenerator","setInputData","getComponents","hasCourseBlocks","treatSections","initialSectionId","initialSectionNumber","moduleId","_this2","format","lastCourseFormat","getSectionHightlightedName","currentSectionData","getCurrentSection","Promise","all","loadCourseFormatComponent","loadSingleSectionComponent","loadAllSectionsComponent","_this3","courseFormatComponent","getCourseFormatComponent","_this4","getSingleSectionComponent","_this5","getAllSectionsComponent","_this6","hasAllSections","hasSeveralSections","length","initializeViewedModules","newSection","compareSections","canViewSection","initialBlockInstanceId","openSideModal","componentProps","contextLevel","instanceId","forceSelected","lastModuleSection","some","module","_this7","getViewedModules","forEach","entry","viewedModule","getSelectedSectionId","_this8","_this8$selectedSectio","_this8$selectedSectio2","allSectionElements","nativeElement","querySelectorAll","scroll","getScrollElement","containerTop","getBoundingClientRect","top","element","position","bottom","Number","getAttribute","_this9","selectedId","openModal","handlerData","getModuleDataFor","modname","canUserViewModule","_module$handlerData","_module$handlerData$a","scrollToModule","action","call","event","gotoCourseDownloads","_this10","navigateToSitePath","params","title","fullname","isGuest","previousValue","i","findIndex","value","j","moduleIdToScroll","scrollToTop","logView","scrollToElement","addYAxis","section1","section2","doRefresh","refresher","done","afterCompletionChange","_this11","_this11$dynamicCompon","promises","dynamicComponents","map","_ref","callComponentMethod","_x","apply","arguments","push","invalidateCourseBlocks","then","complete","infiniteComplete","modulesLoaded","LOAD_MORE_ACTIVITIES","reduce","total","isModuleStealth","ngOnDestroy","_this$selectTabObserv","_this$modViewedObserv","off","ionViewDidEnter","_this$dynamicComponen","ionViewDidLeave","_this$dynamicComponen2","canUserViewSection","isSectionStealth","firstLoad","_this12","ignoreErrors","extraParams","_this12$course$course","courseDisplay","courseformatoptions","option","logEvent","type","VIEW_ITEM","ws","sectionnumber","category","url","_class","ɵɵdirectiveInject","i1","IonContent","ElementRef","ChangeDetectorRef","selectors","viewQuery","CoreCourseFormatComponent_Query","rf","ctx","CoreCourseFormatComponent_Template_ion_button_click_1_listener","CoreCourseFormatComponent_div_6_Template","CoreCourseFormatComponent_div_7_Template","CoreCourseFormatComponent_div_8_Template","CoreCourseFormatComponent_core_block_side_blocks_button_9_Template","CoreCourseFormatComponent_ion_fab_10_Template","CoreCourseFormatComponent_ng_template_11_Template","ɵɵtemplateRefExtractor"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/course/components/course-format/course-format.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/course/components/course-format/course-format.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    Component,\n    Input,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    SimpleChange,\n    ViewChildren,\n    QueryList,\n    Type,\n    ElementRef,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreDynamicComponent } from '@components/dynamic-component/dynamic-component';\nimport { CoreCourseAnyCourseData } from '@features/courses/services/courses';\nimport {\n    CoreCourse,\n    CoreCourseModuleCompletionStatus,\n    CoreCourseProvider,\n} from '@features/course/services/course';\nimport {\n    CoreCourseHelper,\n    CoreCourseSection,\n} from '@features/course/services/course-helper';\nimport { CoreCourseFormatDelegate } from '@features/course/services/format-delegate';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { IonContent } from '@ionic/angular';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreCourseCourseIndexComponent, CoreCourseIndexSectionWithModule } from '../course-index/course-index';\nimport { CoreBlockHelper } from '@features/block/services/block-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreCourseViewedModulesDBRecord } from '@features/course/services/database/course';\nimport { CoreUserToursAlignment, CoreUserToursSide } from '@features/usertours/services/user-tours';\nimport { CoreCourseCourseIndexTourComponent } from '../course-index-tour/course-index-tour';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreUserTourDirectiveOptions } from '@directives/user-tour';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreBlockSideBlocksComponent } from '@features/block/components/side-blocks/side-blocks';\n\n/**\n * Component to display course contents using a certain format. If the format isn't found, use default one.\n *\n * The inputs of this component will be shared with the course format components. Please use CoreCourseFormatDelegate\n * to register your handler for course formats.\n *\n * Example usage:\n *\n * <core-course-format [course]=\"course\" [sections]=\"sections\"></core-course-format>\n */\n@Component({\n    selector: 'core-course-format',\n    templateUrl: 'course-format.html',\n    styleUrls: ['course-format.scss'],\n})\nexport class CoreCourseFormatComponent implements OnInit, OnChanges, OnDestroy {\n\n    static readonly LOAD_MORE_ACTIVITIES = 10; // How many activities should load each time showMoreActivities is called.\n\n    @Input() course!: CoreCourseAnyCourseData; // The course to render.\n    @Input() sections: CoreCourseSectionToDisplay[] = []; // List of course sections.\n    @Input() initialSectionId?: number; // The section to load first (by ID).\n    @Input() initialSectionNumber?: number; // The section to load first (by number).\n    @Input() initialBlockInstanceId?: number; // The instance to focus.\n    @Input() moduleId?: number; // The module ID to scroll to. Must be inside the initial selected section.\n    @Input() isGuest?: boolean; // If user is accessing using an ACCESS_GUEST enrolment method.\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    @ViewChildren(CoreDynamicComponent) dynamicComponents?: QueryList<CoreDynamicComponent<any>>;\n\n    // All the possible component classes.\n    courseFormatComponent?: Type<unknown>;\n    singleSectionComponent?: Type<unknown>;\n    allSectionsComponent?: Type<unknown>;\n\n    canLoadMore = false;\n    lastShownSectionIndex = 0;\n    data: Record<string, unknown> = {}; // Data to pass to the components.\n    courseIndexTour: CoreUserTourDirectiveOptions = {\n        id: 'course-index',\n        component: CoreCourseCourseIndexTourComponent,\n        side: CoreUserToursSide.Top,\n        alignment: CoreUserToursAlignment.End,\n        getFocusedElement: nativeButton => {\n            const innerButton = Array.from(nativeButton.shadowRoot?.children ?? []).find(child => child.tagName === 'BUTTON');\n\n            return innerButton as HTMLElement ?? nativeButton;\n        },\n    };\n\n    displayCourseIndex = false;\n    displayBlocks = false;\n    hasBlocks = false;\n    selectedSection?: CoreCourseSection;\n    previousSection?: CoreCourseSection;\n    nextSection?: CoreCourseSection;\n    allSectionsId: number = CoreCourseProvider.ALL_SECTIONS_ID;\n    stealthModulesSectionId: number = CoreCourseProvider.STEALTH_MODULES_SECTION_ID;\n    loaded = false;\n    highlighted?: string;\n    lastModuleViewed?: CoreCourseViewedModulesDBRecord;\n    viewedModules: Record<number, boolean> = {};\n    completionStatusIncomplete = CoreCourseModuleCompletionStatus.COMPLETION_INCOMPLETE;\n\n    protected selectTabObserver?: CoreEventObserver;\n    protected modViewedObserver?: CoreEventObserver;\n    protected lastCourseFormat?: string;\n    protected viewedModulesInitialized = false;\n\n    constructor(\n        protected content: IonContent,\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n    ) {\n        // Pass this instance to all components so they can use its methods and properties.\n        this.data.coreCourseFormatComponent = this;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        if (this.course === undefined) {\n            CoreDomUtils.showErrorModal('Course not set');\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        // Listen for select course tab events to select the right section if needed.\n        this.selectTabObserver = CoreEvents.on(CoreEvents.SELECT_COURSE_TAB, (data) => {\n            if (data.name) {\n                return;\n            }\n\n            let section: CoreCourseSection | undefined;\n\n            if (data.sectionId !== undefined && this.sections) {\n                section = this.sections.find((section) => section.id == data.sectionId);\n            } else if (data.sectionNumber !== undefined && this.sections) {\n                section = this.sections.find((section) => section.section == data.sectionNumber);\n            }\n\n            if (section) {\n                this.sectionChanged(section);\n            }\n        });\n\n        this.modViewedObserver = CoreEvents.on(CoreEvents.COURSE_MODULE_VIEWED, (data) => {\n            if (data.courseId !== this.course.id) {\n                return;\n            }\n\n            this.viewedModules[data.cmId] = true;\n            if (!this.lastModuleViewed || data.timeaccess > this.lastModuleViewed.timeaccess) {\n                this.lastModuleViewed = data;\n\n                if (this.selectedSection && this.selectedSection.id !== this.allSectionsId) {\n                    // Change section to display the one with the last viewed module\n                    const lastViewedSection = this.getViewedModuleSection(this.sections, data);\n                    if (lastViewedSection && lastViewedSection.id !== this.selectedSection?.id) {\n                        this.sectionChanged(lastViewedSection, data.cmId);\n                    }\n                }\n            }\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    async ngOnChanges(changes: { [name: string]: SimpleChange }): Promise<void> {\n        this.setInputData();\n\n        if (changes.course && this.course) {\n            // Course has changed, try to get the components.\n            this.getComponents();\n\n            this.displayCourseIndex = CoreCourseFormatDelegate.displayCourseIndex(this.course);\n            this.displayBlocks = CoreCourseFormatDelegate.displayBlocks(this.course);\n\n            this.hasBlocks = await CoreBlockHelper.hasCourseBlocks(this.course.id);\n        }\n\n        if (changes.sections && this.sections) {\n            this.treatSections(this.sections);\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Set the input data for components.\n     */\n    protected setInputData(): void {\n        this.data.course = this.course;\n        this.data.sections = this.sections;\n        this.data.initialSectionId = this.initialSectionId;\n        this.data.initialSectionNumber = this.initialSectionNumber;\n        this.data.moduleId = this.moduleId;\n    }\n\n    /**\n     * Get the components classes.\n     */\n    protected async getComponents(): Promise<void> {\n        if (!this.course || this.course.format == this.lastCourseFormat) {\n            return;\n        }\n\n        // Format has changed or it's the first time, load all the components.\n        this.lastCourseFormat = this.course.format;\n\n        this.highlighted = CoreCourseFormatDelegate.getSectionHightlightedName(this.course);\n        const currentSectionData = await CoreCourseFormatDelegate.getCurrentSection(this.course, this.sections);\n        currentSectionData.section.highlighted = true;\n\n        await Promise.all([\n            this.loadCourseFormatComponent(),\n            this.loadSingleSectionComponent(),\n            this.loadAllSectionsComponent(),\n        ]);\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Load course format component.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadCourseFormatComponent(): Promise<void> {\n        this.courseFormatComponent = await CoreCourseFormatDelegate.getCourseFormatComponent(this.course);\n    }\n\n    /**\n     * Load single section component.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadSingleSectionComponent(): Promise<void> {\n        this.singleSectionComponent = await CoreCourseFormatDelegate.getSingleSectionComponent(this.course);\n    }\n\n    /**\n     * Load all sections component.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadAllSectionsComponent(): Promise<void> {\n        this.allSectionsComponent = await CoreCourseFormatDelegate.getAllSectionsComponent(this.course);\n    }\n\n    /**\n     * Treat received sections.\n     *\n     * @param sections Sections to treat.\n     * @returns Promise resolved when done.\n     */\n    protected async treatSections(sections: CoreCourseSection[]): Promise<void> {\n        const hasAllSections = sections[0].id == CoreCourseProvider.ALL_SECTIONS_ID;\n        const hasSeveralSections = sections.length > 2 || (sections.length == 2 && !hasAllSections);\n\n        await this.initializeViewedModules();\n\n        if (this.selectedSection) {\n            const selectedSection = this.selectedSection;\n            // We have a selected section, but the list has changed. Search the section in the list.\n            let newSection = sections.find(section => this.compareSections(section, selectedSection));\n\n            if (!newSection) {\n                // Section not found, calculate which one to use.\n                const currentSectionData = await CoreCourseFormatDelegate.getCurrentSection(this.course, sections);\n                newSection = currentSectionData.section;\n            }\n\n            this.sectionChanged(newSection);\n\n            return;\n        }\n\n        // There is no selected section yet, calculate which one to load.\n        if (!hasSeveralSections) {\n            // Always load \"All sections\" to display the section title. If it isn't there just load the section.\n            this.loaded = true;\n            this.sectionChanged(sections[0]);\n        } else if (this.initialSectionId || this.initialSectionNumber !== undefined) {\n            // We have an input indicating the section ID to load. Search the section.\n            const section = sections.find((section) =>\n                section.id == this.initialSectionId ||\n                    (section.section !== undefined && section.section == this.initialSectionNumber));\n\n            // Don't load the section if it cannot be viewed by the user.\n            if (section && this.canViewSection(section)) {\n                this.loaded = true;\n                this.sectionChanged(section);\n            }\n        } else if (this.initialBlockInstanceId && this.displayBlocks && this.hasBlocks) {\n            CoreDomUtils.openSideModal({\n                component: CoreBlockSideBlocksComponent,\n                componentProps: {\n                    contextLevel: 'course',\n                    instanceId: this.course.id,\n                    initialBlockInstanceId: this.initialBlockInstanceId,\n                },\n            });\n        }\n\n        if (!this.loaded) {\n            // No section specified, not found or not visible, load current section or the section with last module viewed.\n            const currentSectionData = await CoreCourseFormatDelegate.getCurrentSection(this.course, sections);\n\n            const lastModuleViewed = this.lastModuleViewed;\n            let section = currentSectionData.section;\n            let moduleId: number | undefined;\n\n            if (!currentSectionData.forceSelected && lastModuleViewed) {\n                // Search the section with the last module viewed.\n                const lastModuleSection = this.getViewedModuleSection(sections, lastModuleViewed);\n\n                section = lastModuleSection || section;\n                moduleId = lastModuleSection ? lastModuleViewed?.cmId : undefined;\n            } else if (lastModuleViewed && currentSectionData.section.modules.some(module => module.id === lastModuleViewed.cmId)) {\n                // Last module viewed is inside the highlighted section.\n                moduleId = lastModuleViewed.cmId;\n            }\n\n            this.loaded = true;\n            this.sectionChanged(section, moduleId);\n        }\n\n        return;\n    }\n\n    /**\n     * Initialize viewed modules.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async initializeViewedModules(): Promise<void> {\n        if (this.viewedModulesInitialized) {\n            return;\n        }\n\n        const viewedModules = await CoreCourse.getViewedModules(this.course.id);\n\n        this.viewedModulesInitialized = true;\n        this.lastModuleViewed = viewedModules[0];\n        viewedModules.forEach(entry => {\n            this.viewedModules[entry.cmId] = true;\n        });\n    }\n\n    /**\n     * Get the section of a viewed module.\n     *\n     * @param sections List of sections.\n     * @param viewedModule Viewed module.\n     * @returns Section, undefined if not found.\n     */\n    protected getViewedModuleSection(\n        sections: CoreCourseSection[],\n        viewedModule: CoreCourseViewedModulesDBRecord,\n    ): CoreCourseSection | undefined {\n        if (viewedModule.sectionId) {\n            const lastModuleSection = sections.find(section => section.id === viewedModule.sectionId);\n\n            if (lastModuleSection) {\n                return lastModuleSection;\n            }\n        }\n\n        // No sectionId or section not found. Search the module.\n        return sections.find(\n            section => section.modules.some(module => module.id === viewedModule.cmId),\n        );\n    }\n\n    /**\n     * Get selected section ID. If viewing all sections, use current scrolled section.\n     *\n     * @returns Section ID, undefined if not found.\n     */\n    protected async getSelectedSectionId(): Promise<number | undefined> {\n        if (this.selectedSection?.id !== this.allSectionsId) {\n            return this.selectedSection?.id;\n        }\n\n        // Check current scrolled section.\n        const allSectionElements: NodeListOf<HTMLElement> =\n            this.elementRef.nativeElement.querySelectorAll('section.core-course-module-list-wrapper');\n\n        const scroll = await this.content.getScrollElement();\n        const containerTop = scroll.getBoundingClientRect().top;\n\n        const element = Array.from(allSectionElements).find((element) => {\n            const position = element.getBoundingClientRect();\n\n            // The bottom is inside the container or lower.\n            return position.bottom >= containerTop;\n        });\n\n        return Number(element?.getAttribute('id')) || undefined;\n    }\n\n    /**\n     * Display the course index modal.\n     */\n    async openCourseIndex(): Promise<void> {\n        const selectedId = await this.getSelectedSectionId();\n\n        const data = await CoreDomUtils.openModal<CoreCourseIndexSectionWithModule>({\n            component: CoreCourseCourseIndexComponent,\n            componentProps: {\n                course: this.course,\n                sections: this.sections,\n                selectedId: selectedId,\n            },\n        });\n\n        if (!data) {\n            return;\n        }\n        const section = this.sections.find((section) => section.id == data.sectionId);\n        if (!section) {\n            return;\n        }\n        this.sectionChanged(section);\n\n        if (!data.moduleId) {\n            return;\n        }\n        const module = section.modules.find((module) => module.id == data.moduleId);\n        if (!module) {\n            return;\n        }\n\n        if (!module.handlerData) {\n            module.handlerData =\n                            await CoreCourseModuleDelegate.getModuleDataFor(module.modname, module, this.course.id);\n        }\n\n        if (CoreCourseHelper.canUserViewModule(module, section)) {\n            this.scrollToModule(module.id);\n\n            module.handlerData?.action?.(data.event, module, module.course);\n        }\n\n        this.moduleId = data.moduleId;\n    }\n\n    /**\n     * Open course downloads page.\n     */\n    async gotoCourseDownloads(): Promise<void> {\n        const selectedId = await this.getSelectedSectionId();\n\n        CoreNavigator.navigateToSitePath(\n            `storage/${this.course.id}`,\n            {\n                params: {\n                    title: this.course.fullname,\n                    sectionId: selectedId,\n                    isGuest: this.isGuest,\n                },\n            },\n        );\n    }\n\n    /**\n     * Function called when selected section changes.\n     *\n     * @param newSection The new selected section.\n     * @param moduleId The module to scroll to.\n     */\n    sectionChanged(newSection: CoreCourseSection, moduleId?: number): void {\n        const previousValue = this.selectedSection;\n        this.selectedSection = newSection;\n        this.data.section = this.selectedSection;\n\n        if (newSection.id != this.allSectionsId) {\n            // Select next and previous sections to show the arrows.\n            const i = this.sections.findIndex((value) => this.compareSections(value, newSection));\n\n            let j: number;\n            for (j = i - 1; j >= 1; j--) {\n                if (this.canViewSection(this.sections[j])) {\n                    break;\n                }\n            }\n            this.previousSection = j >= 1 ? this.sections[j] : undefined;\n\n            for (j = i + 1; j < this.sections.length; j++) {\n                if (this.canViewSection(this.sections[j])) {\n                    break;\n                }\n            }\n            this.nextSection = j < this.sections.length ? this.sections[j] : undefined;\n        } else {\n            this.previousSection = undefined;\n            this.nextSection = undefined;\n            this.lastShownSectionIndex = -1;\n            this.showMoreActivities();\n        }\n\n        // Scroll to module if needed. Give more priority to the input.\n        const moduleIdToScroll = this.moduleId && previousValue === undefined ? this.moduleId : moduleId;\n        if (moduleIdToScroll) {\n            this.scrollToModule(moduleIdToScroll);\n        }\n\n        if (!previousValue || previousValue.id !== newSection.id) {\n            // First load or section changed.\n            if (!moduleIdToScroll) {\n                this.content.scrollToTop(0);\n            }\n\n            this.logView(newSection.section, !previousValue);\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Scroll to a certain module.\n     *\n     * @param moduleId Module ID.\n     */\n    protected scrollToModule(moduleId: number): void {\n        CoreDom.scrollToElement(\n            this.elementRef.nativeElement,\n            '#core-course-module-' + moduleId,\n            { addYAxis: -10 },\n        );\n    }\n\n    /**\n     * Compare if two sections are equal.\n     *\n     * @param section1 First section.\n     * @param section2 Second section.\n     * @returns Whether they're equal.\n     */\n    compareSections(section1: CoreCourseSection, section2: CoreCourseSection): boolean {\n        return section1 && section2 ? section1.id === section2.id : section1 === section2;\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param afterCompletionChange Whether the refresh is due to a completion change.\n     * @returns Promise resolved when done.\n     */\n    async doRefresh(refresher?: HTMLIonRefresherElement, done?: () => void, afterCompletionChange?: boolean): Promise<void> {\n        const promises = this.dynamicComponents?.map(async (component) => {\n            await component.callComponentMethod('doRefresh', refresher, done, afterCompletionChange);\n        }) || [];\n\n        if (this.course) {\n            const courseId = this.course.id;\n            promises.push(CoreCourse.invalidateCourseBlocks(courseId).then(async () => {\n                this.hasBlocks = await CoreBlockHelper.hasCourseBlocks(courseId);\n\n                return;\n            }));\n        }\n\n        await Promise.all(promises);\n\n        refresher?.complete();\n        done?.();\n    }\n\n    /**\n     * Show more activities (only used when showing all the sections at the same time).\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     */\n    showMoreActivities(infiniteComplete?: () => void): void {\n        let modulesLoaded = 0;\n        while (this.lastShownSectionIndex < this.sections.length - 1 &&\n            modulesLoaded < CoreCourseFormatComponent.LOAD_MORE_ACTIVITIES) {\n            this.lastShownSectionIndex++;\n\n            if (!this.sections[this.lastShownSectionIndex].hasContent || !this.sections[this.lastShownSectionIndex].modules) {\n                continue;\n            }\n\n            modulesLoaded += this.sections[this.lastShownSectionIndex].modules.reduce((total, module) =>\n                !CoreCourseHelper.isModuleStealth(module, this.sections[this.lastShownSectionIndex]) ? total + 1 : total, 0);\n        }\n\n        this.canLoadMore = this.lastShownSectionIndex < this.sections.length - 1;\n\n        infiniteComplete?.();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.selectTabObserver?.off();\n        this.modViewedObserver?.off();\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    ionViewDidEnter(): void {\n        this.dynamicComponents?.forEach((component) => {\n            component.callComponentMethod('ionViewDidEnter');\n        });\n    }\n\n    /**\n     * User left the page that contains the component.\n     */\n    ionViewDidLeave(): void {\n        this.dynamicComponents?.forEach((component) => {\n            component.callComponentMethod('ionViewDidLeave');\n        });\n    }\n\n    /**\n     * Check whether a section can be viewed.\n     *\n     * @param section The section to check.\n     * @returns Whether the section can be viewed.\n     */\n    canViewSection(section: CoreCourseSection): boolean {\n        return CoreCourseHelper.canUserViewSection(section) && !CoreCourseHelper.isSectionStealth(section);\n    }\n\n    /**\n     * Log view.\n     *\n     * @param sectionNumber Section loaded (if any).\n     * @param firstLoad Whether it's the first load when opening the course.\n     */\n    async logView(sectionNumber?: number, firstLoad = false): Promise<void> {\n        await CoreUtils.ignoreErrors(\n            CoreCourse.logView(this.course.id, sectionNumber),\n        );\n\n        let extraParams = sectionNumber !== undefined ? `&section=${sectionNumber}` : '';\n        if (firstLoad && sectionNumber !== undefined) {\n            // If course is configured to show all sections in one page, don't include section in URL in first load.\n            const courseDisplay = 'courseformatoptions' in this.course &&\n                this.course.courseformatoptions?.find(option => option.name === 'coursedisplay');\n\n            if (!courseDisplay || Number(courseDisplay.value) !== 0) {\n                extraParams = '';\n            }\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'core_course_view_course',\n            name: this.course.fullname,\n            data: { id: this.course.id, sectionnumber: sectionNumber, category: 'course' },\n            url: `/course/view.php?id=${this.course.id}${extraParams}`,\n        });\n    }\n\n}\n\ntype CoreCourseSectionToDisplay = CoreCourseSection & {\n    highlighted?: boolean;\n};\n","<core-navbar-buttons slot=\"end\" prepend>\n    <ion-button fill=\"clear\" (click)=\"gotoCourseDownloads()\" [attr.aria-label]=\"'addon.storagemanager.coursedownloads' | translate\">\n        <ion-icon name=\"fas-cloud-arrow-down\" slot=\"icon-only\" aria-hidden=\"true\" />\n    </ion-button>\n</core-navbar-buttons>\n<core-dynamic-component [component]=\"courseFormatComponent\" [data]=\"data\">\n    <!-- Default course format. -->\n    <core-loading [hideUntil]=\"loaded\">\n\n        <!-- Single section. -->\n        <div *ngIf=\"selectedSection && selectedSection.id !== allSectionsId\">\n            <core-dynamic-component [component]=\"singleSectionComponent\" [data]=\"data\">\n                <ng-container *ngTemplateOutlet=\"sectionTemplate; context: {section: selectedSection}\" />\n                <core-empty-box *ngIf=\"!selectedSection.hasContent\" icon=\"fas-table-cells-large\"\n                    [message]=\"'core.course.nocontentavailable' | translate\" />\n            </core-dynamic-component>\n        </div>\n\n        <!-- Multiple sections. -->\n        <div *ngIf=\"selectedSection && selectedSection.id === allSectionsId\">\n            <core-dynamic-component [component]=\"allSectionsComponent\" [data]=\"data\">\n                <ng-container *ngFor=\"let section of sections; index as i\">\n                    <ng-container *ngIf=\"i <= lastShownSectionIndex\">\n                        <ng-container *ngTemplateOutlet=\"sectionTemplate; context: {section: section}\" />\n                    </ng-container>\n                </ng-container>\n            </core-dynamic-component>\n\n            <core-infinite-loading [enabled]=\"canLoadMore\" (action)=\"showMoreActivities($event)\" />\n        </div>\n        <div collapsible-footer appearOnBottom *ngIf=\"displayCourseIndex && (previousSection || nextSection)\" slot=\"fixed\">\n            <div class=\"core-course-section-nav-buttons safe-area-padding-horizontal list-item-limited-width\">\n                <ion-button *ngIf=\"previousSection\" (click)=\"sectionChanged(previousSection)\" expand=\"block\"\n                    [attr.aria-label]=\"('core.previous' | translate) + ': ' + previousSection.name\">\n                    <ion-icon name=\"fas-arrow-left\" slot=\"start\" aria-hidden=\"true\" />\n                    <core-format-text [text]=\"previousSection.name\" contextLevel=\"course\" [contextInstanceId]=\"course.id\" />\n                </ion-button>\n                <ion-button *ngIf=\"nextSection\" (click)=\"sectionChanged(nextSection)\" expand=\"block\"\n                    [attr.aria-label]=\"('core.next' | translate) + ': ' + nextSection.name\">\n                    <core-format-text [text]=\"nextSection.name\" contextLevel=\"course\" [contextInstanceId]=\"course.id\" />\n                    <ion-icon name=\"fas-arrow-right\" slot=\"end\" aria-hidden=\"true\" />\n                </ion-button>\n            </div>\n        </div>\n    </core-loading>\n</core-dynamic-component>\n\n\n<core-block-side-blocks-button slot=\"fixed\" *ngIf=\"loaded && course && displayBlocks && hasBlocks\" contextLevel=\"course\"\n    [instanceId]=\"course.id\" />\n\n<!-- Course Index button. -->\n<ion-fab slot=\"fixed\" core-fab vertical=\"bottom\" horizontal=\"end\" *ngIf=\"loaded && displayCourseIndex\">\n    <ion-fab-button (click)=\"openCourseIndex()\" [userTour]=\"courseIndexTour\" [attr.aria-label]=\"'core.course.courseindex' | translate\"\n        color=\"secondary\">\n        <ion-icon name=\"fas-list-ul\" aria-hidden=\"true\" />\n        <span class=\"sr-only\">{{'core.course.courseindex' | translate }}</span>\n    </ion-fab-button>\n</ion-fab>\n\n<!-- Template to render a section. -->\n<ng-template #sectionTemplate let-section=\"section\">\n    <section *ngIf=\"!section.hiddenbynumsections && section.id !== allSectionsId && section.id !== stealthModulesSectionId\"\n        class=\"core-course-module-list-wrapper\" [id]=\"section.id\"\n        [attr.aria-labelledby]=\"section.name ? 'core-section-name-' + section.id : null\">\n        <ion-item-divider class=\"course-section ion-text-wrap\" [class.item-dimmed]=\"section.visible === 0 || section.uservisible === false\">\n            <ion-label>\n                <h2 *ngIf=\"section.name\" class=\"big\" [id]=\"'core-section-name-' + section.id\">\n                    <core-format-text [text]=\"section.name\" contextLevel=\"course\" [contextInstanceId]=\"course.id\" />\n                </h2>\n                <div *ngIf=\"section.visible === 0 && section.uservisible !== false\">\n                    <ion-badge color=\"warning\">\n                        {{ 'core.course.hiddenfromstudents' | translate }}\n                    </ion-badge>\n                </div>\n                <div *ngIf=\"section.visible === 0 && section.uservisible === false\">\n                    <ion-badge color=\"warning\">\n                        {{ 'core.notavailable' | translate }}\n                    </ion-badge>\n                </div>\n                <div *ngIf=\"section.availabilityinfo\">\n                    <ion-chip class=\"clickable\">\n                        <ion-icon name=\"fas-lock\" [attr.aria-label]=\"'core.restricted' | translate\" />\n                        <ion-label>\n                            <core-format-text [text]=\" section.availabilityinfo\" contextLevel=\"course\" [contextInstanceId]=\"course.id\" />\n                        </ion-label>\n                    </ion-chip>\n                </div>\n            </ion-label>\n            <ion-badge *ngIf=\"section.highlighted && highlighted\" slot=\"end\">{{highlighted}}</ion-badge>\n        </ion-item-divider>\n\n        <ion-item class=\"ion-text-wrap section-summary\" *ngIf=\"section.summary\">\n            <ion-label>\n                <core-format-text [text]=\"section.summary\" contextLevel=\"course\" [contextInstanceId]=\"course.id\" />\n            </ion-label>\n        </ion-item>\n\n        <ng-container *ngFor=\"let module of section.modules\">\n            <core-course-module *ngIf=\"module.visibleoncoursepage !== 0\" [module]=\"module\" [section]=\"section\"\n                [showActivityDates]=\"course.showactivitydates\" [showCompletionConditions]=\"course.showcompletionconditions\"\n                [isLastViewed]=\"lastModuleViewed && lastModuleViewed.cmId === module.id\" [class.core-course-module-not-viewed]=\"\n                    !viewedModules[module.id] && (!module.completiondata || module.completiondata.state === completionStatusIncomplete)\" />\n        </ng-container>\n    </section>\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}