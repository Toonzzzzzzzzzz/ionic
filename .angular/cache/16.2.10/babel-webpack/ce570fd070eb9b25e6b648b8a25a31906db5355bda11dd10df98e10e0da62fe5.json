{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Base class to use for implementing custom Promises.\n */\nexport class CorePromise {\n  constructor(nativePromise) {\n    this.nativePromise = nativePromise;\n  }\n  /**\n   * @inheritdoc\n   */\n  then(onFulfilled, onRejected) {\n    return this.nativePromise.then(onFulfilled, onRejected);\n  }\n  /**\n   * @inheritdoc\n   */\n  catch(onRejected) {\n    return this.nativePromise.catch(onRejected);\n  }\n  /**\n   * @inheritdoc\n   */\n  finally(onFinally) {\n    return this.nativePromise.finally(onFinally);\n  }\n}\nSymbol.toStringTag;","map":{"version":3,"names":["CorePromise","constructor","nativePromise","then","onFulfilled","onRejected","catch","finally","onFinally","Symbol","toStringTag"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/classes/promise.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Base class to use for implementing custom Promises.\n */\nexport abstract class CorePromise<T = unknown> implements Promise<T> {\n\n    protected nativePromise: Promise<T>;\n\n    constructor(nativePromise: Promise<T>) {\n        this.nativePromise = nativePromise;\n    }\n\n    [Symbol.toStringTag]!: string;\n\n    /**\n     * @inheritdoc\n     */\n    then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n        onRejected?: ((reason: Error) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n    ): Promise<TResult1 | TResult2> {\n        return this.nativePromise.then(onFulfilled, onRejected);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    catch<TResult = never>(\n        onRejected?: ((reason: Error) => TResult | PromiseLike<TResult>) | undefined | null,\n    ): Promise<T | TResult> {\n        return this.nativePromise.catch(onRejected);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.nativePromise.finally(onFinally);\n    }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA,OAAM,MAAgBA,WAAW;EAI7BC,YAAYC,aAAyB;IACjC,IAAI,CAACA,aAAa,GAAGA,aAAa;EACtC;EAIA;;;EAGAC,IAAIA,CACAC,WAAiF,EACjFC,UAAqF;IAErF,OAAO,IAAI,CAACH,aAAa,CAACC,IAAI,CAACC,WAAW,EAAEC,UAAU,CAAC;EAC3D;EAEA;;;EAGAC,KAAKA,CACDD,UAAmF;IAEnF,OAAO,IAAI,CAACH,aAAa,CAACI,KAAK,CAACD,UAAU,CAAC;EAC/C;EAEA;;;EAGAE,OAAOA,CAACC,SAA+B;IACnC,OAAO,IAAI,CAACN,aAAa,CAACK,OAAO,CAACC,SAAS,CAAC;EAChD;;AA1BCC,MAAM,CAACC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}