{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar SplashScreen = /** @class */function (_super) {\n  __extends(SplashScreen, _super);\n  function SplashScreen() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SplashScreen.prototype.show = function () {\n    return cordova(this, \"show\", {\n      \"sync\": true\n    }, arguments);\n  };\n  SplashScreen.prototype.hide = function () {\n    return cordova(this, \"hide\", {\n      \"sync\": true\n    }, arguments);\n  };\n  SplashScreen.ɵfac = /* @__PURE__ */function () {\n    let ɵSplashScreen_BaseFactory;\n    return function SplashScreen_Factory(t) {\n      return (ɵSplashScreen_BaseFactory || (ɵSplashScreen_BaseFactory = i0.ɵɵgetInheritedFactory(SplashScreen)))(t || SplashScreen);\n    };\n  }();\n  SplashScreen.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SplashScreen,\n    factory: SplashScreen.ɵfac\n  });\n  SplashScreen.pluginName = \"SplashScreen\";\n  SplashScreen.plugin = \"cordova-plugin-splashscreen\";\n  SplashScreen.pluginRef = \"navigator.splashscreen\";\n  SplashScreen.repo = \"https://github.com/apache/cordova-plugin-splashscreen\";\n  SplashScreen.platforms = [\"Amazon Fire OS\", \"Android\", \"iOS\", \"Windows\"];\n  SplashScreen = __decorate([], SplashScreen);\n  return SplashScreen;\n}(AwesomeCordovaNativePlugin);\nexport { SplashScreen };\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplashScreen, [{\n    type: Injectable\n  }], null, {\n    show: [],\n    hide: []\n  });\n})();","map":{"version":3,"names":["__decorate","__extends","Injectable","AwesomeCordovaNativePlugin","cordova","i0","SplashScreen","_super","apply","arguments","prototype","show","hide","ɵfac","ɵSplashScreen_BaseFactory","SplashScreen_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","pluginName","plugin","pluginRef","repo","platforms","ngDevMode","ɵsetClassMetadata","type"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@awesome-cordova-plugins/splash-screen/ngx/index.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar SplashScreen = /** @class */ (function (_super) {\n    __extends(SplashScreen, _super);\n    function SplashScreen() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SplashScreen.prototype.show = function () { return cordova(this, \"show\", { \"sync\": true }, arguments); };\n    SplashScreen.prototype.hide = function () { return cordova(this, \"hide\", { \"sync\": true }, arguments); };\n    SplashScreen.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplashScreen, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    SplashScreen.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplashScreen });\n    SplashScreen.pluginName = \"SplashScreen\";\n    SplashScreen.plugin = \"cordova-plugin-splashscreen\";\n    SplashScreen.pluginRef = \"navigator.splashscreen\";\n    SplashScreen.repo = \"https://github.com/apache/cordova-plugin-splashscreen\";\n    SplashScreen.platforms = [\"Amazon Fire OS\", \"Android\", \"iOS\", \"Windows\"];\n    SplashScreen = __decorate([], SplashScreen);\n    return SplashScreen;\n}(AwesomeCordovaNativePlugin));\nexport { SplashScreen };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: SplashScreen, decorators: [{\n            type: Injectable\n        }], propDecorators: { show: [], hide: [] } });\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,0BAA0B,EAAEC,OAAO,QAAQ,+BAA+B;AACnF,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,IAAIC,YAAY,GAAG,aAAe,UAAUC,MAAM,EAAE;EAChDN,SAAS,CAACK,YAAY,EAAEC,MAAM,CAAC;EAC/B,SAASD,YAAYA,CAAA,EAAG;IACpB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAH,YAAY,CAACI,SAAS,CAACC,IAAI,GAAG,YAAY;IAAE,OAAOP,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE;MAAE,MAAM,EAAE;IAAK,CAAC,EAAEK,SAAS,CAAC;EAAE,CAAC;EACxGH,YAAY,CAACI,SAAS,CAACE,IAAI,GAAG,YAAY;IAAE,OAAOR,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE;MAAE,MAAM,EAAE;IAAK,CAAC,EAAEK,SAAS,CAAC;EAAE,CAAC;EACxGH,YAAY,CAACO,IAAI;IAAA,IAAAC,yBAAA;IAAA,gBAAAC,qBAAAC,CAAA;MAAA,QAAAF,yBAAA,KAAAA,yBAAA,GAA+ET,EAAE,CAAAY,qBAAA,CAAQX,YAAY,IAAAU,CAAA,IAAZV,YAAY;IAAA;EAAA,GAAsD;EAC5KA,YAAY,CAACY,KAAK,kBAD8Eb,EAAE,CAAAc,kBAAA;IAAAC,KAAA,EACYd,YAAY;IAAAe,OAAA,EAAZf,YAAY,CAAAO;EAAA,EAAG;EAC7HP,YAAY,CAACgB,UAAU,GAAG,cAAc;EACxChB,YAAY,CAACiB,MAAM,GAAG,6BAA6B;EACnDjB,YAAY,CAACkB,SAAS,GAAG,wBAAwB;EACjDlB,YAAY,CAACmB,IAAI,GAAG,uDAAuD;EAC3EnB,YAAY,CAACoB,SAAS,GAAG,CAAC,gBAAgB,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;EACxEpB,YAAY,GAAGN,UAAU,CAAC,EAAE,EAAEM,YAAY,CAAC;EAC3C,OAAOA,YAAY;AACvB,CAAC,CAACH,0BAA0B,CAAE;AAC9B,SAASG,YAAY;AACrB;EAAA,QAAAqB,SAAA,oBAAAA,SAAA,KAXoGtB,EAAE,CAAAuB,iBAAA,CAWVtB,YAAY,EAAc,CAAC;IAC3GuB,IAAI,EAAE3B;EACV,CAAC,CAAC,QAAkB;IAAES,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}