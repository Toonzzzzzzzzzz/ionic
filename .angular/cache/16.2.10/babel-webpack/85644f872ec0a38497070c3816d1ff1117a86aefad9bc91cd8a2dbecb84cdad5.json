{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { AddonMessages, AddonMessagesProvider } from '../../services/messages';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreApp } from '@services/app';\nimport { CorePushNotificationsDelegate } from '@features/pushnotifications/services/push-delegate';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\nimport { CorePlatform } from '@services/platform';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../core/components/context-menu/context-menu\";\nimport * as i4 from \"../../../../core/components/empty-box/empty-box\";\nimport * as i5 from \"../../../../core/components/loading/loading\";\nimport * as i6 from \"../../../../core/components/split-view/split-view\";\nimport * as i7 from \"../../../../core/components/user-avatar/user-avatar\";\nimport * as i8 from \"../../../../core/directives/fa-icon\";\nimport * as i9 from \"../../../../core/directives/format-text\";\nimport * as i10 from \"../../../../core/directives/content\";\nimport * as i11 from \"@ionic/angular\";\nimport * as i12 from \"../../../../core/features/search/components/search-box/search-box\";\nimport * as i13 from \"../../../../core/features/mainmenu/components/user-menu-button/user-menu-button\";\nimport * as i14 from \"../../../../core/pipes/date-day-or-time\";\nimport * as i15 from \"@ngx-translate/core\";\nfunction AddonMessagesDiscussions35Page_ng_container_28_ion_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 8);\n    i0.ɵɵlistener(\"click\", function AddonMessagesDiscussions35Page_ng_container_28_ion_item_9_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const result_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.gotoDiscussion(result_r5.userid, result_r5.messageid));\n    });\n    i0.ɵɵelement(1, \"core-user-avatar\", 16);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵelement(6, \"core-format-text\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const result_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"detail\", false);\n    i0.ɵɵattribute(\"aria-label\", result_r5.fullname)(\"aria-current\", result_r5.userid === ctx_r4.discussionUserId ? \"page\" : \"false\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", result_r5)(\"checkOnline\", result_r5.showonlinestatus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(result_r5.fullname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", result_r5.lastmessage)(\"contextInstanceId\", 0);\n  }\n}\nfunction AddonMessagesDiscussions35Page_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\")(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-note\", 14)(7, \"ion-badge\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, AddonMessagesDiscussions35Page_ng_container_28_ion_item_9_Template, 7, 8, \"ion-item\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, \"core.searchresults\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.search.results.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.search.results);\n  }\n}\nfunction AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"coreDateDayOrTime\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const discussion_r9 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, discussion_r9.message.timecreated / 1000), \" \");\n  }\n}\nfunction AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_ion_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 24);\n  }\n}\nfunction AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"addon.messages.unreadmessages\"), \" \");\n  }\n}\nfunction AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-note\");\n    i0.ɵɵtemplate(1, AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_span_1_Template, 3, 3, \"span\", 20);\n    i0.ɵɵtemplate(2, AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_ion_icon_2_Template, 1, 0, \"ion-icon\", 21);\n    i0.ɵɵtemplate(3, AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_span_3_Template, 3, 3, \"span\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const discussion_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", discussion_r9.message.timecreated > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", discussion_r9.unread);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", discussion_r9.unread);\n  }\n}\nfunction AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 8);\n    i0.ɵɵlistener(\"click\", function AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const discussion_r9 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.gotoDiscussion(discussion_r9.message.user));\n    });\n    i0.ɵɵelement(1, \"core-user-avatar\", 18);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"div\", 19)(4, \"p\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_Template, 4, 3, \"ion-note\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵelement(8, \"core-format-text\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const discussion_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"detail\", false);\n    i0.ɵɵattribute(\"aria-label\", discussion_r9.fullname)(\"aria-current\", discussion_r9.message.user === ctx_r8.discussionUserId ? \"page\" : \"false\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", discussion_r9);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(discussion_r9.fullname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", discussion_r9.message.timecreated > 0 || discussion_r9.unread);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", discussion_r9.message.message)(\"contextInstanceId\", 0);\n  }\n}\nfunction AddonMessagesDiscussions35Page_ng_container_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_Template, 9, 8, \"ion-item\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.discussions);\n  }\n}\nfunction AddonMessagesDiscussions35Page_core_empty_box_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 26);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"addon.messages.nomessagesfound\"));\n  }\n}\nfunction AddonMessagesDiscussions35Page_core_empty_box_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 27);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.noresults\"));\n  }\n}\n/**\n * Page that displays the list of discussions.\n */\nexport class AddonMessagesDiscussions35Page {\n  constructor(route) {\n    this.route = route;\n    this.loaded = false;\n    this.loadingMessage = '';\n    this.discussions = [];\n    this.search = {\n      showResults: false,\n      results: [],\n      loading: '',\n      text: ''\n    };\n    this.search.loading = Translate.instant('core.searching');\n    this.loadingMessages = Translate.instant('core.loading');\n    this.siteId = CoreSites.getCurrentSiteId();\n    // Update discussions when new message is received.\n    this.newMessagesObserver = CoreEvents.on(AddonMessagesProvider.NEW_MESSAGE_EVENT, data => {\n      if (data.userId && this.discussions) {\n        const discussion = this.discussions.find(disc => {\n          var _disc$message;\n          return ((_disc$message = disc.message) === null || _disc$message === void 0 ? void 0 : _disc$message.user) === data.userId;\n        });\n        if (discussion === undefined) {\n          this.loaded = false;\n          this.refreshData().finally(() => {\n            this.loaded = true;\n          });\n        } else if (discussion.message) {\n          var _data$message;\n          // An existing discussion has a new message, update the last message.\n          discussion.message.message = (_data$message = data.message) !== null && _data$message !== void 0 ? _data$message : '';\n          discussion.message.timecreated = data.timecreated;\n        }\n      }\n    }, this.siteId);\n    // Update discussions when a message is read.\n    this.readChangedObserver = CoreEvents.on(AddonMessagesProvider.READ_CHANGED_EVENT, data => {\n      if (data.userId && this.discussions) {\n        const discussion = this.discussions.find(disc => {\n          var _disc$message2;\n          return ((_disc$message2 = disc.message) === null || _disc$message2 === void 0 ? void 0 : _disc$message2.user) === data.userId;\n        });\n        if (discussion !== undefined) {\n          // A discussion has been read reset counter.\n          discussion.unread = false;\n          // Conversations changed, invalidate them and refresh unread counts.\n          AddonMessages.invalidateConversations(this.siteId);\n          AddonMessages.refreshUnreadConversationCounts(this.siteId);\n        }\n      }\n    }, this.siteId);\n    // Refresh the view when the app is resumed.\n    this.appResumeSubscription = CorePlatform.resume.subscribe(() => {\n      if (!this.loaded) {\n        return;\n      }\n      this.loaded = false;\n      this.refreshData();\n    });\n    // If a message push notification is received, refresh the view.\n    this.pushObserver = CorePushNotificationsDelegate.on('receive').subscribe(notification => {\n      // New message received. If it's from current site, refresh the data.\n      if (CoreUtils.isFalseOrZero(notification.notif) && notification.site == this.siteId) {\n        // Don't refresh unread counts, it's refreshed from the main menu handler in this case.\n        this.refreshData(undefined, false);\n      }\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.route.queryParams.subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (params) {\n          var _CoreNavigator$getRou;\n          // When a child page loads this callback is triggered too.\n          _this.discussionUserId = (_CoreNavigator$getRou = CoreNavigator.getRouteNumberParam('userId', {\n            params\n          })) !== null && _CoreNavigator$getRou !== void 0 ? _CoreNavigator$getRou : _this.discussionUserId;\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      const deepLinkManager = new CoreMainMenuDeepLinkManager();\n      yield _this.fetchData();\n      if (!_this.discussionUserId && _this.discussions.length > 0 && CoreScreen.isTablet && _this.discussions[0].message) {\n        // Take first and load it.\n        yield _this.gotoDiscussion(_this.discussions[0].message.user);\n      }\n      // Treat deep link now that the conversation route has been loaded if needed.\n      deepLinkManager.treatLink();\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   * @param refreshUnreadCounts Whteher to refresh unread counts.\n   * @returns Promise resolved when done.\n   */\n  refreshData(refresher, refreshUnreadCounts = true) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonMessages.invalidateDiscussionsCache(_this2.siteId));\n      if (refreshUnreadCounts) {\n        promises.push(AddonMessages.invalidateUnreadConversationCounts(_this2.siteId));\n      }\n      yield CoreUtils.allPromises(promises).finally(() => _this2.fetchData().finally(() => {\n        if (refresher) {\n          refresher === null || refresher === void 0 || refresher.complete();\n        }\n      }));\n    })();\n  }\n  /**\n   * Fetch discussions.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchData() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.loadingMessage = _this3.loadingMessages;\n      const promises = [];\n      promises.push(AddonMessages.getDiscussions(_this3.siteId).then(discussions => {\n        // Convert to an array for sorting.\n        const discussionsSorted = [];\n        for (const userId in discussions) {\n          discussions[userId].unread = !!discussions[userId].unread;\n          discussionsSorted.push(discussions[userId]);\n        }\n        _this3.discussions = discussionsSorted.sort((a, b) => {\n          var _b$message, _a$message;\n          return (((_b$message = b.message) === null || _b$message === void 0 ? void 0 : _b$message.timecreated) || 0) - (((_a$message = a.message) === null || _a$message === void 0 ? void 0 : _a$message.timecreated) || 0);\n        });\n        return;\n      }));\n      promises.push(AddonMessages.getUnreadConversationCounts(_this3.siteId));\n      try {\n        yield Promise.all(promises);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingdiscussions', true);\n      }\n      _this3.loaded = true;\n    })();\n  }\n  /**\n   * Clear search and show discussions again.\n   */\n  clearSearch() {\n    this.loaded = false;\n    this.search.showResults = false;\n    this.search.text = ''; // Reset searched string.\n    this.fetchData().finally(() => {\n      this.loaded = true;\n    });\n  }\n  /**\n   * Search messages cotaining text.\n   *\n   * @param query Text to search for.\n   * @returns Resolved when done.\n   */\n  searchMessage(query) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      CoreApp.closeKeyboard();\n      _this4.loaded = false;\n      _this4.loadingMessage = _this4.search.loading;\n      try {\n        const searchResults = yield AddonMessages.searchMessages(query, undefined, undefined, undefined, _this4.siteId);\n        _this4.search.showResults = true;\n        _this4.search.results = searchResults.messages;\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\n      }\n      _this4.loaded = true;\n    })();\n  }\n  /**\n   * Navigate to a particular discussion.\n   *\n   * @param discussionUserId Discussion Id to load.\n   * @param messageId Message to scroll after loading the discussion. Used when searching.\n   */\n  gotoDiscussion(discussionUserId, messageId) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.discussionUserId = discussionUserId;\n      const params = {};\n      if (messageId) {\n        params.message = messageId;\n      }\n      const path = CoreNavigator.getRelativePathToParent('/messages/index') + `discussion/user/${discussionUserId}`;\n      yield CoreNavigator.navigate(path, {\n        params,\n        reset: CoreScreen.isTablet && !!_this5.splitView && !_this5.splitView.isNested\n      });\n    })();\n  }\n  /**\n   * Navigate to contacts view.\n   */\n  gotoContacts() {\n    const params = {};\n    if (CoreScreen.isTablet && this.discussionUserId) {\n      params.discussionUserId = this.discussionUserId;\n    }\n    CoreNavigator.navigateToSitePath('contacts-35', {\n      params\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$newMessagesObse, _this$readChangedObse, _this$appResumeSubscr, _this$pushObserver;\n    (_this$newMessagesObse = this.newMessagesObserver) === null || _this$newMessagesObse === void 0 || _this$newMessagesObse.off();\n    (_this$readChangedObse = this.readChangedObserver) === null || _this$readChangedObse === void 0 || _this$readChangedObse.off();\n    (_this$appResumeSubscr = this.appResumeSubscription) === null || _this$appResumeSubscr === void 0 || _this$appResumeSubscr.unsubscribe();\n    (_this$pushObserver = this.pushObserver) === null || _this$pushObserver === void 0 || _this$pushObserver.unsubscribe();\n  }\n}\n_class = AddonMessagesDiscussions35Page;\n_class.ɵfac = function AddonMessagesDiscussions35Page_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-messages-discussions\"]],\n  viewQuery: function AddonMessagesDiscussions35Page_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreSplitViewComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.splitView = _t.first);\n    }\n  },\n  decls: 32,\n  vars: 28,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"slot\", \"end\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [\"autocorrect\", \"off\", \"spellcheck\", \"false\", \"lengthCheck\", \"2\", \"searchArea\", \"AddonMessagesDiscussions\", 3, \"placeholder\", \"disabled\", \"autoFocus\", \"onSubmit\", \"onClear\"], [3, \"hideUntil\", \"message\"], [1, \"ion-no-margin\"], [\"button\", \"\", 1, \"ion-text-wrap\", \"addon-message-discussion\", 3, \"detail\", \"click\"], [\"name\", \"fas-address-book\", \"slot\", \"start\", \"aria-hidden\", \"true\"], [1, \"item-heading\"], [4, \"ngIf\"], [\"icon\", \"far-comments\", 3, \"message\", 4, \"ngIf\"], [\"icon\", \"fas-magnifying-glass\", 3, \"message\", 4, \"ngIf\"], [\"slot\", \"end\", 1, \"ion-padding-end\"], [\"class\", \"ion-text-wrap addon-message-discussion\", \"button\", \"\", 3, \"detail\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"slot\", \"start\", 3, \"user\", \"checkOnline\"], [\"clean\", \"true\", \"singleLine\", \"true\", \"contextLevel\", \"system\", 3, \"text\", \"contextInstanceId\"], [\"slot\", \"start\", \"checkOnline\", \"false\", 3, \"user\"], [1, \"flex-row\", \"ion-justify-content-between\"], [\"class\", \"addon-message-last-message-date\", 4, \"ngIf\"], [\"name\", \"fas-circle\", \"color\", \"primary\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"addon-message-last-message-date\"], [\"name\", \"fas-circle\", \"color\", \"primary\", \"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"icon\", \"far-comments\", 3, \"message\"], [\"icon\", \"fas-magnifying-glass\", 3, \"message\"]],\n  template: function AddonMessagesDiscussions35Page_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"ion-buttons\", 2);\n      i0.ɵɵelement(10, \"core-context-menu\")(11, \"core-user-menu-button\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"ion-content\")(13, \"core-split-view\")(14, \"ion-refresher\", 3);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonMessagesDiscussions35Page_Template_ion_refresher_ionRefresh_14_listener($event) {\n        return ctx.refreshData($event.target);\n      });\n      i0.ɵɵelement(15, \"ion-refresher-content\", 4);\n      i0.ɵɵpipe(16, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"core-search-box\", 5);\n      i0.ɵɵlistener(\"onSubmit\", function AddonMessagesDiscussions35Page_Template_core_search_box_onSubmit_17_listener($event) {\n        return ctx.searchMessage($event);\n      })(\"onClear\", function AddonMessagesDiscussions35Page_Template_core_search_box_onClear_17_listener() {\n        return ctx.clearSearch();\n      });\n      i0.ɵɵpipe(18, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"core-loading\", 6)(20, \"ion-list\", 7)(21, \"ion-item\", 8);\n      i0.ɵɵlistener(\"click\", function AddonMessagesDiscussions35Page_Template_ion_item_click_21_listener() {\n        return ctx.gotoContacts();\n      });\n      i0.ɵɵpipe(22, \"translate\");\n      i0.ɵɵelement(23, \"ion-icon\", 9);\n      i0.ɵɵelementStart(24, \"ion-label\")(25, \"p\", 10);\n      i0.ɵɵtext(26);\n      i0.ɵɵpipe(27, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(28, AddonMessagesDiscussions35Page_ng_container_28_Template, 10, 5, \"ng-container\", 11);\n      i0.ɵɵtemplate(29, AddonMessagesDiscussions35Page_ng_container_29_Template, 2, 1, \"ng-container\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, AddonMessagesDiscussions35Page_core_empty_box_30_Template, 2, 3, \"core-empty-box\", 12);\n      i0.ɵɵtemplate(31, AddonMessagesDiscussions35Page_core_empty_box_31_Template, 2, 3, \"core-empty-box\", 13);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 16, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 18, \"addon.messages.messages\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(16, 20, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(18, 22, \"addon.messages.message\"))(\"disabled\", !ctx.loaded)(\"autoFocus\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded)(\"message\", ctx.loadingMessage);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"detail\", true);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(22, 24, \"addon.messages.contacts\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(27, 26, \"addon.messages.contacts\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.search.showResults);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.search.showResults);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (!ctx.discussions || ctx.discussions.length <= 0) && !ctx.search.showResults);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (!ctx.search.results || ctx.search.results.length <= 0) && ctx.search.showResults);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.CoreContextMenuComponent, i4.CoreEmptyBoxComponent, i5.CoreLoadingComponent, i6.CoreSplitViewComponent, i7.CoreUserAvatarComponent, i8.CoreFaIconDirective, i9.CoreFormatTextDirective, i10.CoreContentDirective, i11.IonBadge, i11.IonButtons, i11.IonContent, i11.IonHeader, i11.IonIcon, i11.IonItem, i11.IonItemDivider, i11.IonLabel, i11.IonList, i11.IonNote, i11.IonRefresher, i11.IonRefresherContent, i11.IonTitle, i11.IonToolbar, i11.IonBackButton, i12.CoreSearchBoxComponent, i13.CoreMainMenuUserButtonComponent, i14.CoreDateDayOrTimePipe, i15.TranslatePipe],\n  styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%] {\\n  margin-right: 0;\\n  margin-left: 0;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   core-format-text[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   core-format-text[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%] {\\n  -webkit-margin-start: 2px;\\n  margin-inline-start: 2px;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-self: flex-start;\\n  -webkit-margin-start: 2px;\\n  margin-inline-start: 2px;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%] {\\n  margin-top: 3px;\\n  align-self: flex-end;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   .addon-message-last-message-date[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   ion-note[_ngcontent-%COMP%]   .addon-message-last-message-date[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  font-size: 11px;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-start;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-user[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  color: var(--ion-text-color);\\n  -webkit-margin-end: 2px;\\n  margin-inline-end: 2px;\\n}\\n[_nghost-%COMP%]   .addon-messages-conversation-item[_ngcontent-%COMP%]   .addon-message-last-message-text[_ngcontent-%COMP%], [_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .addon-message-last-message-text[_ngcontent-%COMP%] {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  flex-shrink: 1;\\n}\\n[_nghost-%COMP%]   .addon-message-discussion[_ngcontent-%COMP%]   .item-heading[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n}\\n[_nghost-%COMP%]   ion-item-divider[_ngcontent-%COMP%]   ion-badge[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n  margin-right: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"names":["CoreEvents","CoreSites","AddonMessages","AddonMessagesProvider","CoreDomUtils","CoreUtils","CoreApp","CorePushNotificationsDelegate","Translate","CoreNavigator","CoreScreen","CoreMainMenuDeepLinkManager","CorePlatform","CoreSplitViewComponent","i0","ɵɵelementStart","ɵɵlistener","AddonMessagesDiscussions35Page_ng_container_28_ion_item_9_Template_ion_item_click_0_listener","restoredCtx","ɵɵrestoreView","_r7","result_r5","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","gotoDiscussion","userid","messageid","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵattribute","fullname","ctx_r4","discussionUserId","ɵɵadvance","showonlinestatus","ɵɵtextInterpolate","lastmessage","ɵɵelementContainerStart","ɵɵtemplate","AddonMessagesDiscussions35Page_ng_container_28_ion_item_9_Template","ɵɵelementContainerEnd","ɵɵpipeBind1","ctx_r0","search","results","length","ɵɵtextInterpolate1","discussion_r9","message","timecreated","AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_span_1_Template","AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_ion_icon_2_Template","AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_span_3_Template","unread","AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_Template_ion_item_click_0_listener","_r17","ctx_r16","user","AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_ion_note_6_Template","ctx_r8","AddonMessagesDiscussions35Page_ng_container_29_ion_item_1_Template","ctx_r1","discussions","AddonMessagesDiscussions35Page","constructor","route","loaded","loadingMessage","showResults","loading","text","instant","loadingMessages","siteId","getCurrentSiteId","newMessagesObserver","on","NEW_MESSAGE_EVENT","data","userId","discussion","find","disc","_disc$message","undefined","refreshData","finally","_data$message","readChangedObserver","READ_CHANGED_EVENT","_disc$message2","invalidateConversations","refreshUnreadConversationCounts","appResumeSubscription","resume","subscribe","pushObserver","notification","isFalseOrZero","notif","site","ngOnInit","_this","_asyncToGenerator","queryParams","_ref","params","_CoreNavigator$getRou","getRouteNumberParam","_x","apply","arguments","deepLinkManager","fetchData","isTablet","treatLink","refresher","refreshUnreadCounts","_this2","promises","push","invalidateDiscussionsCache","invalidateUnreadConversationCounts","allPromises","complete","_this3","getDiscussions","then","discussionsSorted","sort","a","b","_b$message","_a$message","getUnreadConversationCounts","Promise","all","error","showErrorModalDefault","clearSearch","searchMessage","query","_this4","closeKeyboard","searchResults","searchMessages","messages","messageId","_this5","path","getRelativePathToParent","navigate","reset","splitView","isNested","gotoContacts","navigateToSitePath","ngOnDestroy","_this$newMessagesObse","_this$readChangedObse","_this$appResumeSubscr","_this$pushObserver","off","unsubscribe","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","viewQuery","AddonMessagesDiscussions35Page_Query","rf","ctx","AddonMessagesDiscussions35Page_Template_ion_refresher_ionRefresh_14_listener","$event","target","AddonMessagesDiscussions35Page_Template_core_search_box_onSubmit_17_listener","AddonMessagesDiscussions35Page_Template_core_search_box_onClear_17_listener","AddonMessagesDiscussions35Page_Template_ion_item_click_21_listener","AddonMessagesDiscussions35Page_ng_container_28_Template","AddonMessagesDiscussions35Page_ng_container_29_Template","AddonMessagesDiscussions35Page_core_empty_box_30_Template","AddonMessagesDiscussions35Page_core_empty_box_31_Template","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messages/pages/discussions-35/discussions.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messages/pages/discussions-35/discussions.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport {\n    AddonMessages,\n    AddonMessagesDiscussion,\n    AddonMessagesMessageAreaContact,\n    AddonMessagesProvider,\n} from '../../services/messages';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreApp } from '@services/app';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { CorePushNotificationsNotificationBasicData } from '@features/pushnotifications/services/pushnotifications';\nimport { CorePushNotificationsDelegate } from '@features/pushnotifications/services/push-delegate';\nimport { Subscription } from 'rxjs';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\nimport { CorePlatform } from '@services/platform';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\n\n/**\n * Page that displays the list of discussions.\n */\n@Component({\n    selector: 'addon-messages-discussions',\n    templateUrl: 'discussions.html',\n    styleUrls: ['../../messages-common.scss'],\n})\nexport class AddonMessagesDiscussions35Page implements OnInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    protected newMessagesObserver: CoreEventObserver;\n    protected readChangedObserver: CoreEventObserver;\n    protected appResumeSubscription: Subscription;\n    protected pushObserver: Subscription;\n    protected loadingMessages: string;\n    protected siteId: string;\n\n    loaded = false;\n    loadingMessage = '';\n    discussions: AddonMessagesDiscussion[] = [];\n    discussionUserId?: number;\n\n    search = {\n        showResults: false,\n        results: <AddonMessagesMessageAreaContact[]> [],\n        loading: '',\n        text: '',\n    };\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n\n        this.search.loading = Translate.instant('core.searching');\n        this.loadingMessages = Translate.instant('core.loading');\n        this.siteId = CoreSites.getCurrentSiteId();\n\n        // Update discussions when new message is received.\n        this.newMessagesObserver = CoreEvents.on(\n            AddonMessagesProvider.NEW_MESSAGE_EVENT,\n            (data) => {\n                if (data.userId && this.discussions) {\n                    const discussion = this.discussions.find((disc) => disc.message?.user === data.userId);\n\n                    if (discussion === undefined) {\n                        this.loaded = false;\n                        this.refreshData().finally(() => {\n                            this.loaded = true;\n                        });\n                    } else if (discussion.message) {\n                        // An existing discussion has a new message, update the last message.\n                        discussion.message.message = data.message ?? '';\n                        discussion.message.timecreated = data.timecreated;\n                    }\n                }\n            },\n            this.siteId,\n        );\n\n        // Update discussions when a message is read.\n        this.readChangedObserver = CoreEvents.on(\n            AddonMessagesProvider.READ_CHANGED_EVENT,\n            (data) => {\n                if (data.userId && this.discussions) {\n                    const discussion = this.discussions.find((disc) => disc.message?.user === data.userId);\n\n                    if (discussion !== undefined) {\n                        // A discussion has been read reset counter.\n                        discussion.unread = false;\n\n                        // Conversations changed, invalidate them and refresh unread counts.\n                        AddonMessages.invalidateConversations(this.siteId);\n                        AddonMessages.refreshUnreadConversationCounts(this.siteId);\n                    }\n                }\n            },\n            this.siteId,\n        );\n\n        // Refresh the view when the app is resumed.\n        this.appResumeSubscription = CorePlatform.resume.subscribe(() => {\n            if (!this.loaded) {\n                return;\n            }\n            this.loaded = false;\n            this.refreshData();\n        });\n\n        // If a message push notification is received, refresh the view.\n        this.pushObserver = CorePushNotificationsDelegate.on<CorePushNotificationsNotificationBasicData>('receive')\n            .subscribe((notification) => {\n                // New message received. If it's from current site, refresh the data.\n                if (CoreUtils.isFalseOrZero(notification.notif) && notification.site == this.siteId) {\n                // Don't refresh unread counts, it's refreshed from the main menu handler in this case.\n                    this.refreshData(undefined, false);\n                }\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.route.queryParams.subscribe(async (params) => {\n            // When a child page loads this callback is triggered too.\n            this.discussionUserId = CoreNavigator.getRouteNumberParam('userId', { params }) ?? this.discussionUserId;\n        });\n\n        const deepLinkManager = new CoreMainMenuDeepLinkManager();\n\n        await this.fetchData();\n\n        if (!this.discussionUserId && this.discussions.length > 0 && CoreScreen.isTablet && this.discussions[0].message) {\n            // Take first and load it.\n            await this.gotoDiscussion(this.discussions[0].message.user);\n        }\n\n        // Treat deep link now that the conversation route has been loaded if needed.\n        deepLinkManager.treatLink();\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param refreshUnreadCounts Whteher to refresh unread counts.\n     * @returns Promise resolved when done.\n     */\n    async refreshData(refresher?: HTMLIonRefresherElement, refreshUnreadCounts: boolean = true): Promise<void> {\n        const promises: Promise<void>[] = [];\n        promises.push(AddonMessages.invalidateDiscussionsCache(this.siteId));\n\n        if (refreshUnreadCounts) {\n            promises.push(AddonMessages.invalidateUnreadConversationCounts(this.siteId));\n        }\n\n        await CoreUtils.allPromises(promises).finally(() => this.fetchData().finally(() => {\n            if (refresher) {\n                refresher?.complete();\n            }\n        }));\n    }\n\n    /**\n     * Fetch discussions.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        this.loadingMessage = this.loadingMessages;\n\n        const promises: Promise<unknown>[] = [];\n\n        promises.push(AddonMessages.getDiscussions(this.siteId).then((discussions) => {\n            // Convert to an array for sorting.\n            const discussionsSorted: AddonMessagesDiscussion[] = [];\n            for (const userId in discussions) {\n                discussions[userId].unread = !!discussions[userId].unread;\n\n                discussionsSorted.push(discussions[userId]);\n            }\n\n            this.discussions = discussionsSorted.sort((a, b) => (b.message?.timecreated || 0) - (a.message?.timecreated || 0));\n\n            return;\n        }));\n\n        promises.push(AddonMessages.getUnreadConversationCounts(this.siteId));\n\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingdiscussions', true);\n        }\n\n        this.loaded = true;\n    }\n\n    /**\n     * Clear search and show discussions again.\n     */\n    clearSearch(): void {\n        this.loaded = false;\n        this.search.showResults = false;\n        this.search.text = ''; // Reset searched string.\n        this.fetchData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Search messages cotaining text.\n     *\n     * @param query Text to search for.\n     * @returns Resolved when done.\n     */\n    async searchMessage(query: string): Promise<void> {\n        CoreApp.closeKeyboard();\n        this.loaded = false;\n        this.loadingMessage = this.search.loading;\n\n        try {\n            const searchResults = await AddonMessages.searchMessages(query, undefined, undefined, undefined, this.siteId);\n            this.search.showResults = true;\n            this.search.results = searchResults.messages;\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\n        }\n\n        this.loaded = true;\n    }\n\n    /**\n     * Navigate to a particular discussion.\n     *\n     * @param discussionUserId Discussion Id to load.\n     * @param messageId Message to scroll after loading the discussion. Used when searching.\n     */\n    async gotoDiscussion(discussionUserId: number, messageId?: number): Promise<void> {\n        this.discussionUserId = discussionUserId;\n\n        const params: Params = {};\n\n        if (messageId) {\n            params.message = messageId;\n        }\n\n        const path = CoreNavigator.getRelativePathToParent('/messages/index') + `discussion/user/${discussionUserId}`;\n\n        await CoreNavigator.navigate(path, {\n            params,\n            reset: CoreScreen.isTablet && !!this.splitView && !this.splitView.isNested,\n        });\n    }\n\n    /**\n     * Navigate to contacts view.\n     */\n    gotoContacts(): void {\n        const params: Params = {};\n\n        if (CoreScreen.isTablet && this.discussionUserId) {\n            params.discussionUserId = this.discussionUserId;\n        }\n\n        CoreNavigator.navigateToSitePath('contacts-35', { params });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.newMessagesObserver?.off();\n        this.readChangedObserver?.off();\n        this.appResumeSubscription?.unsubscribe();\n        this.pushObserver?.unsubscribe();\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'addon.messages.messages' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <!-- Add an empty context menu so split view pages can add items, otherwise the menu disappears in some cases. -->\n            <core-context-menu />\n            <core-user-menu-button />\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-split-view>\n        <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refreshData($event.target)\">\n            <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n        </ion-refresher>\n\n        <core-search-box (onSubmit)=\"searchMessage($event)\" (onClear)=\"clearSearch()\" [placeholder]=\" 'addon.messages.message' | translate\"\n            autocorrect=\"off\" spellcheck=\"false\" lengthCheck=\"2\" [disabled]=\"!loaded\" searchArea=\"AddonMessagesDiscussions\"\n            [autoFocus]=\"false\" />\n\n        <core-loading [hideUntil]=\"loaded\" [message]=\"loadingMessage\">\n\n            <ion-list class=\"ion-no-margin\">\n\n                <ion-item class=\"ion-text-wrap addon-message-discussion\" (click)=\"gotoContacts()\"\n                    [attr.aria-label]=\"'addon.messages.contacts' | translate\" [detail]=\"true\" button>\n                    <ion-icon name=\"fas-address-book\" slot=\"start\" aria-hidden=\"true\" />\n                    <ion-label>\n                        <p class=\"item-heading\">{{ 'addon.messages.contacts' | translate }}</p>\n                    </ion-label>\n                </ion-item>\n\n                <ng-container *ngIf=\"search.showResults\">\n                    <ion-item-divider>\n                        <ion-label>\n                            <h2>{{ 'core.searchresults' | translate }}</h2>\n                        </ion-label>\n                        <ion-note slot=\"end\" class=\"ion-padding-end\">\n                            <ion-badge>{{ search.results.length }}</ion-badge>\n                        </ion-note>\n                    </ion-item-divider>\n                    <ion-item class=\"ion-text-wrap addon-message-discussion\" *ngFor=\"let result of search.results\" button\n                        [attr.aria-label]=\"result.fullname\" (click)=\"gotoDiscussion(result.userid, result.messageid)\"\n                        [attr.aria-current]=\"result.userid === discussionUserId ? 'page' : 'false'\" [detail]=\"false\">\n                        <core-user-avatar [user]=\"result\" slot=\"start\" [checkOnline]=\"result.showonlinestatus\" />\n                        <ion-label>\n                            <p class=\"item-heading\">{{ result.fullname }}</p>\n                            <p>\n                                <core-format-text clean=\"true\" singleLine=\"true\" [text]=\"result.lastmessage\" contextLevel=\"system\"\n                                    [contextInstanceId]=\"0\" />\n                            </p>\n                        </ion-label>\n                    </ion-item>\n                </ng-container>\n                <ng-container *ngIf=\"!search.showResults\">\n                    <ion-item class=\"ion-text-wrap addon-message-discussion\" *ngFor=\"let discussion of discussions\" button\n                        [attr.aria-label]=\"discussion.fullname\" (click)=\"gotoDiscussion(discussion.message!.user)\"\n                        [attr.aria-current]=\"discussion.message!.user === discussionUserId ? 'page' : 'false'\" [detail]=\"false\">\n                        <core-user-avatar [user]=\"discussion\" slot=\"start\" checkOnline=\"false\" />\n                        <ion-label>\n                            <div class=\"flex-row ion-justify-content-between\">\n                                <p class=\"item-heading\">{{ discussion.fullname }}</p>\n                                <ion-note *ngIf=\"discussion.message!.timecreated > 0 || discussion.unread\">\n                                    <span *ngIf=\"discussion.message!.timecreated > 0\" class=\"addon-message-last-message-date\">\n                                        {{discussion.message!.timecreated / 1000 | coreDateDayOrTime}}\n                                    </span>\n                                    <ion-icon *ngIf=\"discussion.unread\" name=\"fas-circle\" color=\"primary\" aria-hidden=\"true\" />\n                                    <span *ngIf=\"discussion.unread\" class=\"sr-only\">\n                                        {{ 'addon.messages.unreadmessages' | translate }}\n                                    </span>\n                                </ion-note>\n                            </div>\n                            <p>\n                                <core-format-text clean=\"true\" singleLine=\"true\" [text]=\"discussion.message!.message\" contextLevel=\"system\"\n                                    [contextInstanceId]=\"0\" />\n                            </p>\n                        </ion-label>\n                    </ion-item>\n                </ng-container>\n            </ion-list>\n\n            <core-empty-box *ngIf=\"(!discussions || discussions.length <= 0) && !search.showResults\" icon=\"far-comments\"\n                [message]=\"'addon.messages.nomessagesfound' | translate\" />\n\n            <core-empty-box *ngIf=\"(!search.results || search.results.length <= 0) && search.showResults\" icon=\"fas-magnifying-glass\"\n                [message]=\"'core.noresults' | translate\" />\n        </core-loading>\n    </core-split-view>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}