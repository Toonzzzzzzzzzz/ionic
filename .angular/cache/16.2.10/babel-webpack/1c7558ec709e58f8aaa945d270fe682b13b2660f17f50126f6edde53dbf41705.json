{"ast":null,"code":"var _class;\nimport { AddonModDataFieldPluginBaseComponent } from '../../../classes/base-field-plugin-component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../../core/components/input-errors/input-errors\";\nimport * as i3 from \"../../../../../../core/components/mark-required/mark-required\";\nimport * as i4 from \"../../../../../../core/directives/format-text\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@ngx-translate/core\";\nfunction AddonModDataFieldCheckboxComponent_span_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"core-mark-required\", ctx_r2.field.required);\n  }\n}\nfunction AddonModDataFieldCheckboxComponent_span_0_ion_select_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r6.key);\n  }\n}\nfunction AddonModDataFieldCheckboxComponent_span_0_core_input_errors_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-input-errors\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"control\", ctx_r4.form.controls[\"f_\" + ctx_r4.field.id])(\"errorText\", ctx_r4.error);\n  }\n}\nfunction AddonModDataFieldCheckboxComponent_span_0_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-checkbox\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AddonModDataFieldCheckboxComponent_span_0_ion_item_8_Template_ion_checkbox_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.searchFields[\"f_\" + ctx_r7.field.id + \"_allreq\"] = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, \"addon.mod_data.selectedrequired\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"f_\" + ctx_r5.field.id + \"_allreq\")(\"ngModel\", ctx_r5.searchFields[\"f_\" + ctx_r5.field.id + \"_allreq\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    header: a0\n  };\n};\nfunction AddonModDataFieldCheckboxComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtemplate(1, AddonModDataFieldCheckboxComponent_span_0_span_1_Template, 1, 1, \"span\", 3);\n    i0.ɵɵelementStart(2, \"ion-select\", 4);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵtemplate(6, AddonModDataFieldCheckboxComponent_span_0_ion_select_option_6_Template, 2, 2, \"ion-select-option\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AddonModDataFieldCheckboxComponent_span_0_core_input_errors_7_Template, 1, 2, \"core-input-errors\", 6);\n    i0.ɵɵtemplate(8, AddonModDataFieldCheckboxComponent_span_0_ion_item_8_Template, 5, 5, \"ion-item\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", \"f_\" + ctx_r0.field.id)(\"placeholder\", i0.ɵɵpipeBind1(3, 10, \"addon.mod_data.menuchoose\"))(\"cancelText\", i0.ɵɵpipeBind1(4, 12, \"core.cancel\"))(\"okText\", i0.ɵɵpipeBind1(5, 14, \"core.ok\"))(\"interfaceOptions\", i0.ɵɵpureFunction1(16, _c0, ctx_r0.field.name));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.error && ctx_r0.editMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.searchMode);\n  }\n}\nfunction AddonModDataFieldCheckboxComponent_core_format_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-format-text\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"text\", ctx_r1.value.content)(\"filter\", false);\n  }\n}\n/**\n * Component to render data checkbox field.\n */\nexport class AddonModDataFieldCheckboxComponent extends AddonModDataFieldPluginBaseComponent {\n  constructor() {\n    super(...arguments);\n    this.options = [];\n  }\n  /**\n   * @inheritdoc\n   */\n  init() {\n    if (this.displayMode) {\n      this.updateValue(this.value);\n      return;\n    }\n    this.options = this.field.param1.split(/\\r?\\n/).map(option => ({\n      key: option,\n      value: option\n    }));\n    const values = [];\n    if (this.editMode && this.value && this.value.content) {\n      this.value.content.split('##').forEach(value => {\n        const x = this.options.findIndex(option => value == option.key);\n        if (x >= 0) {\n          values.push(value);\n        }\n      });\n    }\n    if (this.searchMode) {\n      this.addControl('f_' + this.field.id + '_allreq');\n    }\n    this.addControl('f_' + this.field.id, values);\n  }\n  /**\n   * @inheritdoc\n   */\n  updateValue(value) {\n    var _value$content;\n    this.value = value || {};\n    this.value.content = value === null || value === void 0 || (_value$content = value.content) === null || _value$content === void 0 ? void 0 : _value$content.split('##').join('<br>');\n  }\n}\n_class = AddonModDataFieldCheckboxComponent;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModDataFieldCheckboxComponent_BaseFactory;\n  return function AddonModDataFieldCheckboxComponent_Factory(t) {\n    return (ɵAddonModDataFieldCheckboxComponent_BaseFactory || (ɵAddonModDataFieldCheckboxComponent_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-data-field-checkbox\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"text\", \"filter\", 4, \"ngIf\"], [3, \"formGroup\"], [\"class\", \"core-mark-required\", 3, \"core-mark-required\", 4, \"ngIf\"], [\"multiple\", \"true\", \"interface\", \"alert\", 3, \"formControlName\", \"placeholder\", \"cancelText\", \"okText\", \"interfaceOptions\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"control\", \"errorText\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"core-mark-required\", 3, \"core-mark-required\"], [3, \"value\"], [3, \"control\", \"errorText\"], [\"slot\", \"end\", 3, \"formControlName\", \"ngModel\", \"ngModelChange\"], [3, \"text\", \"filter\"]],\n  template: function AddonModDataFieldCheckboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddonModDataFieldCheckboxComponent_span_0_Template, 9, 18, \"span\", 0);\n      i0.ɵɵtemplate(1, AddonModDataFieldCheckboxComponent_core_format_text_1_Template, 1, 2, \"core-format-text\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.inputMode && ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.displayMode && ctx.value && ctx.value.content);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreInputErrorsComponent, i3.CoreMarkRequiredComponent, i4.CoreFormatTextDirective, i5.NgControlStatus, i5.NgControlStatusGroup, i6.IonCheckbox, i6.IonItem, i6.IonLabel, i6.IonSelect, i6.IonSelectOption, i6.BooleanValueAccessor, i6.SelectValueAccessor, i5.FormGroupDirective, i5.FormControlName, i7.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonModDataFieldPluginBaseComponent","i0","ɵɵelement","ɵɵproperty","ctx_r2","field","required","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","option_r6","value","ɵɵadvance","ɵɵtextInterpolate","key","ctx_r4","form","controls","id","error","ɵɵlistener","AddonModDataFieldCheckboxComponent_span_0_ion_item_8_Template_ion_checkbox_ngModelChange_4_listener","$event","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","searchFields","ɵɵpipeBind1","ctx_r5","ɵɵtemplate","AddonModDataFieldCheckboxComponent_span_0_span_1_Template","AddonModDataFieldCheckboxComponent_span_0_ion_select_option_6_Template","AddonModDataFieldCheckboxComponent_span_0_core_input_errors_7_Template","AddonModDataFieldCheckboxComponent_span_0_ion_item_8_Template","ctx_r0","editMode","ɵɵpureFunction1","_c0","name","options","searchMode","ctx_r1","content","AddonModDataFieldCheckboxComponent","constructor","init","displayMode","updateValue","param1","split","map","option","values","forEach","x","findIndex","push","addControl","_value$content","join","t","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonModDataFieldCheckboxComponent_Template","rf","ctx","AddonModDataFieldCheckboxComponent_span_0_Template","AddonModDataFieldCheckboxComponent_core_format_text_1_Template","inputMode"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/checkbox/component/checkbox.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/checkbox/component/addon-mod-data-field-checkbox.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonModDataEntryField } from '@addons/mod/data/services/data';\nimport { Component } from '@angular/core';\nimport { AddonModDataFieldPluginBaseComponent } from '../../../classes/base-field-plugin-component';\n\n/**\n * Component to render data checkbox field.\n */\n@Component({\n    selector: 'addon-mod-data-field-checkbox',\n    templateUrl: 'addon-mod-data-field-checkbox.html',\n})\nexport class AddonModDataFieldCheckboxComponent extends AddonModDataFieldPluginBaseComponent {\n\n    options: {\n        key: string;\n        value: string;\n    }[] = [];\n\n    /**\n     * @inheritdoc\n     */\n    protected init(): void {\n        if (this.displayMode) {\n            this.updateValue(this.value);\n\n            return;\n        }\n\n        this.options = this.field.param1.split(/\\r?\\n/).map((option) => ({ key: option, value: option }));\n\n        const values: string[] = [];\n        if (this.editMode && this.value && this.value.content) {\n            this.value.content.split('##').forEach((value) => {\n                const x = this.options.findIndex((option) => value == option.key);\n                if (x >= 0) {\n                    values.push(value);\n                }\n            });\n        }\n\n        if (this.searchMode) {\n            this.addControl('f_' + this.field.id + '_allreq');\n        }\n\n        this.addControl('f_' + this.field.id, values);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected updateValue(value?: Partial<AddonModDataEntryField>): void {\n        this.value = value || {};\n        this.value.content = value?.content?.split('##').join('<br>');\n    }\n\n}\n","<span *ngIf=\"inputMode && form\" [formGroup]=\"form\">\n    <span *ngIf=\"editMode\" [core-mark-required]=\"field.required\" class=\"core-mark-required\"></span>\n    <ion-select [formControlName]=\"'f_'+field.id\" multiple=\"true\" [placeholder]=\"'addon.mod_data.menuchoose' | translate\"\n        [cancelText]=\"'core.cancel' | translate\" [okText]=\"'core.ok' | translate\" [interfaceOptions]=\"{header: field.name}\"\n        interface=\"alert\">\n        <ion-select-option *ngFor=\"let option of options\" [value]=\"option.value\">{{option.key}}</ion-select-option>\n    </ion-select>\n    <core-input-errors *ngIf=\"error && editMode\" [control]=\"form.controls['f_'+field.id]\" [errorText]=\"error\" />\n\n    <ion-item *ngIf=\"searchMode\">\n        <ion-label>{{ 'addon.mod_data.selectedrequired' | translate }}</ion-label>\n        <ion-checkbox slot=\"end\" [formControlName]=\"'f_'+field.id+'_allreq'\" [(ngModel)]=\"searchFields!['f_'+field.id+'_allreq']\" />\n    </ion-item>\n</span>\n\n<core-format-text *ngIf=\"displayMode && value && value.content\" [text]=\"value.content\" [filter]=\"false\" />\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}