{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\nconst ROOT_CACHE_KEY = 'AddonBlockStarredCourses:';\n/**\n * Service that provides some features regarding starred courses.\n */\nexport class AddonBlockStarredCoursesProvider {\n  /**\n   * Get cache key for get starred courrses value WS call.\n   *\n   * @returns Cache key.\n   */\n  getStarredCoursesCacheKey() {\n    return ROOT_CACHE_KEY + ':starredcourses';\n  }\n  /**\n   * Get starred courrses.\n   *\n   * @param siteId Site ID. If not defined, use current site.\n   * @returns Promise resolved when the info is retrieved.\n   */\n  getStarredCourses(siteId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const site = yield CoreSites.getSite(siteId);\n      const preSets = {\n        cacheKey: _this.getStarredCoursesCacheKey()\n      };\n      return site.read('block_starredcourses_get_starred_courses', undefined, preSets);\n    })();\n  }\n  /**\n   * Invalidates get starred courrses WS call.\n   *\n   * @param siteId Site ID to invalidate. If not defined, use current site.\n   * @returns Promise resolved when the data is invalidated.\n   */\n  invalidateStarredCourses(siteId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const site = yield CoreSites.getSite(siteId);\n      yield site.invalidateWsCacheForKey(_this2.getStarredCoursesCacheKey());\n    })();\n  }\n}\n_class = AddonBlockStarredCoursesProvider;\n_class.ɵfac = function AddonBlockStarredCoursesProvider_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonBlockStarredCourses = makeSingleton(AddonBlockStarredCoursesProvider);","map":{"version":3,"names":["CoreSites","makeSingleton","ROOT_CACHE_KEY","AddonBlockStarredCoursesProvider","getStarredCoursesCacheKey","getStarredCourses","siteId","_this","_asyncToGenerator","site","getSite","preSets","cacheKey","read","undefined","invalidateStarredCourses","_this2","invalidateWsCacheForKey","factory","ɵfac","providedIn","AddonBlockStarredCourses"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/starredcourses/services/starredcourses.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSites } from '@services/sites';\nimport { CoreSiteWSPreSets } from '@classes/sites/authenticated-site';\nimport { makeSingleton } from '@singletons';\n\nconst ROOT_CACHE_KEY = 'AddonBlockStarredCourses:';\n\n/**\n * Service that provides some features regarding starred courses.\n */\n@Injectable( { providedIn: 'root' })\nexport class AddonBlockStarredCoursesProvider {\n\n    /**\n     * Get cache key for get starred courrses value WS call.\n     *\n     * @returns Cache key.\n     */\n    protected getStarredCoursesCacheKey(): string {\n        return ROOT_CACHE_KEY + ':starredcourses';\n    }\n\n    /**\n     * Get starred courrses.\n     *\n     * @param siteId Site ID. If not defined, use current site.\n     * @returns Promise resolved when the info is retrieved.\n     */\n    async getStarredCourses(siteId?: string): Promise<AddonBlockStarredCourse[]> {\n        const site = await CoreSites.getSite(siteId);\n\n        const preSets: CoreSiteWSPreSets = {\n            cacheKey: this.getStarredCoursesCacheKey(),\n        };\n\n        return site.read<AddonBlockStarredCourse[]>('block_starredcourses_get_starred_courses', undefined, preSets);\n    }\n\n    /**\n     * Invalidates get starred courrses WS call.\n     *\n     * @param siteId Site ID to invalidate. If not defined, use current site.\n     * @returns Promise resolved when the data is invalidated.\n     */\n    async invalidateStarredCourses(siteId?: string): Promise<void> {\n        const site = await CoreSites.getSite(siteId);\n\n        await site.invalidateWsCacheForKey(this.getStarredCoursesCacheKey());\n    }\n\n}\nexport const AddonBlockStarredCourses = makeSingleton(AddonBlockStarredCoursesProvider);\n\n/**\n * Params of block_starredcourses_get_starred_courses WS.\n */\nexport type AddonBlockStarredCoursesGetStarredCoursesWSParams = {\n    limit?: number; // Limit.\n    offset?: number; // Offset.\n};\n\n/**\n * Data returned by block_starredcourses_get_starred_courses WS.\n */\nexport type AddonBlockStarredCourse = {\n    id: number; // Id.\n    fullname: string; // Fullname.\n    shortname: string; // Shortname.\n    idnumber: string; // Idnumber.\n    summary: string; // Summary.\n    summaryformat: number; // Summary format (1 = HTML, 0 = MOODLE, 2 = PLAIN or 4 = MARKDOWN).\n    startdate: number; // Startdate.\n    enddate: number; // Enddate.\n    visible: boolean; // Visible.\n    showactivitydates: boolean; // Showactivitydates.\n    showcompletionconditions: boolean; // Showcompletionconditions.\n    fullnamedisplay: string; // Fullnamedisplay.\n    viewurl: string; // Viewurl.\n    courseimage: string; // Courseimage.\n    progress?: number; // Progress.\n    hasprogress: boolean; // Hasprogress.\n    isfavourite: boolean; // Isfavourite.\n    hidden: boolean; // Hidden.\n    timeaccess?: number; // Timeaccess.\n    showshortname: boolean; // Showshortname.\n    coursecategory: string; // Coursecategory.\n};\n"],"mappings":";;AAeA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,SAASC,aAAa,QAAQ,aAAa;;AAE3C,MAAMC,cAAc,GAAG,2BAA2B;AAElD;;;AAIA,OAAM,MAAOC,gCAAgC;EAEzC;;;;;EAKUC,yBAAyBA,CAAA;IAC/B,OAAOF,cAAc,GAAG,iBAAiB;EAC7C;EAEA;;;;;;EAMMG,iBAAiBA,CAACC,MAAe;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACnC,MAAMC,IAAI,SAAST,SAAS,CAACU,OAAO,CAACJ,MAAM,CAAC;MAE5C,MAAMK,OAAO,GAAsB;QAC/BC,QAAQ,EAAEL,KAAI,CAACH,yBAAyB;OAC3C;MAED,OAAOK,IAAI,CAACI,IAAI,CAA4B,0CAA0C,EAAEC,SAAS,EAAEH,OAAO,CAAC;IAAC;EAChH;EAEA;;;;;;EAMMI,wBAAwBA,CAACT,MAAe;IAAA,IAAAU,MAAA;IAAA,OAAAR,iBAAA;MAC1C,MAAMC,IAAI,SAAST,SAAS,CAACU,OAAO,CAACJ,MAAM,CAAC;MAE5C,MAAMG,IAAI,CAACQ,uBAAuB,CAACD,MAAI,CAACZ,yBAAyB,EAAE,CAAC;IAAC;EACzE;;SArCSD,gCAAgC;;mBAAhCA,MAAgC;AAAA;;SAAhCA,MAAgC;EAAAe,OAAA,EAAhCf,MAAgC,CAAAgB,IAAA;EAAAC,UAAA,EADlB;AAAM;AAyCjC,OAAO,MAAMC,wBAAwB,GAAGpB,aAAa,CAACE,gCAAgC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}