{"ast":null,"code":"var _class;\nimport { makeSingleton } from '@singletons';\nimport { AddonModGlossarySync } from '../glossary-sync';\nimport * as i0 from \"@angular/core\";\n/**\n * Synchronization cron handler.\n */\nexport class AddonModGlossarySyncCronHandlerService {\n  constructor() {\n    this.name = 'AddonModGlossarySyncCronHandler';\n  }\n  /**\n   * @inheritdoc\n   */\n  execute(siteId, force) {\n    return AddonModGlossarySync.syncAllGlossaries(siteId, force);\n  }\n  /**\n   * @inheritdoc\n   */\n  getInterval() {\n    return AddonModGlossarySync.syncInterval;\n  }\n}\n_class = AddonModGlossarySyncCronHandlerService;\n_class.ɵfac = function AddonModGlossarySyncCronHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModGlossarySyncCronHandler = makeSingleton(AddonModGlossarySyncCronHandlerService);","map":{"version":3,"names":["makeSingleton","AddonModGlossarySync","AddonModGlossarySyncCronHandlerService","constructor","name","execute","siteId","force","syncAllGlossaries","getInterval","syncInterval","factory","ɵfac","providedIn","AddonModGlossarySyncCronHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/glossary/services/handlers/sync-cron.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCronHandler } from '@services/cron';\nimport { makeSingleton } from '@singletons';\nimport { AddonModGlossarySync } from '../glossary-sync';\n\n/**\n * Synchronization cron handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModGlossarySyncCronHandlerService implements CoreCronHandler {\n\n    name = 'AddonModGlossarySyncCronHandler';\n\n    /**\n     * @inheritdoc\n     */\n    execute(siteId?: string, force?: boolean): Promise<void> {\n        return AddonModGlossarySync.syncAllGlossaries(siteId, force);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getInterval(): number {\n        return AddonModGlossarySync.syncInterval;\n    }\n\n}\n\nexport const AddonModGlossarySyncCronHandler = makeSingleton(AddonModGlossarySyncCronHandlerService);\n"],"mappings":";AAgBA,SAASA,aAAa,QAAQ,aAAa;AAC3C,SAASC,oBAAoB,QAAQ,kBAAkB;;AAEvD;;;AAIA,OAAM,MAAOC,sCAAsC;EADnDC,YAAA;IAGI,KAAAC,IAAI,GAAG,iCAAiC;;EAExC;;;EAGAC,OAAOA,CAACC,MAAe,EAAEC,KAAe;IACpC,OAAON,oBAAoB,CAACO,iBAAiB,CAACF,MAAM,EAAEC,KAAK,CAAC;EAChE;EAEA;;;EAGAE,WAAWA,CAAA;IACP,OAAOR,oBAAoB,CAACS,YAAY;EAC5C;;SAhBSR,sCAAsC;;mBAAtCA,MAAsC;AAAA;;SAAtCA,MAAsC;EAAAS,OAAA,EAAtCT,MAAsC,CAAAU,IAAA;EAAAC,UAAA,EADzB;AAAM;AAqBhC,OAAO,MAAMC,+BAA+B,GAAGd,aAAa,CAACE,sCAAsC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}