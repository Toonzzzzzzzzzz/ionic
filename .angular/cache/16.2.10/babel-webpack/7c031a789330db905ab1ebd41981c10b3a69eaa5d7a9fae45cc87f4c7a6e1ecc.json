{"ast":null,"code":"var _class;\nimport { makeSingleton } from '@singletons';\nimport { CoreCourseFormatSingleActivityHandlerService } from '../../../singleactivity/services/handlers/singleactivity-format';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support social course format.\n * This format is like singleactivity in the mobile app, so we'll use the same implementation for both.\n */\nexport class CoreCourseFormatSocialHandlerService extends CoreCourseFormatSingleActivityHandlerService {\n  constructor() {\n    super(...arguments);\n    this.name = 'CoreCourseFormatSocial';\n    this.format = 'social';\n  }\n}\n_class = CoreCourseFormatSocialHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵCoreCourseFormatSocialHandlerService_BaseFactory;\n  return function CoreCourseFormatSocialHandlerService_Factory(t) {\n    return (ɵCoreCourseFormatSocialHandlerService_BaseFactory || (ɵCoreCourseFormatSocialHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreCourseFormatSocialHandler = makeSingleton(CoreCourseFormatSocialHandlerService);","map":{"version":3,"names":["makeSingleton","CoreCourseFormatSingleActivityHandlerService","CoreCourseFormatSocialHandlerService","constructor","name","format","t","factory","ɵfac","providedIn","CoreCourseFormatSocialHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/course/format/social/services/handlers/social-format.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { makeSingleton } from '@singletons';\n\nimport { CoreCourseFormatSingleActivityHandlerService } from '../../../singleactivity/services/handlers/singleactivity-format';\n\n/**\n * Handler to support social course format.\n * This format is like singleactivity in the mobile app, so we'll use the same implementation for both.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreCourseFormatSocialHandlerService extends CoreCourseFormatSingleActivityHandlerService {\n\n    name = 'CoreCourseFormatSocial';\n    format = 'social';\n\n}\n\nexport const CoreCourseFormatSocialHandler = makeSingleton(CoreCourseFormatSocialHandlerService);\n"],"mappings":";AAeA,SAASA,aAAa,QAAQ,aAAa;AAE3C,SAASC,4CAA4C,QAAQ,iEAAiE;;AAE9H;;;;AAKA,OAAM,MAAOC,oCAAqC,SAAQD,4CAA4C;EADtGE,YAAA;;IAGI,KAAAC,IAAI,GAAG,wBAAwB;IAC/B,KAAAC,MAAM,GAAG,QAAQ;;;SAHRH,oCAAqC;;;;+IAArCA,MAAoC,IAAAI,CAAA,IAApCJ,MAAoC;EAAA;AAAA;;SAApCA,MAAoC;EAAAK,OAAA,EAApCL,MAAoC,CAAAM,IAAA;EAAAC,UAAA,EADvB;AAAM;AAQhC,OAAO,MAAMC,6BAA6B,GAAGV,aAAa,CAACE,oCAAoC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}