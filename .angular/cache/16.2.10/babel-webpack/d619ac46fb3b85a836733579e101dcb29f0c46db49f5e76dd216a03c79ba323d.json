{"ast":null,"code":"var _class;\nimport { CoreBlockPreRenderedComponent } from '@features/block/components/pre-rendered-block/pre-rendered-block';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Block handler.\n */\nexport class AddonBlockGlossaryRandomHandlerService extends CoreBlockBaseHandler {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonBlockGlossaryRandom';\n    this.blockName = 'glossary_random';\n  }\n  /**\n   * Returns the data needed to render the block.\n   *\n   * @param block The block to render.\n   * @returns Data or promise resolved with the data.\n   */\n  getDisplayData(block) {\n    var _block$contents;\n    return {\n      title: ((_block$contents = block.contents) === null || _block$contents === void 0 ? void 0 : _block$contents.title) || 'addon.block_glossaryrandom.pluginname',\n      class: 'addon-block-glossary-random',\n      component: CoreBlockPreRenderedComponent\n    };\n  }\n}\n_class = AddonBlockGlossaryRandomHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonBlockGlossaryRandomHandlerService_BaseFactory;\n  return function AddonBlockGlossaryRandomHandlerService_Factory(t) {\n    return (ɵAddonBlockGlossaryRandomHandlerService_BaseFactory || (ɵAddonBlockGlossaryRandomHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonBlockGlossaryRandomHandler = makeSingleton(AddonBlockGlossaryRandomHandlerService);","map":{"version":3,"names":["CoreBlockPreRenderedComponent","CoreBlockBaseHandler","makeSingleton","AddonBlockGlossaryRandomHandlerService","constructor","name","blockName","getDisplayData","block","_block$contents","title","contents","class","component","t","factory","ɵfac","providedIn","AddonBlockGlossaryRandomHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/glossaryrandom/services/block-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { CoreBlockHandlerData } from '@features/block/services/block-delegate';\nimport { CoreBlockPreRenderedComponent } from '@features/block/components/pre-rendered-block/pre-rendered-block';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { CoreCourseBlock } from '@features/course/services/course';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Block handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonBlockGlossaryRandomHandlerService extends CoreBlockBaseHandler {\n\n    name = 'AddonBlockGlossaryRandom';\n    blockName = 'glossary_random';\n\n    /**\n     * Returns the data needed to render the block.\n     *\n     * @param block The block to render.\n     * @returns Data or promise resolved with the data.\n     */\n    getDisplayData(block: CoreCourseBlock): CoreBlockHandlerData {\n        return {\n            title: block.contents?.title || 'addon.block_glossaryrandom.pluginname',\n            class: 'addon-block-glossary-random',\n            component: CoreBlockPreRenderedComponent,\n        };\n    }\n\n}\n\nexport const AddonBlockGlossaryRandomHandler = makeSingleton(AddonBlockGlossaryRandomHandlerService);\n"],"mappings":";AAiBA,SAASA,6BAA6B,QAAQ,kEAAkE;AAChH,SAASC,oBAAoB,QAAQ,4CAA4C;AAEjF,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,sCAAuC,SAAQF,oBAAoB;EADhFG,YAAA;;IAGI,KAAAC,IAAI,GAAG,0BAA0B;IACjC,KAAAC,SAAS,GAAG,iBAAiB;;EAE7B;;;;;;EAMAC,cAAcA,CAACC,KAAsB;IAAA,IAAAC,eAAA;IACjC,OAAO;MACHC,KAAK,EAAE,EAAAD,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBC,KAAK,KAAI,uCAAuC;MACvEE,KAAK,EAAE,6BAA6B;MACpCC,SAAS,EAAEb;KACd;EACL;;SAjBSG,sCAAuC;;;;mJAAvCA,MAAsC,IAAAW,CAAA,IAAtCX,MAAsC;EAAA;AAAA;;SAAtCA,MAAsC;EAAAY,OAAA,EAAtCZ,MAAsC,CAAAa,IAAA;EAAAC,UAAA,EADzB;AAAM;AAsBhC,OAAO,MAAMC,+BAA+B,GAAGhB,aAAa,CAACC,sCAAsC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}