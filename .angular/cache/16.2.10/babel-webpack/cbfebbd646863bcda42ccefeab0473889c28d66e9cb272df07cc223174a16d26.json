{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreCourseFormatSingleActivityComponent } from '../../components/singleactivity';\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support singleactivity course format.\n */\nexport class CoreCourseFormatSingleActivityHandlerService {\n  constructor() {\n    this.name = 'CoreCourseFormatSingleActivity';\n    this.format = 'singleactivity';\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  canViewAllSections() {\n    return false;\n  }\n  /**\n   * @inheritdoc\n   */\n  displayBlocks() {\n    return true;\n  }\n  /**\n   * @inheritdoc\n   */\n  getCourseTitle(course, sections) {\n    var _sections$;\n    if (sections !== null && sections !== void 0 && (_sections$ = sections[0]) !== null && _sections$ !== void 0 && (_sections$ = _sections$.modules) !== null && _sections$ !== void 0 && _sections$[0]) {\n      return sections[0].modules[0].name;\n    }\n    return course.fullname || '';\n  }\n  /**\n   * @inheritdoc\n   */\n  displayCourseIndex() {\n    return false;\n  }\n  /**\n   * @inheritdoc\n   */\n  displayRefresher(course, sections) {\n    var _sections$2;\n    if (sections !== null && sections !== void 0 && (_sections$2 = sections[0]) !== null && _sections$2 !== void 0 && (_sections$2 = _sections$2.modules) !== null && _sections$2 !== void 0 && _sections$2[0]) {\n      return CoreCourseModuleDelegate.displayRefresherInSingleActivity(sections[0].modules[0].modname);\n    } else {\n      return true;\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  getCourseFormatComponent() {\n    return _asyncToGenerator(function* () {\n      return CoreCourseFormatSingleActivityComponent;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  shouldRefreshWhenCompletionChanges() {\n    return _asyncToGenerator(function* () {\n      return false;\n    })();\n  }\n}\n_class = CoreCourseFormatSingleActivityHandlerService;\n_class.ɵfac = function CoreCourseFormatSingleActivityHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreCourseFormatSingleActivityHandler = makeSingleton(CoreCourseFormatSingleActivityHandlerService);","map":{"version":3,"names":["CoreCourseModuleDelegate","CoreCourseFormatSingleActivityComponent","makeSingleton","CoreCourseFormatSingleActivityHandlerService","constructor","name","format","isEnabled","_asyncToGenerator","canViewAllSections","displayBlocks","getCourseTitle","course","sections","_sections$","modules","fullname","displayCourseIndex","displayRefresher","_sections$2","displayRefresherInSingleActivity","modname","getCourseFormatComponent","shouldRefreshWhenCompletionChanges","factory","ɵfac","providedIn","CoreCourseFormatSingleActivityHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/course/format/singleactivity/services/handlers/singleactivity-format.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Type } from '@angular/core';\n\nimport { CoreCourseWSSection } from '@features/course/services/course';\nimport { CoreCourseFormatHandler } from '@features/course/services/format-delegate';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreCourseAnyCourseData } from '@features/courses/services/courses';\nimport { CoreCourseFormatSingleActivityComponent } from '../../components/singleactivity';\nimport { makeSingleton } from '@singletons';\n\n/**\n * Handler to support singleactivity course format.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreCourseFormatSingleActivityHandlerService implements CoreCourseFormatHandler {\n\n    name = 'CoreCourseFormatSingleActivity';\n    format = 'singleactivity';\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    canViewAllSections(): boolean {\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    displayBlocks(): boolean {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getCourseTitle(course: CoreCourseAnyCourseData, sections?: CoreCourseWSSection[]): string {\n        if (sections?.[0]?.modules?.[0]) {\n            return sections[0].modules[0].name;\n        }\n\n        return course.fullname || '';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    displayCourseIndex(): boolean {\n        return false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    displayRefresher(course: CoreCourseAnyCourseData, sections: CoreCourseWSSection[]): boolean {\n        if (sections?.[0]?.modules?.[0]) {\n            return CoreCourseModuleDelegate.displayRefresherInSingleActivity(sections[0].modules[0].modname);\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getCourseFormatComponent(): Promise<Type<unknown>> {\n        return CoreCourseFormatSingleActivityComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async shouldRefreshWhenCompletionChanges(): Promise<boolean> {\n        return false;\n    }\n\n}\n\nexport const CoreCourseFormatSingleActivityHandler = makeSingleton(CoreCourseFormatSingleActivityHandlerService);\n"],"mappings":";;AAkBA,SAASA,wBAAwB,QAAQ,2CAA2C;AAEpF,SAASC,uCAAuC,QAAQ,iCAAiC;AACzF,SAASC,aAAa,QAAQ,aAAa;;AAE3C;;;AAIA,OAAM,MAAOC,4CAA4C;EADzDC,YAAA;IAGI,KAAAC,IAAI,GAAG,gCAAgC;IACvC,KAAAC,MAAM,GAAG,gBAAgB;;EAEzB;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGAC,kBAAkBA,CAAA;IACd,OAAO,KAAK;EAChB;EAEA;;;EAGAC,aAAaA,CAAA;IACT,OAAO,IAAI;EACf;EAEA;;;EAGAC,cAAcA,CAACC,MAA+B,EAAEC,QAAgC;IAAA,IAAAC,UAAA;IAC5E,IAAID,QAAQ,aAARA,QAAQ,gBAAAC,UAAA,GAARD,QAAQ,CAAG,CAAC,CAAC,cAAAC,UAAA,gBAAAA,UAAA,GAAbA,UAAA,CAAeC,OAAO,cAAAD,UAAA,eAAtBA,UAAA,CAAyB,CAAC,CAAC,EAAE;MAC7B,OAAOD,QAAQ,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACV,IAAI;;IAGtC,OAAOO,MAAM,CAACI,QAAQ,IAAI,EAAE;EAChC;EAEA;;;EAGAC,kBAAkBA,CAAA;IACd,OAAO,KAAK;EAChB;EAEA;;;EAGAC,gBAAgBA,CAACN,MAA+B,EAAEC,QAA+B;IAAA,IAAAM,WAAA;IAC7E,IAAIN,QAAQ,aAARA,QAAQ,gBAAAM,WAAA,GAARN,QAAQ,CAAG,CAAC,CAAC,cAAAM,WAAA,gBAAAA,WAAA,GAAbA,WAAA,CAAeJ,OAAO,cAAAI,WAAA,eAAtBA,WAAA,CAAyB,CAAC,CAAC,EAAE;MAC7B,OAAOnB,wBAAwB,CAACoB,gCAAgC,CAACP,QAAQ,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACM,OAAO,CAAC;KACnG,MAAM;MACH,OAAO,IAAI;;EAEnB;EAEA;;;EAGMC,wBAAwBA,CAAA;IAAA,OAAAd,iBAAA;MAC1B,OAAOP,uCAAuC;IAAC;EACnD;EAEA;;;EAGMsB,kCAAkCA,CAAA;IAAA,OAAAf,iBAAA;MACpC,OAAO,KAAK;IAAC;EACjB;;SAnESL,4CAA4C;;mBAA5CA,MAA4C;AAAA;;SAA5CA,MAA4C;EAAAqB,OAAA,EAA5CrB,MAA4C,CAAAsB,IAAA;EAAAC,UAAA,EAD/B;AAAM;AAwEhC,OAAO,MAAMC,qCAAqC,GAAGzB,aAAa,CAACC,4CAA4C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}