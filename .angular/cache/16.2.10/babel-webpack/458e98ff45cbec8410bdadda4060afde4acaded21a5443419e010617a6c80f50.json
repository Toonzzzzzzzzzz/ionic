{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Database variables for CoreQuestion service.\n */\nexport const QUESTION_TABLE_NAME = 'questions_2';\nexport const QUESTION_ANSWERS_TABLE_NAME = 'question_answers';\nexport const QUESTION_SITE_SCHEMA = {\n  name: 'CoreQuestionProvider',\n  version: 2,\n  tables: [{\n    name: QUESTION_TABLE_NAME,\n    columns: [{\n      name: 'component',\n      type: 'TEXT',\n      notNull: true\n    }, {\n      name: 'attemptid',\n      type: 'INTEGER',\n      notNull: true\n    }, {\n      name: 'slot',\n      type: 'INTEGER',\n      notNull: true\n    }, {\n      name: 'componentid',\n      type: 'INTEGER'\n    }, {\n      name: 'state',\n      type: 'TEXT'\n    }],\n    primaryKeys: ['component', 'attemptid', 'slot']\n  }, {\n    name: QUESTION_ANSWERS_TABLE_NAME,\n    columns: [{\n      name: 'component',\n      type: 'TEXT',\n      notNull: true\n    }, {\n      name: 'attemptid',\n      type: 'INTEGER',\n      notNull: true\n    }, {\n      name: 'name',\n      type: 'TEXT',\n      notNull: true\n    }, {\n      name: 'componentid',\n      type: 'INTEGER'\n    }, {\n      name: 'userid',\n      type: 'INTEGER'\n    }, {\n      name: 'questionslot',\n      type: 'INTEGER'\n    }, {\n      name: 'value',\n      type: 'TEXT'\n    }, {\n      name: 'timemodified',\n      type: 'INTEGER'\n    }],\n    primaryKeys: ['component', 'attemptid', 'name']\n  }],\n  migrate(db, oldVersion) {\n    return _asyncToGenerator(function* () {\n      if (oldVersion < 2) {\n        yield db.migrateTable('questions', QUESTION_TABLE_NAME, ({\n          component,\n          componentid,\n          attemptid,\n          slot,\n          state\n        }) => ({\n          component,\n          componentid,\n          attemptid,\n          slot,\n          state\n        }));\n      }\n    })();\n  }\n};","map":{"version":3,"names":["QUESTION_TABLE_NAME","QUESTION_ANSWERS_TABLE_NAME","QUESTION_SITE_SCHEMA","name","version","tables","columns","type","notNull","primaryKeys","migrate","db","oldVersion","_asyncToGenerator","migrateTable","component","componentid","attemptid","slot","state"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/question/services/database/question.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { SQLiteDB } from '@classes/sqlitedb';\nimport { CoreSiteSchema } from '@services/sites';\n\n/**\n * Database variables for CoreQuestion service.\n */\nexport const QUESTION_TABLE_NAME = 'questions_2';\nexport const QUESTION_ANSWERS_TABLE_NAME = 'question_answers';\nexport const QUESTION_SITE_SCHEMA: CoreSiteSchema = {\n    name: 'CoreQuestionProvider',\n    version: 2,\n    tables: [\n        {\n            name: QUESTION_TABLE_NAME,\n            columns: [\n                {\n                    name: 'component',\n                    type: 'TEXT',\n                    notNull: true,\n                },\n                {\n                    name: 'attemptid',\n                    type: 'INTEGER',\n                    notNull: true,\n                },\n                {\n                    name: 'slot',\n                    type: 'INTEGER',\n                    notNull: true,\n                },\n                {\n                    name: 'componentid',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'state',\n                    type: 'TEXT',\n                },\n            ],\n            primaryKeys: ['component', 'attemptid', 'slot'],\n        },\n        {\n            name: QUESTION_ANSWERS_TABLE_NAME,\n            columns: [\n                {\n                    name: 'component',\n                    type: 'TEXT',\n                    notNull: true,\n                },\n                {\n                    name: 'attemptid',\n                    type: 'INTEGER',\n                    notNull: true,\n                },\n                {\n                    name: 'name',\n                    type: 'TEXT',\n                    notNull: true,\n                },\n                {\n                    name: 'componentid',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'userid',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'questionslot',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'value',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'timemodified',\n                    type: 'INTEGER',\n                },\n            ],\n            primaryKeys: ['component', 'attemptid', 'name'],\n        },\n    ],\n    async migrate(db: SQLiteDB, oldVersion: number): Promise<void> {\n        if (oldVersion < 2) {\n            await db.migrateTable(\n                'questions',\n                QUESTION_TABLE_NAME,\n                ({ component, componentid, attemptid, slot, state }) => ({ component, componentid, attemptid, slot, state }),\n            );\n        }\n    },\n};\n\n/**\n * Data about a question.\n */\nexport type CoreQuestionDBRecord = {\n    component: string;\n    attemptid: number;\n    slot: number;\n    componentid: number;\n    state: string;\n};\n\n/**\n * Data about a question answer.\n */\nexport type CoreQuestionAnswerDBRecord = {\n    component: string;\n    attemptid: number;\n    name: string;\n    componentid: number;\n    userid: number;\n    questionslot: number;\n    value: string;\n    timemodified: number;\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;AAGA,OAAO,MAAMA,mBAAmB,GAAG,aAAa;AAChD,OAAO,MAAMC,2BAA2B,GAAG,kBAAkB;AAC7D,OAAO,MAAMC,oBAAoB,GAAmB;EAChDC,IAAI,EAAE,sBAAsB;EAC5BC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE,CACJ;IACIF,IAAI,EAAEH,mBAAmB;IACzBM,OAAO,EAAE,CACL;MACIH,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;KACZ,EACD;MACIL,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE;KACZ,EACD;MACIL,IAAI,EAAE,MAAM;MACZI,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE;KACZ,EACD;MACIL,IAAI,EAAE,aAAa;MACnBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,OAAO;MACbI,IAAI,EAAE;KACT,CACJ;IACDE,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM;GACjD,EACD;IACIN,IAAI,EAAEF,2BAA2B;IACjCK,OAAO,EAAE,CACL;MACIH,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;KACZ,EACD;MACIL,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE,SAAS;MACfC,OAAO,EAAE;KACZ,EACD;MACIL,IAAI,EAAE,MAAM;MACZI,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;KACZ,EACD;MACIL,IAAI,EAAE,aAAa;MACnBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,QAAQ;MACdI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,cAAc;MACpBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,OAAO;MACbI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,cAAc;MACpBI,IAAI,EAAE;KACT,CACJ;IACDE,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM;GACjD,CACJ;EACKC,OAAOA,CAACC,EAAY,EAAEC,UAAkB;IAAA,OAAAC,iBAAA;MAC1C,IAAID,UAAU,GAAG,CAAC,EAAE;QAChB,MAAMD,EAAE,CAACG,YAAY,CACjB,WAAW,EACXd,mBAAmB,EACnB,CAAC;UAAEe,SAAS;UAAEC,WAAW;UAAEC,SAAS;UAAEC,IAAI;UAAEC;QAAK,CAAE,MAAM;UAAEJ,SAAS;UAAEC,WAAW;UAAEC,SAAS;UAAEC,IAAI;UAAEC;QAAK,CAAE,CAAC,CAC/G;;IACJ;EACL;CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}