{"ast":null,"code":"var _class;\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { makeSingleton } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to treat links to my courses page.\n */\nexport class CoreCoursesMyCoursesLinkHandlerService extends CoreContentLinksHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'CoreCoursesMyCoursesLinkHandler';\n    this.pattern = /\\/my\\/courses\\.php/;\n  }\n  /**\n   * @inheritdoc\n   */\n  getActions(siteIds, url, params) {\n    return [{\n      action: () => {\n        this.actionOpen({\n          sort: params.sort || undefined,\n          filter: params.filter || undefined,\n          search: params.search || undefined,\n          layout: params.layout || undefined\n        });\n      }\n    }];\n  }\n  /**\n   * Open my courses.\n   *\n   * @param params Params to send to the new page.\n   */\n  actionOpen(params) {\n    CoreNavigator.navigate('/main/courses/my', {\n      params\n    });\n  }\n}\n_class = CoreCoursesMyCoursesLinkHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵCoreCoursesMyCoursesLinkHandlerService_BaseFactory;\n  return function CoreCoursesMyCoursesLinkHandlerService_Factory(t) {\n    return (ɵCoreCoursesMyCoursesLinkHandlerService_BaseFactory || (ɵCoreCoursesMyCoursesLinkHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const CoreCoursesMyCoursesLinkHandler = makeSingleton(CoreCoursesMyCoursesLinkHandlerService);","map":{"version":3,"names":["CoreContentLinksHandlerBase","makeSingleton","CoreNavigator","CoreCoursesMyCoursesLinkHandlerService","constructor","name","pattern","getActions","siteIds","url","params","action","actionOpen","sort","undefined","filter","search","layout","navigate","t","factory","ɵfac","providedIn","CoreCoursesMyCoursesLinkHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/courses/services/handlers/my-courses-link.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@features/contentlinks/classes/base-handler';\nimport { makeSingleton } from '@singletons';\nimport { CoreContentLinksAction } from '@features/contentlinks/services/contentlinks-delegate';\nimport { Params } from '@angular/router';\nimport { CoreNavigator } from '@services/navigator';\n/**\n * Handler to treat links to my courses page.\n */\n@Injectable({ providedIn: 'root' })\nexport class CoreCoursesMyCoursesLinkHandlerService extends CoreContentLinksHandlerBase {\n\n    name = 'CoreCoursesMyCoursesLinkHandler';\n    pattern = /\\/my\\/courses\\.php/;\n\n    /**\n     * @inheritdoc\n     */\n    getActions(\n        siteIds: string[],\n        url: string,\n        params: Record<string, string>,\n    ): CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (): void => {\n                this.actionOpen({\n                    sort: params.sort || undefined,\n                    filter: params.filter || undefined,\n                    search: params.search || undefined,\n                    layout: params.layout || undefined,\n                });\n            },\n        }];\n    }\n\n    /**\n     * Open my courses.\n     *\n     * @param params Params to send to the new page.\n     */\n    protected actionOpen(params: Params): void {\n        CoreNavigator.navigate('/main/courses/my', { params });\n    }\n\n}\n\nexport const CoreCoursesMyCoursesLinkHandler = makeSingleton(CoreCoursesMyCoursesLinkHandlerService);\n"],"mappings":";AAeA,SAASA,2BAA2B,QAAQ,6CAA6C;AACzF,SAASC,aAAa,QAAQ,aAAa;AAG3C,SAASC,aAAa,QAAQ,qBAAqB;;AACnD;;;AAIA,OAAM,MAAOC,sCAAuC,SAAQH,2BAA2B;EADvFI,YAAA;;IAGI,KAAAC,IAAI,GAAG,iCAAiC;IACxC,KAAAC,OAAO,GAAG,oBAAoB;;EAE9B;;;EAGAC,UAAUA,CACNC,OAAiB,EACjBC,GAAW,EACXC,MAA8B;IAE9B,OAAO,CAAC;MACJC,MAAM,EAAEA,CAAA,KAAW;QACf,IAAI,CAACC,UAAU,CAAC;UACZC,IAAI,EAAEH,MAAM,CAACG,IAAI,IAAIC,SAAS;UAC9BC,MAAM,EAAEL,MAAM,CAACK,MAAM,IAAID,SAAS;UAClCE,MAAM,EAAEN,MAAM,CAACM,MAAM,IAAIF,SAAS;UAClCG,MAAM,EAAEP,MAAM,CAACO,MAAM,IAAIH;SAC5B,CAAC;MACN;KACH,CAAC;EACN;EAEA;;;;;EAKUF,UAAUA,CAACF,MAAc;IAC/BR,aAAa,CAACgB,QAAQ,CAAC,kBAAkB,EAAE;MAAER;IAAM,CAAE,CAAC;EAC1D;;SAhCSP,sCAAuC;;;;mJAAvCA,MAAsC,IAAAgB,CAAA,IAAtChB,MAAsC;EAAA;AAAA;;SAAtCA,MAAsC;EAAAiB,OAAA,EAAtCjB,MAAsC,CAAAkB,IAAA;EAAAC,UAAA,EADzB;AAAM;AAqChC,OAAO,MAAMC,+BAA+B,GAAGtB,aAAa,CAACE,sCAAsC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}