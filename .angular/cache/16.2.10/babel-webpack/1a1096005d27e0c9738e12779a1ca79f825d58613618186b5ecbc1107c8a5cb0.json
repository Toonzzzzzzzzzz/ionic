{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonMessages } from '../../services/messages';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { ModalController } from '@singletons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../../../core/components/infinite-loading/infinite-loading\";\nimport * as i4 from \"../../../../core/components/loading/loading\";\nimport * as i5 from \"../../../../core/components/user-avatar/user-avatar\";\nimport * as i6 from \"../../../../core/directives/external-content\";\nimport * as i7 from \"../../../../core/directives/fa-icon\";\nimport * as i8 from \"../../../../core/directives/format-text\";\nimport * as i9 from \"../../../../core/directives/content\";\nimport * as i10 from \"../../../../core/directives/update-non-reactive-attributes\";\nimport * as i11 from \"@ionic/angular\";\nimport * as i12 from \"@ngx-translate/core\";\nfunction AddonMessagesConversationInfoComponent_ion_item_15_core_format_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-format-text\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"text\", ctx_r2.conversation.subname)(\"contextInstanceId\", 0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction AddonMessagesConversationInfoComponent_ion_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 9)(1, \"ion-label\")(2, \"div\", 10);\n    i0.ɵɵelement(3, \"img\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h2\");\n    i0.ɵɵelement(5, \"core-format-text\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtemplate(7, AddonMessagesConversationInfoComponent_ion_item_15_core_format_text_7_Template, 1, 2, \"core-format-text\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.conversation.imageurl, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.conversation.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"text\", ctx_r0.conversation.name)(\"contextInstanceId\", 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.conversation.subname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 6, \"addon.messages.numparticipants\", i0.ɵɵpureFunction1(9, _c0, ctx_r0.conversation.membercount)));\n  }\n}\nfunction AddonMessagesConversationInfoComponent_ion_item_16_ion_icon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 18);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(1, 1, \"addon.messages.contactblocked\"));\n  }\n}\nfunction AddonMessagesConversationInfoComponent_ion_item_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 14);\n    i0.ɵɵlistener(\"click\", function AddonMessagesConversationInfoComponent_ion_item_16_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const member_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.closeModal(member_r3.id));\n    });\n    i0.ɵɵelement(1, \"core-user-avatar\", 15);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"p\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵtemplate(5, AddonMessagesConversationInfoComponent_ion_item_16_ion_icon_5_Template, 2, 3, \"ion-icon\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const member_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"user\", member_r3)(\"linkProfile\", false)(\"checkOnline\", member_r3.showonlinestatus);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", member_r3.fullname, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", member_r3.isblocked);\n  }\n}\n/**\n * Component that displays the list of conversations, including group conversations.\n */\nexport class AddonMessagesConversationInfoComponent {\n  constructor(route) {\n    this.route = route;\n    this.conversationId = 0;\n    this.loaded = false;\n    this.members = [];\n    this.canLoadMore = false;\n    this.loadMoreError = false;\n  }\n  /**\n   * Component loaded.\n   */\n  ngOnInit() {\n    this.fetchData().finally(() => {\n      this.loaded = true;\n    });\n  }\n  /**\n   * Fetch the required data.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Get the conversation data first.\n      try {\n        const conversation = yield AddonMessages.getConversation(_this.conversationId, false, true, 0, 0);\n        _this.conversation = conversation;\n        // Now get the members.\n        yield _this.fetchMembers();\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\n      }\n    })();\n  }\n  /**\n   * Get conversation members.\n   *\n   * @param loadingMore Whether we are loading more data or just the first ones.\n   * @returns Promise resolved when done.\n   */\n  fetchMembers(loadingMore) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.loadMoreError = false;\n      const limitFrom = loadingMore ? _this2.members.length : 0;\n      const data = yield AddonMessages.getConversationMembers(_this2.conversationId, limitFrom);\n      if (loadingMore) {\n        _this2.members = _this2.members.concat(data.members);\n      } else {\n        _this2.members = data.members;\n      }\n      _this2.canLoadMore = data.canLoadMore;\n    })();\n  }\n  /**\n   * Function to load more members.\n   *\n   * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n   * @returns Resolved when done.\n   */\n  loadMoreMembers(infiniteComplete) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this3.fetchMembers(true);\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\n        _this3.loadMoreError = true;\n      } finally {\n        infiniteComplete && infiniteComplete();\n      }\n    })();\n  }\n  /**\n   * Refresh the data.\n   *\n   * @param refresher Refresher.\n   * @returns Promise resolved when done.\n   */\n  refreshData(refresher) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const promises = [];\n      promises.push(AddonMessages.invalidateConversation(_this4.conversationId));\n      promises.push(AddonMessages.invalidateConversationMembers(_this4.conversationId));\n      yield Promise.all(promises);\n      yield _this4.fetchData().finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n      });\n    })();\n  }\n  /**\n   * Close modal.\n   *\n   * @param userId User conversation to load.\n   */\n  closeModal(userId) {\n    ModalController.dismiss(userId);\n  }\n}\n_class = AddonMessagesConversationInfoComponent;\n_class.ɵfac = function AddonMessagesConversationInfoComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-addon-messages-conversation-info\"]],\n  inputs: {\n    conversationId: \"conversationId\"\n  },\n  decls: 18,\n  vars: 15,\n  consts: [[\"slot\", \"end\"], [\"fill\", \"clear\", 3, \"click\"], [\"name\", \"fas-xmark\", \"slot\", \"icon-only\", \"aria-hidden\", \"true\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [\"class\", \"ion-text-center\", 4, \"ngIf\"], [\"class\", \"ion-text-wrap addon-messages-conversation-item\", \"button\", \"\", 3, \"detail\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"enabled\", \"error\", \"action\"], [1, \"ion-text-center\"], [1, \"large-avatar\"], [\"core-external-content\", \"\", \"onError\", \"this.src='assets/img/group-avatar.svg'\", 1, \"avatar\", 3, \"src\", \"alt\"], [\"contextLevel\", \"system\", 3, \"text\", \"contextInstanceId\"], [\"contextLevel\", \"system\", 3, \"text\", \"contextInstanceId\", 4, \"ngIf\"], [\"button\", \"\", 1, \"ion-text-wrap\", \"addon-messages-conversation-item\", 3, \"detail\", \"click\"], [\"slot\", \"start\", 3, \"user\", \"linkProfile\", \"checkOnline\"], [1, \"item-heading\"], [\"name\", \"fas-user-slash\", 4, \"ngIf\"], [\"name\", \"fas-user-slash\"]],\n  template: function AddonMessagesConversationInfoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\")(3, \"h1\");\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"translate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"ion-buttons\", 0)(7, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function AddonMessagesConversationInfoComponent_Template_ion_button_click_7_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelement(9, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"ion-content\")(11, \"ion-refresher\", 3);\n      i0.ɵɵlistener(\"ionRefresh\", function AddonMessagesConversationInfoComponent_Template_ion_refresher_ionRefresh_11_listener($event) {\n        return ctx.refreshData($event.target);\n      });\n      i0.ɵɵelement(12, \"ion-refresher-content\", 4);\n      i0.ɵɵpipe(13, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"core-loading\", 5);\n      i0.ɵɵtemplate(15, AddonMessagesConversationInfoComponent_ion_item_15_Template, 11, 11, \"ion-item\", 6);\n      i0.ɵɵtemplate(16, AddonMessagesConversationInfoComponent_ion_item_16_Template, 6, 6, \"ion-item\", 7);\n      i0.ɵɵelementStart(17, \"core-infinite-loading\", 8);\n      i0.ɵɵlistener(\"action\", function AddonMessagesConversationInfoComponent_Template_core_infinite_loading_action_17_listener($event) {\n        return ctx.loadMoreMembers($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 9, \"addon.messages.groupinfo\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(8, 11, \"core.close\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(13, 13, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.conversation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.members);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"enabled\", ctx.canLoadMore)(\"error\", ctx.loadMoreError);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.CoreInfiniteLoadingComponent, i4.CoreLoadingComponent, i5.CoreUserAvatarComponent, i6.CoreExternalContentDirective, i7.CoreFaIconDirective, i8.CoreFormatTextDirective, i9.CoreContentDirective, i10.CoreUpdateNonReactiveAttributesDirective, i11.IonButton, i11.IonButtons, i11.IonContent, i11.IonHeader, i11.IonIcon, i11.IonItem, i11.IonLabel, i11.IonRefresher, i11.IonRefresherContent, i11.IonTitle, i11.IonToolbar, i12.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonMessages","CoreDomUtils","ModalController","i0","ɵɵelement","ɵɵproperty","ctx_r2","conversation","subname","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","AddonMessagesConversationInfoComponent_ion_item_15_core_format_text_7_Template","ɵɵtext","ɵɵadvance","ctx_r0","imageurl","ɵɵsanitizeUrl","name","ɵɵtextInterpolate","ɵɵpipeBind2","ɵɵpureFunction1","_c0","membercount","ɵɵattribute","ɵɵpipeBind1","ɵɵlistener","AddonMessagesConversationInfoComponent_ion_item_16_Template_ion_item_click_0_listener","restoredCtx","ɵɵrestoreView","_r6","member_r3","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","closeModal","id","AddonMessagesConversationInfoComponent_ion_item_16_ion_icon_5_Template","showonlinestatus","ɵɵtextInterpolate1","fullname","isblocked","AddonMessagesConversationInfoComponent","constructor","route","conversationId","loaded","members","canLoadMore","loadMoreError","ngOnInit","fetchData","finally","_this","_asyncToGenerator","getConversation","fetchMembers","error","showErrorModalDefault","loadingMore","_this2","limitFrom","length","data","getConversationMembers","concat","loadMoreMembers","infiniteComplete","_this3","refreshData","refresher","_this4","promises","push","invalidateConversation","invalidateConversationMembers","Promise","all","complete","userId","dismiss","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","inputs","decls","vars","consts","template","AddonMessagesConversationInfoComponent_Template","rf","ctx","AddonMessagesConversationInfoComponent_Template_ion_button_click_7_listener","AddonMessagesConversationInfoComponent_Template_ion_refresher_ionRefresh_11_listener","$event","target","AddonMessagesConversationInfoComponent_ion_item_15_Template","AddonMessagesConversationInfoComponent_ion_item_16_Template","AddonMessagesConversationInfoComponent_Template_core_infinite_loading_action_17_listener","ɵɵpropertyInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messages/components/conversation-info/conversation-info.component.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/messages/components/conversation-info/conversation-info.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport {\n    AddonMessagesConversationFormatted,\n    AddonMessagesConversationMember,\n    AddonMessages,\n} from '../../services/messages';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalController } from '@singletons';\n\n/**\n * Component that displays the list of conversations, including group conversations.\n */\n@Component({\n    selector: 'page-addon-messages-conversation-info',\n    templateUrl: 'conversation-info.html',\n})\nexport class AddonMessagesConversationInfoComponent implements OnInit {\n\n    @Input() conversationId = 0;\n\n    loaded = false;\n    conversation?: AddonMessagesConversationFormatted;\n    members: AddonMessagesConversationMember[] = [];\n    canLoadMore = false;\n    loadMoreError = false;\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n    }\n\n    /**\n     * Component loaded.\n     */\n    ngOnInit(): void {\n        this.fetchData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Fetch the required data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        // Get the conversation data first.\n        try {\n            const conversation = await AddonMessages.getConversation(this.conversationId, false, true, 0, 0);\n            this.conversation = conversation;\n\n            // Now get the members.\n            await this.fetchMembers();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\n        }\n    }\n\n    /**\n     * Get conversation members.\n     *\n     * @param loadingMore Whether we are loading more data or just the first ones.\n     * @returns Promise resolved when done.\n     */\n    protected async fetchMembers(loadingMore?: boolean): Promise<void> {\n        this.loadMoreError = false;\n\n        const limitFrom = loadingMore ? this.members.length : 0;\n\n        const data = await AddonMessages.getConversationMembers(this.conversationId, limitFrom);\n        if (loadingMore) {\n            this.members = this.members.concat(data.members);\n        } else {\n            this.members = data.members;\n        }\n\n        this.canLoadMore = data.canLoadMore;\n    }\n\n    /**\n     * Function to load more members.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @returns Resolved when done.\n     */\n    async loadMoreMembers(infiniteComplete?: () => void): Promise<void> {\n        try {\n            await this.fetchMembers(true);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\n            this.loadMoreError = true;\n        } finally {\n            infiniteComplete && infiniteComplete();\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @returns Promise resolved when done.\n     */\n    async refreshData(refresher?: HTMLIonRefresherElement): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonMessages.invalidateConversation(this.conversationId));\n        promises.push(AddonMessages.invalidateConversationMembers(this.conversationId));\n\n        await Promise.all(promises);\n\n        await this.fetchData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Close modal.\n     *\n     * @param userId User conversation to load.\n     */\n    closeModal(userId?: number): void {\n        ModalController.dismiss(userId);\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-title>\n            <h1>{{ 'addon.messages.groupinfo' | translate }}</h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <ion-button fill=\"clear\" (click)=\"closeModal()\" [attr.aria-label]=\"'core.close' | translate\">\n                <ion-icon name=\"fas-xmark\" slot=\"icon-only\" aria-hidden=\"true\" />\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!loaded\" (ionRefresh)=\"refreshData($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n\n    <core-loading [hideUntil]=\"loaded\">\n        <ion-item class=\"ion-text-center\" *ngIf=\"conversation\">\n            <ion-label>\n                <div class=\"large-avatar\">\n                    <img class=\"avatar\" [src]=\"conversation.imageurl\" core-external-content [alt]=\"conversation.name\"\n                        onError=\"this.src='assets/img/group-avatar.svg'\">\n                </div>\n                <h2>\n                    <core-format-text [text]=\"conversation.name\" contextLevel=\"system\" [contextInstanceId]=\"0\" />\n                </h2>\n                <p>\n                    <core-format-text *ngIf=\"conversation.subname\" [text]=\"conversation.subname\" contextLevel=\"system\"\n                        [contextInstanceId]=\"0\" />\n                </p>\n                <p>{{ 'addon.messages.numparticipants' | translate:{$a: conversation.membercount} }}</p>\n            </ion-label>\n        </ion-item>\n\n        <ion-item class=\"ion-text-wrap addon-messages-conversation-item\" *ngFor=\"let member of members\" (click)=\"closeModal(member.id)\"\n            [detail]=\"true\" button>\n            <core-user-avatar [user]=\"member\" [linkProfile]=\"false\" [checkOnline]=\"member.showonlinestatus\" slot=\"start\" />\n            <ion-label>\n                <p class=\"item-heading\">\n                    {{ member.fullname }}\n                    <ion-icon name=\"fas-user-slash\" *ngIf=\"member.isblocked\"\n                        [attr.aria-label]=\"'addon.messages.contactblocked' | translate\" />\n                </p>\n            </ion-label>\n        </ion-item>\n\n        <core-infinite-loading [enabled]=\"canLoadMore\" (action)=\"loadMoreMembers($event)\" [error]=\"loadMoreError\" />\n    </core-loading>\n</ion-content>\n"],"mappings":";;AAeA,SAGIA,aAAa,QACV,yBAAyB;AAChC,SAASC,YAAY,QAAQ,qBAAqB;AAElD,SAASC,eAAe,QAAQ,aAAa;;;;;;;;;;;;;;;;ICMzBC,EAAA,CAAAC,SAAA,2BAC8B;;;;IADiBD,EAAA,CAAAE,UAAA,SAAAC,MAAA,CAAAC,YAAA,CAAAC,OAAA,CAA6B;;;;;;;;;;IAVxFL,EAAA,CAAAM,cAAA,kBAAuD;IAG3CN,EAAA,CAAAC,SAAA,cACqD;IACzDD,EAAA,CAAAO,YAAA,EAAM;IACNP,EAAA,CAAAM,cAAA,SAAI;IACAN,EAAA,CAAAC,SAAA,2BAA6F;IACjGD,EAAA,CAAAO,YAAA,EAAK;IACLP,EAAA,CAAAM,cAAA,QAAG;IACCN,EAAA,CAAAQ,UAAA,IAAAC,8EAAA,+BAC8B;IAClCT,EAAA,CAAAO,YAAA,EAAI;IACJP,EAAA,CAAAM,cAAA,QAAG;IAAAN,EAAA,CAAAU,MAAA,GAAiF;;IAAAV,EAAA,CAAAO,YAAA,EAAI;;;;IAVhEP,EAAA,CAAAW,SAAA,GAA6B;IAA7BX,EAAA,CAAAE,UAAA,QAAAU,MAAA,CAAAR,YAAA,CAAAS,QAAA,EAAAb,EAAA,CAAAc,aAAA,CAA6B,QAAAF,MAAA,CAAAR,YAAA,CAAAW,IAAA;IAI/Bf,EAAA,CAAAW,SAAA,GAA0B;IAA1BX,EAAA,CAAAE,UAAA,SAAAU,MAAA,CAAAR,YAAA,CAAAW,IAAA,CAA0B;IAGzBf,EAAA,CAAAW,SAAA,GAA0B;IAA1BX,EAAA,CAAAE,UAAA,SAAAU,MAAA,CAAAR,YAAA,CAAAC,OAAA,CAA0B;IAG9CL,EAAA,CAAAW,SAAA,GAAiF;IAAjFX,EAAA,CAAAgB,iBAAA,CAAAhB,EAAA,CAAAiB,WAAA,0CAAAjB,EAAA,CAAAkB,eAAA,IAAAC,GAAA,EAAAP,MAAA,CAAAR,YAAA,CAAAgB,WAAA,GAAiF;;;;;IAUhFpB,EAAA,CAAAC,SAAA,mBACsE;;;;IAAlED,EAAA,CAAAqB,WAAA,eAAArB,EAAA,CAAAsB,WAAA,wCAA+D;;;;;;IAP/EtB,EAAA,CAAAM,cAAA,mBAC2B;IADqEN,EAAA,CAAAuB,UAAA,mBAAAC,sFAAA;MAAA,MAAAC,WAAA,GAAAzB,EAAA,CAAA0B,aAAA,CAAAC,GAAA;MAAA,MAAAC,SAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAA9B,EAAA,CAAA+B,aAAA;MAAA,OAAS/B,EAAA,CAAAgC,WAAA,CAAAF,MAAA,CAAAG,UAAA,CAAAL,SAAA,CAAAM,EAAA,CAAqB;IAAA,EAAC;IAE3HlC,EAAA,CAAAC,SAAA,2BAA+G;IAC/GD,EAAA,CAAAM,cAAA,gBAAW;IAEHN,EAAA,CAAAU,MAAA,GACA;IAAAV,EAAA,CAAAQ,UAAA,IAAA2B,sEAAA,uBACsE;IAC1EnC,EAAA,CAAAO,YAAA,EAAI;;;;IAPRP,EAAA,CAAAE,UAAA,gBAAe;IACGF,EAAA,CAAAW,SAAA,GAAe;IAAfX,EAAA,CAAAE,UAAA,SAAA0B,SAAA,CAAe,sCAAAA,SAAA,CAAAQ,gBAAA;IAGzBpC,EAAA,CAAAW,SAAA,GACA;IADAX,EAAA,CAAAqC,kBAAA,MAAAT,SAAA,CAAAU,QAAA,MACA;IAAiCtC,EAAA,CAAAW,SAAA,GAAsB;IAAtBX,EAAA,CAAAE,UAAA,SAAA0B,SAAA,CAAAW,SAAA,CAAsB;;;ADjB3E;;;AAOA,OAAM,MAAOC,sCAAsC;EAU/CC,YACcC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;IATV,KAAAC,cAAc,GAAG,CAAC;IAE3B,KAAAC,MAAM,GAAG,KAAK;IAEd,KAAAC,OAAO,GAAsC,EAAE;IAC/C,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,aAAa,GAAG,KAAK;EAKrB;EAEA;;;EAGAC,QAAQA,CAAA;IACJ,IAAI,CAACC,SAAS,EAAE,CAACC,OAAO,CAAC,MAAK;MAC1B,IAAI,CAACN,MAAM,GAAG,IAAI;IACtB,CAAC,CAAC;EACN;EAEA;;;;;EAKgBK,SAASA,CAAA;IAAA,IAAAE,KAAA;IAAA,OAAAC,iBAAA;MACrB;MACA,IAAI;QACA,MAAMhD,YAAY,SAASP,aAAa,CAACwD,eAAe,CAACF,KAAI,CAACR,cAAc,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;QAChGQ,KAAI,CAAC/C,YAAY,GAAGA,YAAY;QAEhC;QACA,MAAM+C,KAAI,CAACG,YAAY,EAAE;OAC5B,CAAC,OAAOC,KAAK,EAAE;QACZzD,YAAY,CAAC0D,qBAAqB,CAACD,KAAK,EAAE,wBAAwB,CAAC;;IACtE;EACL;EAEA;;;;;;EAMgBD,YAAYA,CAACG,WAAqB;IAAA,IAAAC,MAAA;IAAA,OAAAN,iBAAA;MAC9CM,MAAI,CAACX,aAAa,GAAG,KAAK;MAE1B,MAAMY,SAAS,GAAGF,WAAW,GAAGC,MAAI,CAACb,OAAO,CAACe,MAAM,GAAG,CAAC;MAEvD,MAAMC,IAAI,SAAShE,aAAa,CAACiE,sBAAsB,CAACJ,MAAI,CAACf,cAAc,EAAEgB,SAAS,CAAC;MACvF,IAAIF,WAAW,EAAE;QACbC,MAAI,CAACb,OAAO,GAAGa,MAAI,CAACb,OAAO,CAACkB,MAAM,CAACF,IAAI,CAAChB,OAAO,CAAC;OACnD,MAAM;QACHa,MAAI,CAACb,OAAO,GAAGgB,IAAI,CAAChB,OAAO;;MAG/Ba,MAAI,CAACZ,WAAW,GAAGe,IAAI,CAACf,WAAW;IAAC;EACxC;EAEA;;;;;;EAMMkB,eAAeA,CAACC,gBAA6B;IAAA,IAAAC,MAAA;IAAA,OAAAd,iBAAA;MAC/C,IAAI;QACA,MAAMc,MAAI,CAACZ,YAAY,CAAC,IAAI,CAAC;OAChC,CAAC,OAAOC,KAAK,EAAE;QACZzD,YAAY,CAAC0D,qBAAqB,CAACD,KAAK,EAAE,wBAAwB,CAAC;QACnEW,MAAI,CAACnB,aAAa,GAAG,IAAI;OAC5B,SAAS;QACNkB,gBAAgB,IAAIA,gBAAgB,EAAE;;IACzC;EACL;EAEA;;;;;;EAMME,WAAWA,CAACC,SAAmC;IAAA,IAAAC,MAAA;IAAA,OAAAjB,iBAAA;MACjD,MAAMkB,QAAQ,GAAoB,EAAE;MAEpCA,QAAQ,CAACC,IAAI,CAAC1E,aAAa,CAAC2E,sBAAsB,CAACH,MAAI,CAAC1B,cAAc,CAAC,CAAC;MACxE2B,QAAQ,CAACC,IAAI,CAAC1E,aAAa,CAAC4E,6BAA6B,CAACJ,MAAI,CAAC1B,cAAc,CAAC,CAAC;MAE/E,MAAM+B,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MAE3B,MAAMD,MAAI,CAACpB,SAAS,EAAE,CAACC,OAAO,CAAC,MAAK;QAChCkB,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEQ,QAAQ,EAAE;MACzB,CAAC,CAAC;IAAC;EACP;EAEA;;;;;EAKA3C,UAAUA,CAAC4C,MAAe;IACtB9E,eAAe,CAAC+E,OAAO,CAACD,MAAM,CAAC;EACnC;;SA1GSrC,sCAAsC;;mBAAtCA,MAAsC,EAAAxC,EAAA,CAAA+E,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAtCzC,MAAsC;EAAA0C,SAAA;EAAAC,MAAA;IAAAxC,cAAA;EAAA;EAAAyC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gDAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC/BnDzF,EAAA,CAAAM,cAAA,iBAAY;MAGIN,EAAA,CAAAU,MAAA,GAA4C;;MAAAV,EAAA,CAAAO,YAAA,EAAK;MAEzDP,EAAA,CAAAM,cAAA,qBAAwB;MACKN,EAAA,CAAAuB,UAAA,mBAAAoE,4EAAA;QAAA,OAASD,GAAA,CAAAzD,UAAA,EAAY;MAAA,EAAC;;MAC3CjC,EAAA,CAAAC,SAAA,kBAAiE;MACrED,EAAA,CAAAO,YAAA,EAAa;MAIzBP,EAAA,CAAAM,cAAA,mBAAa;MACwCN,EAAA,CAAAuB,UAAA,wBAAAqE,qFAAAC,MAAA;QAAA,OAAcH,GAAA,CAAAvB,WAAA,CAAA0B,MAAA,CAAAC,MAAA,CAA0B;MAAA,EAAC;MACtF9F,EAAA,CAAAC,SAAA,gCAA8E;;MAClFD,EAAA,CAAAO,YAAA,EAAgB;MAEhBP,EAAA,CAAAM,cAAA,uBAAmC;MAC/BN,EAAA,CAAAQ,UAAA,KAAAuF,2DAAA,wBAeW;MAEX/F,EAAA,CAAAQ,UAAA,KAAAwF,2DAAA,sBAUW;MAEXhG,EAAA,CAAAM,cAAA,gCAA4G;MAA7DN,EAAA,CAAAuB,UAAA,oBAAA0E,yFAAAJ,MAAA;QAAA,OAAUH,GAAA,CAAA1B,eAAA,CAAA6B,MAAA,CAAuB;MAAA,EAAC;MAAjF7F,EAAA,CAAAO,YAAA,EAA4G;;;MA5CpGP,EAAA,CAAAW,SAAA,GAA4C;MAA5CX,EAAA,CAAAgB,iBAAA,CAAAhB,EAAA,CAAAsB,WAAA,mCAA4C;MAGAtB,EAAA,CAAAW,SAAA,GAA4C;MAA5CX,EAAA,CAAAqB,WAAA,eAAArB,EAAA,CAAAsB,WAAA,sBAA4C;MAOxEtB,EAAA,CAAAW,SAAA,GAAoB;MAApBX,EAAA,CAAAE,UAAA,cAAAwF,GAAA,CAAA9C,MAAA,CAAoB;MACrB5C,EAAA,CAAAW,SAAA,GAAoD;MAApDX,EAAA,CAAAkG,qBAAA,gBAAAlG,EAAA,CAAAsB,WAAA,+BAAoD;MAGjEtB,EAAA,CAAAW,SAAA,GAAoB;MAApBX,EAAA,CAAAE,UAAA,cAAAwF,GAAA,CAAA9C,MAAA,CAAoB;MACK5C,EAAA,CAAAW,SAAA,GAAkB;MAAlBX,EAAA,CAAAE,UAAA,SAAAwF,GAAA,CAAAtF,YAAA,CAAkB;MAiB+BJ,EAAA,CAAAW,SAAA,GAAU;MAAVX,EAAA,CAAAE,UAAA,YAAAwF,GAAA,CAAA7C,OAAA,CAAU;MAYvE7C,EAAA,CAAAW,SAAA,GAAuB;MAAvBX,EAAA,CAAAE,UAAA,YAAAwF,GAAA,CAAA5C,WAAA,CAAuB,UAAA4C,GAAA,CAAA3C,aAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}