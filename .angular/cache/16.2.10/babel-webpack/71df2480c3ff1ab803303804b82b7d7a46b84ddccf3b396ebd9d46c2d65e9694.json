{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Database variables for CoreSites service.\n */\nexport const SITES_TABLE_NAME = 'sites_2';\nexport const SCHEMA_VERSIONS_TABLE_NAME = 'schema_versions';\n/**\n * Database variables for CoreSite class.\n */\nexport const WS_CACHE_TABLE = 'wscache_2';\nexport const CONFIG_TABLE = 'core_site_config';\nexport const LAST_VIEWED_TABLE = 'core_site_last_viewed';\n// Schema to register in App DB.\nexport const APP_SCHEMA = {\n  name: 'CoreSitesProvider',\n  version: 2,\n  tables: [{\n    name: SITES_TABLE_NAME,\n    columns: [{\n      name: 'id',\n      type: 'TEXT',\n      primaryKey: true\n    }, {\n      name: 'siteUrl',\n      type: 'TEXT',\n      notNull: true\n    }, {\n      name: 'token',\n      type: 'TEXT'\n    }, {\n      name: 'info',\n      type: 'TEXT'\n    }, {\n      name: 'privateToken',\n      type: 'TEXT'\n    }, {\n      name: 'config',\n      type: 'TEXT'\n    }, {\n      name: 'loggedOut',\n      type: 'INTEGER'\n    }, {\n      name: 'oauthId',\n      type: 'INTEGER'\n    }]\n  }],\n  migrate(db, oldVersion) {\n    return _asyncToGenerator(function* () {\n      if (oldVersion < 2) {\n        yield db.migrateTable('sites', SITES_TABLE_NAME);\n      }\n    })();\n  }\n};\n// Schema to register for Site DB.\nexport const SITE_SCHEMA = {\n  name: 'CoreSitesProvider',\n  version: 3,\n  canBeCleared: [WS_CACHE_TABLE],\n  tables: [{\n    name: WS_CACHE_TABLE,\n    columns: [{\n      name: 'id',\n      type: 'TEXT',\n      primaryKey: true\n    }, {\n      name: 'data',\n      type: 'TEXT'\n    }, {\n      name: 'key',\n      type: 'TEXT'\n    }, {\n      name: 'expirationTime',\n      type: 'INTEGER'\n    }, {\n      name: 'component',\n      type: 'TEXT'\n    }, {\n      name: 'componentId',\n      type: 'INTEGER'\n    }]\n  }, {\n    name: CONFIG_TABLE,\n    columns: [{\n      name: 'name',\n      type: 'TEXT',\n      unique: true,\n      notNull: true\n    }, {\n      name: 'value'\n    }]\n  }, {\n    name: LAST_VIEWED_TABLE,\n    columns: [{\n      name: 'component',\n      type: 'TEXT'\n    }, {\n      name: 'id',\n      type: 'INTEGER'\n    }, {\n      name: 'value',\n      type: 'TEXT',\n      notNull: true\n    }, {\n      name: 'data',\n      type: 'TEXT'\n    }, {\n      name: 'timeaccess',\n      type: 'INTEGER'\n    }],\n    primaryKeys: ['component', 'id']\n  }]\n};\n// Table for site DB to include the schema versions. It's not part of SITE_SCHEMA because it needs to be created first.\nexport const SCHEMA_VERSIONS_TABLE_SCHEMA = {\n  name: SCHEMA_VERSIONS_TABLE_NAME,\n  columns: [{\n    name: 'name',\n    type: 'TEXT',\n    primaryKey: true\n  }, {\n    name: 'version',\n    type: 'INTEGER'\n  }]\n};","map":{"version":3,"names":["SITES_TABLE_NAME","SCHEMA_VERSIONS_TABLE_NAME","WS_CACHE_TABLE","CONFIG_TABLE","LAST_VIEWED_TABLE","APP_SCHEMA","name","version","tables","columns","type","primaryKey","notNull","migrate","db","oldVersion","_asyncToGenerator","migrateTable","SITE_SCHEMA","canBeCleared","unique","primaryKeys","SCHEMA_VERSIONS_TABLE_SCHEMA"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/services/database/sites.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreAppSchema } from '@services/app';\nimport { CoreSiteSchema } from '@services/sites';\nimport { SQLiteDB, SQLiteDBTableSchema } from '@classes/sqlitedb';\n\n/**\n * Database variables for CoreSites service.\n */\nexport const SITES_TABLE_NAME = 'sites_2';\nexport const SCHEMA_VERSIONS_TABLE_NAME = 'schema_versions';\n\n/**\n * Database variables for CoreSite class.\n */\nexport const WS_CACHE_TABLE = 'wscache_2';\nexport const CONFIG_TABLE = 'core_site_config';\nexport const LAST_VIEWED_TABLE = 'core_site_last_viewed';\n\n// Schema to register in App DB.\nexport const APP_SCHEMA: CoreAppSchema = {\n    name: 'CoreSitesProvider',\n    version: 2,\n    tables: [\n        {\n            name: SITES_TABLE_NAME,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'TEXT',\n                    primaryKey: true,\n                },\n                {\n                    name: 'siteUrl',\n                    type: 'TEXT',\n                    notNull: true,\n                },\n                {\n                    name: 'token',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'info',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'privateToken',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'config',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'loggedOut',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'oauthId',\n                    type: 'INTEGER',\n                },\n            ],\n        },\n    ],\n    async migrate(db: SQLiteDB, oldVersion: number): Promise<void> {\n        if (oldVersion < 2) {\n            await db.migrateTable('sites', SITES_TABLE_NAME);\n        }\n    },\n};\n\n// Schema to register for Site DB.\nexport const SITE_SCHEMA: CoreSiteSchema = {\n    name: 'CoreSitesProvider',\n    version: 3,\n    canBeCleared: [WS_CACHE_TABLE],\n    tables: [\n        {\n            name: WS_CACHE_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'TEXT',\n                    primaryKey: true,\n                },\n                {\n                    name: 'data',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'key',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'expirationTime',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'component',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'componentId',\n                    type: 'INTEGER',\n                },\n            ],\n        },\n        {\n            name: CONFIG_TABLE,\n            columns: [\n                {\n                    name: 'name',\n                    type: 'TEXT',\n                    unique: true,\n                    notNull: true,\n                },\n                {\n                    name: 'value',\n                },\n            ],\n        },\n        {\n            name: LAST_VIEWED_TABLE,\n            columns: [\n                {\n                    name: 'component',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'id',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'value',\n                    type: 'TEXT',\n                    notNull: true,\n                },\n                {\n                    name: 'data',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'timeaccess',\n                    type: 'INTEGER',\n                },\n            ],\n            primaryKeys: ['component', 'id'],\n        },\n    ],\n};\n\n// Table for site DB to include the schema versions. It's not part of SITE_SCHEMA because it needs to be created first.\nexport const SCHEMA_VERSIONS_TABLE_SCHEMA: SQLiteDBTableSchema = {\n    name: SCHEMA_VERSIONS_TABLE_NAME,\n    columns: [\n        {\n            name: 'name',\n            type: 'TEXT',\n            primaryKey: true,\n        },\n        {\n            name: 'version',\n            type: 'INTEGER',\n        },\n    ],\n};\n\nexport type SiteDBEntry = {\n    id: string;\n    siteUrl: string;\n    token: string;\n    info?: string | null;\n    privateToken: string;\n    config?: string | null;\n    loggedOut: number;\n    oauthId?: number | null;\n};\n\nexport type SchemaVersionsDBEntry = {\n    name: string;\n    version: number;\n};\n\nexport type CoreSiteConfigDBRecord = {\n    name: string;\n    value: string | number;\n};\n\nexport type CoreSiteWSCacheRecord = {\n    id: string;\n    data: string;\n    expirationTime: number;\n    key?: string;\n    component?: string;\n    componentId?: number;\n};\n\nexport type CoreSiteLastViewedDBRecord = {\n    component: string;\n    id: number;\n    value: string;\n    timeaccess: number;\n    data?: string;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}