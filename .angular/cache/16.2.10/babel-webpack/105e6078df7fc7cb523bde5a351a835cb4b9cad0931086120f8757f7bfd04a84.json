{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreBlockBaseComponent } from '@features/block/classes/base-block-component';\nimport { CoreSites } from '@services/sites';\nimport { CoreConstants } from '@/core/constants';\nimport { Translate } from '@singletons';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../../core/components/loading/loading\";\nimport * as i3 from \"../../../../../core/components/mod-icon/mod-icon\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@ngx-translate/core\";\nfunction AddonBlockActivityModulesComponent_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 3);\n    i0.ɵɵlistener(\"click\", function AddonBlockActivityModulesComponent_ion_item_6_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const entry_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.gotoCoureListModType(entry_r1));\n    });\n    i0.ɵɵelement(1, \"core-mod-icon\", 4);\n    i0.ɵɵelementStart(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"modicon\", entry_r1.icon)(\"modname\", entry_r1.iconModName)(\"showAlt\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r1.name);\n  }\n}\n/**\n * Component to render an \"activity modules\" block.\n */\nexport class AddonBlockActivityModulesComponent extends CoreBlockBaseComponent {\n  constructor() {\n    super('AddonBlockActivityModulesComponent');\n    this.entries = [];\n    this.fetchContentDefaultError = 'Error getting activity modules data.';\n  }\n  /**\n   * Perform the invalidate content function.\n   *\n   * @returns Resolved when done.\n   */\n  invalidateContent() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield CoreCourse.invalidateSections(_this.instanceId);\n    })();\n  }\n  /**\n   * Fetch the data to render the block.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchContent() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const sections = yield CoreCourse.getSections(_this2.getCourseId(), false, true);\n      _this2.entries = [];\n      const archetypes = {};\n      const modIcons = {};\n      let modFullNames = {};\n      sections.forEach(section => {\n        if (!section.modules) {\n          return;\n        }\n        section.modules.forEach(mod => {\n          if (archetypes[mod.modname] !== undefined || !CoreCourseHelper.canUserViewModule(mod, section) || !CoreCourse.moduleHasView(mod)) {\n            // Ignore this module.\n            return;\n          }\n          // Get the archetype of the module type.\n          archetypes[mod.modname] = CoreCourseModuleDelegate.supportsFeature(mod.modname, CoreConstants.FEATURE_MOD_ARCHETYPE, CoreConstants.MOD_ARCHETYPE_OTHER);\n          // Get the full name of the module type.\n          if (archetypes[mod.modname] === CoreConstants.MOD_ARCHETYPE_RESOURCE) {\n            // All resources are gathered in a single \"Resources\" option.\n            if (!modFullNames['resources']) {\n              modFullNames['resources'] = Translate.instant('core.resources');\n            }\n          } else {\n            modFullNames[mod.modname] = mod.modplural;\n          }\n          // If this is not a theme image, leave it undefined to avoid having specific activity icons.\n          if (CoreUrlUtils.isThemeImageUrl(mod.modicon)) {\n            modIcons[mod.modname] = mod.modicon;\n          }\n        });\n      });\n      // Sort the modnames alphabetically.\n      modFullNames = CoreUtils.sortValues(modFullNames);\n      for (const modName in modFullNames) {\n        const iconModName = modName === 'resources' ? 'page' : modName;\n        const icon = yield CoreCourseModuleDelegate.getModuleIconSrc(iconModName, modIcons[iconModName]);\n        _this2.entries.push({\n          icon,\n          iconModName,\n          name: modFullNames[modName],\n          modName\n        });\n      }\n    })();\n  }\n  /**\n   * Obtain the appropiate course id for the block.\n   *\n   * @returns Course id.\n   */\n  getCourseId() {\n    if (this.contextLevel == \"course\" /* ContextLevel.COURSE */) {\n      return this.instanceId;\n    }\n    return CoreSites.getCurrentSiteHomeId();\n  }\n  /**\n   * Navigate to the activity list.\n   *\n   * @param entry Selected entry.\n   */\n  gotoCoureListModType(entry) {\n    CoreNavigator.navigateToSitePath('course/' + this.getCourseId() + '/list-mod-type', {\n      params: {\n        modName: entry.modName,\n        title: entry.name\n      }\n    });\n  }\n}\n_class = AddonBlockActivityModulesComponent;\n_class.ɵfac = function AddonBlockActivityModulesComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-block-activitymodules\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 6,\n  consts: [[3, \"sticky\"], [3, \"hideUntil\"], [\"class\", \"ion-text-wrap\", \"button\", \"\", 3, \"detail\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", 1, \"ion-text-wrap\", 3, \"detail\", \"click\"], [\"slot\", \"start\", 3, \"modicon\", \"modname\", \"showAlt\"]],\n  template: function AddonBlockActivityModulesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-item-divider\", 0)(1, \"ion-label\")(2, \"h2\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"core-loading\", 1);\n      i0.ɵɵtemplate(6, AddonBlockActivityModulesComponent_ion_item_6_Template, 4, 5, \"ion-item\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"sticky\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"addon.block_activitymodules.pluginname\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.entries);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.CoreLoadingComponent, i3.CoreModIconComponent, i4.IonItem, i4.IonItemDivider, i4.IonLabel, i5.TranslatePipe],\n  styles: [\"[_nghost-%COMP%]   core-mod-icon[_ngcontent-%COMP%] {\\n  background: transparent;\\n  margin: 0;\\n  --filter: var(--module-icon-filter);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvYmxvY2svYWN0aXZpdHltb2R1bGVzL2NvbXBvbmVudHMvYWN0aXZpdHltb2R1bGVzL2FjdGl2aXR5bW9kdWxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksdUJBQUE7RUFDQSxTQUFBO0VBQ0EsbUNBQUE7QUFBUiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICBjb3JlLW1vZC1pY29uIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgLS1maWx0ZXI6IHZhcigtLW1vZHVsZS1pY29uLWZpbHRlcik7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreCourse","CoreCourseModuleDelegate","CoreBlockBaseComponent","CoreSites","CoreConstants","Translate","CoreUtils","CoreNavigator","CoreCourseHelper","CoreUrlUtils","i0","ɵɵelementStart","ɵɵlistener","AddonBlockActivityModulesComponent_ion_item_6_Template_ion_item_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","entry_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","gotoCoureListModType","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","icon","iconModName","ɵɵtextInterpolate","name","AddonBlockActivityModulesComponent","constructor","entries","fetchContentDefaultError","invalidateContent","_this","_asyncToGenerator","invalidateSections","instanceId","fetchContent","_this2","sections","getSections","getCourseId","archetypes","modIcons","modFullNames","forEach","section","modules","mod","modname","undefined","canUserViewModule","moduleHasView","supportsFeature","FEATURE_MOD_ARCHETYPE","MOD_ARCHETYPE_OTHER","MOD_ARCHETYPE_RESOURCE","instant","modplural","isThemeImageUrl","modicon","sortValues","modName","getModuleIconSrc","push","contextLevel","getCurrentSiteHomeId","entry","navigateToSitePath","params","title","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonBlockActivityModulesComponent_Template","rf","ctx","ɵɵtemplate","AddonBlockActivityModulesComponent_ion_item_6_Template","ɵɵpipeBind1","loaded"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/activitymodules/components/activitymodules/activitymodules.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/activitymodules/components/activitymodules/addon-block-activitymodules.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModuleDelegate } from '@features/course/services/module-delegate';\nimport { CoreBlockBaseComponent } from '@features/block/classes/base-block-component';\nimport { CoreSites } from '@services/sites';\nimport { ContextLevel, CoreConstants } from '@/core/constants';\nimport { Translate } from '@singletons';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\nimport { CoreUrlUtils } from '@services/utils/url';\n\n/**\n * Component to render an \"activity modules\" block.\n */\n@Component({\n    selector: 'addon-block-activitymodules',\n    templateUrl: 'addon-block-activitymodules.html',\n    styleUrls: ['activitymodules.scss'],\n})\nexport class AddonBlockActivityModulesComponent extends CoreBlockBaseComponent implements OnInit {\n\n    entries: AddonBlockActivityModuleEntry[] = [];\n\n    protected fetchContentDefaultError = 'Error getting activity modules data.';\n\n    constructor() {\n        super('AddonBlockActivityModulesComponent');\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @returns Resolved when done.\n     */\n    async invalidateContent(): Promise<void> {\n        await CoreCourse.invalidateSections(this.instanceId);\n    }\n\n    /**\n     * Fetch the data to render the block.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchContent(): Promise<void> {\n        const sections = await CoreCourse.getSections(this.getCourseId(), false, true);\n\n        this.entries = [];\n        const archetypes: Record<string, number> = {};\n        const modIcons: Record<string, string> = {};\n        let modFullNames: Record<string, string> = {};\n        sections.forEach((section) => {\n            if (!section.modules) {\n                return;\n            }\n\n            section.modules.forEach((mod) => {\n                if (archetypes[mod.modname] !== undefined ||\n                    !CoreCourseHelper.canUserViewModule(mod, section) ||\n                    !CoreCourse.moduleHasView(mod)) {\n                    // Ignore this module.\n                    return;\n                }\n\n                // Get the archetype of the module type.\n                archetypes[mod.modname] = CoreCourseModuleDelegate.supportsFeature<number>(\n                    mod.modname,\n                    CoreConstants.FEATURE_MOD_ARCHETYPE,\n                    CoreConstants.MOD_ARCHETYPE_OTHER,\n                );\n\n                // Get the full name of the module type.\n                if (archetypes[mod.modname] === CoreConstants.MOD_ARCHETYPE_RESOURCE) {\n                    // All resources are gathered in a single \"Resources\" option.\n                    if (!modFullNames['resources']) {\n                        modFullNames['resources'] = Translate.instant('core.resources');\n                    }\n                } else {\n                    modFullNames[mod.modname] = mod.modplural;\n                }\n\n                // If this is not a theme image, leave it undefined to avoid having specific activity icons.\n                if (CoreUrlUtils.isThemeImageUrl(mod.modicon)) {\n                    modIcons[mod.modname] = mod.modicon;\n                }\n            });\n        });\n        // Sort the modnames alphabetically.\n        modFullNames = CoreUtils.sortValues(modFullNames);\n        for (const modName in modFullNames) {\n            const iconModName = modName === 'resources' ? 'page' : modName;\n\n            const icon = await CoreCourseModuleDelegate.getModuleIconSrc(iconModName, modIcons[iconModName]);\n\n            this.entries.push({\n                icon,\n                iconModName,\n                name: modFullNames[modName],\n                modName,\n            });\n        }\n    }\n\n    /**\n     * Obtain the appropiate course id for the block.\n     *\n     * @returns Course id.\n     */\n    protected getCourseId(): number {\n        if (this.contextLevel == ContextLevel.COURSE) {\n            return this.instanceId;\n        }\n\n        return CoreSites.getCurrentSiteHomeId();\n    }\n\n    /**\n     * Navigate to the activity list.\n     *\n     * @param entry Selected entry.\n     */\n    gotoCoureListModType(entry: AddonBlockActivityModuleEntry): void {\n        CoreNavigator.navigateToSitePath('course/' + this.getCourseId() + '/list-mod-type', {\n            params: {\n                modName: entry.modName,\n                title: entry.name,\n            },\n        });\n    }\n\n}\n\ntype AddonBlockActivityModuleEntry = {\n    icon: string;\n    name: string;\n    modName: string;\n    iconModName: string;\n};\n","<ion-item-divider [sticky]=\"true\">\n    <ion-label>\n        <h2>{{ 'addon.block_activitymodules.pluginname' | translate }}</h2>\n    </ion-label>\n</ion-item-divider>\n<core-loading [hideUntil]=\"loaded\">\n    <ion-item class=\"ion-text-wrap\" *ngFor=\"let entry of entries\" [detail]=\"true\" button (click)=\"gotoCoureListModType(entry)\">\n        <core-mod-icon slot=\"start\" [modicon]=\"entry.icon\" [modname]=\"entry.iconModName\" [showAlt]=\"false\" />\n        <ion-label>{{ entry.name }}</ion-label>\n    </ion-item>\n</core-loading>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}