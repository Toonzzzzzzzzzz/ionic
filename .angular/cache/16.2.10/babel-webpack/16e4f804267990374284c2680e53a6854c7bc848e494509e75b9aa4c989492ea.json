{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldTextComponent } from '../component/text';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for number data field plugin.\n */\nexport class AddonModDataFieldTextHandlerService {\n  constructor() {\n    this.name = 'AddonModDataFieldTextHandler';\n    this.type = 'text';\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return AddonModDataFieldTextComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldSearchData(field, inputData) {\n    const fieldName = 'f_' + field.id;\n    if (inputData[fieldName]) {\n      return [{\n        name: fieldName,\n        value: inputData[fieldName]\n      }];\n    }\n    return [];\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldEditData(field, inputData, originalFieldData) {\n    var _inputData$fieldName;\n    const fieldName = 'f_' + field.id;\n    return [{\n      fieldid: field.id,\n      value: (_inputData$fieldName = inputData[fieldName]) !== null && _inputData$fieldName !== void 0 ? _inputData$fieldName : ''\n    }];\n  }\n  /**\n   * @inheritdoc\n   */\n  hasFieldDataChanged(field, inputData, originalFieldData) {\n    var _inputData$fieldName2, _originalFieldData$co;\n    const fieldName = 'f_' + field.id;\n    const input = (_inputData$fieldName2 = inputData[fieldName]) !== null && _inputData$fieldName2 !== void 0 ? _inputData$fieldName2 : '';\n    const content = (_originalFieldData$co = originalFieldData === null || originalFieldData === void 0 ? void 0 : originalFieldData.content) !== null && _originalFieldData$co !== void 0 ? _originalFieldData$co : '';\n    return input !== content;\n  }\n  /**\n   * @inheritdoc\n   */\n  getFieldsNotifications(field, inputData) {\n    if (field.required && (!inputData || !inputData.length || !inputData[0].value)) {\n      return Translate.instant('addon.mod_data.errormustsupplyvalue');\n    }\n  }\n  /**\n   * @inheritdoc\n   */\n  overrideData(originalContent, offlineContent) {\n    var _offlineContent$;\n    originalContent.content = (_offlineContent$ = offlineContent['']) !== null && _offlineContent$ !== void 0 ? _offlineContent$ : '';\n    return originalContent;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n}\n_class = AddonModDataFieldTextHandlerService;\n_class.ɵfac = function AddonModDataFieldTextHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModDataFieldTextHandler = makeSingleton(AddonModDataFieldTextHandlerService);","map":{"version":3,"names":["makeSingleton","Translate","AddonModDataFieldTextComponent","AddonModDataFieldTextHandlerService","constructor","name","type","getComponent","getFieldSearchData","field","inputData","fieldName","id","value","getFieldEditData","originalFieldData","_inputData$fieldName","fieldid","hasFieldDataChanged","_inputData$fieldName2","_originalFieldData$co","input","content","getFieldsNotifications","required","length","instant","overrideData","originalContent","offlineContent","_offlineContent$","isEnabled","_asyncToGenerator","factory","ɵfac","providedIn","AddonModDataFieldTextHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/data/fields/text/services/handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    AddonModDataEntryField,\n    AddonModDataField,\n    AddonModDataSearchEntriesAdvancedFieldFormatted,\n    AddonModDataSubfieldData,\n} from '@addons/mod/data/services/data';\nimport { AddonModDataFieldHandler } from '@addons/mod/data/services/data-fields-delegate';\nimport { Injectable, Type } from '@angular/core';\nimport { CoreFormFields } from '@singletons/form';\nimport { makeSingleton, Translate } from '@singletons';\nimport { AddonModDataFieldTextComponent } from '../component/text';\nimport type { AddonModDataFieldPluginBaseComponent } from '@addons/mod/data/classes/base-field-plugin-component';\n\n/**\n * Handler for number data field plugin.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModDataFieldTextHandlerService implements AddonModDataFieldHandler {\n\n    name = 'AddonModDataFieldTextHandler';\n    type = 'text';\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<AddonModDataFieldPluginBaseComponent> {\n        return AddonModDataFieldTextComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldSearchData(field: AddonModDataField, inputData: CoreFormFields): AddonModDataSearchEntriesAdvancedFieldFormatted[] {\n        const fieldName = 'f_' + field.id;\n\n        if (inputData[fieldName]) {\n            return [{\n                name: fieldName,\n                value: inputData[fieldName],\n            }];\n        }\n\n        return [];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldEditData(\n        field: AddonModDataField,\n        inputData: CoreFormFields<string>,\n        originalFieldData: AddonModDataEntryField, // eslint-disable-line @typescript-eslint/no-unused-vars\n    ): AddonModDataSubfieldData[] {\n\n        const fieldName = 'f_' + field.id;\n\n        return [{\n            fieldid: field.id,\n            value: inputData[fieldName] ?? '',\n        }];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    hasFieldDataChanged(\n        field: AddonModDataField,\n        inputData: CoreFormFields<string>,\n        originalFieldData: AddonModDataEntryField,\n    ): boolean {\n        const fieldName = 'f_' + field.id;\n        const input = inputData[fieldName] ?? '';\n        const content = originalFieldData?.content ?? '';\n\n        return input !== content;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getFieldsNotifications(field: AddonModDataField, inputData: AddonModDataSubfieldData[]): string | undefined {\n        if (field.required && (!inputData || !inputData.length || !inputData[0].value)) {\n            return Translate.instant('addon.mod_data.errormustsupplyvalue');\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    overrideData(originalContent: AddonModDataEntryField, offlineContent: CoreFormFields<string>): AddonModDataEntryField {\n        originalContent.content = offlineContent[''] ?? '';\n\n        return originalContent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n}\nexport const AddonModDataFieldTextHandler = makeSingleton(AddonModDataFieldTextHandlerService);\n"],"mappings":";;AAuBA,SAASA,aAAa,EAAEC,SAAS,QAAQ,aAAa;AACtD,SAASC,8BAA8B,QAAQ,mBAAmB;;AAGlE;;;AAIA,OAAM,MAAOC,mCAAmC;EADhDC,YAAA;IAGI,KAAAC,IAAI,GAAG,8BAA8B;IACrC,KAAAC,IAAI,GAAG,MAAM;;EAEb;;;EAGAC,YAAYA,CAAA;IACR,OAAOL,8BAA8B;EACzC;EAEA;;;EAGAM,kBAAkBA,CAACC,KAAwB,EAAEC,SAAyB;IAClE,MAAMC,SAAS,GAAG,IAAI,GAAGF,KAAK,CAACG,EAAE;IAEjC,IAAIF,SAAS,CAACC,SAAS,CAAC,EAAE;MACtB,OAAO,CAAC;QACJN,IAAI,EAAEM,SAAS;QACfE,KAAK,EAAEH,SAAS,CAACC,SAAS;OAC7B,CAAC;;IAGN,OAAO,EAAE;EACb;EAEA;;;EAGAG,gBAAgBA,CACZL,KAAwB,EACxBC,SAAiC,EACjCK,iBAAyC;IAAA,IAAAC,oBAAA;IAGzC,MAAML,SAAS,GAAG,IAAI,GAAGF,KAAK,CAACG,EAAE;IAEjC,OAAO,CAAC;MACJK,OAAO,EAAER,KAAK,CAACG,EAAE;MACjBC,KAAK,GAAAG,oBAAA,GAAEN,SAAS,CAACC,SAAS,CAAC,cAAAK,oBAAA,cAAAA,oBAAA,GAAI;KAClC,CAAC;EACN;EAEA;;;EAGAE,mBAAmBA,CACfT,KAAwB,EACxBC,SAAiC,EACjCK,iBAAyC;IAAA,IAAAI,qBAAA,EAAAC,qBAAA;IAEzC,MAAMT,SAAS,GAAG,IAAI,GAAGF,KAAK,CAACG,EAAE;IACjC,MAAMS,KAAK,IAAAF,qBAAA,GAAGT,SAAS,CAACC,SAAS,CAAC,cAAAQ,qBAAA,cAAAA,qBAAA,GAAI,EAAE;IACxC,MAAMG,OAAO,IAAAF,qBAAA,GAAGL,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEO,OAAO,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,EAAE;IAEhD,OAAOC,KAAK,KAAKC,OAAO;EAC5B;EAEA;;;EAGAC,sBAAsBA,CAACd,KAAwB,EAAEC,SAAqC;IAClF,IAAID,KAAK,CAACe,QAAQ,KAAK,CAACd,SAAS,IAAI,CAACA,SAAS,CAACe,MAAM,IAAI,CAACf,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,EAAE;MAC5E,OAAOZ,SAAS,CAACyB,OAAO,CAAC,qCAAqC,CAAC;;EAEvE;EAEA;;;EAGAC,YAAYA,CAACC,eAAuC,EAAEC,cAAsC;IAAA,IAAAC,gBAAA;IACxFF,eAAe,CAACN,OAAO,IAAAQ,gBAAA,GAAGD,cAAc,CAAC,EAAE,CAAC,cAAAC,gBAAA,cAAAA,gBAAA,GAAI,EAAE;IAElD,OAAOF,eAAe;EAC1B;EAEA;;;EAGMG,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;;SAnFS7B,mCAAmC;;mBAAnCA,MAAmC;AAAA;;SAAnCA,MAAmC;EAAA8B,OAAA,EAAnC9B,MAAmC,CAAA+B,IAAA;EAAAC,UAAA,EADtB;AAAM;AAuFhC,OAAO,MAAMC,4BAA4B,GAAGpC,aAAa,CAACG,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}