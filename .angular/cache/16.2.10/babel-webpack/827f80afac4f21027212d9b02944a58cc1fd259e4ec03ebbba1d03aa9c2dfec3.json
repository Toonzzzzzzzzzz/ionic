{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { AddonModAssignDefaultSubmissionHandler } from '@addons/mod/assign/services/handlers/default-submission';\nimport { Translate } from '@singletons';\nimport { CoreSitePluginsAssignSubmissionComponent } from '../../components/assign-submission/assign-submission';\n/**\n * Handler to display an assign submission site plugin.\n */\nexport class CoreSitePluginsAssignSubmissionHandler extends AddonModAssignDefaultSubmissionHandler {\n  constructor(name, type, prefix) {\n    super();\n    this.name = name;\n    this.type = type;\n    this.prefix = prefix;\n  }\n  /**\n   * @inheritdoc\n   */\n  getComponent() {\n    return CoreSitePluginsAssignSubmissionComponent;\n  }\n  /**\n   * @inheritdoc\n   */\n  getPluginName(plugin) {\n    // Check if there's a translated string for the plugin.\n    const translationId = this.prefix + 'pluginname';\n    const translation = Translate.instant(translationId);\n    if (translationId != translation) {\n      // Translation found, use it.\n      return translation;\n    }\n    // Fallback to WS string.\n    return plugin.name;\n  }\n}","map":{"version":3,"names":["AddonModAssignDefaultSubmissionHandler","Translate","CoreSitePluginsAssignSubmissionComponent","CoreSitePluginsAssignSubmissionHandler","constructor","name","type","prefix","getComponent","getPluginName","plugin","translationId","translation","instant"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/siteplugins/classes/handlers/assign-submission-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Type } from '@angular/core';\n\nimport { AddonModAssignPlugin } from '@addons/mod/assign/services/assign';\nimport { AddonModAssignDefaultSubmissionHandler } from '@addons/mod/assign/services/handlers/default-submission';\nimport { Translate } from '@singletons';\nimport { CoreSitePluginsAssignSubmissionComponent } from '../../components/assign-submission/assign-submission';\nimport type { AddonModAssignSubmissionPluginBaseComponent } from '@addons/mod/assign/classes/base-submission-plugin-component';\n\n/**\n * Handler to display an assign submission site plugin.\n */\nexport class CoreSitePluginsAssignSubmissionHandler extends AddonModAssignDefaultSubmissionHandler {\n\n    constructor(public name: string, public type: string, protected prefix: string) {\n        super();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getComponent(): Type<AddonModAssignSubmissionPluginBaseComponent> {\n        return CoreSitePluginsAssignSubmissionComponent;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getPluginName(plugin: AddonModAssignPlugin): string {\n        // Check if there's a translated string for the plugin.\n        const translationId = this.prefix + 'pluginname';\n        const translation = Translate.instant(translationId);\n\n        if (translationId != translation) {\n            // Translation found, use it.\n            return translation;\n        }\n\n        // Fallback to WS string.\n        return plugin.name;\n    }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,SAASA,sCAAsC,QAAQ,yDAAyD;AAChH,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,wCAAwC,QAAQ,sDAAsD;AAG/G;;;AAGA,OAAM,MAAOC,sCAAuC,SAAQH,sCAAsC;EAE9FI,YAAmBC,IAAY,EAASC,IAAY,EAAYC,MAAc;IAC1E,KAAK,EAAE;IADQ,KAAAF,IAAI,GAAJA,IAAI;IAAiB,KAAAC,IAAI,GAAJA,IAAI;IAAoB,KAAAC,MAAM,GAANA,MAAM;EAEtE;EAEA;;;EAGAC,YAAYA,CAAA;IACR,OAAON,wCAAwC;EACnD;EAEA;;;EAGAO,aAAaA,CAACC,MAA4B;IACtC;IACA,MAAMC,aAAa,GAAG,IAAI,CAACJ,MAAM,GAAG,YAAY;IAChD,MAAMK,WAAW,GAAGX,SAAS,CAACY,OAAO,CAACF,aAAa,CAAC;IAEpD,IAAIA,aAAa,IAAIC,WAAW,EAAE;MAC9B;MACA,OAAOA,WAAW;;IAGtB;IACA,OAAOF,MAAM,CAACL,IAAI;EACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}