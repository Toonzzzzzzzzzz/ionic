{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { EventEmitter } from '@angular/core';\nimport { CoreFile } from '@services/file';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreIframeUtils } from '@services/utils/iframe';\nimport { CoreUtils } from '@services/utils/utils';\nimport { DomSanitizer, Router, StatusBar } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreScreen, CoreScreenOrientation } from '@services/screen';\nimport { filter } from 'rxjs/operators';\nimport { NavigationStart } from '@angular/router';\nimport { CoreSites } from '@services/sites';\nimport { CoreUrl } from '@singletons/url';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"iframe\"];\nfunction CoreIframeComponent_ng_container_1_core_navbar_buttons_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-navbar-buttons\", 6)(1, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function CoreIframeComponent_ng_container_1_core_navbar_buttons_1_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.toggleFullscreen());\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"ion-icon\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 2, ctx_r1.fullscreen ? \"core.disablefullscreen\" : \"core.fullscreen\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"name\", ctx_r1.fullscreen ? \"fas-compress\" : \"fas-expand\");\n  }\n}\nfunction CoreIframeComponent_ng_container_1_ion_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function CoreIframeComponent_ng_container_1_ion_button_4_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.openIframeHelpModal());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"core.iframehelp\"), \" \");\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"width\": a0,\n    \"height\": a1\n  };\n};\nfunction CoreIframeComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CoreIframeComponent_ng_container_1_core_navbar_buttons_1_Template, 4, 4, \"core-navbar-buttons\", 2);\n    i0.ɵɵelement(2, \"iframe\", 3, 4);\n    i0.ɵɵtemplate(4, CoreIframeComponent_ng_container_1_ion_button_4_Template, 3, 3, \"ion-button\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.initialized && ctx_r0.showFullscreenOnToolbar && !ctx_r0.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"core-iframe-loading\", ctx_r0.loading);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(8, _c1, ctx_r0.iframeWidth, ctx_r0.iframeHeight))(\"src\", ctx_r0.safeUrl, i0.ɵɵsanitizeResourceUrl);\n    i0.ɵɵattribute(\"id\", ctx_r0.id)(\"allowfullscreen\", ctx_r0.allowFullscreen ? \"allowfullscreen\" : null, i0.ɵɵvalidateIframeAttribute);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loading && ctx_r0.displayHelp);\n  }\n}\nexport class CoreIframeComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.id = null;\n    this.allowAutoLogin = true;\n    this.loaded = new EventEmitter();\n    this.displayHelp = false;\n    this.fullscreen = false;\n    this.initialized = false;\n    this.loaded = new EventEmitter();\n    // Listen for messages from the iframe.\n    window.addEventListener('message', this.messageListenerFunction = event => this.onIframeMessage(event));\n  }\n  /**\n   * Init the data.\n   */\n  init() {\n    var _this$iframe,\n      _this = this;\n    if (this.initialized) {\n      return;\n    }\n    const iframe = (_this$iframe = this.iframe) === null || _this$iframe === void 0 ? void 0 : _this$iframe.nativeElement;\n    if (!iframe) {\n      return;\n    }\n    this.initialized = true;\n    this.iframeWidth = this.iframeWidth && CoreDomUtils.formatPixelsSize(this.iframeWidth) || '100%';\n    this.iframeHeight = this.iframeHeight && CoreDomUtils.formatPixelsSize(this.iframeHeight) || '100%';\n    this.allowFullscreen = CoreUtils.isTrueOrOne(this.allowFullscreen);\n    this.showFullscreenOnToolbar = CoreUtils.isTrueOrOne(this.showFullscreenOnToolbar);\n    this.autoFullscreenOnRotate = CoreUtils.isTrueOrOne(this.autoFullscreenOnRotate);\n    if (this.showFullscreenOnToolbar || this.autoFullscreenOnRotate) {\n      var _iframe$closest;\n      // Leave fullscreen when navigating.\n      this.navSubscription = Router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n        if (_this.fullscreen) {\n          _this.toggleFullscreen(false);\n        }\n      }));\n      const shadow = (_iframe$closest = iframe.closest('.ion-page')) === null || _iframe$closest === void 0 || (_iframe$closest = _iframe$closest.querySelector('ion-header ion-toolbar')) === null || _iframe$closest === void 0 ? void 0 : _iframe$closest.shadowRoot;\n      if (shadow) {\n        this.style = document.createElement('style');\n        shadow.appendChild(this.style);\n      }\n      if (this.autoFullscreenOnRotate) {\n        this.toggleFullscreen(CoreScreen.isLandscape);\n        this.orientationObs = CoreEvents.on(CoreEvents.ORIENTATION_CHANGE, data => {\n          if (this.isInHiddenPage()) {\n            return;\n          }\n          this.toggleFullscreen(data.orientation == CoreScreenOrientation.LANDSCAPE);\n        });\n      }\n    }\n    // Show loading only with external URLs.\n    this.loading = !this.src || !CoreUrlUtils.isLocalFileUrl(this.src);\n    CoreIframeUtils.treatFrame(iframe, false);\n    iframe.addEventListener('load', () => {\n      this.loading = false;\n      this.loaded.emit(iframe); // Notify iframe was loaded.\n    });\n\n    iframe.addEventListener('error', () => {\n      this.loading = false;\n      CoreDomUtils.showErrorModal('core.errorloadingcontent', true);\n    });\n    if (this.loading) {\n      setTimeout(() => {\n        this.loading = false;\n      }, CoreIframeComponent.loadingTimeout);\n    }\n  }\n  /**\n   * Check if the element is in a hidden page.\n   *\n   * @returns Whether the element is in a hidden page.\n   */\n  isInHiddenPage() {\n    // If we can't find the parent ion-page, consider it to be hidden too.\n    return !this.elementRef.nativeElement.closest('.ion-page') || !!this.elementRef.nativeElement.closest('.ion-page-hidden');\n  }\n  /**\n   * Detect changes on input properties.\n   */\n  ngOnChanges(changes) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!changes.src) {\n        return;\n      }\n      let url = _this2.src;\n      if (url && !CoreUrlUtils.isLocalFileUrl(url)) {\n        url = CoreUrlUtils.getYoutubeEmbedUrl(url) || url;\n        _this2.displayHelp = CoreIframeUtils.shouldDisplayHelpForUrl(url);\n        const currentSite = CoreSites.getCurrentSite();\n        if (_this2.allowAutoLogin && currentSite) {\n          // Format the URL to add auto-login if needed.\n          url = yield currentSite.getAutoLoginUrl(url, false);\n        }\n        if (currentSite !== null && currentSite !== void 0 && currentSite.isVersionGreaterEqualThan('3.7') && CoreUrl.isVimeoVideoUrl(url)) {\n          var _CoreUrl$getVimeoPlay;\n          // Only treat the Vimeo URL if site is 3.7 or bigger. In older sites the width and height params were mandatory,\n          // and there was no easy way to make the iframe responsive.\n          url = (_CoreUrl$getVimeoPlay = CoreUrl.getVimeoPlayerUrl(url, currentSite)) !== null && _CoreUrl$getVimeoPlay !== void 0 ? _CoreUrl$getVimeoPlay : url;\n        }\n        yield CoreIframeUtils.fixIframeCookies(url);\n      }\n      _this2.safeUrl = DomSanitizer.bypassSecurityTrustResourceUrl(url ? CoreFile.convertFileSrc(url) : '');\n      // Now that the URL has been set, initialize the iframe. Wait for the iframe to the added to the DOM.\n      setTimeout(() => {\n        _this2.init();\n      });\n    })();\n  }\n  /**\n   * Open help modal for iframes.\n   */\n  openIframeHelpModal() {\n    CoreIframeUtils.openIframeHelpModal();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    var _this$orientationObs, _this$navSubscription;\n    (_this$orientationObs = this.orientationObs) === null || _this$orientationObs === void 0 || _this$orientationObs.off();\n    (_this$navSubscription = this.navSubscription) === null || _this$navSubscription === void 0 || _this$navSubscription.unsubscribe();\n    window.removeEventListener('message', this.messageListenerFunction);\n  }\n  /**\n   * Toggle fullscreen mode.\n   */\n  toggleFullscreen(enable, notifyIframe = true) {\n    var _this$iframe2;\n    if (enable !== undefined) {\n      this.fullscreen = enable;\n    } else {\n      this.fullscreen = !this.fullscreen;\n    }\n    this.fullscreen ? StatusBar.hide() : StatusBar.show();\n    if (this.style) {\n      // Done this way because of the shadow DOM.\n      this.style.textContent = this.fullscreen ? '@media screen and (orientation: landscape) {\\\n                    .core-iframe-fullscreen .toolbar-container { flex-direction: column-reverse !important; height: 100%; } }' : '';\n    }\n    document.body.classList.toggle('core-iframe-fullscreen', this.fullscreen);\n    if (notifyIframe && (_this$iframe2 = this.iframe) !== null && _this$iframe2 !== void 0 && _this$iframe2.nativeElement) {\n      var _this$iframe$nativeEl;\n      (_this$iframe$nativeEl = this.iframe.nativeElement.contentWindow) === null || _this$iframe$nativeEl === void 0 || _this$iframe$nativeEl.postMessage(this.fullscreen ? 'enterFullScreen' : 'exitFullScreen', '*');\n    }\n  }\n  /**\n   * Treat an iframe message event.\n   *\n   * @param event Event.\n   * @returns Promise resolved when done.\n   */\n  onIframeMessage(event) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (event.data == 'enterFullScreen' && _this3.showFullscreenOnToolbar && !_this3.fullscreen) {\n        _this3.toggleFullscreen(true, false);\n      } else if (event.data == 'exitFullScreen' && _this3.fullscreen) {\n        _this3.toggleFullscreen(false, false);\n      }\n    })();\n  }\n}\n_class = CoreIframeComponent;\n_class.loadingTimeout = 15000;\n_class.ɵfac = function CoreIframeComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-iframe\"]],\n  viewQuery: function CoreIframeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iframe = _t.first);\n    }\n  },\n  inputs: {\n    src: \"src\",\n    id: \"id\",\n    iframeWidth: \"iframeWidth\",\n    iframeHeight: \"iframeHeight\",\n    allowFullscreen: \"allowFullscreen\",\n    showFullscreenOnToolbar: \"showFullscreenOnToolbar\",\n    autoFullscreenOnRotate: \"autoFullscreenOnRotate\",\n    allowAutoLogin: \"allowAutoLogin\"\n  },\n  outputs: {\n    loaded: \"loaded\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"hideUntil\"], [4, \"ngIf\"], [\"slot\", \"end\", \"prepend\", \"\", 4, \"ngIf\"], [1, \"core-iframe\", 3, \"ngStyle\", \"src\"], [\"iframe\", \"\"], [\"expand\", \"block\", \"fill\", \"clear\", \"aria-haspopup\", \"dialog\", \"class\", \"core-button-as-link core-iframe-help\", 3, \"click\", 4, \"ngIf\"], [\"slot\", \"end\", \"prepend\", \"\"], [\"fill\", \"clear\", 3, \"click\"], [\"slot\", \"icon-only\", \"aria-hidden\", \"true\", 3, \"name\"], [\"expand\", \"block\", \"fill\", \"clear\", \"aria-haspopup\", \"dialog\", 1, \"core-button-as-link\", \"core-iframe-help\", 3, \"click\"]],\n  template: function CoreIframeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"core-loading\", 0);\n      i0.ɵɵtemplate(1, CoreIframeComponent_ng_container_1_Template, 5, 11, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"hideUntil\", !ctx.loading && ctx.safeUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.safeUrl);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n  flex-grow: 1;\\n}\\n[_nghost-%COMP%]   .core-iframe-loading[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.core-iframe-fullscreen[_nghost-%COMP%], .core-iframe-fullscreen   [_nghost-%COMP%] {\\n  position: absolute;\\n  top: 0px;\\n  bottom: 0px;\\n  left: 0px;\\n  right: 0px;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 9999;\\n}\\n\\n.limited-width    > :not([slot])[_nghost-%COMP%], .limited-width    > :not([slot])   [_nghost-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2NvbXBvbmVudHMvaWZyYW1lL2lmcmFtZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKO0FBQ0k7RUFDSSxhQUFBO0FBQ1I7O0FBR0E7RUFDSSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxXQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUFBSjs7QUFHQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtBQUFKIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIGZsZXgtZ3JvdzogMTtcblxuICAgIC5jb3JlLWlmcmFtZS1sb2FkaW5nIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG5cbjpob3N0LWNvbnRleHQoLmNvcmUtaWZyYW1lLWZ1bGxzY3JlZW4pIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwcHg7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHotaW5kZXg6IDk5OTk7XG59XG5cbjpob3N0LWNvbnRleHQoLmxpbWl0ZWQtd2lkdGggPiA6bm90KFtzbG90XSkpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["EventEmitter","CoreFile","CoreDomUtils","CoreUrlUtils","CoreIframeUtils","CoreUtils","DomSanitizer","Router","StatusBar","CoreEvents","CoreScreen","CoreScreenOrientation","filter","NavigationStart","CoreSites","CoreUrl","i0","ɵɵelementStart","ɵɵlistener","CoreIframeComponent_ng_container_1_core_navbar_buttons_1_Template_ion_button_click_1_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","toggleFullscreen","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵattribute","ɵɵpipeBind1","ctx_r1","fullscreen","ɵɵproperty","CoreIframeComponent_ng_container_1_ion_button_4_Template_ion_button_click_0_listener","_r7","ctx_r6","openIframeHelpModal","ɵɵtext","ɵɵtextInterpolate1","ɵɵelementContainerStart","ɵɵtemplate","CoreIframeComponent_ng_container_1_core_navbar_buttons_1_Template","CoreIframeComponent_ng_container_1_ion_button_4_Template","ɵɵelementContainerEnd","ctx_r0","initialized","showFullscreenOnToolbar","loading","ɵɵclassProp","ɵɵpureFunction2","_c1","iframeWidth","iframeHeight","safeUrl","ɵɵsanitizeResourceUrl","id","allowFullscreen","ɵɵvalidateIframeAttribute","displayHelp","CoreIframeComponent","constructor","elementRef","allowAutoLogin","loaded","window","addEventListener","messageListenerFunction","event","onIframeMessage","init","_this$iframe","_this","iframe","nativeElement","formatPixelsSize","isTrueOrOne","autoFullscreenOnRotate","_iframe$closest","navSubscription","events","pipe","subscribe","_asyncToGenerator","shadow","closest","querySelector","shadowRoot","style","document","createElement","appendChild","isLandscape","orientationObs","on","ORIENTATION_CHANGE","data","isInHiddenPage","orientation","LANDSCAPE","src","isLocalFileUrl","treatFrame","emit","showErrorModal","setTimeout","loadingTimeout","ngOnChanges","changes","_this2","url","getYoutubeEmbedUrl","shouldDisplayHelpForUrl","currentSite","getCurrentSite","getAutoLoginUrl","isVersionGreaterEqualThan","isVimeoVideoUrl","_CoreUrl$getVimeoPlay","getVimeoPlayerUrl","fixIframeCookies","bypassSecurityTrustResourceUrl","convertFileSrc","ngOnDestroy","_this$orientationObs","_this$navSubscription","off","unsubscribe","removeEventListener","enable","notifyIframe","_this$iframe2","undefined","hide","show","textContent","body","classList","toggle","_this$iframe$nativeEl","contentWindow","postMessage","_this3","_class","ɵɵdirectiveInject","ElementRef","selectors","viewQuery","CoreIframeComponent_Query","rf","ctx","CoreIframeComponent_ng_container_1_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/iframe/iframe.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/components/iframe/core-iframe.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    Component, Input, Output, ViewChild, ElementRef, EventEmitter, OnChanges, SimpleChange, OnDestroy,\n} from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n\nimport { CoreFile } from '@services/file';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreIframeUtils } from '@services/utils/iframe';\nimport { CoreUtils } from '@services/utils/utils';\nimport { DomSanitizer, Router, StatusBar } from '@singletons';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreScreen, CoreScreenOrientation } from '@services/screen';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NavigationStart } from '@angular/router';\nimport { CoreSites } from '@services/sites';\nimport { CoreUrl } from '@singletons/url';\n\n@Component({\n    selector: 'core-iframe',\n    templateUrl: 'core-iframe.html',\n    styleUrls: ['iframe.scss'],\n})\nexport class CoreIframeComponent implements OnChanges, OnDestroy {\n\n    static loadingTimeout = 15000;\n\n    @ViewChild('iframe') iframe?: ElementRef;\n    @Input() src?: string;\n    @Input() id: string | null = null;\n    @Input() iframeWidth?: string;\n    @Input() iframeHeight?: string;\n    @Input() allowFullscreen?: boolean | string;\n    @Input() showFullscreenOnToolbar?: boolean | string;\n    @Input() autoFullscreenOnRotate?: boolean | string;\n    @Input() allowAutoLogin = true;\n    @Output() loaded: EventEmitter<HTMLIFrameElement> = new EventEmitter<HTMLIFrameElement>();\n\n    loading?: boolean;\n    safeUrl?: SafeResourceUrl;\n    displayHelp = false;\n    fullscreen = false;\n\n    initialized = false;\n\n    protected style?: HTMLStyleElement;\n    protected orientationObs?: CoreEventObserver;\n    protected navSubscription?: Subscription;\n    protected messageListenerFunction: (event: MessageEvent) => Promise<void>;\n\n    constructor(protected elementRef: ElementRef<HTMLElement>) {\n        this.loaded = new EventEmitter<HTMLIFrameElement>();\n\n        // Listen for messages from the iframe.\n        window.addEventListener('message', this.messageListenerFunction = (event) => this.onIframeMessage(event));\n    }\n\n    /**\n     * Init the data.\n     */\n    protected init(): void {\n        if (this.initialized) {\n            return;\n        }\n\n        const iframe: HTMLIFrameElement | undefined = this.iframe?.nativeElement;\n        if (!iframe) {\n            return;\n        }\n\n        this.initialized = true;\n\n        this.iframeWidth = (this.iframeWidth && CoreDomUtils.formatPixelsSize(this.iframeWidth)) || '100%';\n        this.iframeHeight = (this.iframeHeight && CoreDomUtils.formatPixelsSize(this.iframeHeight)) || '100%';\n        this.allowFullscreen = CoreUtils.isTrueOrOne(this.allowFullscreen);\n        this.showFullscreenOnToolbar = CoreUtils.isTrueOrOne(this.showFullscreenOnToolbar);\n        this.autoFullscreenOnRotate = CoreUtils.isTrueOrOne(this.autoFullscreenOnRotate);\n\n        if (this.showFullscreenOnToolbar || this.autoFullscreenOnRotate) {\n            // Leave fullscreen when navigating.\n            this.navSubscription = Router.events\n                .pipe(filter(event => event instanceof NavigationStart))\n                .subscribe(async () => {\n                    if (this.fullscreen) {\n                        this.toggleFullscreen(false);\n                    }\n                });\n\n            const shadow =\n                iframe.closest('.ion-page')?.querySelector('ion-header ion-toolbar')?.shadowRoot;\n            if (shadow) {\n                this.style = document.createElement('style');\n                shadow.appendChild(this.style);\n            }\n\n            if (this.autoFullscreenOnRotate) {\n                this.toggleFullscreen(CoreScreen.isLandscape);\n\n                this.orientationObs = CoreEvents.on(CoreEvents.ORIENTATION_CHANGE, (data) => {\n                    if (this.isInHiddenPage()) {\n                        return;\n                    }\n\n                    this.toggleFullscreen(data.orientation == CoreScreenOrientation.LANDSCAPE);\n                });\n            }\n        }\n\n        // Show loading only with external URLs.\n        this.loading = !this.src || !CoreUrlUtils.isLocalFileUrl(this.src);\n\n        CoreIframeUtils.treatFrame(iframe, false);\n\n        iframe.addEventListener('load', () => {\n            this.loading = false;\n            this.loaded.emit(iframe); // Notify iframe was loaded.\n        });\n\n        iframe.addEventListener('error', () => {\n            this.loading = false;\n            CoreDomUtils.showErrorModal('core.errorloadingcontent', true);\n        });\n\n        if (this.loading) {\n            setTimeout(() => {\n                this.loading = false;\n            }, CoreIframeComponent.loadingTimeout);\n        }\n    }\n\n    /**\n     * Check if the element is in a hidden page.\n     *\n     * @returns Whether the element is in a hidden page.\n     */\n    protected isInHiddenPage(): boolean {\n        // If we can't find the parent ion-page, consider it to be hidden too.\n        return !this.elementRef.nativeElement.closest('.ion-page') || !!this.elementRef.nativeElement.closest('.ion-page-hidden');\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    async ngOnChanges(changes: {[name: string]: SimpleChange }): Promise<void> {\n        if (!changes.src) {\n            return;\n        }\n\n        let url = this.src;\n\n        if (url && !CoreUrlUtils.isLocalFileUrl(url)) {\n            url = CoreUrlUtils.getYoutubeEmbedUrl(url) || url;\n            this.displayHelp = CoreIframeUtils.shouldDisplayHelpForUrl(url);\n\n            const currentSite = CoreSites.getCurrentSite();\n            if (this.allowAutoLogin && currentSite) {\n                // Format the URL to add auto-login if needed.\n                url = await currentSite.getAutoLoginUrl(url, false);\n            }\n\n            if (currentSite?.isVersionGreaterEqualThan('3.7') && CoreUrl.isVimeoVideoUrl(url)) {\n                // Only treat the Vimeo URL if site is 3.7 or bigger. In older sites the width and height params were mandatory,\n                // and there was no easy way to make the iframe responsive.\n                url = CoreUrl.getVimeoPlayerUrl(url, currentSite) ?? url;\n            }\n\n            await CoreIframeUtils.fixIframeCookies(url);\n        }\n\n        this.safeUrl = DomSanitizer.bypassSecurityTrustResourceUrl(url ? CoreFile.convertFileSrc(url) : '');\n\n        // Now that the URL has been set, initialize the iframe. Wait for the iframe to the added to the DOM.\n        setTimeout(() => {\n            this.init();\n        });\n    }\n\n    /**\n     * Open help modal for iframes.\n     */\n    openIframeHelpModal(): void {\n        CoreIframeUtils.openIframeHelpModal();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.orientationObs?.off();\n        this.navSubscription?.unsubscribe();\n        window.removeEventListener('message', this.messageListenerFunction);\n    }\n\n    /**\n     * Toggle fullscreen mode.\n     */\n    toggleFullscreen(enable?: boolean, notifyIframe = true): void {\n        if (enable !== undefined) {\n            this.fullscreen = enable;\n        } else {\n            this.fullscreen = !this.fullscreen;\n        }\n\n        this.fullscreen ? StatusBar.hide() : StatusBar.show();\n\n        if (this.style) {\n            // Done this way because of the shadow DOM.\n            this.style.textContent = this.fullscreen\n                ? '@media screen and (orientation: landscape) {\\\n                    .core-iframe-fullscreen .toolbar-container { flex-direction: column-reverse !important; height: 100%; } }'\n                : '';\n        }\n\n        document.body.classList.toggle('core-iframe-fullscreen', this.fullscreen);\n\n        if (notifyIframe && this.iframe?.nativeElement) {\n            (<HTMLIFrameElement> this.iframe.nativeElement).contentWindow?.postMessage(\n                this.fullscreen ? 'enterFullScreen' : 'exitFullScreen',\n                '*',\n            );\n        }\n    }\n\n    /**\n     * Treat an iframe message event.\n     *\n     * @param event Event.\n     * @returns Promise resolved when done.\n     */\n    protected async onIframeMessage(event: MessageEvent): Promise<void> {\n        if (event.data == 'enterFullScreen' && this.showFullscreenOnToolbar && !this.fullscreen) {\n            this.toggleFullscreen(true, false);\n        } else if (event.data == 'exitFullScreen' && this.fullscreen) {\n            this.toggleFullscreen(false, false);\n        }\n    }\n\n}\n","<!-- Display a loading until the iframe page is loaded. -->\n<core-loading [hideUntil]=\"!loading && safeUrl\" />\n\n<!--The iframe needs to be outside of core-loading, otherwise the request is canceled while loading. -->\n<!-- Don't add the iframe until safeUrl is set, adding an iframe with null as src causes the iframe to load the whole app. -->\n<ng-container *ngIf=\"safeUrl\">\n    <core-navbar-buttons slot=\"end\" prepend *ngIf=\"initialized && showFullscreenOnToolbar && !loading\">\n        <ion-button fill=\"clear\" (click)=\"toggleFullscreen()\"\n            [attr.aria-label]=\"(fullscreen ? 'core.disablefullscreen' : 'core.fullscreen') | translate\">\n            <ion-icon [name]=\"fullscreen ? 'fas-compress' : 'fas-expand'\" slot=\"icon-only\" aria-hidden=\"true\" />\n        </ion-button>\n    </core-navbar-buttons>\n\n    <iframe #iframe class=\"core-iframe\" [attr.id]=\"id\" [ngStyle]=\"{'width': iframeWidth, 'height': iframeHeight}\" [src]=\"safeUrl\"\n        [attr.allowfullscreen]=\"allowFullscreen ? 'allowfullscreen' : null\" [class.core-iframe-loading]=\"loading\">\n    </iframe>\n\n    <ion-button *ngIf=\"!loading && displayHelp\" expand=\"block\" fill=\"clear\" (click)=\"openIframeHelpModal()\" aria-haspopup=\"dialog\"\n        class=\"core-button-as-link core-iframe-help\">\n        {{ 'core.iframehelp' | translate }}\n    </ion-button>\n</ng-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}