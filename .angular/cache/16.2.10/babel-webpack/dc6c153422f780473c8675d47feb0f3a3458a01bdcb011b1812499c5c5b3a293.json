{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { AddonModAssign } from '@addons/mod/assign/services/assign';\nimport { makeSingleton } from '@singletons';\nimport { AddonModAssignFeedbackEditPdfComponent } from '../component/editpdf';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler for edit pdf feedback plugin.\n */\nexport class AddonModAssignFeedbackEditPdfHandlerService {\n  constructor() {\n    this.name = 'AddonModAssignFeedbackEditPdfHandler';\n    this.type = 'editpdf';\n  }\n  /**\n   * Return the Component to use to display the plugin data.\n   * It's recommended to return the class of the component, but you can also return an instance of the component.\n   *\n   * @returns The component (or promise resolved with component) to use, undefined if not found.\n   */\n  getComponent() {\n    return AddonModAssignFeedbackEditPdfComponent;\n  }\n  /**\n   * Get files used by this plugin.\n   * The files returned by this function will be prefetched when the user prefetches the assign.\n   *\n   * @param assign The assignment.\n   * @param submission The submission.\n   * @param plugin The plugin object.\n   * @returns The files (or promise resolved with the files).\n   */\n  getPluginFiles(assign, submission, plugin) {\n    return AddonModAssign.getSubmissionPluginAttachments(plugin);\n  }\n  /**\n   * Whether or not the handler is enabled on a site level.\n   *\n   * @returns True or promise resolved with true if enabled.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n}\n_class = AddonModAssignFeedbackEditPdfHandlerService;\n_class.ɵfac = function AddonModAssignFeedbackEditPdfHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModAssignFeedbackEditPdfHandler = makeSingleton(AddonModAssignFeedbackEditPdfHandlerService);","map":{"version":3,"names":["AddonModAssign","makeSingleton","AddonModAssignFeedbackEditPdfComponent","AddonModAssignFeedbackEditPdfHandlerService","constructor","name","type","getComponent","getPluginFiles","assign","submission","plugin","getSubmissionPluginAttachments","isEnabled","_asyncToGenerator","factory","ɵfac","providedIn","AddonModAssignFeedbackEditPdfHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/feedback/editpdf/services/handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    AddonModAssignPlugin,\n    AddonModAssignAssign,\n    AddonModAssignSubmission,\n    AddonModAssign,\n} from '@addons/mod/assign/services/assign';\nimport { AddonModAssignFeedbackHandler } from '@addons/mod/assign/services/feedback-delegate';\nimport { Injectable, Type } from '@angular/core';\nimport { CoreWSFile } from '@services/ws';\nimport { makeSingleton } from '@singletons';\nimport { AddonModAssignFeedbackEditPdfComponent } from '../component/editpdf';\nimport type { IAddonModAssignFeedbackPluginComponent } from '@addons/mod/assign/classes/base-feedback-plugin-component';\n\n/**\n * Handler for edit pdf feedback plugin.\n */\n@Injectable( { providedIn: 'root' })\nexport class AddonModAssignFeedbackEditPdfHandlerService implements AddonModAssignFeedbackHandler {\n\n    name = 'AddonModAssignFeedbackEditPdfHandler';\n    type = 'editpdf';\n\n    /**\n     * Return the Component to use to display the plugin data.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @returns The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(): Type<IAddonModAssignFeedbackPluginComponent> {\n        return AddonModAssignFeedbackEditPdfComponent;\n    }\n\n    /**\n     * Get files used by this plugin.\n     * The files returned by this function will be prefetched when the user prefetches the assign.\n     *\n     * @param assign The assignment.\n     * @param submission The submission.\n     * @param plugin The plugin object.\n     * @returns The files (or promise resolved with the files).\n     */\n    getPluginFiles(\n        assign: AddonModAssignAssign,\n        submission: AddonModAssignSubmission,\n        plugin: AddonModAssignPlugin,\n    ): CoreWSFile[] {\n        return AddonModAssign.getSubmissionPluginAttachments(plugin);\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @returns True or promise resolved with true if enabled.\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n}\nexport const AddonModAssignFeedbackEditPdfHandler = makeSingleton(AddonModAssignFeedbackEditPdfHandlerService);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAIIA,cAAc,QACX,oCAAoC;AAI3C,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,sCAAsC,QAAQ,sBAAsB;;AAG7E;;;AAIA,OAAM,MAAOC,2CAA2C;EADxDC,YAAA;IAGI,KAAAC,IAAI,GAAG,sCAAsC;IAC7C,KAAAC,IAAI,GAAG,SAAS;;EAEhB;;;;;;EAMAC,YAAYA,CAAA;IACR,OAAOL,sCAAsC;EACjD;EAEA;;;;;;;;;EASAM,cAAcA,CACVC,MAA4B,EAC5BC,UAAoC,EACpCC,MAA4B;IAE5B,OAAOX,cAAc,CAACY,8BAA8B,CAACD,MAAM,CAAC;EAChE;EAEA;;;;;EAKME,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;;SAvCSX,2CAA2C;;mBAA3CA,MAA2C;AAAA;;SAA3CA,MAA2C;EAAAY,OAAA,EAA3CZ,MAA2C,CAAAa,IAAA;EAAAC,UAAA,EAD7B;AAAM;AA2CjC,OAAO,MAAMC,oCAAoC,GAAGjB,aAAa,CAACE,2CAA2C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}