{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordovaPropertyGet, cordovaPropertySet } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar WebView = /** @class */function (_super) {\n  __extends(WebView, _super);\n  function WebView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(WebView.prototype, \"convertFileSrc\", {\n    get: function () {\n      return cordovaPropertyGet(this, \"convertFileSrc\");\n    },\n    set: function (value) {\n      cordovaPropertySet(this, \"convertFileSrc\", value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  WebView.ɵfac = /* @__PURE__ */function () {\n    let ɵWebView_BaseFactory;\n    return function WebView_Factory(t) {\n      return (ɵWebView_BaseFactory || (ɵWebView_BaseFactory = i0.ɵɵgetInheritedFactory(WebView)))(t || WebView);\n    };\n  }();\n  WebView.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: WebView,\n    factory: WebView.ɵfac\n  });\n  WebView.pluginName = \"WebView\";\n  WebView.plugin = \"cordova-plugin-ionic-webview\";\n  WebView.pluginRef = \"window.Ionic.WebView\";\n  WebView.repo = \"https://github.com/ionic-team/cordova-plugin-ionic-webview\";\n  WebView.platforms = [\"Android\", \"iOS\"];\n  WebView.install = \"ionic cordova plugin add cordova-plugin-ionic-webview\";\n  WebView = __decorate([], WebView);\n  return WebView;\n}(AwesomeCordovaNativePlugin);\nexport { WebView };\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WebView, [{\n    type: Injectable\n  }], null, {\n    convertFileSrc: []\n  });\n})();","map":{"version":3,"names":["__decorate","__extends","Injectable","AwesomeCordovaNativePlugin","cordovaPropertyGet","cordovaPropertySet","i0","WebView","_super","apply","arguments","Object","defineProperty","prototype","get","set","value","enumerable","configurable","ɵfac","ɵWebView_BaseFactory","WebView_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","pluginName","plugin","pluginRef","repo","platforms","install","ngDevMode","ɵsetClassMetadata","type","convertFileSrc"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@awesome-cordova-plugins/ionic-webview/ngx/index.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordovaPropertyGet, cordovaPropertySet } from '@awesome-cordova-plugins/core';\nimport * as i0 from \"@angular/core\";\nvar WebView = /** @class */ (function (_super) {\n    __extends(WebView, _super);\n    function WebView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebView.prototype, \"convertFileSrc\", {\n        get: function () { return cordovaPropertyGet(this, \"convertFileSrc\"); },\n        set: function (value) { cordovaPropertySet(this, \"convertFileSrc\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    WebView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WebView, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    WebView.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WebView });\n    WebView.pluginName = \"WebView\";\n    WebView.plugin = \"cordova-plugin-ionic-webview\";\n    WebView.pluginRef = \"window.Ionic.WebView\";\n    WebView.repo = \"https://github.com/ionic-team/cordova-plugin-ionic-webview\";\n    WebView.platforms = [\"Android\", \"iOS\"];\n    WebView.install = \"ionic cordova plugin add cordova-plugin-ionic-webview\";\n    WebView = __decorate([], WebView);\n    return WebView;\n}(AwesomeCordovaNativePlugin));\nexport { WebView };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: WebView, decorators: [{\n            type: Injectable\n        }], propDecorators: { convertFileSrc: [] } });\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,0BAA0B,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,+BAA+B;AAClH,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,IAAIC,OAAO,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC3CP,SAAS,CAACM,OAAO,EAAEC,MAAM,CAAC;EAC1B,SAASD,OAAOA,CAAA,EAAG;IACf,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAC,MAAM,CAACC,cAAc,CAACL,OAAO,CAACM,SAAS,EAAE,gBAAgB,EAAE;IACvDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAOV,kBAAkB,CAAC,IAAI,EAAE,gBAAgB,CAAC;IAAE,CAAC;IACvEW,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAAEX,kBAAkB,CAAC,IAAI,EAAE,gBAAgB,EAAEW,KAAK,CAAC;IAAE,CAAC;IAC5EC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFX,OAAO,CAACY,IAAI;IAAA,IAAAC,oBAAA;IAAA,gBAAAC,gBAAAC,CAAA;MAAA,QAAAF,oBAAA,KAAAA,oBAAA,GAA+Ed,EAAE,CAAAiB,qBAAA,CAAQhB,OAAO,IAAAe,CAAA,IAAPf,OAAO;IAAA;EAAA,GAAsD;EAClKA,OAAO,CAACiB,KAAK,kBAD8ElB,EAAE,CAAAmB,kBAAA;IAAAC,KAAA,EACYnB,OAAO;IAAAoB,OAAA,EAAPpB,OAAO,CAAAY;EAAA,EAAG;EACnHZ,OAAO,CAACqB,UAAU,GAAG,SAAS;EAC9BrB,OAAO,CAACsB,MAAM,GAAG,8BAA8B;EAC/CtB,OAAO,CAACuB,SAAS,GAAG,sBAAsB;EAC1CvB,OAAO,CAACwB,IAAI,GAAG,4DAA4D;EAC3ExB,OAAO,CAACyB,SAAS,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC;EACtCzB,OAAO,CAAC0B,OAAO,GAAG,uDAAuD;EACzE1B,OAAO,GAAGP,UAAU,CAAC,EAAE,EAAEO,OAAO,CAAC;EACjC,OAAOA,OAAO;AAClB,CAAC,CAACJ,0BAA0B,CAAE;AAC9B,SAASI,OAAO;AAChB;EAAA,QAAA2B,SAAA,oBAAAA,SAAA,KAZ+F5B,EAAE,CAAA6B,iBAAA,CAYL5B,OAAO,EAAc,CAAC;IACtG6B,IAAI,EAAElC;EACV,CAAC,CAAC,QAAkB;IAAEmC,cAAc,EAAE;EAAG,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}