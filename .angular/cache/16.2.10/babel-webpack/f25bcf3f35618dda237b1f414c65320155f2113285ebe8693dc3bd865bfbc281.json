{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { AddonCompetencyProvider } from './competency';\nimport { CoreUser } from '@features/user/services/user';\nimport { makeSingleton, Translate } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Service that provides some features regarding learning plans.\n */\nexport class AddonCompetencyHelperProvider {\n  /**\n   * Convenient helper to get the user profile image.\n   *\n   * @param userId User Id\n   * @returns User profile Image URL or true if default icon.\n   */\n  getProfile(userId) {\n    return _asyncToGenerator(function* () {\n      if (!userId || userId == CoreSites.getCurrentSiteUserId()) {\n        return;\n      }\n      // Get the user profile to retrieve the user image.\n      return CoreUser.getProfile(userId, undefined, true);\n    })();\n  }\n  /**\n   * Get the review status name translated.\n   *\n   * @param status Competency Status name.\n   * @returns The status name translated.\n   * @todo Move statutes into an enum.\n   */\n  getCompetencyStatusName(status) {\n    let statusTranslateName;\n    switch (status) {\n      case AddonCompetencyProvider.REVIEW_STATUS_IDLE:\n        statusTranslateName = 'idle';\n        break;\n      case AddonCompetencyProvider.REVIEW_STATUS_IN_REVIEW:\n        statusTranslateName = 'inreview';\n        break;\n      case AddonCompetencyProvider.REVIEW_STATUS_WAITING_FOR_REVIEW:\n        statusTranslateName = 'waitingforreview';\n        break;\n      default:\n        // We can use the current status name.\n        return String(status);\n    }\n    return Translate.instant('addon.competency.usercompetencystatus_' + statusTranslateName);\n  }\n  /**\n   * Get the status name translated.\n   *\n   * @param status Plan Status name.\n   * @returns The status name translated.\n   * @todo Move statutes into an enum.\n   */\n  getPlanStatusName(status) {\n    let statusTranslateName;\n    switch (status) {\n      case AddonCompetencyProvider.STATUS_DRAFT:\n        statusTranslateName = 'draft';\n        break;\n      case AddonCompetencyProvider.STATUS_ACTIVE:\n        statusTranslateName = 'active';\n        break;\n      case AddonCompetencyProvider.STATUS_COMPLETE:\n        statusTranslateName = 'complete';\n        break;\n      case AddonCompetencyProvider.STATUS_WAITING_FOR_REVIEW:\n        statusTranslateName = 'waitingforreview';\n        break;\n      case AddonCompetencyProvider.STATUS_IN_REVIEW:\n        statusTranslateName = 'inreview';\n        break;\n      default:\n        // We can use the current status name.\n        return String(status);\n    }\n    return Translate.instant('addon.competency.planstatus' + statusTranslateName);\n  }\n}\n_class = AddonCompetencyHelperProvider;\n_class.ɵfac = function AddonCompetencyHelperProvider_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonCompetencyHelper = makeSingleton(AddonCompetencyHelperProvider);","map":{"version":3,"names":["CoreSites","AddonCompetencyProvider","CoreUser","makeSingleton","Translate","AddonCompetencyHelperProvider","getProfile","userId","_asyncToGenerator","getCurrentSiteUserId","undefined","getCompetencyStatusName","status","statusTranslateName","REVIEW_STATUS_IDLE","REVIEW_STATUS_IN_REVIEW","REVIEW_STATUS_WAITING_FOR_REVIEW","String","instant","getPlanStatusName","STATUS_DRAFT","STATUS_ACTIVE","STATUS_COMPLETE","STATUS_WAITING_FOR_REVIEW","STATUS_IN_REVIEW","factory","ɵfac","providedIn","AddonCompetencyHelper"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/services/competency-helper.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSites } from '@services/sites';\nimport { AddonCompetencyProvider } from './competency';\nimport { CoreUser, CoreUserProfile } from '@features/user/services/user';\nimport { makeSingleton, Translate } from '@singletons';\n\n/**\n * Service that provides some features regarding learning plans.\n */\n@Injectable( { providedIn: 'root' })\nexport class AddonCompetencyHelperProvider {\n\n    /**\n     * Convenient helper to get the user profile image.\n     *\n     * @param userId User Id\n     * @returns User profile Image URL or true if default icon.\n     */\n    async getProfile(userId?: number): Promise<CoreUserProfile | undefined> {\n        if (!userId || userId == CoreSites.getCurrentSiteUserId()) {\n            return;\n        }\n\n        // Get the user profile to retrieve the user image.\n        return CoreUser.getProfile(userId, undefined, true);\n    }\n\n    /**\n     * Get the review status name translated.\n     *\n     * @param status Competency Status name.\n     * @returns The status name translated.\n     * @todo Move statutes into an enum.\n     */\n    getCompetencyStatusName(status: number): string {\n        let statusTranslateName: string;\n        switch (status) {\n            case AddonCompetencyProvider.REVIEW_STATUS_IDLE:\n                statusTranslateName = 'idle';\n                break;\n            case AddonCompetencyProvider.REVIEW_STATUS_IN_REVIEW:\n                statusTranslateName = 'inreview';\n                break;\n            case AddonCompetencyProvider.REVIEW_STATUS_WAITING_FOR_REVIEW:\n                statusTranslateName = 'waitingforreview';\n                break;\n            default:\n                // We can use the current status name.\n                return String(status);\n        }\n\n        return Translate.instant('addon.competency.usercompetencystatus_' + statusTranslateName);\n    }\n\n    /**\n     * Get the status name translated.\n     *\n     * @param status Plan Status name.\n     * @returns The status name translated.\n     * @todo Move statutes into an enum.\n     */\n    getPlanStatusName(status: number): string {\n        let statusTranslateName: string;\n        switch (status) {\n            case AddonCompetencyProvider.STATUS_DRAFT:\n                statusTranslateName = 'draft';\n                break;\n            case AddonCompetencyProvider.STATUS_ACTIVE:\n                statusTranslateName = 'active';\n                break;\n            case AddonCompetencyProvider.STATUS_COMPLETE:\n                statusTranslateName = 'complete';\n                break;\n            case AddonCompetencyProvider.STATUS_WAITING_FOR_REVIEW:\n                statusTranslateName = 'waitingforreview';\n                break;\n            case AddonCompetencyProvider.STATUS_IN_REVIEW:\n                statusTranslateName = 'inreview';\n                break;\n            default:\n                // We can use the current status name.\n                return String(status);\n        }\n\n        return Translate.instant('addon.competency.planstatus' + statusTranslateName);\n    }\n\n}\nexport const AddonCompetencyHelper = makeSingleton(AddonCompetencyHelperProvider);\n"],"mappings":";;AAeA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,uBAAuB,QAAQ,cAAc;AACtD,SAASC,QAAQ,QAAyB,8BAA8B;AACxE,SAASC,aAAa,EAAEC,SAAS,QAAQ,aAAa;;AAEtD;;;AAIA,OAAM,MAAOC,6BAA6B;EAEtC;;;;;;EAMMC,UAAUA,CAACC,MAAe;IAAA,OAAAC,iBAAA;MAC5B,IAAI,CAACD,MAAM,IAAIA,MAAM,IAAIP,SAAS,CAACS,oBAAoB,EAAE,EAAE;QACvD;;MAGJ;MACA,OAAOP,QAAQ,CAACI,UAAU,CAACC,MAAM,EAAEG,SAAS,EAAE,IAAI,CAAC;IAAC;EACxD;EAEA;;;;;;;EAOAC,uBAAuBA,CAACC,MAAc;IAClC,IAAIC,mBAA2B;IAC/B,QAAQD,MAAM;MACV,KAAKX,uBAAuB,CAACa,kBAAkB;QAC3CD,mBAAmB,GAAG,MAAM;QAC5B;MACJ,KAAKZ,uBAAuB,CAACc,uBAAuB;QAChDF,mBAAmB,GAAG,UAAU;QAChC;MACJ,KAAKZ,uBAAuB,CAACe,gCAAgC;QACzDH,mBAAmB,GAAG,kBAAkB;QACxC;MACJ;QACI;QACA,OAAOI,MAAM,CAACL,MAAM,CAAC;;IAG7B,OAAOR,SAAS,CAACc,OAAO,CAAC,wCAAwC,GAAGL,mBAAmB,CAAC;EAC5F;EAEA;;;;;;;EAOAM,iBAAiBA,CAACP,MAAc;IAC5B,IAAIC,mBAA2B;IAC/B,QAAQD,MAAM;MACV,KAAKX,uBAAuB,CAACmB,YAAY;QACrCP,mBAAmB,GAAG,OAAO;QAC7B;MACJ,KAAKZ,uBAAuB,CAACoB,aAAa;QACtCR,mBAAmB,GAAG,QAAQ;QAC9B;MACJ,KAAKZ,uBAAuB,CAACqB,eAAe;QACxCT,mBAAmB,GAAG,UAAU;QAChC;MACJ,KAAKZ,uBAAuB,CAACsB,yBAAyB;QAClDV,mBAAmB,GAAG,kBAAkB;QACxC;MACJ,KAAKZ,uBAAuB,CAACuB,gBAAgB;QACzCX,mBAAmB,GAAG,UAAU;QAChC;MACJ;QACI;QACA,OAAOI,MAAM,CAACL,MAAM,CAAC;;IAG7B,OAAOR,SAAS,CAACc,OAAO,CAAC,6BAA6B,GAAGL,mBAAmB,CAAC;EACjF;;SA3ESR,6BAA6B;;mBAA7BA,MAA6B;AAAA;;SAA7BA,MAA6B;EAAAoB,OAAA,EAA7BpB,MAA6B,CAAAqB,IAAA;EAAAC,UAAA,EADf;AAAM;AA+EjC,OAAO,MAAMC,qBAAqB,GAAGzB,aAAa,CAACE,6BAA6B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}