{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { CoreCourses } from '@features/courses/services/courses';\nimport { AddonBlockTimelineComponent } from '@addons/block/timeline/components/timeline/timeline';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { makeSingleton } from '@singletons';\nimport { CoreCoursesDashboard } from '@features/courses/services/dashboard';\nimport * as i0 from \"@angular/core\";\n/**\n * Block handler.\n */\nexport class AddonBlockTimelineHandlerService extends CoreBlockBaseHandler {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonBlockTimeline';\n    this.blockName = 'timeline';\n  }\n  /**\n   * Check if the handler is enabled on a site level.\n   *\n   * @returns Whether or not the handler is enabled on a site level.\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      const enabled = !CoreCoursesDashboard.isDisabledInSite();\n      const currentSite = CoreSites.getCurrentSite();\n      return enabled && (currentSite && currentSite.isVersionGreaterEqualThan('3.6') || !CoreCourses.isMyCoursesDisabledInSite());\n    })();\n  }\n  /**\n   * Returns the data needed to render the block.\n   *\n   * @returns Data or promise resolved with the data.\n   */\n  getDisplayData() {\n    return {\n      title: 'addon.block_timeline.pluginname',\n      class: 'addon-block-timeline',\n      component: AddonBlockTimelineComponent\n    };\n  }\n}\n_class = AddonBlockTimelineHandlerService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonBlockTimelineHandlerService_BaseFactory;\n  return function AddonBlockTimelineHandlerService_Factory(t) {\n    return (ɵAddonBlockTimelineHandlerService_BaseFactory || (ɵAddonBlockTimelineHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonBlockTimelineHandler = makeSingleton(AddonBlockTimelineHandlerService);","map":{"version":3,"names":["CoreSites","CoreCourses","AddonBlockTimelineComponent","CoreBlockBaseHandler","makeSingleton","CoreCoursesDashboard","AddonBlockTimelineHandlerService","constructor","name","blockName","isEnabled","_asyncToGenerator","enabled","isDisabledInSite","currentSite","getCurrentSite","isVersionGreaterEqualThan","isMyCoursesDisabledInSite","getDisplayData","title","class","component","t","factory","ɵfac","providedIn","AddonBlockTimelineHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/block/timeline/services/block-handler.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSites } from '@services/sites';\nimport { CoreBlockHandlerData } from '@features/block/services/block-delegate';\nimport { CoreCourses } from '@features/courses/services/courses';\nimport { AddonBlockTimelineComponent } from '@addons/block/timeline/components/timeline/timeline';\nimport { CoreBlockBaseHandler } from '@features/block/classes/base-block-handler';\nimport { makeSingleton } from '@singletons';\nimport { CoreCoursesDashboard } from '@features/courses/services/dashboard';\n\n/**\n * Block handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonBlockTimelineHandlerService extends CoreBlockBaseHandler {\n\n    name = 'AddonBlockTimeline';\n    blockName = 'timeline';\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @returns Whether or not the handler is enabled on a site level.\n     */\n    async isEnabled(): Promise<boolean> {\n        const enabled = !CoreCoursesDashboard.isDisabledInSite();\n        const currentSite = CoreSites.getCurrentSite();\n\n        return enabled && ((currentSite && currentSite.isVersionGreaterEqualThan('3.6')) ||\n            !CoreCourses.isMyCoursesDisabledInSite());\n    }\n\n    /**\n     * Returns the data needed to render the block.\n     *\n     * @returns Data or promise resolved with the data.\n     */\n    getDisplayData(): CoreBlockHandlerData {\n\n        return {\n            title: 'addon.block_timeline.pluginname',\n            class: 'addon-block-timeline',\n            component: AddonBlockTimelineComponent,\n        };\n    }\n\n}\n\nexport const AddonBlockTimelineHandler = makeSingleton(AddonBlockTimelineHandlerService);\n"],"mappings":";;AAeA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,2BAA2B,QAAQ,qDAAqD;AACjG,SAASC,oBAAoB,QAAQ,4CAA4C;AACjF,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,oBAAoB,QAAQ,sCAAsC;;AAE3E;;;AAIA,OAAM,MAAOC,gCAAiC,SAAQH,oBAAoB;EAD1EI,YAAA;;IAGI,KAAAC,IAAI,GAAG,oBAAoB;IAC3B,KAAAC,SAAS,GAAG,UAAU;;EAEtB;;;;;EAKMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,MAAMC,OAAO,GAAG,CAACP,oBAAoB,CAACQ,gBAAgB,EAAE;MACxD,MAAMC,WAAW,GAAGd,SAAS,CAACe,cAAc,EAAE;MAE9C,OAAOH,OAAO,KAAME,WAAW,IAAIA,WAAW,CAACE,yBAAyB,CAAC,KAAK,CAAC,IAC3E,CAACf,WAAW,CAACgB,yBAAyB,EAAE,CAAC;IAAC;EAClD;EAEA;;;;;EAKAC,cAAcA,CAAA;IAEV,OAAO;MACHC,KAAK,EAAE,iCAAiC;MACxCC,KAAK,EAAE,sBAAsB;MAC7BC,SAAS,EAAEnB;KACd;EACL;;SA9BSI,gCAAiC;;;;uIAAjCA,MAAgC,IAAAgB,CAAA,IAAhChB,MAAgC;EAAA;AAAA;;SAAhCA,MAAgC;EAAAiB,OAAA,EAAhCjB,MAAgC,CAAAkB,IAAA;EAAAC,UAAA,EADnB;AAAM;AAmChC,OAAO,MAAMC,yBAAyB,GAAGtB,aAAa,CAACE,gCAAgC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}