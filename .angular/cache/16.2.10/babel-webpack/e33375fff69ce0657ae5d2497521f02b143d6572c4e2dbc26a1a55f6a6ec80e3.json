{"ast":null,"code":"var _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { AddonModAssignSubmissionPluginBaseComponent } from '@addons/mod/assign/classes/base-submission-plugin-component';\nimport { CoreCommentsCommentsComponent } from '@features/comments/components/comments/comments';\nimport { CoreComments } from '@features/comments/services/comments';\nimport * as i0 from \"@angular/core\";\nfunction AddonModAssignSubmissionCommentsComponent_ion_item_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 1);\n    i0.ɵɵlistener(\"click\", function AddonModAssignSubmissionCommentsComponent_ion_item_0_Template_ion_item_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.showComments($event));\n    });\n    i0.ɵɵelementStart(1, \"ion-label\")(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"core-comments\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.plugin.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"instanceId\", ctx_r0.assign.cmid)(\"itemId\", ctx_r0.submission.id)(\"title\", ctx_r0.plugin.name)(\"courseId\", ctx_r0.assign.course);\n  }\n}\n/**\n * Component to render a comments submission plugin.\n */\nexport class AddonModAssignSubmissionCommentsComponent extends AddonModAssignSubmissionPluginBaseComponent {\n  constructor() {\n    super();\n    this.commentsEnabled = !CoreComments.areCommentsDisabledInSite();\n  }\n  /**\n   * Invalidate the data.\n   *\n   * @returns Promise resolved when done.\n   */\n  invalidate() {\n    return CoreComments.invalidateCommentsData('module', this.assign.cmid, 'assignsubmission_comments', this.submission.id, 'submission_comments');\n  }\n  /**\n   * Show the comments.\n   */\n  showComments(e) {\n    var _this$commentsCompone;\n    (_this$commentsCompone = this.commentsComponent) === null || _this$commentsCompone === void 0 || _this$commentsCompone.openComments(e);\n  }\n}\n_class = AddonModAssignSubmissionCommentsComponent;\n_class.ɵfac = function AddonModAssignSubmissionCommentsComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-mod-assign-submission-comments\"]],\n  viewQuery: function AddonModAssignSubmissionCommentsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CoreCommentsCommentsComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.commentsComponent = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"ion-text-wrap\", \"button\", \"\", 3, \"detail\", \"click\", 4, \"ngIf\"], [\"button\", \"\", 1, \"ion-text-wrap\", 3, \"detail\", \"click\"], [\"contextLevel\", \"module\", \"component\", \"assignsubmission_comments\", \"area\", \"submission_comments\", 3, \"instanceId\", \"itemId\", \"title\", \"courseId\"]],\n  template: function AddonModAssignSubmissionCommentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddonModAssignSubmissionCommentsComponent_ion_item_0_Template, 5, 6, \"ion-item\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.commentsEnabled);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["AddonModAssignSubmissionPluginBaseComponent","CoreCommentsCommentsComponent","CoreComments","i0","ɵɵelementStart","ɵɵlistener","AddonModAssignSubmissionCommentsComponent_ion_item_0_Template_ion_item_click_0_listener","$event","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","showComments","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","plugin","name","assign","cmid","submission","id","course","AddonModAssignSubmissionCommentsComponent","constructor","commentsEnabled","areCommentsDisabledInSite","invalidate","invalidateCommentsData","e","_this$commentsCompone","commentsComponent","openComments","selectors","viewQuery","AddonModAssignSubmissionCommentsComponent_Query","rf","ctx","ɵɵtemplate","AddonModAssignSubmissionCommentsComponent_ion_item_0_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/submission/comments/component/comments.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/assign/submission/comments/component/addon-mod-assign-submission-comments.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonModAssignSubmissionPluginBaseComponent } from '@addons/mod/assign/classes/base-submission-plugin-component';\nimport { Component, ViewChild } from '@angular/core';\nimport { CoreCommentsCommentsComponent } from '@features/comments/components/comments/comments';\nimport { CoreComments } from '@features/comments/services/comments';\n\n/**\n * Component to render a comments submission plugin.\n */\n@Component({\n    selector: 'addon-mod-assign-submission-comments',\n    templateUrl: 'addon-mod-assign-submission-comments.html',\n})\nexport class AddonModAssignSubmissionCommentsComponent extends AddonModAssignSubmissionPluginBaseComponent {\n\n    @ViewChild(CoreCommentsCommentsComponent) commentsComponent!: CoreCommentsCommentsComponent;\n\n    commentsEnabled: boolean;\n\n    constructor() {\n        super();\n\n        this.commentsEnabled = !CoreComments.areCommentsDisabledInSite();\n    }\n\n    /**\n     * Invalidate the data.\n     *\n     * @returns Promise resolved when done.\n     */\n    invalidate(): Promise<void> {\n        return CoreComments.invalidateCommentsData(\n            'module',\n            this.assign.cmid,\n            'assignsubmission_comments',\n            this.submission.id,\n            'submission_comments',\n        );\n    }\n\n    /**\n     * Show the comments.\n     */\n    showComments(e?: Event): void {\n        this.commentsComponent?.openComments(e);\n    }\n\n}\n","<ion-item *ngIf=\"commentsEnabled\" class=\"ion-text-wrap\" (click)=\"showComments($event)\" [detail]=\"true\" button>\n    <ion-label>\n        <h2>{{plugin.name}}</h2>\n        <core-comments contextLevel=\"module\" [instanceId]=\"assign.cmid\" component=\"assignsubmission_comments\" [itemId]=\"submission.id\"\n            area=\"submission_comments\" [title]=\"plugin.name\" [courseId]=\"assign.course\" />\n    </ion-label>\n</ion-item>\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,2CAA2C,QAAQ,6DAA6D;AAEzH,SAASC,6BAA6B,QAAQ,iDAAiD;AAC/F,SAASC,YAAY,QAAQ,sCAAsC;;;;;ICjBnEC,EAAA,CAAAC,cAAA,kBAA8G;IAAtDD,EAAA,CAAAE,UAAA,mBAAAC,wFAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAASR,EAAA,CAAAS,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAN,MAAA,CAAoB;IAAA,EAAC;IAClFJ,EAAA,CAAAC,cAAA,gBAAW;IACHD,EAAA,CAAAW,MAAA,GAAe;IAAAX,EAAA,CAAAY,YAAA,EAAK;IACxBZ,EAAA,CAAAa,SAAA,uBACkF;IACtFb,EAAA,CAAAY,YAAA,EAAY;;;;IALuEZ,EAAA,CAAAc,UAAA,gBAAe;IAE1Fd,EAAA,CAAAe,SAAA,GAAe;IAAff,EAAA,CAAAgB,iBAAA,CAAAC,MAAA,CAAAC,MAAA,CAAAC,IAAA,CAAe;IACkBnB,EAAA,CAAAe,SAAA,GAA0B;IAA1Bf,EAAA,CAAAc,UAAA,eAAAG,MAAA,CAAAG,MAAA,CAAAC,IAAA,CAA0B,WAAAJ,MAAA,CAAAK,UAAA,CAAAC,EAAA,WAAAN,MAAA,CAAAC,MAAA,CAAAC,IAAA,cAAAF,MAAA,CAAAG,MAAA,CAAAI,MAAA;;;ADgBvE;;;AAOA,OAAM,MAAOC,yCAA0C,SAAQ5B,2CAA2C;EAMtG6B,YAAA;IACI,KAAK,EAAE;IAEP,IAAI,CAACC,eAAe,GAAG,CAAC5B,YAAY,CAAC6B,yBAAyB,EAAE;EACpE;EAEA;;;;;EAKAC,UAAUA,CAAA;IACN,OAAO9B,YAAY,CAAC+B,sBAAsB,CACtC,QAAQ,EACR,IAAI,CAACV,MAAM,CAACC,IAAI,EAChB,2BAA2B,EAC3B,IAAI,CAACC,UAAU,CAACC,EAAE,EAClB,qBAAqB,CACxB;EACL;EAEA;;;EAGAb,YAAYA,CAACqB,CAAS;IAAA,IAAAC,qBAAA;IAClB,CAAAA,qBAAA,OAAI,CAACC,iBAAiB,cAAAD,qBAAA,eAAtBA,qBAAA,CAAwBE,YAAY,CAACH,CAAC,CAAC;EAC3C;;SAhCSN,yCAA0C;;mBAA1CA,MAAyC;AAAA;;QAAzCA,MAAyC;EAAAU,SAAA;EAAAC,SAAA,WAAAC,gDAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;qBAEvCxC,6BAA6B;;;;;;;;;;;;;MC5B5CE,EAAA,CAAAwC,UAAA,IAAAC,6DAAA,sBAMW;;;MANAzC,EAAA,CAAAc,UAAA,SAAAyB,GAAA,CAAAZ,eAAA,CAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}