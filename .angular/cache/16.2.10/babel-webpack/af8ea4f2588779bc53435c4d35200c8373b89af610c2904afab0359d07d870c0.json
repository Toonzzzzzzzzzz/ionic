{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreUtils } from '@services/utils/utils';\nimport { AddonCompetency } from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n/**\n * Provides a collection of course competencies.\n */\nexport class AddonCompetencyCourseCompetenciesSource extends CoreRoutedItemsManagerSource {\n  /**\n   * @inheritdoc\n   */\n  static getSourceId(courseId, userId) {\n    return `${courseId}-${userId || 'current-user'}`;\n  }\n  constructor(courseId, userId) {\n    super();\n    this.COURSE_ID = courseId;\n    this.USER_ID = userId;\n  }\n  /**\n   * @inheritdoc\n   */\n  getItemPath(competency) {\n    return String(competency.competency.id);\n  }\n  /**\n   * @inheritdoc\n   */\n  load() {\n    var _superprop_getLoad = () => super.load,\n      _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.dirty || !_this.courseCompetencies) {\n        yield _this.loadCourseCompetencies();\n      }\n      yield _superprop_getLoad().call(_this);\n    })();\n  }\n  /**\n   * Invalidate course cache.\n   */\n  invalidateCache() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield CoreUtils.ignoreErrors(AddonCompetency.invalidateCourseCompetencies(_this2.COURSE_ID, _this2.USER_ID));\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  loadPageItems() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this3.courseCompetencies) {\n        throw new Error('Can\\'t load competencies without course data');\n      }\n      return {\n        items: _this3.courseCompetencies.competencies\n      };\n    })();\n  }\n  /**\n   * Load competencies.\n   */\n  loadCourseCompetencies() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      [_this4.courseCompetencies, _this4.user] = yield Promise.all([AddonCompetency.getCourseCompetencies(_this4.COURSE_ID, _this4.USER_ID), AddonCompetencyHelper.getProfile(_this4.USER_ID)]);\n    })();\n  }\n}","map":{"version":3,"names":["CoreRoutedItemsManagerSource","CoreUtils","AddonCompetency","AddonCompetencyHelper","AddonCompetencyCourseCompetenciesSource","getSourceId","courseId","userId","constructor","COURSE_ID","USER_ID","getItemPath","competency","String","id","load","_superprop_getLoad","_this","_asyncToGenerator","dirty","courseCompetencies","loadCourseCompetencies","call","invalidateCache","_this2","ignoreErrors","invalidateCourseCompetencies","loadPageItems","_this3","Error","items","competencies","_this4","user","Promise","all","getCourseCompetencies","getProfile"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/competency/classes/competency-course-competencies-source.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreUserProfile } from '@features/user/services/user';\nimport { CoreUtils } from '@services/utils/utils';\nimport {\n    AddonCompetency,\n    AddonCompetencyDataForCourseCompetenciesPageCompetency,\n    AddonCompetencyDataForCourseCompetenciesPageWSResponse,\n} from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n\n/**\n * Provides a collection of course competencies.\n */\nexport class AddonCompetencyCourseCompetenciesSource\n    extends CoreRoutedItemsManagerSource<AddonCompetencyDataForCourseCompetenciesPageCompetency> {\n\n    /**\n     * @inheritdoc\n     */\n    static getSourceId(courseId: number, userId?: number): string {\n        return `${courseId}-${userId || 'current-user'}`;\n    }\n\n    readonly COURSE_ID: number;\n    readonly USER_ID?: number;\n\n    courseCompetencies?: AddonCompetencyDataForCourseCompetenciesPageWSResponse;\n    user?: CoreUserProfile;\n\n    constructor(courseId: number, userId?: number) {\n        super();\n\n        this.COURSE_ID = courseId;\n        this.USER_ID = userId;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(competency: AddonCompetencyDataForCourseCompetenciesPageCompetency): string {\n        return String(competency.competency.id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async load(): Promise<void> {\n        if (this.dirty || !this.courseCompetencies) {\n            await this.loadCourseCompetencies();\n        }\n\n        await super.load();\n    }\n\n    /**\n     * Invalidate course cache.\n     */\n    async invalidateCache(): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonCompetency.invalidateCourseCompetencies(this.COURSE_ID, this.USER_ID));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: AddonCompetencyDataForCourseCompetenciesPageCompetency[] }> {\n        if (!this.courseCompetencies) {\n            throw new Error('Can\\'t load competencies without course data');\n        }\n\n        return { items: this.courseCompetencies.competencies };\n    }\n\n    /**\n     * Load competencies.\n     */\n    private async loadCourseCompetencies(): Promise<void> {\n        [this.courseCompetencies, this.user] = await Promise.all([\n            AddonCompetency.getCourseCompetencies(this.COURSE_ID, this.USER_ID),\n            AddonCompetencyHelper.getProfile(this.USER_ID),\n        ]);\n    }\n\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,4BAA4B,QAAQ,uDAAuD;AAEpG,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SACIC,eAAe,QAGZ,wBAAwB;AAC/B,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE;;;AAGA,OAAM,MAAOC,uCACT,SAAQJ,4BAAoF;EAE5F;;;EAGA,OAAOK,WAAWA,CAACC,QAAgB,EAAEC,MAAe;IAChD,OAAO,GAAGD,QAAQ,IAAIC,MAAM,IAAI,cAAc,EAAE;EACpD;EAQAC,YAAYF,QAAgB,EAAEC,MAAe;IACzC,KAAK,EAAE;IAEP,IAAI,CAACE,SAAS,GAAGH,QAAQ;IACzB,IAAI,CAACI,OAAO,GAAGH,MAAM;EACzB;EAEA;;;EAGAI,WAAWA,CAACC,UAAkE;IAC1E,OAAOC,MAAM,CAACD,UAAU,CAACA,UAAU,CAACE,EAAE,CAAC;EAC3C;EAEA;;;EAGMC,IAAIA,CAAA;IAAA,IAAAC,kBAAA,GAAAA,CAAA,WAAAD,IAAA;MAAAE,KAAA;IAAA,OAAAC,iBAAA;MACN,IAAID,KAAI,CAACE,KAAK,IAAI,CAACF,KAAI,CAACG,kBAAkB,EAAE;QACxC,MAAMH,KAAI,CAACI,sBAAsB,EAAE;;MAGvC,MAAML,kBAAA,GAAAM,IAAA,CAAAL,KAAU,CAAE;IAAC;EACvB;EAEA;;;EAGMM,eAAeA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAN,iBAAA;MACjB,MAAMjB,SAAS,CAACwB,YAAY,CAACvB,eAAe,CAACwB,4BAA4B,CAACF,MAAI,CAACf,SAAS,EAAEe,MAAI,CAACd,OAAO,CAAC,CAAC;IAAC;EAC7G;EAEA;;;EAGgBiB,aAAaA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAV,iBAAA;MACzB,IAAI,CAACU,MAAI,CAACR,kBAAkB,EAAE;QAC1B,MAAM,IAAIS,KAAK,CAAC,8CAA8C,CAAC;;MAGnE,OAAO;QAAEC,KAAK,EAAEF,MAAI,CAACR,kBAAkB,CAACW;MAAY,CAAE;IAAC;EAC3D;EAEA;;;EAGcV,sBAAsBA,CAAA;IAAA,IAAAW,MAAA;IAAA,OAAAd,iBAAA;MAChC,CAACc,MAAI,CAACZ,kBAAkB,EAAEY,MAAI,CAACC,IAAI,CAAC,SAASC,OAAO,CAACC,GAAG,CAAC,CACrDjC,eAAe,CAACkC,qBAAqB,CAACJ,MAAI,CAACvB,SAAS,EAAEuB,MAAI,CAACtB,OAAO,CAAC,EACnEP,qBAAqB,CAACkC,UAAU,CAACL,MAAI,CAACtB,OAAO,CAAC,CACjD,CAAC;IAAC;EACP"},"metadata":{},"sourceType":"module","externalDependencies":[]}