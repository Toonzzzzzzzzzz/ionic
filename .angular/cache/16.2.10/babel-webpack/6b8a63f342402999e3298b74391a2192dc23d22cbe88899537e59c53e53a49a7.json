{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreConstants } from '@/core/constants';\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\nimport { CoreModuleHandlerBase } from '@features/course/classes/module-base-handler';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonModUrlIndexComponent } from '../../components/index/index';\nimport { AddonModUrl } from '../url';\nimport { AddonModUrlHelper } from '../url-helper';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to support url modules.\n */\nexport class AddonModUrlModuleHandlerService extends CoreModuleHandlerBase {\n  constructor() {\n    super(...arguments);\n    this.name = 'AddonModUrl';\n    this.modName = 'url';\n    this.pageName = AddonModUrlModuleHandlerService.PAGE_NAME;\n    this.supportedFeatures = {\n      [CoreConstants.FEATURE_MOD_ARCHETYPE]: CoreConstants.MOD_ARCHETYPE_RESOURCE,\n      [CoreConstants.FEATURE_GROUPS]: false,\n      [CoreConstants.FEATURE_GROUPINGS]: false,\n      [CoreConstants.FEATURE_MOD_INTRO]: true,\n      [CoreConstants.FEATURE_COMPLETION_TRACKS_VIEWS]: true,\n      [CoreConstants.FEATURE_GRADE_HAS_GRADE]: false,\n      [CoreConstants.FEATURE_GRADE_OUTCOMES]: false,\n      [CoreConstants.FEATURE_BACKUP_MOODLE2]: true,\n      [CoreConstants.FEATURE_SHOW_DESCRIPTION]: true,\n      [CoreConstants.FEATURE_MOD_PURPOSE]: \"content\" /* ModPurpose.MOD_PURPOSE_CONTENT */\n    };\n  }\n\n  /**\n   * @inheritdoc\n   */\n  getData(module) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      /**\n       * Open the URL.\n       *\n       * @param module The module object.\n       * @param courseId The course ID.\n       */\n      const openUrl = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (module, courseId) {\n          yield _this.logView(module);\n          CoreCourse.storeModuleViewed(courseId, module.id);\n          const contents = yield CoreCourse.getModuleContents(module);\n          AddonModUrlHelper.open(contents[0].fileurl);\n        });\n        return function openUrl(_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      const handlerData = {\n        icon: CoreCourse.getModuleIconSrc(module.modname, module.modicon),\n        title: module.name,\n        class: 'addon-mod_url-handler',\n        showDownloadButton: false,\n        action: function () {\n          var _ref2 = _asyncToGenerator(function* (event, module, courseId, options) {\n            const modal = yield CoreDomUtils.showModalLoading();\n            try {\n              const shouldOpen = yield _this.shouldOpenLink(module);\n              if (shouldOpen) {\n                openUrl(module, courseId);\n              } else {\n                _this.openActivityPage(module, module.course, options);\n              }\n            } finally {\n              modal.dismiss();\n            }\n          });\n          return function action(_x3, _x4, _x5, _x6) {\n            return _ref2.apply(this, arguments);\n          };\n        }(),\n        button: {\n          hidden: true,\n          icon: 'fas-link',\n          label: 'core.openmodinbrowser',\n          action: (event, module, courseId) => {\n            openUrl(module, courseId);\n          }\n        }\n      };\n      const hideButton = yield CoreUtils.ignoreErrors(_this.hideLinkButton(module));\n      if (handlerData.button && hideButton !== undefined) {\n        handlerData.button.hidden = hideButton;\n      }\n      try {\n        handlerData.icon = yield _this.getIconSrc(module);\n      } catch (_unused) {\n        // Ignore errors.\n      }\n      return handlerData;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getIconSrc(module) {\n    return _asyncToGenerator(function* () {\n      var _module$contents;\n      if (!module) {\n        return;\n      }\n      let mainFile = (_module$contents = module.contents) === null || _module$contents === void 0 ? void 0 : _module$contents[0];\n      if (!mainFile) {\n        try {\n          // Try to get module contents, it's needed to get the URL with parameters.\n          const contents = yield CoreCourse.getModuleContents(module, undefined, undefined, true, false, undefined, 'url');\n          mainFile = contents[0];\n        } catch (_unused2) {\n          var _mod$contents;\n          // Fallback in case is not prefetched.\n          const mod = yield CoreCourse.getModule(module.id, module.course, undefined, true, false, undefined, 'url');\n          mainFile = (_mod$contents = mod.contents) === null || _mod$contents === void 0 ? void 0 : _mod$contents[0];\n        }\n      }\n      const icon = mainFile ? AddonModUrl.guessIcon(mainFile.fileurl) : undefined;\n      // Calculate the icon to use.\n      return CoreCourse.getModuleIconSrc(module.modname, module.modicon, icon);\n    })();\n  }\n  /**\n   * Returns if contents are loaded to show link button.\n   *\n   * @param module The module object.\n   * @returns Resolved when done.\n   */\n  hideLinkButton(module) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const contents = yield CoreCourse.getModuleContents(module, undefined, undefined, false, false, undefined, _this2.modName);\n        return !(contents[0] && contents[0].fileurl);\n      } catch (_unused3) {\n        // Module contents could not be loaded, most probably device is offline.\n        return true;\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getMainComponent() {\n    return _asyncToGenerator(function* () {\n      return AddonModUrlIndexComponent;\n    })();\n  }\n  /**\n   * Check whether the link should be opened directly.\n   *\n   * @param module Module.\n   * @returns Promise resolved with boolean.\n   */\n  shouldOpenLink(module) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const contents = yield CoreCourse.getModuleContents(module, undefined, undefined, false, false, undefined, _this3.modName);\n        // Check if the URL can be handled by the app. If so, always open it directly.\n        const canHandle = yield CoreContentLinksHelper.canHandleLink(contents[0].fileurl, module.course, undefined, true);\n        if (canHandle) {\n          // URL handled by the app, open it directly.\n          return true;\n        } else {\n          // Not handled by the app, check the display type.\n          const url = yield CoreUtils.ignoreErrors(AddonModUrl.getUrl(module.course, module.id));\n          const displayType = AddonModUrl.getFinalDisplayType(url);\n          return displayType == CoreConstants.RESOURCELIB_DISPLAY_OPEN || displayType == CoreConstants.RESOURCELIB_DISPLAY_POPUP;\n        }\n      } catch (_unused4) {\n        return false;\n      }\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  manualCompletionAlwaysShown(module) {\n    return this.shouldOpenLink(module);\n  }\n  /**\n   * Log module viewed.\n   */\n  logView(module) {\n    return _asyncToGenerator(function* () {\n      try {\n        if (module.instance) {\n          yield AddonModUrl.logView(module.instance);\n          CoreCourse.checkModuleCompletion(module.course, module.completiondata);\n        }\n      } catch (_unused5) {\n        // Ignore errors.\n      }\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM,\n        ws: 'mod_url_view_url',\n        name: module.name,\n        data: {\n          id: module.instance,\n          category: 'url'\n        },\n        url: `/mod/url/view.php?id=${module.id}`\n      });\n    })();\n  }\n}\n_class = AddonModUrlModuleHandlerService;\n_class.PAGE_NAME = 'mod_url';\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModUrlModuleHandlerService_BaseFactory;\n  return function AddonModUrlModuleHandlerService_Factory(t) {\n    return (ɵAddonModUrlModuleHandlerService_BaseFactory || (ɵAddonModUrlModuleHandlerService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModUrlModuleHandler = makeSingleton(AddonModUrlModuleHandlerService);","map":{"version":3,"names":["CoreConstants","CoreContentLinksHelper","CoreModuleHandlerBase","CoreCourse","CoreDomUtils","CoreUtils","makeSingleton","AddonModUrlIndexComponent","AddonModUrl","AddonModUrlHelper","CoreAnalytics","CoreAnalyticsEventType","AddonModUrlModuleHandlerService","constructor","name","modName","pageName","PAGE_NAME","supportedFeatures","FEATURE_MOD_ARCHETYPE","MOD_ARCHETYPE_RESOURCE","FEATURE_GROUPS","FEATURE_GROUPINGS","FEATURE_MOD_INTRO","FEATURE_COMPLETION_TRACKS_VIEWS","FEATURE_GRADE_HAS_GRADE","FEATURE_GRADE_OUTCOMES","FEATURE_BACKUP_MOODLE2","FEATURE_SHOW_DESCRIPTION","FEATURE_MOD_PURPOSE","getData","module","_this","_asyncToGenerator","openUrl","_ref","courseId","logView","storeModuleViewed","id","contents","getModuleContents","open","fileurl","_x","_x2","apply","arguments","handlerData","icon","getModuleIconSrc","modname","modicon","title","class","showDownloadButton","action","_ref2","event","options","modal","showModalLoading","shouldOpen","shouldOpenLink","openActivityPage","course","dismiss","_x3","_x4","_x5","_x6","button","hidden","label","hideButton","ignoreErrors","hideLinkButton","undefined","getIconSrc","_unused","_module$contents","mainFile","_unused2","_mod$contents","mod","getModule","guessIcon","_this2","_unused3","getMainComponent","_this3","canHandle","canHandleLink","url","getUrl","displayType","getFinalDisplayType","RESOURCELIB_DISPLAY_OPEN","RESOURCELIB_DISPLAY_POPUP","_unused4","manualCompletionAlwaysShown","instance","checkModuleCompletion","completiondata","_unused5","logEvent","type","VIEW_ITEM","ws","data","category","_class","t","factory","ɵfac","providedIn","AddonModUrlModuleHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/url/services/handlers/module.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreConstants, ModPurpose } from '@/core/constants';\nimport { Injectable, Type } from '@angular/core';\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\nimport { CoreModuleHandlerBase } from '@features/course/classes/module-base-handler';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModuleData } from '@features/course/services/course-helper';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@features/course/services/module-delegate';\nimport { CoreNavigationOptions } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { makeSingleton } from '@singletons';\nimport { AddonModUrlIndexComponent } from '../../components/index/index';\nimport { AddonModUrl } from '../url';\nimport { AddonModUrlHelper } from '../url-helper';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\n\n/**\n * Handler to support url modules.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModUrlModuleHandlerService extends CoreModuleHandlerBase implements CoreCourseModuleHandler {\n\n    static readonly PAGE_NAME = 'mod_url';\n\n    name = 'AddonModUrl';\n    modName = 'url';\n    protected pageName = AddonModUrlModuleHandlerService.PAGE_NAME;\n\n    supportedFeatures = {\n        [CoreConstants.FEATURE_MOD_ARCHETYPE]: CoreConstants.MOD_ARCHETYPE_RESOURCE,\n        [CoreConstants.FEATURE_GROUPS]: false,\n        [CoreConstants.FEATURE_GROUPINGS]: false,\n        [CoreConstants.FEATURE_MOD_INTRO]: true,\n        [CoreConstants.FEATURE_COMPLETION_TRACKS_VIEWS]: true,\n        [CoreConstants.FEATURE_GRADE_HAS_GRADE]: false,\n        [CoreConstants.FEATURE_GRADE_OUTCOMES]: false,\n        [CoreConstants.FEATURE_BACKUP_MOODLE2]: true,\n        [CoreConstants.FEATURE_SHOW_DESCRIPTION]: true,\n        [CoreConstants.FEATURE_MOD_PURPOSE]: ModPurpose.MOD_PURPOSE_CONTENT,\n    };\n\n    /**\n     * @inheritdoc\n     */\n    async getData(module: CoreCourseModuleData): Promise<CoreCourseModuleHandlerData> {\n\n        /**\n         * Open the URL.\n         *\n         * @param module The module object.\n         * @param courseId The course ID.\n         */\n        const openUrl = async (module: CoreCourseModuleData, courseId: number): Promise<void> => {\n            await this.logView(module);\n\n            CoreCourse.storeModuleViewed(courseId, module.id);\n\n            const contents = await CoreCourse.getModuleContents(module);\n            AddonModUrlHelper.open(contents[0].fileurl);\n        };\n\n        const handlerData: CoreCourseModuleHandlerData = {\n            icon: CoreCourse.getModuleIconSrc(module.modname, module.modicon),\n            title: module.name,\n            class: 'addon-mod_url-handler',\n            showDownloadButton: false,\n            action: async (event: Event, module: CoreCourseModuleData, courseId: number, options?: CoreNavigationOptions) => {\n                const modal = await CoreDomUtils.showModalLoading();\n\n                try {\n                    const shouldOpen = await this.shouldOpenLink(module);\n\n                    if (shouldOpen) {\n                        openUrl(module, courseId);\n                    } else {\n                        this.openActivityPage(module, module.course, options);\n                    }\n                } finally {\n                    modal.dismiss();\n                }\n            },\n            button: {\n                hidden: true, // Hide it until we calculate if it should be displayed or not.\n                icon: 'fas-link',\n                label: 'core.openmodinbrowser',\n                action: (event: Event, module: CoreCourseModuleData, courseId: number): void => {\n                    openUrl(module, courseId);\n                },\n            },\n        };\n\n        const hideButton = await CoreUtils.ignoreErrors(this.hideLinkButton(module));\n\n        if (handlerData.button && hideButton !== undefined) {\n            handlerData.button.hidden = hideButton;\n        }\n\n        try {\n            handlerData.icon = await this.getIconSrc(module);\n        } catch {\n            // Ignore errors.\n        }\n\n        return handlerData;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getIconSrc(module?: CoreCourseModuleData): Promise<string | undefined> {\n        if (!module) {\n            return;\n        }\n\n        let mainFile = module.contents?.[0];\n\n        if (!mainFile) {\n            try {\n                // Try to get module contents, it's needed to get the URL with parameters.\n                const contents = await CoreCourse.getModuleContents(\n                    module,\n                    undefined,\n                    undefined,\n                    true,\n                    false,\n                    undefined,\n                    'url',\n                );\n\n                mainFile = contents[0];\n            } catch {\n                // Fallback in case is not prefetched.\n                const mod = await CoreCourse.getModule(module.id, module.course, undefined, true, false, undefined, 'url');\n\n                mainFile = mod.contents?.[0];\n            }\n        }\n\n        const icon = mainFile? AddonModUrl.guessIcon(mainFile.fileurl) : undefined;\n\n        // Calculate the icon to use.\n        return CoreCourse.getModuleIconSrc(module.modname, module.modicon, icon);\n    }\n\n    /**\n     * Returns if contents are loaded to show link button.\n     *\n     * @param module The module object.\n     * @returns Resolved when done.\n     */\n    protected async hideLinkButton(module: CoreCourseModuleData): Promise<boolean> {\n        try {\n            const contents =\n                await CoreCourse.getModuleContents(module, undefined, undefined, false, false, undefined, this.modName);\n\n            return !(contents[0] && contents[0].fileurl);\n        } catch {\n            // Module contents could not be loaded, most probably device is offline.\n            return true;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getMainComponent(): Promise<Type<unknown>> {\n        return AddonModUrlIndexComponent;\n    }\n\n    /**\n     * Check whether the link should be opened directly.\n     *\n     * @param module Module.\n     * @returns Promise resolved with boolean.\n     */\n    protected async shouldOpenLink(module: CoreCourseModuleData): Promise<boolean> {\n        try {\n            const contents =\n                await CoreCourse.getModuleContents(module, undefined, undefined, false, false, undefined, this.modName);\n\n            // Check if the URL can be handled by the app. If so, always open it directly.\n            const canHandle = await CoreContentLinksHelper.canHandleLink(contents[0].fileurl, module.course, undefined, true);\n\n            if (canHandle) {\n                // URL handled by the app, open it directly.\n                return true;\n            } else {\n                // Not handled by the app, check the display type.\n                const url = await CoreUtils.ignoreErrors(AddonModUrl.getUrl(module.course, module.id));\n                const displayType = AddonModUrl.getFinalDisplayType(url);\n\n                return displayType == CoreConstants.RESOURCELIB_DISPLAY_OPEN ||\n                    displayType == CoreConstants.RESOURCELIB_DISPLAY_POPUP;\n            }\n        } catch {\n            return false;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    manualCompletionAlwaysShown(module: CoreCourseModuleData): Promise<boolean> {\n        return this.shouldOpenLink(module);\n    }\n\n    /**\n     * Log module viewed.\n     */\n    protected async logView(module: CoreCourseModuleData): Promise<void> {\n        try {\n            if (module.instance) {\n                await AddonModUrl.logView(module.instance);\n                CoreCourse.checkModuleCompletion(module.course, module.completiondata);\n            }\n        } catch {\n            // Ignore errors.\n        }\n\n        CoreAnalytics.logEvent({\n            type: CoreAnalyticsEventType.VIEW_ITEM,\n            ws: 'mod_url_view_url',\n            name: module.name,\n            data: { id: module.instance, category: 'url' },\n            url: `/mod/url/view.php?id=${module.id}`,\n        });\n    }\n\n}\nexport const AddonModUrlModuleHandler = makeSingleton(AddonModUrlModuleHandlerService);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}