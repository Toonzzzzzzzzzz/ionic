{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\n/**\n * Registry to keep track of component instances.\n *\n * @deprecated since 4.1.1. Use CoreDirectivesRegistry instead.\n */\nexport class CoreComponentsRegistry {\n  /**\n   * Register a component instance.\n   *\n   * @param element Root element.\n   * @param instance Component instance.\n   */\n  static register(element, instance) {\n    CoreDirectivesRegistry.register(element, instance);\n  }\n  /**\n   * Resolve a component instance.\n   *\n   * @param element Root element.\n   * @param componentClass Component class.\n   * @returns Component instance.\n   */\n  static resolve(element, componentClass) {\n    return CoreDirectivesRegistry.resolve(element, componentClass);\n  }\n  /**\n   * Get a component instances and fail if it cannot be resolved.\n   *\n   * @param element Root element.\n   * @param componentClass Component class.\n   * @returns Component instance.\n   */\n  static require(element, componentClass) {\n    return CoreDirectivesRegistry.require(element, componentClass);\n  }\n  /**\n   * Get a component instances and wait to be ready.\n   *\n   * @param element Root element.\n   * @param componentClass Component class.\n   * @returns Promise resolved when done.\n   */\n  static waitComponentReady(element, componentClass) {\n    return _asyncToGenerator(function* () {\n      return CoreDirectivesRegistry.waitDirectiveReady(element, componentClass);\n    })();\n  }\n  /**\n   * Waits all elements matching to be ready.\n   *\n   * @param element Element where to search.\n   * @param selector Selector to search on parent.\n   * @param componentClass Component class.\n   * @returns Promise resolved when done.\n   */\n  static waitComponentsReady(element, selector, componentClass) {\n    return _asyncToGenerator(function* () {\n      return CoreDirectivesRegistry.waitDirectivesReady(element, selector, componentClass);\n    })();\n  }\n}","map":{"version":3,"names":["CoreDirectivesRegistry","CoreComponentsRegistry","register","element","instance","resolve","componentClass","require","waitComponentReady","_asyncToGenerator","waitDirectiveReady","waitComponentsReady","selector","waitDirectivesReady"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/singletons/components-registry.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { AsyncDirective } from '@classes/async-directive';\nimport { CoreDirectivesRegistry } from '@singletons/directives-registry';\n\n/**\n * Registry to keep track of component instances.\n *\n * @deprecated since 4.1.1. Use CoreDirectivesRegistry instead.\n */\nexport class CoreComponentsRegistry {\n\n    /**\n     * Register a component instance.\n     *\n     * @param element Root element.\n     * @param instance Component instance.\n     */\n    static register(element: Element, instance: unknown): void {\n        CoreDirectivesRegistry.register(element, instance);\n    }\n\n    /**\n     * Resolve a component instance.\n     *\n     * @param element Root element.\n     * @param componentClass Component class.\n     * @returns Component instance.\n     */\n    static resolve<T>(element?: Element | null, componentClass?: ComponentConstructor<T>): T | null {\n        return CoreDirectivesRegistry.resolve(element, componentClass);\n    }\n\n    /**\n     * Get a component instances and fail if it cannot be resolved.\n     *\n     * @param element Root element.\n     * @param componentClass Component class.\n     * @returns Component instance.\n     */\n    static require<T>(element: Element, componentClass?: ComponentConstructor<T>): T {\n        return CoreDirectivesRegistry.require(element, componentClass);\n    }\n\n    /**\n     * Get a component instances and wait to be ready.\n     *\n     * @param element Root element.\n     * @param componentClass Component class.\n     * @returns Promise resolved when done.\n     */\n    static async waitComponentReady<T extends AsyncDirective>(\n        element: Element | null,\n        componentClass?: ComponentConstructor<T>,\n    ): Promise<void> {\n        return CoreDirectivesRegistry.waitDirectiveReady(element, componentClass);\n    }\n\n    /**\n     * Waits all elements matching to be ready.\n     *\n     * @param element Element where to search.\n     * @param selector Selector to search on parent.\n     * @param componentClass Component class.\n     * @returns Promise resolved when done.\n     */\n    static async waitComponentsReady<T extends AsyncDirective>(\n        element: Element,\n        selector: string,\n        componentClass?: ComponentConstructor<T>,\n    ): Promise<void> {\n        return CoreDirectivesRegistry.waitDirectivesReady(element, selector, componentClass);\n    }\n\n}\n\n/**\n * Component constructor.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ComponentConstructor<T = Component> = { new(...args: any[]): T };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,SAASA,sBAAsB,QAAQ,iCAAiC;AAExE;;;;;AAKA,OAAM,MAAOC,sBAAsB;EAE/B;;;;;;EAMA,OAAOC,QAAQA,CAACC,OAAgB,EAAEC,QAAiB;IAC/CJ,sBAAsB,CAACE,QAAQ,CAACC,OAAO,EAAEC,QAAQ,CAAC;EACtD;EAEA;;;;;;;EAOA,OAAOC,OAAOA,CAAIF,OAAwB,EAAEG,cAAwC;IAChF,OAAON,sBAAsB,CAACK,OAAO,CAACF,OAAO,EAAEG,cAAc,CAAC;EAClE;EAEA;;;;;;;EAOA,OAAOC,OAAOA,CAAIJ,OAAgB,EAAEG,cAAwC;IACxE,OAAON,sBAAsB,CAACO,OAAO,CAACJ,OAAO,EAAEG,cAAc,CAAC;EAClE;EAEA;;;;;;;EAOA,OAAaE,kBAAkBA,CAC3BL,OAAuB,EACvBG,cAAwC;IAAA,OAAAG,iBAAA;MAExC,OAAOT,sBAAsB,CAACU,kBAAkB,CAACP,OAAO,EAAEG,cAAc,CAAC;IAAC;EAC9E;EAEA;;;;;;;;EAQA,OAAaK,mBAAmBA,CAC5BR,OAAgB,EAChBS,QAAgB,EAChBN,cAAwC;IAAA,OAAAG,iBAAA;MAExC,OAAOT,sBAAsB,CAACa,mBAAmB,CAACV,OAAO,EAAES,QAAQ,EAAEN,cAAc,CAAC;IAAC;EACzF"},"metadata":{},"sourceType":"module","externalDependencies":[]}