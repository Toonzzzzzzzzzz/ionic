{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"canvas\"];\nexport class CoreFileUploaderAudioHistogramComponent {\n  constructor({\n    nativeElement\n  }) {\n    this.destroyed = false;\n    this.element = nativeElement;\n  }\n  /**\n   * @inheritdoc\n   */\n  ngAfterViewInit() {\n    var _this$canvasRef, _this$canvas;\n    this.canvas = (_this$canvasRef = this.canvasRef) === null || _this$canvasRef === void 0 ? void 0 : _this$canvasRef.nativeElement;\n    this.context = (_this$canvas = this.canvas) === null || _this$canvas === void 0 ? void 0 : _this$canvas.getContext('2d');\n    this.buffer = new Uint8Array(this.analyser.fftSize);\n    this.updateCanvas(this.element.clientWidth, this.element.clientHeight);\n    this.draw();\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.destroyed = true;\n  }\n  /**\n   * Draw histogram.\n   */\n  draw() {\n    if (this.destroyed || !this.canvas || !this.context || !this.buffer) {\n      return;\n    }\n    if (this.canvas.width !== this.element.clientWidth || this.canvas.height !== this.element.clientHeight) {\n      this.updateCanvas(this.element.clientWidth, this.element.clientHeight);\n    }\n    const width = this.canvas.width;\n    const height = this.canvas.height;\n    const barsWidth = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH;\n    const barsGutter = CoreFileUploaderAudioHistogramComponent.BARS_GUTTER;\n    const chunkLength = Math.floor(this.buffer.length / ((width - barsWidth - 1) / (barsWidth + barsGutter)));\n    const barsCount = Math.floor(this.buffer.length / chunkLength);\n    // Reset canvas.\n    this.context.fillRect(0, 0, width, height);\n    // Draw bars.\n    const startX = Math.floor((width - (barsWidth + barsGutter) * barsCount - barsWidth - 1) / 2);\n    this.context.beginPath();\n    this.paused ? this.drawPausedBars(startX) : this.drawActiveBars(startX);\n    this.context.stroke();\n    // Schedule next frame.\n    requestAnimationFrame(() => this.draw());\n  }\n  /**\n   * Draws bars on the histogram when it is active.\n   *\n   * @param x Starting x position.\n   */\n  drawActiveBars(x) {\n    if (!this.canvas || !this.context || !this.buffer) {\n      return;\n    }\n    let bufferX = 0;\n    const width = this.canvas.width;\n    const halfHeight = this.canvas.height / 2;\n    const halfMinHeight = CoreFileUploaderAudioHistogramComponent.BARS_MIN_HEIGHT / 2;\n    const barsWidth = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH;\n    const barsGutter = CoreFileUploaderAudioHistogramComponent.BARS_GUTTER;\n    const bufferLength = this.buffer.length;\n    const barsBufferWidth = Math.floor(bufferLength / ((width - barsWidth - 1) / (barsWidth + barsGutter)));\n    this.analyser.getByteTimeDomainData(this.buffer);\n    while (bufferX < bufferLength) {\n      let maxLevel = halfMinHeight;\n      do {\n        maxLevel = Math.max(maxLevel, halfHeight * (1 - this.buffer[bufferX] / 128));\n        bufferX++;\n      } while (bufferX % barsBufferWidth !== 0 && bufferX < bufferLength);\n      this.context.moveTo(x, halfHeight - maxLevel);\n      this.context.lineTo(x, halfHeight + maxLevel);\n      x += barsWidth + barsGutter;\n    }\n  }\n  /**\n   * Draws bars on the histogram when it is paused.\n   *\n   * @param x Starting x position.\n   */\n  drawPausedBars(x) {\n    if (!this.canvas || !this.context) {\n      return;\n    }\n    const width = this.canvas.width;\n    const halfHeight = this.canvas.height / 2;\n    const halfMinHeight = CoreFileUploaderAudioHistogramComponent.BARS_MIN_HEIGHT / 2;\n    const xStep = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH + CoreFileUploaderAudioHistogramComponent.BARS_GUTTER;\n    while (x < width) {\n      this.context.moveTo(x, halfHeight - halfMinHeight);\n      this.context.lineTo(x, halfHeight + halfMinHeight);\n      x += xStep;\n    }\n  }\n  /**\n   * Set canvas element dimensions and configure styles.\n   *\n   * @param width Canvas width.\n   * @param height Canvas height.\n   */\n  updateCanvas(width, height) {\n    if (!this.canvas || !this.context) {\n      return;\n    }\n    const styles = getComputedStyle(this.element);\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.context.fillStyle = styles.getPropertyValue('--background-color');\n    this.context.lineCap = 'round';\n    this.context.lineWidth = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH;\n    this.context.strokeStyle = styles.getPropertyValue('--bars-color');\n  }\n}\n_class = CoreFileUploaderAudioHistogramComponent;\n_class.BARS_WIDTH = 2;\n_class.BARS_MIN_HEIGHT = 4;\n_class.BARS_GUTTER = 4;\n_class.ɵfac = function CoreFileUploaderAudioHistogramComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"core-audio-histogram\"]],\n  viewQuery: function CoreFileUploaderAudioHistogramComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasRef = _t.first);\n    }\n  },\n  inputs: {\n    analyser: \"analyser\",\n    paused: \"paused\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"canvas\", \"\"]],\n  template: function CoreFileUploaderAudioHistogramComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"canvas\", null, 0);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n  --background-color: var(--ion-background-color, #fff);\\n  --bars-color: var(--ion-text-color, #000);\\n  position: relative;\\n}\\n[_nghost-%COMP%]   canvas[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jb3JlL2ZlYXR1cmVzL2ZpbGV1cGxvYWRlci9jb21wb25lbnRzL2F1ZGlvLWhpc3RvZ3JhbS9hdWRpby1oaXN0b2dyYW0uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFEQUFBO0VBQ0EseUNBQUE7RUFFQSxrQkFBQTtBQUFKO0FBRUk7RUFDSSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFBUiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgICAtLWJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yLCAjZmZmKTtcbiAgICAtLWJhcnMtY29sb3I6IHZhcigtLWlvbi10ZXh0LWNvbG9yLCAjMDAwKTtcblxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIGNhbnZhcyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"names":["CoreFileUploaderAudioHistogramComponent","constructor","nativeElement","destroyed","element","ngAfterViewInit","_this$canvasRef","_this$canvas","canvas","canvasRef","context","getContext","buffer","Uint8Array","analyser","fftSize","updateCanvas","clientWidth","clientHeight","draw","ngOnDestroy","width","height","barsWidth","BARS_WIDTH","barsGutter","BARS_GUTTER","chunkLength","Math","floor","length","barsCount","fillRect","startX","beginPath","paused","drawPausedBars","drawActiveBars","stroke","requestAnimationFrame","x","bufferX","halfHeight","halfMinHeight","BARS_MIN_HEIGHT","bufferLength","barsBufferWidth","getByteTimeDomainData","maxLevel","max","moveTo","lineTo","xStep","styles","getComputedStyle","fillStyle","getPropertyValue","lineCap","lineWidth","strokeStyle","_class","i0","ɵɵdirectiveInject","ElementRef","selectors","viewQuery","CoreFileUploaderAudioHistogramComponent_Query","rf","ctx","ɵɵelement"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/fileuploader/components/audio-histogram/audio-histogram.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/fileuploader/components/audio-histogram/audio-histogram.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\n\n@Component({\n    selector: 'core-audio-histogram',\n    templateUrl: 'audio-histogram.html',\n    styleUrls: ['audio-histogram.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CoreFileUploaderAudioHistogramComponent implements AfterViewInit, OnDestroy {\n\n    private static readonly BARS_WIDTH = 2;\n    private static readonly BARS_MIN_HEIGHT = 4;\n    private static readonly BARS_GUTTER = 4;\n\n    @Input() analyser!: AnalyserNode;\n    @Input() paused?: boolean;\n    @ViewChild('canvas') canvasRef?: ElementRef<HTMLCanvasElement>;\n\n    private element: HTMLElement;\n    private canvas?: HTMLCanvasElement;\n    private context?: CanvasRenderingContext2D | null;\n    private buffer?: Uint8Array;\n    private destroyed = false;\n\n    constructor({ nativeElement }: ElementRef<HTMLElement>) {\n        this.element = nativeElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngAfterViewInit(): void {\n        this.canvas = this.canvasRef?.nativeElement;\n        this.context = this.canvas?.getContext('2d');\n        this.buffer = new Uint8Array(this.analyser.fftSize);\n\n        this.updateCanvas(this.element.clientWidth, this.element.clientHeight);\n        this.draw();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /**\n     * Draw histogram.\n     */\n    private draw(): void {\n        if (this.destroyed || !this.canvas || !this.context || !this.buffer) {\n            return;\n        }\n\n        if (this.canvas.width !== this.element.clientWidth || this.canvas.height !== this.element.clientHeight) {\n            this.updateCanvas(this.element.clientWidth, this.element.clientHeight);\n        }\n\n        const width = this.canvas.width;\n        const height = this.canvas.height;\n        const barsWidth = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH;\n        const barsGutter = CoreFileUploaderAudioHistogramComponent.BARS_GUTTER;\n        const chunkLength = Math.floor(this.buffer.length / ((width - barsWidth - 1) / (barsWidth + barsGutter)));\n        const barsCount = Math.floor(this.buffer.length / chunkLength);\n\n        // Reset canvas.\n        this.context.fillRect(0, 0, width, height);\n\n        // Draw bars.\n        const startX = Math.floor((width - (barsWidth + barsGutter)*barsCount - barsWidth - 1)/2);\n\n        this.context.beginPath();\n        this.paused ? this.drawPausedBars(startX) : this.drawActiveBars(startX);\n        this.context.stroke();\n\n        // Schedule next frame.\n        requestAnimationFrame(() => this.draw());\n    }\n\n    /**\n     * Draws bars on the histogram when it is active.\n     *\n     * @param x Starting x position.\n     */\n    private drawActiveBars(x: number): void {\n        if (!this.canvas || !this.context || !this.buffer) {\n            return;\n        }\n\n        let bufferX = 0;\n        const width = this.canvas.width;\n        const halfHeight = this.canvas.height / 2;\n        const halfMinHeight = CoreFileUploaderAudioHistogramComponent.BARS_MIN_HEIGHT / 2;\n        const barsWidth = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH;\n        const barsGutter = CoreFileUploaderAudioHistogramComponent.BARS_GUTTER;\n        const bufferLength = this.buffer.length;\n        const barsBufferWidth = Math.floor(bufferLength / ((width - barsWidth - 1) / (barsWidth + barsGutter)));\n\n        this.analyser.getByteTimeDomainData(this.buffer);\n\n        while (bufferX < bufferLength) {\n            let maxLevel = halfMinHeight;\n\n            do {\n                maxLevel = Math.max(maxLevel, halfHeight * (1 - (this.buffer[bufferX] / 128)));\n                bufferX++;\n            } while (bufferX % barsBufferWidth !== 0 && bufferX < bufferLength);\n\n            this.context.moveTo(x, halfHeight - maxLevel);\n            this.context.lineTo(x, halfHeight + maxLevel);\n\n            x += barsWidth + barsGutter;\n        }\n    }\n\n    /**\n     * Draws bars on the histogram when it is paused.\n     *\n     * @param x Starting x position.\n     */\n    private drawPausedBars(x: number): void {\n        if (!this.canvas || !this.context) {\n            return;\n        }\n\n        const width = this.canvas.width;\n        const halfHeight = this.canvas.height / 2;\n        const halfMinHeight = CoreFileUploaderAudioHistogramComponent.BARS_MIN_HEIGHT / 2;\n        const xStep = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH + CoreFileUploaderAudioHistogramComponent.BARS_GUTTER;\n\n        while (x < width) {\n            this.context.moveTo(x, halfHeight - halfMinHeight);\n            this.context.lineTo(x, halfHeight + halfMinHeight);\n\n            x += xStep;\n        }\n    }\n\n    /**\n     * Set canvas element dimensions and configure styles.\n     *\n     * @param width Canvas width.\n     * @param height Canvas height.\n     */\n    private updateCanvas(width: number, height: number): void {\n        if (!this.canvas || !this.context) {\n            return;\n        }\n\n        const styles = getComputedStyle(this.element);\n\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.context.fillStyle = styles.getPropertyValue('--background-color');\n        this.context.lineCap = 'round';\n        this.context.lineWidth = CoreFileUploaderAudioHistogramComponent.BARS_WIDTH;\n        this.context.strokeStyle = styles.getPropertyValue('--bars-color');\n    }\n\n}\n","<canvas #canvas></canvas>\n"],"mappings":";;;AAsBA,OAAM,MAAOA,uCAAuC;EAgBhDC,YAAY;IAAEC;EAAa,CAA2B;IAF9C,KAAAC,SAAS,GAAG,KAAK;IAGrB,IAAI,CAACC,OAAO,GAAGF,aAAa;EAChC;EAEA;;;EAGAG,eAAeA,CAAA;IAAA,IAAAC,eAAA,EAAAC,YAAA;IACX,IAAI,CAACC,MAAM,IAAAF,eAAA,GAAG,IAAI,CAACG,SAAS,cAAAH,eAAA,uBAAdA,eAAA,CAAgBJ,aAAa;IAC3C,IAAI,CAACQ,OAAO,IAAAH,YAAA,GAAG,IAAI,CAACC,MAAM,cAAAD,YAAA,uBAAXA,YAAA,CAAaI,UAAU,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,MAAM,GAAG,IAAIC,UAAU,CAAC,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC;IAEnD,IAAI,CAACC,YAAY,CAAC,IAAI,CAACZ,OAAO,CAACa,WAAW,EAAE,IAAI,CAACb,OAAO,CAACc,YAAY,CAAC;IACtE,IAAI,CAACC,IAAI,EAAE;EACf;EAEA;;;EAGAC,WAAWA,CAAA;IACP,IAAI,CAACjB,SAAS,GAAG,IAAI;EACzB;EAEA;;;EAGQgB,IAAIA,CAAA;IACR,IAAI,IAAI,CAAChB,SAAS,IAAI,CAAC,IAAI,CAACK,MAAM,IAAI,CAAC,IAAI,CAACE,OAAO,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE;MACjE;;IAGJ,IAAI,IAAI,CAACJ,MAAM,CAACa,KAAK,KAAK,IAAI,CAACjB,OAAO,CAACa,WAAW,IAAI,IAAI,CAACT,MAAM,CAACc,MAAM,KAAK,IAAI,CAAClB,OAAO,CAACc,YAAY,EAAE;MACpG,IAAI,CAACF,YAAY,CAAC,IAAI,CAACZ,OAAO,CAACa,WAAW,EAAE,IAAI,CAACb,OAAO,CAACc,YAAY,CAAC;;IAG1E,MAAMG,KAAK,GAAG,IAAI,CAACb,MAAM,CAACa,KAAK;IAC/B,MAAMC,MAAM,GAAG,IAAI,CAACd,MAAM,CAACc,MAAM;IACjC,MAAMC,SAAS,GAAGvB,uCAAuC,CAACwB,UAAU;IACpE,MAAMC,UAAU,GAAGzB,uCAAuC,CAAC0B,WAAW;IACtE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACjB,MAAM,CAACkB,MAAM,IAAI,CAACT,KAAK,GAAGE,SAAS,GAAG,CAAC,KAAKA,SAAS,GAAGE,UAAU,CAAC,CAAC,CAAC;IACzG,MAAMM,SAAS,GAAGH,IAAI,CAACC,KAAK,CAAC,IAAI,CAACjB,MAAM,CAACkB,MAAM,GAAGH,WAAW,CAAC;IAE9D;IACA,IAAI,CAACjB,OAAO,CAACsB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEX,KAAK,EAAEC,MAAM,CAAC;IAE1C;IACA,MAAMW,MAAM,GAAGL,IAAI,CAACC,KAAK,CAAC,CAACR,KAAK,GAAG,CAACE,SAAS,GAAGE,UAAU,IAAEM,SAAS,GAAGR,SAAS,GAAG,CAAC,IAAE,CAAC,CAAC;IAEzF,IAAI,CAACb,OAAO,CAACwB,SAAS,EAAE;IACxB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,cAAc,CAACH,MAAM,CAAC,GAAG,IAAI,CAACI,cAAc,CAACJ,MAAM,CAAC;IACvE,IAAI,CAACvB,OAAO,CAAC4B,MAAM,EAAE;IAErB;IACAC,qBAAqB,CAAC,MAAM,IAAI,CAACpB,IAAI,EAAE,CAAC;EAC5C;EAEA;;;;;EAKQkB,cAAcA,CAACG,CAAS;IAC5B,IAAI,CAAC,IAAI,CAAChC,MAAM,IAAI,CAAC,IAAI,CAACE,OAAO,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE;MAC/C;;IAGJ,IAAI6B,OAAO,GAAG,CAAC;IACf,MAAMpB,KAAK,GAAG,IAAI,CAACb,MAAM,CAACa,KAAK;IAC/B,MAAMqB,UAAU,GAAG,IAAI,CAAClC,MAAM,CAACc,MAAM,GAAG,CAAC;IACzC,MAAMqB,aAAa,GAAG3C,uCAAuC,CAAC4C,eAAe,GAAG,CAAC;IACjF,MAAMrB,SAAS,GAAGvB,uCAAuC,CAACwB,UAAU;IACpE,MAAMC,UAAU,GAAGzB,uCAAuC,CAAC0B,WAAW;IACtE,MAAMmB,YAAY,GAAG,IAAI,CAACjC,MAAM,CAACkB,MAAM;IACvC,MAAMgB,eAAe,GAAGlB,IAAI,CAACC,KAAK,CAACgB,YAAY,IAAI,CAACxB,KAAK,GAAGE,SAAS,GAAG,CAAC,KAAKA,SAAS,GAAGE,UAAU,CAAC,CAAC,CAAC;IAEvG,IAAI,CAACX,QAAQ,CAACiC,qBAAqB,CAAC,IAAI,CAACnC,MAAM,CAAC;IAEhD,OAAO6B,OAAO,GAAGI,YAAY,EAAE;MAC3B,IAAIG,QAAQ,GAAGL,aAAa;MAE5B,GAAG;QACCK,QAAQ,GAAGpB,IAAI,CAACqB,GAAG,CAACD,QAAQ,EAAEN,UAAU,IAAI,CAAC,GAAI,IAAI,CAAC9B,MAAM,CAAC6B,OAAO,CAAC,GAAG,GAAI,CAAC,CAAC;QAC9EA,OAAO,EAAE;OACZ,QAAQA,OAAO,GAAGK,eAAe,KAAK,CAAC,IAAIL,OAAO,GAAGI,YAAY;MAElE,IAAI,CAACnC,OAAO,CAACwC,MAAM,CAACV,CAAC,EAAEE,UAAU,GAAGM,QAAQ,CAAC;MAC7C,IAAI,CAACtC,OAAO,CAACyC,MAAM,CAACX,CAAC,EAAEE,UAAU,GAAGM,QAAQ,CAAC;MAE7CR,CAAC,IAAIjB,SAAS,GAAGE,UAAU;;EAEnC;EAEA;;;;;EAKQW,cAAcA,CAACI,CAAS;IAC5B,IAAI,CAAC,IAAI,CAAChC,MAAM,IAAI,CAAC,IAAI,CAACE,OAAO,EAAE;MAC/B;;IAGJ,MAAMW,KAAK,GAAG,IAAI,CAACb,MAAM,CAACa,KAAK;IAC/B,MAAMqB,UAAU,GAAG,IAAI,CAAClC,MAAM,CAACc,MAAM,GAAG,CAAC;IACzC,MAAMqB,aAAa,GAAG3C,uCAAuC,CAAC4C,eAAe,GAAG,CAAC;IACjF,MAAMQ,KAAK,GAAGpD,uCAAuC,CAACwB,UAAU,GAAGxB,uCAAuC,CAAC0B,WAAW;IAEtH,OAAOc,CAAC,GAAGnB,KAAK,EAAE;MACd,IAAI,CAACX,OAAO,CAACwC,MAAM,CAACV,CAAC,EAAEE,UAAU,GAAGC,aAAa,CAAC;MAClD,IAAI,CAACjC,OAAO,CAACyC,MAAM,CAACX,CAAC,EAAEE,UAAU,GAAGC,aAAa,CAAC;MAElDH,CAAC,IAAIY,KAAK;;EAElB;EAEA;;;;;;EAMQpC,YAAYA,CAACK,KAAa,EAAEC,MAAc;IAC9C,IAAI,CAAC,IAAI,CAACd,MAAM,IAAI,CAAC,IAAI,CAACE,OAAO,EAAE;MAC/B;;IAGJ,MAAM2C,MAAM,GAAGC,gBAAgB,CAAC,IAAI,CAAClD,OAAO,CAAC;IAE7C,IAAI,CAACI,MAAM,CAACa,KAAK,GAAGA,KAAK;IACzB,IAAI,CAACb,MAAM,CAACc,MAAM,GAAGA,MAAM;IAC3B,IAAI,CAACZ,OAAO,CAAC6C,SAAS,GAAGF,MAAM,CAACG,gBAAgB,CAAC,oBAAoB,CAAC;IACtE,IAAI,CAAC9C,OAAO,CAAC+C,OAAO,GAAG,OAAO;IAC9B,IAAI,CAAC/C,OAAO,CAACgD,SAAS,GAAG1D,uCAAuC,CAACwB,UAAU;IAC3E,IAAI,CAACd,OAAO,CAACiD,WAAW,GAAGN,MAAM,CAACG,gBAAgB,CAAC,cAAc,CAAC;EACtE;;SAtJSxD,uCAAuC;AAExB4D,MAAA,CAAApC,UAAU,GAAG,CAAC;AACdoC,MAAA,CAAAhB,eAAe,GAAG,CAAC;AACnBgB,MAAA,CAAAlC,WAAW,GAAG,CAAC;;mBAJ9B1B,MAAuC,EAAA6D,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;;QAAvC/D,MAAuC;EAAAgE,SAAA;EAAAC,SAAA,WAAAC,8CAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;MCtBpDN,EAAA,CAAAQ,SAAA,sBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}