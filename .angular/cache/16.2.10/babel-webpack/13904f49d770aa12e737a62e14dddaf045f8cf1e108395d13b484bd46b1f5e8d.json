{"ast":null,"code":"var _class;\nimport { makeSingleton } from '@singletons';\nimport { AddonModWorkshopSync } from '../workshop-sync';\nimport { AddonModWorkshopSyncCronHandlerService } from './sync-cron';\nimport * as i0 from \"@angular/core\";\n/**\n * Synchronization cron handler.\n */\nexport class AddonModWorkshopSyncCronHandlerLazyService extends AddonModWorkshopSyncCronHandlerService {\n  /**\n   * @inheritdoc\n   */\n  execute(siteId, force) {\n    return AddonModWorkshopSync.syncAllWorkshops(siteId, force);\n  }\n  /**\n   * @inheritdoc\n   */\n  getInterval() {\n    return AddonModWorkshopSync.syncInterval;\n  }\n}\n_class = AddonModWorkshopSyncCronHandlerLazyService;\n_class.ɵfac = /*@__PURE__*/function () {\n  let ɵAddonModWorkshopSyncCronHandlerLazyService_BaseFactory;\n  return function AddonModWorkshopSyncCronHandlerLazyService_Factory(t) {\n    return (ɵAddonModWorkshopSyncCronHandlerLazyService_BaseFactory || (ɵAddonModWorkshopSyncCronHandlerLazyService_BaseFactory = i0.ɵɵgetInheritedFactory(_class)))(t || _class);\n  };\n}();\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonModWorkshopSyncCronHandler = makeSingleton(AddonModWorkshopSyncCronHandlerLazyService);","map":{"version":3,"names":["makeSingleton","AddonModWorkshopSync","AddonModWorkshopSyncCronHandlerService","AddonModWorkshopSyncCronHandlerLazyService","execute","siteId","force","syncAllWorkshops","getInterval","syncInterval","t","factory","ɵfac","providedIn","AddonModWorkshopSyncCronHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/mod/workshop/services/handlers/sync-cron-lazy.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCronHandler } from '@services/cron';\nimport { makeSingleton } from '@singletons';\nimport { AddonModWorkshopSync } from '../workshop-sync';\nimport { AddonModWorkshopSyncCronHandlerService } from './sync-cron';\n\n/**\n * Synchronization cron handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonModWorkshopSyncCronHandlerLazyService\n    extends AddonModWorkshopSyncCronHandlerService\n    implements CoreCronHandler {\n\n    /**\n     * @inheritdoc\n     */\n    execute(siteId?: string, force?: boolean): Promise<void> {\n        return AddonModWorkshopSync.syncAllWorkshops(siteId, force);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getInterval(): number {\n        return AddonModWorkshopSync.syncInterval;\n    }\n\n}\nexport const AddonModWorkshopSyncCronHandler = makeSingleton(AddonModWorkshopSyncCronHandlerLazyService);\n"],"mappings":";AAgBA,SAASA,aAAa,QAAQ,aAAa;AAC3C,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,sCAAsC,QAAQ,aAAa;;AAEpE;;;AAIA,OAAM,MAAOC,0CACT,SAAQD,sCAAsC;EAG9C;;;EAGAE,OAAOA,CAACC,MAAe,EAAEC,KAAe;IACpC,OAAOL,oBAAoB,CAACM,gBAAgB,CAACF,MAAM,EAAEC,KAAK,CAAC;EAC/D;EAEA;;;EAGAE,WAAWA,CAAA;IACP,OAAOP,oBAAoB,CAACQ,YAAY;EAC5C;;SAhBSN,0CACT;;;;2JADSA,MAA0C,IAAAO,CAAA,IAA1CP,MAA0C;EAAA;AAAA;;SAA1CA,MAA0C;EAAAQ,OAAA,EAA1CR,MAA0C,CAAAS,IAAA;EAAAC,UAAA,EAD7B;AAAM;AAoBhC,OAAO,MAAMC,+BAA+B,GAAGd,aAAa,CAACG,0CAA0C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}