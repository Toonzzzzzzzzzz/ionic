{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { makeSingleton } from '@singletons';\nimport * as i0 from \"@angular/core\";\n/**\n * Mange storage settings handler.\n */\nexport class AddonStorageManagerSettingsHandlerService {\n  constructor() {\n    this.name = 'AddonStorageManager';\n    this.priority = 400;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getDisplayData() {\n    return {\n      icon: 'fas-box-archive',\n      title: 'addon.storagemanager.managedownloads',\n      page: AddonStorageManagerSettingsHandlerService.PAGE_NAME,\n      class: 'addon-storagemanager-settings-handler'\n    };\n  }\n}\n_class = AddonStorageManagerSettingsHandlerService;\n_class.PAGE_NAME = 'storage';\n_class.ɵfac = function AddonStorageManagerSettingsHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonStorageManagerSettingsHandler = makeSingleton(AddonStorageManagerSettingsHandlerService);","map":{"version":3,"names":["makeSingleton","AddonStorageManagerSettingsHandlerService","constructor","name","priority","isEnabled","_asyncToGenerator","getDisplayData","icon","title","page","PAGE_NAME","class","_class","factory","ɵfac","providedIn","AddonStorageManagerSettingsHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/storagemanager/services/handlers/settings.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { makeSingleton } from '@singletons';\nimport { CoreSettingsHandler, CoreSettingsHandlerData } from '@features/settings/services/settings-delegate';\n\n/**\n * Mange storage settings handler.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonStorageManagerSettingsHandlerService implements CoreSettingsHandler {\n\n    static readonly PAGE_NAME = 'storage';\n\n    name = 'AddonStorageManager';\n    priority = 400;\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getDisplayData(): CoreSettingsHandlerData {\n        return {\n            icon: 'fas-box-archive',\n            title: 'addon.storagemanager.managedownloads',\n            page: AddonStorageManagerSettingsHandlerService.PAGE_NAME,\n            class: 'addon-storagemanager-settings-handler',\n        };\n    }\n\n}\n\nexport const AddonStorageManagerSettingsHandler = makeSingleton(AddonStorageManagerSettingsHandlerService);\n"],"mappings":";;AAgBA,SAASA,aAAa,QAAQ,aAAa;;AAG3C;;;AAIA,OAAM,MAAOC,yCAAyC;EADtDC,YAAA;IAKI,KAAAC,IAAI,GAAG,qBAAqB;IAC5B,KAAAC,QAAQ,GAAG,GAAG;;EAEd;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAO,IAAI;IAAC;EAChB;EAEA;;;EAGAC,cAAcA,CAAA;IACV,OAAO;MACHC,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,sCAAsC;MAC7CC,IAAI,EAAET,yCAAyC,CAACU,SAAS;MACzDC,KAAK,EAAE;KACV;EACL;;SAxBSX,yCAAyC;AAElCY,MAAA,CAAAF,SAAS,GAAG,SAAS;;mBAF5BV,MAAyC;AAAA;;SAAzCA,MAAyC;EAAAa,OAAA,EAAzCb,MAAyC,CAAAc,IAAA;EAAAC,UAAA,EAD5B;AAAM;AA6BhC,OAAO,MAAMC,kCAAkC,GAAGjB,aAAa,CAACC,yCAAyC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}