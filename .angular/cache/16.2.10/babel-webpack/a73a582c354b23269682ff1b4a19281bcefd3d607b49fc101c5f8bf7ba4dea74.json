{"ast":null,"code":"// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Database variables for CoreXAPIOfflineProvider service.\n */\nexport const STATEMENTS_TABLE_NAME = 'core_xapi_statements';\nexport const STATES_TABLE_NAME = 'core_xapi_states';\nexport const SITE_SCHEMA = {\n  name: 'CoreXAPIOfflineProvider',\n  version: 2,\n  tables: [{\n    name: STATEMENTS_TABLE_NAME,\n    columns: [{\n      name: 'id',\n      type: 'INTEGER',\n      primaryKey: true,\n      autoIncrement: true\n    }, {\n      name: 'contextid',\n      type: 'INTEGER'\n    }, {\n      name: 'component',\n      type: 'TEXT'\n    }, {\n      name: 'statements',\n      type: 'TEXT'\n    }, {\n      name: 'timecreated',\n      type: 'INTEGER'\n    }, {\n      name: 'courseid',\n      type: 'INTEGER'\n    }, {\n      name: 'extra',\n      type: 'TEXT'\n    }]\n  }, {\n    name: STATES_TABLE_NAME,\n    columns: [{\n      name: 'id',\n      type: 'INTEGER',\n      primaryKey: true,\n      autoIncrement: true\n    }, {\n      name: 'component',\n      type: 'TEXT',\n      notNull: true\n    }, {\n      name: 'itemid',\n      type: 'INTEGER',\n      notNull: true\n    }, {\n      name: 'stateid',\n      type: 'TEXT',\n      notNull: true\n    }, {\n      name: 'statedata',\n      type: 'TEXT'\n    }, {\n      name: 'registration',\n      type: 'TEXT'\n    }, {\n      name: 'timecreated',\n      type: 'INTEGER',\n      notNull: true\n    }, {\n      name: 'timemodified',\n      type: 'INTEGER',\n      notNull: true\n    }, {\n      name: 'courseid',\n      type: 'INTEGER'\n    }, {\n      name: 'extra',\n      type: 'TEXT'\n    }]\n  }]\n};","map":{"version":3,"names":["STATEMENTS_TABLE_NAME","STATES_TABLE_NAME","SITE_SCHEMA","name","version","tables","columns","type","primaryKey","autoIncrement","notNull"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/xapi/services/database/xapi.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreSiteSchema } from '@services/sites';\n\n/**\n * Database variables for CoreXAPIOfflineProvider service.\n */\nexport const STATEMENTS_TABLE_NAME = 'core_xapi_statements';\nexport const STATES_TABLE_NAME = 'core_xapi_states';\nexport const SITE_SCHEMA: CoreSiteSchema = {\n    name: 'CoreXAPIOfflineProvider',\n    version: 2,\n    tables: [\n        {\n            name: STATEMENTS_TABLE_NAME,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'INTEGER',\n                    primaryKey: true,\n                    autoIncrement: true,\n                },\n                {\n                    name: 'contextid',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'component',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'statements',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'timecreated',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'courseid',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'extra',\n                    type: 'TEXT',\n                },\n            ],\n        },\n        {\n            name: STATES_TABLE_NAME,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'INTEGER',\n                    primaryKey: true,\n                    autoIncrement: true,\n                },\n                {\n                    name: 'component',\n                    type: 'TEXT',\n                    notNull: true,\n                },\n                {\n                    name: 'itemid',\n                    type: 'INTEGER',\n                    notNull: true,\n                },\n                {\n                    name: 'stateid',\n                    type: 'TEXT',\n                    notNull: true,\n                },\n                {\n                    name: 'statedata',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'registration',\n                    type: 'TEXT',\n                },\n                {\n                    name: 'timecreated',\n                    type: 'INTEGER',\n                    notNull: true,\n                },\n                {\n                    name: 'timemodified',\n                    type: 'INTEGER',\n                    notNull: true,\n                },\n                {\n                    name: 'courseid',\n                    type: 'INTEGER',\n                },\n                {\n                    name: 'extra',\n                    type: 'TEXT',\n                },\n            ],\n        },\n    ],\n};\n\n/**\n * Structure of statement data stored in DB.\n */\nexport type CoreXAPIStatementDBRecord = {\n    id: number; // ID.\n    contextid: number; // Context ID of the statements.\n    component: string; // Component to send the statements to.\n    statements: string; // Statements (JSON-encoded).\n    timecreated: number; // When were the statements created.\n    courseid?: number; // Course ID if the context is inside a course.\n    extra?: string; // Extra data.\n};\n\n/**\n * Structure of state data stored in DB.\n */\nexport type CoreXAPIStateDBRecord = {\n    id: number; // ID.\n    component: string; // Component name.\n    itemid: number; // The Agent Id (usually the plugin instance).\n    stateid: string; // Component identified for the state data.\n    statedata?: string; // JSON state data.\n    registration?: string; // Optional registration identifier.\n    timecreated: number; // When was the state modified.\n    timemodified: number; // When was the state modified.\n    courseid?: number; // Course ID if the activity is inside a course.\n    extra?: string; // Extra data.\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;AAGA,OAAO,MAAMA,qBAAqB,GAAG,sBAAsB;AAC3D,OAAO,MAAMC,iBAAiB,GAAG,kBAAkB;AACnD,OAAO,MAAMC,WAAW,GAAmB;EACvCC,IAAI,EAAE,yBAAyB;EAC/BC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE,CACJ;IACIF,IAAI,EAAEH,qBAAqB;IAC3BM,OAAO,EAAE,CACL;MACIH,IAAI,EAAE,IAAI;MACVI,IAAI,EAAE,SAAS;MACfC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE;KAClB,EACD;MACIN,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,YAAY;MAClBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,aAAa;MACnBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,UAAU;MAChBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,OAAO;MACbI,IAAI,EAAE;KACT;GAER,EACD;IACIJ,IAAI,EAAEF,iBAAiB;IACvBK,OAAO,EAAE,CACL;MACIH,IAAI,EAAE,IAAI;MACVI,IAAI,EAAE,SAAS;MACfC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE;KAClB,EACD;MACIN,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE,MAAM;MACZG,OAAO,EAAE;KACZ,EACD;MACIP,IAAI,EAAE,QAAQ;MACdI,IAAI,EAAE,SAAS;MACfG,OAAO,EAAE;KACZ,EACD;MACIP,IAAI,EAAE,SAAS;MACfI,IAAI,EAAE,MAAM;MACZG,OAAO,EAAE;KACZ,EACD;MACIP,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,cAAc;MACpBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,aAAa;MACnBI,IAAI,EAAE,SAAS;MACfG,OAAO,EAAE;KACZ,EACD;MACIP,IAAI,EAAE,cAAc;MACpBI,IAAI,EAAE,SAAS;MACfG,OAAO,EAAE;KACZ,EACD;MACIP,IAAI,EAAE,UAAU;MAChBI,IAAI,EAAE;KACT,EACD;MACIJ,IAAI,EAAE,OAAO;MACbI,IAAI,EAAE;KACT;GAER;CAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}