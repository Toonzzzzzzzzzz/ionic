{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { AddonPrivateFiles } from '@addons/privatefiles/services/privatefiles';\nimport { makeSingleton } from '@singletons';\nimport { CoreUserDelegateContext, CoreUserDelegateService } from '@features/user/services/user-delegate';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport * as i0 from \"@angular/core\";\n/**\n * Handler to inject an option into user menu.\n */\nexport class AddonPrivateFilesUserHandlerService {\n  constructor() {\n    this.name = 'AddonPrivateFiles';\n    this.priority = 400;\n    this.type = CoreUserDelegateService.TYPE_NEW_PAGE;\n    this.cacheEnabled = true;\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabled() {\n    return _asyncToGenerator(function* () {\n      return AddonPrivateFiles.isPluginEnabled();\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabledForContext(context) {\n    return _asyncToGenerator(function* () {\n      // Private files only available in user menu.\n      if (context !== CoreUserDelegateContext.USER_MENU) {\n        return false;\n      }\n      // Check if feature is disabled.\n      const currentSite = CoreSites.getCurrentSite();\n      if (!currentSite) {\n        return false;\n      }\n      // This option used to belong to main menu, check the original disabled feature value.\n      return !currentSite.isFeatureDisabled('CoreMainMenuDelegate_AddonPrivateFiles');\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  isEnabledForUser(user, context) {\n    return _asyncToGenerator(function* () {\n      // Private files only available for the current user.\n      return user.id == CoreSites.getCurrentSiteUserId() && context === CoreUserDelegateContext.USER_MENU;\n    })();\n  }\n  /**\n   * @inheritdoc\n   */\n  getDisplayData() {\n    return {\n      icon: 'fas-folder',\n      title: 'addon.privatefiles.files',\n      class: 'addon-privatefiles-handler',\n      action: event => {\n        event.preventDefault();\n        event.stopPropagation();\n        CoreNavigator.navigateToSitePath(AddonPrivateFilesUserHandlerService.PAGE_NAME);\n      }\n    };\n  }\n}\n_class = AddonPrivateFilesUserHandlerService;\n_class.PAGE_NAME = 'private';\n_class.ɵfac = function AddonPrivateFilesUserHandlerService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport const AddonPrivateFilesUserHandler = makeSingleton(AddonPrivateFilesUserHandlerService);","map":{"version":3,"names":["AddonPrivateFiles","makeSingleton","CoreUserDelegateContext","CoreUserDelegateService","CoreNavigator","CoreSites","AddonPrivateFilesUserHandlerService","constructor","name","priority","type","TYPE_NEW_PAGE","cacheEnabled","isEnabled","_asyncToGenerator","isPluginEnabled","isEnabledForContext","context","USER_MENU","currentSite","getCurrentSite","isFeatureDisabled","isEnabledForUser","user","id","getCurrentSiteUserId","getDisplayData","icon","title","class","action","event","preventDefault","stopPropagation","navigateToSitePath","PAGE_NAME","_class","factory","ɵfac","providedIn","AddonPrivateFilesUserHandler"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/privatefiles/services/handlers/user.ts"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\n\nimport { AddonPrivateFiles } from '@addons/privatefiles/services/privatefiles';\nimport { makeSingleton } from '@singletons';\nimport {\n    CoreUserDelegateContext,\n    CoreUserDelegateService,\n    CoreUserProfileHandler,\n    CoreUserProfileHandlerData,\n} from '@features/user/services/user-delegate';\nimport { CoreUserProfile } from '@features/user/services/user';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\n\n/**\n * Handler to inject an option into user menu.\n */\n@Injectable({ providedIn: 'root' })\nexport class AddonPrivateFilesUserHandlerService implements CoreUserProfileHandler {\n\n    static readonly PAGE_NAME = 'private';\n\n    name = 'AddonPrivateFiles';\n    priority = 400;\n    type = CoreUserDelegateService.TYPE_NEW_PAGE;\n    cacheEnabled = true;\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabled(): Promise<boolean> {\n        return AddonPrivateFiles.isPluginEnabled();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabledForContext(context: CoreUserDelegateContext): Promise<boolean> {\n        // Private files only available in user menu.\n        if (context !== CoreUserDelegateContext.USER_MENU) {\n            return false;\n        }\n\n        // Check if feature is disabled.\n        const currentSite = CoreSites.getCurrentSite();\n        if (!currentSite) {\n            return false;\n        }\n\n        // This option used to belong to main menu, check the original disabled feature value.\n        return !currentSite.isFeatureDisabled('CoreMainMenuDelegate_AddonPrivateFiles');\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async isEnabledForUser(user: CoreUserProfile, context: CoreUserDelegateContext): Promise<boolean> {\n        // Private files only available for the current user.\n        return user.id == CoreSites.getCurrentSiteUserId() && context === CoreUserDelegateContext.USER_MENU;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getDisplayData(): CoreUserProfileHandlerData {\n        return {\n            icon: 'fas-folder',\n            title: 'addon.privatefiles.files',\n            class: 'addon-privatefiles-handler',\n            action: (event): void => {\n                event.preventDefault();\n                event.stopPropagation();\n                CoreNavigator.navigateToSitePath(AddonPrivateFilesUserHandlerService.PAGE_NAME);\n            },\n        };\n    }\n\n}\n\nexport const AddonPrivateFilesUserHandler = makeSingleton(AddonPrivateFilesUserHandlerService);\n"],"mappings":";;AAgBA,SAASA,iBAAiB,QAAQ,4CAA4C;AAC9E,SAASC,aAAa,QAAQ,aAAa;AAC3C,SACIC,uBAAuB,EACvBC,uBAAuB,QAGpB,uCAAuC;AAE9C,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,SAAS,QAAQ,iBAAiB;;AAE3C;;;AAIA,OAAM,MAAOC,mCAAmC;EADhDC,YAAA;IAKI,KAAAC,IAAI,GAAG,mBAAmB;IAC1B,KAAAC,QAAQ,GAAG,GAAG;IACd,KAAAC,IAAI,GAAGP,uBAAuB,CAACQ,aAAa;IAC5C,KAAAC,YAAY,GAAG,IAAI;;EAEnB;;;EAGMC,SAASA,CAAA;IAAA,OAAAC,iBAAA;MACX,OAAOd,iBAAiB,CAACe,eAAe,EAAE;IAAC;EAC/C;EAEA;;;EAGMC,mBAAmBA,CAACC,OAAgC;IAAA,OAAAH,iBAAA;MACtD;MACA,IAAIG,OAAO,KAAKf,uBAAuB,CAACgB,SAAS,EAAE;QAC/C,OAAO,KAAK;;MAGhB;MACA,MAAMC,WAAW,GAAGd,SAAS,CAACe,cAAc,EAAE;MAC9C,IAAI,CAACD,WAAW,EAAE;QACd,OAAO,KAAK;;MAGhB;MACA,OAAO,CAACA,WAAW,CAACE,iBAAiB,CAAC,wCAAwC,CAAC;IAAC;EACpF;EAEA;;;EAGMC,gBAAgBA,CAACC,IAAqB,EAAEN,OAAgC;IAAA,OAAAH,iBAAA;MAC1E;MACA,OAAOS,IAAI,CAACC,EAAE,IAAInB,SAAS,CAACoB,oBAAoB,EAAE,IAAIR,OAAO,KAAKf,uBAAuB,CAACgB,SAAS;IAAC;EACxG;EAEA;;;EAGAQ,cAAcA,CAAA;IACV,OAAO;MACHC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE,0BAA0B;MACjCC,KAAK,EAAE,4BAA4B;MACnCC,MAAM,EAAGC,KAAK,IAAU;QACpBA,KAAK,CAACC,cAAc,EAAE;QACtBD,KAAK,CAACE,eAAe,EAAE;QACvB7B,aAAa,CAAC8B,kBAAkB,CAAC5B,mCAAmC,CAAC6B,SAAS,CAAC;MACnF;KACH;EACL;;SAzDS7B,mCAAmC;AAE5B8B,MAAA,CAAAD,SAAS,GAAG,SAAS;;mBAF5B7B,MAAmC;AAAA;;SAAnCA,MAAmC;EAAA+B,OAAA,EAAnC/B,MAAmC,CAAAgC,IAAA;EAAAC,UAAA,EADtB;AAAM;AA8DhC,OAAO,MAAMC,4BAA4B,GAAGvC,aAAa,CAACK,mCAAmC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}