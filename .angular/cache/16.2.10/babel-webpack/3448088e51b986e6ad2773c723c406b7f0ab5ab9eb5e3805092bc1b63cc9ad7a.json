{"ast":null,"code":"var _class;\nimport { CoreQuestionBaseComponent } from '@features/question/classes/base-question-component';\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../core/directives/format-text\";\nimport * as i3 from \"@ionic/angular\";\nfunction AddonQtypeGapSelectComponent_ion_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-list\", 1)(1, \"ion-item\", 2)(2, \"ion-label\")(3, \"core-format-text\", 3);\n    i0.ɵɵlistener(\"afterRender\", function AddonQtypeGapSelectComponent_ion_list_0_Template_core_format_text_afterRender_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.questionRendered());\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"component\", ctx_r0.component)(\"componentId\", ctx_r0.componentId)(\"text\", ctx_r0.question.text)(\"contextLevel\", ctx_r0.contextLevel)(\"contextInstanceId\", ctx_r0.contextInstanceId)(\"courseId\", ctx_r0.courseId);\n  }\n}\n/**\n * Component to render a gap select question.\n */\nexport class AddonQtypeGapSelectComponent extends CoreQuestionBaseComponent {\n  constructor(elementRef) {\n    super('AddonQtypeGapSelectComponent', elementRef);\n  }\n  /**\n   * @inheritdoc\n   */\n  init() {\n    this.initOriginalTextComponent('.qtext');\n  }\n  /**\n   * The question has been rendered.\n   */\n  questionRendered() {\n    CoreQuestionHelper.treatCorrectnessIconsClicks(this.hostElement, this.component, this.componentId, this.contextLevel, this.contextInstanceId, this.courseId);\n  }\n}\n_class = AddonQtypeGapSelectComponent;\n_class.ɵfac = function AddonQtypeGapSelectComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"addon-qtype-gapselect\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"addon-qtype-gapselect-container\", 4, \"ngIf\"], [1, \"addon-qtype-gapselect-container\"], [1, \"ion-text-wrap\"], [3, \"component\", \"componentId\", \"text\", \"contextLevel\", \"contextInstanceId\", \"courseId\", \"afterRender\"]],\n  template: function AddonQtypeGapSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddonQtypeGapSelectComponent_ion_list_0_Template, 4, 6, \"ion-list\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.question && (ctx.question.text || ctx.question.text === \"\"));\n    }\n  },\n  dependencies: [i1.NgIf, i2.CoreFormatTextDirective, i3.IonItem, i3.IonLabel, i3.IonList],\n  styles: [\"[_nghost-%COMP%]     p {\\n  margin: 0 0 0.5em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hZGRvbnMvcXR5cGUvZ2Fwc2VsZWN0L2NvbXBvbmVudC9nYXBzZWxlY3Quc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFSTtFQUNJLGlCQUFBO0FBRFIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTdHlsZSBnYXBzZWxlY3QgY29udGVudCBhIGJpdC4gTW9zdCBvZiB0aGVzZSBzdHlsZXMgYXJlIGNvcGllZCBmcm9tIE1vb2RsZS5cbjpob3N0IDo6bmctZGVlcCB7XG4gICAgcCB7XG4gICAgICAgIG1hcmdpbjogMCAwIC41ZW07XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["CoreQuestionBaseComponent","CoreQuestionHelper","i0","ɵɵelementStart","ɵɵlistener","AddonQtypeGapSelectComponent_ion_list_0_Template_core_format_text_afterRender_3_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","questionRendered","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","component","componentId","question","text","contextLevel","contextInstanceId","courseId","AddonQtypeGapSelectComponent","constructor","elementRef","init","initOriginalTextComponent","treatCorrectnessIconsClicks","hostElement","ɵɵdirectiveInject","ElementRef","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AddonQtypeGapSelectComponent_Template","rf","ctx","ɵɵtemplate","AddonQtypeGapSelectComponent_ion_list_0_Template"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qtype/gapselect/component/gapselect.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/addons/qtype/gapselect/component/addon-qtype-gapselect.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component,  ElementRef } from '@angular/core';\n\nimport { CoreQuestionBaseComponent } from '@features/question/classes/base-question-component';\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\n\n/**\n * Component to render a gap select question.\n */\n@Component({\n    selector: 'addon-qtype-gapselect',\n    templateUrl: 'addon-qtype-gapselect.html',\n    styleUrls: ['gapselect.scss'],\n})\nexport class AddonQtypeGapSelectComponent extends CoreQuestionBaseComponent {\n\n    constructor(elementRef: ElementRef) {\n        super('AddonQtypeGapSelectComponent', elementRef);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    init(): void {\n        this.initOriginalTextComponent('.qtext');\n    }\n\n    /**\n     * The question has been rendered.\n     */\n    questionRendered(): void {\n        CoreQuestionHelper.treatCorrectnessIconsClicks(\n            this.hostElement,\n            this.component,\n            this.componentId,\n            this.contextLevel,\n            this.contextInstanceId,\n            this.courseId,\n        );\n    }\n\n}\n","<ion-list class=\"addon-qtype-gapselect-container\" *ngIf=\"question && (question.text || question.text === '')\">\n    <ion-item class=\"ion-text-wrap\">\n        <ion-label>\n            <core-format-text [component]=\"component\" [componentId]=\"componentId\" [text]=\"question.text\" [contextLevel]=\"contextLevel\"\n                [contextInstanceId]=\"contextInstanceId\" [courseId]=\"courseId\" (afterRender)=\"questionRendered()\" />\n        </ion-label>\n    </ion-item>\n</ion-list>\n"],"mappings":";AAgBA,SAASA,yBAAyB,QAAQ,oDAAoD;AAC9F,SAASC,kBAAkB,QAAQ,6CAA6C;;;;;;;;ICjBhFC,EAAA,CAAAC,cAAA,kBAA8G;IAIhCD,EAAA,CAAAE,UAAA,yBAAAC,yFAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAAeP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,gBAAA,EAAkB;IAAA,EAAC;IADpGT,EAAA,CAAAU,YAAA,EACuG;;;;IADrFV,EAAA,CAAAW,SAAA,GAAuB;IAAvBX,EAAA,CAAAY,UAAA,cAAAC,MAAA,CAAAC,SAAA,CAAuB,gBAAAD,MAAA,CAAAE,WAAA,UAAAF,MAAA,CAAAG,QAAA,CAAAC,IAAA,kBAAAJ,MAAA,CAAAK,YAAA,uBAAAL,MAAA,CAAAM,iBAAA,cAAAN,MAAA,CAAAO,QAAA;;;ADgBrD;;;AAQA,OAAM,MAAOC,4BAA6B,SAAQvB,yBAAyB;EAEvEwB,YAAYC,UAAsB;IAC9B,KAAK,CAAC,8BAA8B,EAAEA,UAAU,CAAC;EACrD;EAEA;;;EAGAC,IAAIA,CAAA;IACA,IAAI,CAACC,yBAAyB,CAAC,QAAQ,CAAC;EAC5C;EAEA;;;EAGAhB,gBAAgBA,CAAA;IACZV,kBAAkB,CAAC2B,2BAA2B,CAC1C,IAAI,CAACC,WAAW,EAChB,IAAI,CAACb,SAAS,EACd,IAAI,CAACC,WAAW,EAChB,IAAI,CAACG,YAAY,EACjB,IAAI,CAACC,iBAAiB,EACtB,IAAI,CAACC,QAAQ,CAChB;EACL;;SAzBSC,4BAA6B;;mBAA7BA,MAA4B,EAAArB,EAAA,CAAA4B,iBAAA,CAAA5B,EAAA,CAAA6B,UAAA;AAAA;;QAA5BR,MAA4B;EAAAS,SAAA;EAAAC,QAAA,GAAA/B,EAAA,CAAAgC,0BAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC3BzCtC,EAAA,CAAAwC,UAAA,IAAAC,gDAAA,sBAOW;;;MAPwCzC,EAAA,CAAAY,UAAA,SAAA2B,GAAA,CAAAvB,QAAA,KAAAuB,GAAA,CAAAvB,QAAA,CAAAC,IAAA,IAAAsB,GAAA,CAAAvB,QAAA,CAAAC,IAAA,SAAyD"},"metadata":{},"sourceType":"module","externalDependencies":[]}