{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreSharedFilesHelper } from '@features/sharedfiles/services/sharedfiles-helper';\nimport { CoreFile } from '@services/file';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport * as i0 from \"@angular/core\";\n/**\n * Page to display the list of sites to choose one to store a shared file.\n */\nexport class CoreSharedFilesChooseSitePage {\n  constructor() {\n    this.loaded = false;\n    this.accountsList = {\n      sameSite: [],\n      otherSites: [],\n      count: 0\n    };\n    this.isInbox = false; // Whether the file is in the Inbox folder.\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.filePath = CoreNavigator.getRequiredRouteParam('filePath');\n        _this.isInbox = !!CoreNavigator.getRouteBooleanParam('isInbox');\n      } catch (error) {\n        CoreDomUtils.showErrorModalDefault(error, 'Error reading file.');\n        CoreNavigator.back();\n        return;\n      }\n      if (_this.filePath) {\n        const fileAndDir = CoreFile.getFileAndDirectoryFromPath(_this.filePath);\n        _this.fileName = fileAndDir.name;\n      }\n      try {\n        yield Promise.all([_this.loadFile(), _this.loadSites()]);\n      } catch (_unused) {\n        CoreDomUtils.showErrorModal('Error reading file.');\n        CoreNavigator.back();\n      } finally {\n        _this.loaded = true;\n      }\n    })();\n  }\n  /**\n   * Load the file data.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadFile() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.filePath) {\n        return;\n      }\n      _this2.fileEntry = yield CoreFile.getExternalFile(_this2.filePath);\n      _this2.fileName = _this2.fileEntry.name;\n    })();\n  }\n  /**\n   * Load sites.\n   *\n   * @returns Promise resolved when done.\n   */\n  loadSites() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.accountsList = yield CoreLoginHelper.getAccountsList();\n    })();\n  }\n  /**\n   * Store the file in a certain site.\n   *\n   * @param site Site.\n   */\n  storeInSite(site) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.fileEntry) {\n        return;\n      }\n      _this4.loaded = false;\n      try {\n        yield CoreSharedFilesHelper.storeSharedFileInSite(_this4.fileEntry, site.id, _this4.isInbox);\n        CoreNavigator.back();\n      } finally {\n        _this4.loaded = true;\n      }\n    })();\n  }\n}\n_class = CoreSharedFilesChooseSitePage;\n_class.ɵfac = function CoreSharedFilesChooseSitePage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-shared-files-choose-site\"]],\n  decls: 20,\n  vars: 13,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [3, \"hideUntil\"], [1, \"ion-text-wrap\"], [3, \"accountsList\", \"sitesClickable\", \"onSiteClicked\"]],\n  template: function CoreSharedFilesChooseSitePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"translate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"ion-content\")(10, \"core-loading\", 2)(11, \"ion-list\")(12, \"ion-item\", 3)(13, \"ion-label\")(14, \"h2\");\n      i0.ɵɵtext(15);\n      i0.ɵɵpipe(16, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"core-sites-list\", 4);\n      i0.ɵɵlistener(\"onSiteClicked\", function CoreSharedFilesChooseSitePage_Template_core_sites_list_onSiteClicked_19_listener($event) {\n        return ctx.storeInSite($event);\n      });\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 7, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 9, \"core.sharedfiles.sharedfiles\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"hideUntil\", ctx.loaded);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 11, \"core.sharedfiles.chooseaccountstorefile\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.fileName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"accountsList\", ctx.accountsList)(\"sitesClickable\", true);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreLoginHelper","CoreSharedFilesHelper","CoreFile","CoreNavigator","CoreDomUtils","CoreSharedFilesChooseSitePage","constructor","loaded","accountsList","sameSite","otherSites","count","isInbox","ngOnInit","_this","_asyncToGenerator","filePath","getRequiredRouteParam","getRouteBooleanParam","error","showErrorModalDefault","back","fileAndDir","getFileAndDirectoryFromPath","fileName","name","Promise","all","loadFile","loadSites","_unused","showErrorModal","_this2","fileEntry","getExternalFile","_this3","getAccountsList","storeInSite","site","_this4","storeSharedFileInSite","id","selectors","decls","vars","consts","template","CoreSharedFilesChooseSitePage_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","CoreSharedFilesChooseSitePage_Template_core_sites_list_onSiteClicked_19_listener","$event","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","ɵɵtextInterpolate"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/sharedfiles/pages/choose-site/choose-site.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/sharedfiles/pages/choose-site/choose-site.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreAccountsList, CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreSharedFilesHelper } from '@features/sharedfiles/services/sharedfiles-helper';\nimport { FileEntry } from '@awesome-cordova-plugins/file/ngx';\nimport { CoreFile } from '@services/file';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSiteBasicInfo } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\n\n/**\n * Page to display the list of sites to choose one to store a shared file.\n */\n@Component({\n    selector: 'page-core-shared-files-choose-site',\n    templateUrl: 'choose-site.html',\n})\nexport class CoreSharedFilesChooseSitePage implements OnInit {\n\n    fileName?: string;\n    loaded = false;\n    accountsList: CoreAccountsList = {\n        sameSite: [],\n        otherSites: [],\n        count: 0,\n    };\n\n    protected filePath?: string;\n    protected fileEntry?: FileEntry;\n    protected isInbox = false; // Whether the file is in the Inbox folder.\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.filePath = CoreNavigator.getRequiredRouteParam('filePath');\n            this.isInbox = !!CoreNavigator.getRouteBooleanParam('isInbox');\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error reading file.');\n            CoreNavigator.back();\n\n            return;\n        }\n\n        if (this.filePath) {\n            const fileAndDir = CoreFile.getFileAndDirectoryFromPath(this.filePath);\n            this.fileName = fileAndDir.name;\n        }\n\n        try {\n            await Promise.all([\n                this.loadFile(),\n                this.loadSites(),\n            ]);\n        } catch {\n            CoreDomUtils.showErrorModal('Error reading file.');\n            CoreNavigator.back();\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Load the file data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadFile(): Promise<void> {\n        if (!this.filePath) {\n            return;\n        }\n\n        this.fileEntry = await CoreFile.getExternalFile(this.filePath);\n        this.fileName = this.fileEntry.name;\n    }\n\n    /**\n     * Load sites.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadSites(): Promise<void> {\n        this.accountsList = await CoreLoginHelper.getAccountsList();\n    }\n\n    /**\n     * Store the file in a certain site.\n     *\n     * @param site Site.\n     */\n    async storeInSite(site: CoreSiteBasicInfo): Promise<void> {\n        if (!this.fileEntry) {\n            return;\n        }\n\n        this.loaded = false;\n\n        try {\n            await CoreSharedFilesHelper.storeSharedFileInSite(this.fileEntry, site.id, this.isInbox);\n\n            CoreNavigator.back();\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>{{ 'core.sharedfiles.sharedfiles' | translate }}</h1>\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <core-loading [hideUntil]=\"loaded\">\n        <ion-list>\n            <ion-item class=\"ion-text-wrap\">\n                <ion-label>\n                    <h2>{{ 'core.sharedfiles.chooseaccountstorefile' | translate }}</h2>\n                    <p>{{fileName}}</p>\n                </ion-label>\n            </ion-item>\n            <core-sites-list [accountsList]=\"accountsList\" [sitesClickable]=\"true\" (onSiteClicked)=\"storeInSite($event)\" />\n        </ion-list>\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}