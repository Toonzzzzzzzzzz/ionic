{"ast":null,"code":"import _asyncToGenerator from \"/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreCourses, CoreCoursesProvider } from '../../services/courses';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreTime } from '@singletons/time';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../../components/context-menu/context-menu\";\nimport * as i3 from \"../../../../components/context-menu/context-menu-item\";\nimport * as i4 from \"../../../../components/empty-box/empty-box\";\nimport * as i5 from \"../../../../components/loading/loading\";\nimport * as i6 from \"../../../../directives/fa-icon\";\nimport * as i7 from \"../../../../directives/format-text\";\nimport * as i8 from \"../../../../directives/collapsible-item\";\nimport * as i9 from \"../../../../directives/content\";\nimport * as i10 from \"@ionic/angular\";\nimport * as i11 from \"../../components/course-list-item/course-list-item\";\nimport * as i12 from \"@ngx-translate/core\";\nfunction CoreCoursesCategoriesPage_core_context_menu_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"core-context-menu-item\", 5);\n    i0.ɵɵlistener(\"action\", function CoreCoursesCategoriesPage_core_context_menu_item_10_Template_core_context_menu_item_action_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleDownload());\n    })(\"toggleChange\", function CoreCoursesCategoriesPage_core_context_menu_item_10_Template_core_context_menu_item_toggleChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.downloadEnabled = $event);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"priority\", 1000)(\"content\", i0.ɵɵpipeBind1(1, 3, \"core.settings.showdownloadoptions\"))(\"toggle\", ctx_r0.downloadEnabled);\n  }\n}\nfunction CoreCoursesCategoriesPage_ion_item_19_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelement(1, \"core-format-text\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"text\", ctx_r8.currentCategory.description)(\"contextInstanceId\", ctx_r8.currentCategory.id);\n  }\n}\nfunction CoreCoursesCategoriesPage_ion_item_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 13);\n    i0.ɵɵelement(1, \"ion-icon\", 14);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"p\", 15);\n    i0.ɵɵelement(5, \"core-format-text\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, CoreCoursesCategoriesPage_ion_item_19_p_6_Template, 2, 2, \"p\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(2, 4, \"core.category\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"text\", ctx_r1.currentCategory.name)(\"contextInstanceId\", ctx_r1.currentCategory.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentCategory.description);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $a: a0\n  };\n};\nfunction CoreCoursesCategoriesPage_ng_container_20_ion_card_6_ion_badge_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-badge\", 21)(1, \"span\", 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const category_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r10.coursecount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 2, \"core.courses.therearecourses\", i0.ɵɵpureFunction1(5, _c0, category_r10.coursecount)));\n  }\n}\nfunction CoreCoursesCategoriesPage_ng_container_20_ion_card_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-item\", 19);\n    i0.ɵɵlistener(\"click\", function CoreCoursesCategoriesPage_ng_container_20_ion_card_6_Template_ion_item_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const category_r10 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.openCategory(category_r10.id));\n    });\n    i0.ɵɵelement(2, \"ion-icon\", 14);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"ion-label\")(5, \"p\", 15);\n    i0.ɵɵelement(6, \"core-format-text\", 2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, CoreCoursesCategoriesPage_ng_container_20_ion_card_6_ion_badge_7_Template, 6, 7, \"ion-badge\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const category_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"detail\", true);\n    i0.ɵɵattribute(\"aria-label\", category_r10.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", i0.ɵɵpipeBind1(3, 6, \"core.category\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"text\", category_r10.name)(\"contextInstanceId\", category_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.showOnlyEnrolled && category_r10.coursecount > 0);\n  }\n}\nfunction CoreCoursesCategoriesPage_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\")(2, \"ion-label\")(3, \"h2\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(6, CoreCoursesCategoriesPage_ng_container_20_ion_card_6_Template, 8, 8, \"ion-card\", 18);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, \"core.courses.categories\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.categories);\n  }\n}\nfunction CoreCoursesCategoriesPage_ng_container_21_h2_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.courses.courses\"));\n  }\n}\nfunction CoreCoursesCategoriesPage_ng_container_21_h2_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"core.courses.mycourses\"));\n  }\n}\nfunction CoreCoursesCategoriesPage_ng_container_21_core_courses_course_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-courses-course-list-item\", 26);\n  }\n  if (rf & 2) {\n    const course_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"course\", course_r18)(\"showDownload\", ctx_r17.downloadEnabled);\n  }\n}\nfunction CoreCoursesCategoriesPage_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-item-divider\")(2, \"ion-label\");\n    i0.ɵɵtemplate(3, CoreCoursesCategoriesPage_ng_container_21_h2_3_Template, 3, 3, \"h2\", 24);\n    i0.ɵɵtemplate(4, CoreCoursesCategoriesPage_ng_container_21_h2_4_Template, 3, 3, \"h2\", 24);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, CoreCoursesCategoriesPage_ng_container_21_core_courses_course_list_item_5_Template, 1, 2, \"core-courses-course-list-item\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.showOnlyEnrolled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showOnlyEnrolled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.courses);\n  }\n}\nfunction CoreCoursesCategoriesPage_core_empty_box_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"core-empty-box\", 27);\n    i0.ɵɵpipe(1, \"translate\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"message\", i0.ɵɵpipeBind1(1, 1, \"core.courses.nocoursesyet\"));\n  }\n}\n/**\n * Page that displays a list of categories and the courses in the current category if any.\n */\nexport class CoreCoursesCategoriesPage {\n  constructor() {\n    this.categories = [];\n    this.courses = [];\n    this.categoriesLoaded = false;\n    this.showOnlyEnrolled = false;\n    this.downloadEnabled = false;\n    this.downloadCourseEnabled = false;\n    this.downloadCoursesEnabled = false;\n    this.categoryCourses = [];\n    this.categoryId = 0;\n    this.isDestroyed = false;\n    this.title = Translate.instant('core.courses.categories');\n    this.currentSiteId = CoreSites.getRequiredCurrentSite().getId();\n    // Update list if user enrols in a course.\n    this.myCoursesObserver = CoreEvents.on(CoreCoursesProvider.EVENT_MY_COURSES_UPDATED, data => {\n      if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n        this.fetchCategories();\n      }\n    }, this.currentSiteId);\n    // Refresh the enabled flags if site is updated.\n    this.siteUpdatedObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n      this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n      this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n      this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && this.downloadEnabled;\n    }, this.currentSiteId);\n    this.downloadEnabledObserver = CoreEvents.on(CoreCoursesProvider.EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED, data => {\n      this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && data.enabled;\n    });\n    this.logView = CoreTime.once(() => {\n      CoreAnalytics.logEvent({\n        type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n        ws: 'core_course_get_categories',\n        name: this.title,\n        data: {\n          categoryid: this.categoryId,\n          category: 'course'\n        },\n        url: '/course/index.php' + (this.categoryId > 0 ? `?categoryid=${this.categoryId}` : '')\n      });\n    });\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnInit() {\n    this.categoryId = CoreNavigator.getRouteNumberParam('id') || 0;\n    this.showOnlyEnrolled = CoreNavigator.getRouteBooleanParam('enrolled') || this.showOnlyEnrolled;\n    this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n    this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n    this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && CoreCourses.getCourseDownloadOptionsEnabled();\n    this.fetchCategories().finally(() => {\n      this.categoriesLoaded = true;\n    });\n  }\n  /**\n   * Fetch the categories.\n   *\n   * @returns Promise resolved when done.\n   */\n  fetchCategories() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const categories = yield CoreCourses.getCategories(_this.categoryId, true);\n        _this.currentCategory = undefined;\n        const index = categories.findIndex(category => category.id == _this.categoryId);\n        if (index >= 0) {\n          _this.currentCategory = categories[index];\n          // Delete current Category to avoid problems with the formatTree.\n          delete categories[index];\n        }\n        // Sort by depth and sortorder to avoid problems formatting Tree.\n        categories.sort((a, b) => {\n          if (a.depth == b.depth) {\n            return a.sortorder > b.sortorder ? 1 : b.sortorder > a.sortorder ? -1 : 0;\n          }\n          return a.depth > b.depth ? 1 : -1;\n        });\n        _this.categories = CoreUtils.formatTree(categories, 'parent', 'id', _this.categoryId);\n        if (_this.currentCategory) {\n          _this.title = _this.currentCategory.name;\n          try {\n            _this.categoryCourses = yield CoreCourses.getCoursesByField('category', _this.categoryId);\n            yield _this.filterEnrolled();\n          } catch (error) {\n            !_this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n          }\n        }\n        _this.logView();\n      } catch (error) {\n        !_this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcategories', true);\n      }\n    })();\n  }\n  /**\n   * Refresh the categories.\n   *\n   * @param refresher Refresher.\n   */\n  refreshCategories(refresher) {\n    const promises = [];\n    promises.push(CoreCourses.invalidateUserCourses());\n    promises.push(CoreCourses.invalidateCategories(this.categoryId, true));\n    promises.push(CoreCourses.invalidateCoursesByField('category', this.categoryId));\n    promises.push(CoreSites.getRequiredCurrentSite().invalidateConfig());\n    Promise.all(promises).finally(() => {\n      this.fetchCategories().finally(() => {\n        refresher === null || refresher === void 0 || refresher.complete();\n      });\n    });\n  }\n  /**\n   * Open a category.\n   *\n   * @param categoryId Category Id.\n   */\n  openCategory(categoryId) {\n    CoreNavigator.navigateToSitePath('courses/categories/' + categoryId, {\n      params: {\n        enrolled: this.showOnlyEnrolled\n      }\n    });\n  }\n  /**\n   * Filter my courses or not.\n   */\n  filterEnrolled() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.showOnlyEnrolled) {\n        _this2.courses = _this2.categoryCourses;\n      } else {\n        yield Promise.all(_this2.categoryCourses.map( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (course) {\n            const isEnrolled = course.progress !== undefined;\n            if (!isEnrolled) {\n              try {\n                const userCourse = yield CoreCourses.getUserCourse(course.id);\n                course.progress = userCourse.progress;\n                course.completionusertracked = userCourse.completionusertracked;\n              } catch (_unused) {\n                // Ignore errors.\n              }\n            }\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()));\n        _this2.courses = _this2.categoryCourses.filter(course => 'progress' in course);\n      }\n    })();\n  }\n  /**\n   * Toggle download enabled.\n   */\n  toggleDownload() {\n    CoreCourses.setCourseDownloadOptionsEnabled(this.downloadEnabled);\n  }\n  /**\n   * @inheritdoc\n   */\n  ngOnDestroy() {\n    this.myCoursesObserver.off();\n    this.siteUpdatedObserver.off();\n    this.downloadEnabledObserver.off();\n    this.isDestroyed = true;\n  }\n}\n_class = CoreCoursesCategoriesPage;\n_class.ɵfac = function CoreCoursesCategoriesPage_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"page-core-courses-categories\"]],\n  decls: 23,\n  vars: 20,\n  consts: [[\"slot\", \"start\"], [3, \"text\"], [\"contextLevel\", \"coursecat\", 3, \"text\", \"contextInstanceId\"], [\"slot\", \"end\"], [\"iconAction\", \"toggle\", 3, \"priority\", \"content\", \"toggle\", \"action\", \"toggleChange\", 4, \"ngIf\"], [\"iconAction\", \"toggle\", 3, \"priority\", \"content\", \"toggle\", \"action\", \"toggleChange\"], [\"slot\", \"fixed\", 3, \"disabled\", \"ionRefresh\"], [3, \"pullingText\"], [3, \"hideUntil\"], [1, \"list-item-limited-width\"], [\"class\", \"ion-text-wrap\", 4, \"ngIf\"], [4, \"ngIf\"], [\"icon\", \"fas-graduation-cap\", 3, \"message\", 4, \"ngIf\"], [1, \"ion-text-wrap\"], [\"name\", \"fas-folder\", \"slot\", \"start\"], [1, \"item-heading\"], [\"collapsible-item\", \"\", \"contextLevel\", \"coursecat\", 3, \"text\", \"contextInstanceId\"], [1, \"big\"], [4, \"ngFor\", \"ngForOf\"], [\"button\", \"\", 1, \"ion-text-wrap\", 3, \"detail\", \"click\"], [\"slot\", \"end\", \"color\", \"light\", 4, \"ngIf\"], [\"slot\", \"end\", \"color\", \"light\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"class\", \"big\", 4, \"ngIf\"], [3, \"course\", \"showDownload\", 4, \"ngFor\", \"ngForOf\"], [3, \"course\", \"showDownload\"], [\"icon\", \"fas-graduation-cap\", 3, \"message\"]],\n  template: function CoreCoursesCategoriesPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n      i0.ɵɵelement(3, \"ion-back-button\", 1);\n      i0.ɵɵpipe(4, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\")(6, \"h1\");\n      i0.ɵɵelement(7, \"core-format-text\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"ion-buttons\", 3)(9, \"core-context-menu\");\n      i0.ɵɵtemplate(10, CoreCoursesCategoriesPage_core_context_menu_item_10_Template, 2, 5, \"core-context-menu-item\", 4);\n      i0.ɵɵelementStart(11, \"core-context-menu-item\", 5);\n      i0.ɵɵlistener(\"action\", function CoreCoursesCategoriesPage_Template_core_context_menu_item_action_11_listener() {\n        return ctx.filterEnrolled();\n      })(\"toggleChange\", function CoreCoursesCategoriesPage_Template_core_context_menu_item_toggleChange_11_listener($event) {\n        return ctx.showOnlyEnrolled = $event;\n      });\n      i0.ɵɵpipe(12, \"translate\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(13, \"ion-content\")(14, \"ion-refresher\", 6);\n      i0.ɵɵlistener(\"ionRefresh\", function CoreCoursesCategoriesPage_Template_ion_refresher_ionRefresh_14_listener($event) {\n        return ctx.refreshCategories($event.target);\n      });\n      i0.ɵɵelement(15, \"ion-refresher-content\", 7);\n      i0.ɵɵpipe(16, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"core-loading\", 8)(18, \"ion-list\", 9);\n      i0.ɵɵtemplate(19, CoreCoursesCategoriesPage_ion_item_19_Template, 7, 6, \"ion-item\", 10);\n      i0.ɵɵtemplate(20, CoreCoursesCategoriesPage_ng_container_20_Template, 7, 4, \"ng-container\", 11);\n      i0.ɵɵtemplate(21, CoreCoursesCategoriesPage_ng_container_21_Template, 6, 3, \"ng-container\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, CoreCoursesCategoriesPage_core_empty_box_22_Template, 2, 3, \"core-empty-box\", 12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"text\", i0.ɵɵpipeBind1(4, 14, \"core.back\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"text\", ctx.title)(\"contextInstanceId\", ctx.currentCategory && ctx.currentCategory.id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.downloadCourseEnabled || ctx.downloadCoursesEnabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"priority\", 900)(\"content\", i0.ɵɵpipeBind1(12, 16, \"core.courses.showonlyenrolled\"))(\"toggle\", ctx.showOnlyEnrolled);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.categoriesLoaded);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"pullingText\", i0.ɵɵpipeBind1(16, 18, \"core.pulltorefresh\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hideUntil\", ctx.categoriesLoaded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentCategory);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.categories.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.courses.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.categories.length && !ctx.courses.length);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CoreContextMenuComponent, i3.CoreContextMenuItemComponent, i4.CoreEmptyBoxComponent, i5.CoreLoadingComponent, i6.CoreFaIconDirective, i7.CoreFormatTextDirective, i8.CoreCollapsibleItemDirective, i9.CoreContentDirective, i10.IonBadge, i10.IonButtons, i10.IonCard, i10.IonContent, i10.IonHeader, i10.IonIcon, i10.IonItem, i10.IonItemDivider, i10.IonLabel, i10.IonList, i10.IonRefresher, i10.IonRefresherContent, i10.IonTitle, i10.IonToolbar, i10.IonBackButton, i11.CoreCoursesCourseListItemComponent, i12.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["CoreSites","CoreDomUtils","CoreUtils","CoreCourses","CoreCoursesProvider","Translate","CoreNavigator","CoreEvents","CoreAnalytics","CoreAnalyticsEventType","CoreTime","i0","ɵɵelementStart","ɵɵlistener","CoreCoursesCategoriesPage_core_context_menu_item_10_Template_core_context_menu_item_action_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","toggleDownload","CoreCoursesCategoriesPage_core_context_menu_item_10_Template_core_context_menu_item_toggleChange_0_listener","$event","ctx_r7","downloadEnabled","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind1","ctx_r0","ɵɵelement","ɵɵadvance","ctx_r8","currentCategory","description","id","ɵɵtemplate","CoreCoursesCategoriesPage_ion_item_19_p_6_Template","ɵɵattribute","ctx_r1","name","ɵɵtext","ɵɵtextInterpolate","category_r10","coursecount","ɵɵpipeBind2","ɵɵpureFunction1","_c0","CoreCoursesCategoriesPage_ng_container_20_ion_card_6_Template_ion_item_click_1_listener","restoredCtx","_r14","$implicit","ctx_r13","openCategory","CoreCoursesCategoriesPage_ng_container_20_ion_card_6_ion_badge_7_Template","ctx_r9","showOnlyEnrolled","ɵɵelementContainerStart","CoreCoursesCategoriesPage_ng_container_20_ion_card_6_Template","ɵɵelementContainerEnd","ctx_r2","categories","course_r18","ctx_r17","CoreCoursesCategoriesPage_ng_container_21_h2_3_Template","CoreCoursesCategoriesPage_ng_container_21_h2_4_Template","CoreCoursesCategoriesPage_ng_container_21_core_courses_course_list_item_5_Template","ctx_r3","courses","CoreCoursesCategoriesPage","constructor","categoriesLoaded","downloadCourseEnabled","downloadCoursesEnabled","categoryCourses","categoryId","isDestroyed","title","instant","currentSiteId","getRequiredCurrentSite","getId","myCoursesObserver","on","EVENT_MY_COURSES_UPDATED","data","action","ACTION_ENROL","fetchCategories","siteUpdatedObserver","SITE_UPDATED","isDownloadCourseDisabledInSite","isDownloadCoursesDisabledInSite","downloadEnabledObserver","EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED","enabled","logView","once","logEvent","type","VIEW_ITEM_LIST","ws","categoryid","category","url","ngOnInit","getRouteNumberParam","getRouteBooleanParam","getCourseDownloadOptionsEnabled","finally","_this","_asyncToGenerator","getCategories","undefined","index","findIndex","sort","a","b","depth","sortorder","formatTree","getCoursesByField","filterEnrolled","error","showErrorModalDefault","refreshCategories","refresher","promises","push","invalidateUserCourses","invalidateCategories","invalidateCoursesByField","invalidateConfig","Promise","all","complete","navigateToSitePath","params","enrolled","_this2","map","_ref","course","isEnrolled","progress","userCourse","getUserCourse","completionusertracked","_unused","_x","apply","arguments","filter","setCourseDownloadOptionsEnabled","ngOnDestroy","off","selectors","decls","vars","consts","template","CoreCoursesCategoriesPage_Template","rf","ctx","CoreCoursesCategoriesPage_core_context_menu_item_10_Template","CoreCoursesCategoriesPage_Template_core_context_menu_item_action_11_listener","CoreCoursesCategoriesPage_Template_core_context_menu_item_toggleChange_11_listener","CoreCoursesCategoriesPage_Template_ion_refresher_ionRefresh_14_listener","target","CoreCoursesCategoriesPage_ion_item_19_Template","CoreCoursesCategoriesPage_ng_container_20_Template","CoreCoursesCategoriesPage_ng_container_21_Template","CoreCoursesCategoriesPage_core_empty_box_22_Template","ɵɵpropertyInterpolate","length"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/courses/pages/categories/categories.ts","/home/toon/works/gitionic7/ionic-github/ionic/src/core/features/courses/pages/categories/categories.html"],"sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreCategoryData, CoreCourseListItem, CoreCourses, CoreCoursesProvider } from '../../services/courses';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreAnalytics, CoreAnalyticsEventType } from '@services/analytics';\nimport { CoreTime } from '@singletons/time';\n\n/**\n * Page that displays a list of categories and the courses in the current category if any.\n */\n@Component({\n    selector: 'page-core-courses-categories',\n    templateUrl: 'categories.html',\n})\nexport class CoreCoursesCategoriesPage implements OnInit, OnDestroy {\n\n    title: string;\n    currentCategory?: CoreCategoryData;\n    categories: CoreCategoryData[] = [];\n    courses: CoreCourseListItem[] = [];\n    categoriesLoaded = false;\n\n    showOnlyEnrolled = false;\n\n    downloadEnabled = false;\n    downloadCourseEnabled = false;\n    downloadCoursesEnabled = false;\n\n    protected categoryCourses: CoreCourseListItem[] = [];\n    protected currentSiteId: string;\n    protected categoryId = 0;\n    protected myCoursesObserver: CoreEventObserver;\n    protected siteUpdatedObserver: CoreEventObserver;\n    protected downloadEnabledObserver: CoreEventObserver;\n    protected isDestroyed = false;\n    protected logView: () => void;\n\n    constructor() {\n        this.title = Translate.instant('core.courses.categories');\n        this.currentSiteId = CoreSites.getRequiredCurrentSite().getId();\n\n        // Update list if user enrols in a course.\n        this.myCoursesObserver = CoreEvents.on(\n            CoreCoursesProvider.EVENT_MY_COURSES_UPDATED,\n            (data) => {\n                if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n                    this.fetchCategories();\n                }\n            },\n\n            this.currentSiteId,\n        );\n\n        // Refresh the enabled flags if site is updated.\n        this.siteUpdatedObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n            this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n            this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && this.downloadEnabled;\n        }, this.currentSiteId);\n\n        this.downloadEnabledObserver = CoreEvents.on(CoreCoursesProvider.EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED, (data) => {\n            this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && data.enabled;\n        });\n\n        this.logView = CoreTime.once(() => {\n            CoreAnalytics.logEvent({\n                type: CoreAnalyticsEventType.VIEW_ITEM_LIST,\n                ws: 'core_course_get_categories',\n                name: this.title,\n                data: { categoryid: this.categoryId, category: 'course' },\n                url: '/course/index.php' + (this.categoryId > 0 ? `?categoryid=${this.categoryId}` : ''),\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.categoryId = CoreNavigator.getRouteNumberParam('id') || 0;\n        this.showOnlyEnrolled = CoreNavigator.getRouteBooleanParam('enrolled') || this.showOnlyEnrolled;\n\n        this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n        this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n        this.downloadEnabled =\n            (this.downloadCourseEnabled || this.downloadCoursesEnabled) && CoreCourses.getCourseDownloadOptionsEnabled();\n\n        this.fetchCategories().finally(() => {\n            this.categoriesLoaded = true;\n        });\n    }\n\n    /**\n     * Fetch the categories.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchCategories(): Promise<void> {\n        try {\n            const categories: CoreCategoryData[] = await CoreCourses.getCategories(this.categoryId, true);\n\n            this.currentCategory = undefined;\n\n            const index = categories.findIndex((category) => category.id == this.categoryId);\n\n            if (index >= 0) {\n                this.currentCategory = categories[index];\n                // Delete current Category to avoid problems with the formatTree.\n                delete categories[index];\n            }\n\n            // Sort by depth and sortorder to avoid problems formatting Tree.\n            categories.sort((a, b) => {\n                if (a.depth == b.depth) {\n                    return (a.sortorder > b.sortorder) ? 1 : ((b.sortorder > a.sortorder) ? -1 : 0);\n                }\n\n                return a.depth > b.depth ? 1 : -1;\n            });\n\n            this.categories = CoreUtils.formatTree(categories, 'parent', 'id', this.categoryId);\n\n            if (this.currentCategory) {\n                this.title = this.currentCategory.name;\n\n                try {\n                    this.categoryCourses = await CoreCourses.getCoursesByField('category', this.categoryId);\n                    await this.filterEnrolled();\n                } catch (error) {\n                    !this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n                }\n            }\n\n            this.logView();\n        } catch (error) {\n            !this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcategories', true);\n        }\n    }\n\n    /**\n     * Refresh the categories.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCategories(refresher?: HTMLIonRefresherElement): void {\n        const promises: Promise<void>[] = [];\n\n        promises.push(CoreCourses.invalidateUserCourses());\n        promises.push(CoreCourses.invalidateCategories(this.categoryId, true));\n        promises.push(CoreCourses.invalidateCoursesByField('category', this.categoryId));\n        promises.push(CoreSites.getRequiredCurrentSite().invalidateConfig());\n\n        Promise.all(promises).finally(() => {\n            this.fetchCategories().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Open a category.\n     *\n     * @param categoryId Category Id.\n     */\n    openCategory(categoryId: number): void {\n        CoreNavigator.navigateToSitePath(\n            'courses/categories/' + categoryId,\n            { params: {\n                enrolled: this.showOnlyEnrolled,\n            } },\n        );\n    }\n\n    /**\n     * Filter my courses or not.\n     */\n    async filterEnrolled(): Promise<void> {\n        if (!this.showOnlyEnrolled) {\n            this.courses = this.categoryCourses;\n        } else {\n            await Promise.all(this.categoryCourses.map(async (course) => {\n                const isEnrolled = course.progress !== undefined;\n\n                if (!isEnrolled) {\n                    try {\n                        const userCourse = await CoreCourses.getUserCourse(course.id);\n                        course.progress = userCourse.progress;\n                        course.completionusertracked = userCourse.completionusertracked;\n                    } catch {\n                        // Ignore errors.\n                    }\n                }\n            }));\n            this.courses = this.categoryCourses.filter((course) => 'progress' in course);\n        }\n    }\n\n    /**\n     * Toggle download enabled.\n     */\n    toggleDownload(): void {\n        CoreCourses.setCourseDownloadOptionsEnabled(this.downloadEnabled);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.myCoursesObserver.off();\n        this.siteUpdatedObserver.off();\n        this.downloadEnabledObserver.off();\n        this.isDestroyed = true;\n    }\n\n}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button [text]=\"'core.back' | translate\" />\n        </ion-buttons>\n        <ion-title>\n            <h1>\n                <core-format-text [text]=\"title\" contextLevel=\"coursecat\" [contextInstanceId]=\"currentCategory && currentCategory!.id\" />\n            </h1>\n        </ion-title>\n        <ion-buttons slot=\"end\">\n            <core-context-menu>\n                <core-context-menu-item *ngIf=\"downloadCourseEnabled || downloadCoursesEnabled\" [priority]=\"1000\"\n                    [content]=\"'core.settings.showdownloadoptions' | translate\" (action)=\"toggleDownload()\" iconAction=\"toggle\"\n                    [(toggle)]=\"downloadEnabled\" />\n                <core-context-menu-item [priority]=\"900\" [content]=\"'core.courses.showonlyenrolled' | translate\" (action)=\"filterEnrolled()\"\n                    iconAction=\"toggle\" [(toggle)]=\"showOnlyEnrolled\" />\n            </core-context-menu>\n        </ion-buttons>\n    </ion-toolbar>\n</ion-header>\n<ion-content>\n    <ion-refresher slot=\"fixed\" [disabled]=\"!categoriesLoaded\" (ionRefresh)=\"refreshCategories($event.target)\">\n        <ion-refresher-content pullingText=\"{{ 'core.pulltorefresh' | translate }}\" />\n    </ion-refresher>\n    <core-loading [hideUntil]=\"categoriesLoaded\">\n        <ion-list class=\"list-item-limited-width\">\n            <ion-item *ngIf=\"currentCategory\" class=\"ion-text-wrap\">\n                <ion-icon name=\"fas-folder\" slot=\"start\" [attr.aria-label]=\"'core.category' | translate\" />\n                <ion-label>\n                    <p class=\"item-heading\">\n                        <core-format-text [text]=\"currentCategory.name\" contextLevel=\"coursecat\" [contextInstanceId]=\"currentCategory.id\" />\n                    </p>\n                    <p *ngIf=\"currentCategory.description\">\n                        <core-format-text [text]=\"currentCategory.description\" collapsible-item contextLevel=\"coursecat\"\n                            [contextInstanceId]=\"currentCategory.id\" />\n                    </p>\n                </ion-label>\n            </ion-item>\n\n            <ng-container *ngIf=\"categories.length > 0\">\n                <ion-item-divider>\n                    <ion-label>\n                        <h2 class=\"big\">{{ 'core.courses.categories' | translate }}</h2>\n                    </ion-label>\n                </ion-item-divider>\n                <ion-card *ngFor=\"let category of categories\">\n                    <ion-item button class=\"ion-text-wrap\" (click)=\"openCategory(category.id)\" [attr.aria-label]=\"category.name\"\n                        [detail]=\"true\">\n                        <ion-icon name=\"fas-folder\" slot=\"start\" [attr.aria-label]=\"'core.category' | translate\" />\n                        <ion-label>\n                            <p class=\"item-heading\">\n                                <core-format-text [text]=\"category.name\" contextLevel=\"coursecat\" [contextInstanceId]=\"category.id\" />\n                            </p>\n                        </ion-label>\n                        <ion-badge slot=\"end\" *ngIf=\"!showOnlyEnrolled && category.coursecount > 0\" color=\"light\">\n                            <span aria-hidden=\"true\">{{ category.coursecount }}</span>\n                            <span class=\"sr-only\">{{ 'core.courses.therearecourses' | translate:{ $a: category.coursecount } }}</span>\n                        </ion-badge>\n                    </ion-item>\n                </ion-card>\n            </ng-container>\n\n            <ng-container *ngIf=\"courses.length > 0\">\n                <ion-item-divider>\n                    <ion-label>\n                        <h2 *ngIf=\"!showOnlyEnrolled\" class=\"big\">{{ 'core.courses.courses' | translate }}</h2>\n                        <h2 *ngIf=\"showOnlyEnrolled\" class=\"big\">{{ 'core.courses.mycourses' | translate }}</h2>\n                    </ion-label>\n                </ion-item-divider>\n                <core-courses-course-list-item *ngFor=\"let course of courses\" [course]=\"course\" [showDownload]=\"downloadEnabled\" />\n            </ng-container>\n        </ion-list>\n        <core-empty-box *ngIf=\"!categories.length && !courses.length\" icon=\"fas-graduation-cap\"\n            [message]=\"'core.courses.nocoursesyet' | translate\" />\n    </core-loading>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}