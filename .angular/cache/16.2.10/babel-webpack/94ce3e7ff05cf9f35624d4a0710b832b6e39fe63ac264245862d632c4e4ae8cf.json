{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar Geolocation = /** @class */function (_super) {\n  __extends(Geolocation, _super);\n  function Geolocation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Geolocation.prototype.getCurrentPosition = function (options) {\n    return cordova(this, \"getCurrentPosition\", {\n      \"callbackOrder\": \"reverse\"\n    }, arguments);\n  };\n  /**\n   * Watch the current device's position.  Clear the watch by unsubscribing from\n   * Observable changes.\n   *\n   * ```typescript\n   * const subscription = this.geolocation.watchPosition()\n   *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n   *                               .subscribe(position => {\n   *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n   * });\n   *\n   * // To stop notifications\n   * subscription.unsubscribe();\n   * ```\n   *\n   * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n   * @returns {Observable<Geoposition | PositionError>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n   */\n  Geolocation.prototype.watchPosition = function (options) {\n    return new Observable(function (observer) {\n      var watchId = navigator.geolocation.watchPosition(observer.next.bind(observer), observer.next.bind(observer), options);\n      return function () {\n        return navigator.geolocation.clearWatch(watchId);\n      };\n    });\n  };\n  Geolocation.ɵfac = /* @__PURE__ */function () {\n    let ɵGeolocation_BaseFactory;\n    return function Geolocation_Factory(t) {\n      return (ɵGeolocation_BaseFactory || (ɵGeolocation_BaseFactory = i0.ɵɵgetInheritedFactory(Geolocation)))(t || Geolocation);\n    };\n  }();\n  Geolocation.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Geolocation,\n    factory: Geolocation.ɵfac\n  });\n  Geolocation.pluginName = \"Geolocation\";\n  Geolocation.plugin = \"cordova-plugin-geolocation\";\n  Geolocation.pluginRef = \"navigator.geolocation\";\n  Geolocation.repo = \"https://github.com/apache/cordova-plugin-geolocation\";\n  Geolocation.install = \"ionic cordova plugin add cordova-plugin-geolocation --variable GEOLOCATION_USAGE_DESCRIPTION=\\\"To locate you\\\"\";\n  Geolocation.installVariables = [\"GEOLOCATION_USAGE_DESCRIPTION\"];\n  Geolocation.platforms = [\"Amazon Fire OS\", \"Android\", \"Browser\", \"iOS\", \"Windows\"];\n  Geolocation = __decorate([], Geolocation);\n  return Geolocation;\n}(AwesomeCordovaNativePlugin);\nexport { Geolocation };\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Geolocation, [{\n    type: Injectable\n  }], null, {\n    getCurrentPosition: []\n  });\n})();","map":{"version":3,"names":["__decorate","__extends","Injectable","AwesomeCordovaNativePlugin","cordova","Observable","i0","Geolocation","_super","apply","arguments","prototype","getCurrentPosition","options","watchPosition","observer","watchId","navigator","geolocation","next","bind","clearWatch","ɵfac","ɵGeolocation_BaseFactory","Geolocation_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","pluginName","plugin","pluginRef","repo","install","installVariables","platforms","ngDevMode","ɵsetClassMetadata","type"],"sources":["/home/toon/works/gitionic7/ionic-github/ionic/node_modules/@awesome-cordova-plugins/geolocation/ngx/index.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar Geolocation = /** @class */ (function (_super) {\n    __extends(Geolocation, _super);\n    function Geolocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Geolocation.prototype.getCurrentPosition = function (options) { return cordova(this, \"getCurrentPosition\", { \"callbackOrder\": \"reverse\" }, arguments); };\n    /**\n     * Watch the current device's position.  Clear the watch by unsubscribing from\n     * Observable changes.\n     *\n     * ```typescript\n     * const subscription = this.geolocation.watchPosition()\n     *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n     *                               .subscribe(position => {\n     *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n     * });\n     *\n     * // To stop notifications\n     * subscription.unsubscribe();\n     * ```\n     *\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n     * @returns {Observable<Geoposition | PositionError>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n     */\n    Geolocation.prototype.watchPosition = function (options) {\n        return new Observable(function (observer) {\n            var watchId = navigator.geolocation.watchPosition(observer.next.bind(observer), observer.next.bind(observer), options);\n            return function () { return navigator.geolocation.clearWatch(watchId); };\n        });\n    };\n    Geolocation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Geolocation, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    Geolocation.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Geolocation });\n    Geolocation.pluginName = \"Geolocation\";\n    Geolocation.plugin = \"cordova-plugin-geolocation\";\n    Geolocation.pluginRef = \"navigator.geolocation\";\n    Geolocation.repo = \"https://github.com/apache/cordova-plugin-geolocation\";\n    Geolocation.install = \"ionic cordova plugin add cordova-plugin-geolocation --variable GEOLOCATION_USAGE_DESCRIPTION=\\\"To locate you\\\"\";\n    Geolocation.installVariables = [\"GEOLOCATION_USAGE_DESCRIPTION\"];\n    Geolocation.platforms = [\"Amazon Fire OS\", \"Android\", \"Browser\", \"iOS\", \"Windows\"];\n    Geolocation = __decorate([], Geolocation);\n    return Geolocation;\n}(AwesomeCordovaNativePlugin));\nexport { Geolocation };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.16\", ngImport: i0, type: Geolocation, decorators: [{\n            type: Injectable\n        }], propDecorators: { getCurrentPosition: [] } });\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,0BAA0B,EAAEC,OAAO,QAAQ,+BAA+B;AACnF,SAASC,UAAU,QAAQ,MAAM;AACjC,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,IAAIC,WAAW,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC/CP,SAAS,CAACM,WAAW,EAAEC,MAAM,CAAC;EAC9B,SAASD,WAAWA,CAAA,EAAG;IACnB,OAAOC,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACnE;EACAH,WAAW,CAACI,SAAS,CAACC,kBAAkB,GAAG,UAAUC,OAAO,EAAE;IAAE,OAAOT,OAAO,CAAC,IAAI,EAAE,oBAAoB,EAAE;MAAE,eAAe,EAAE;IAAU,CAAC,EAAEM,SAAS,CAAC;EAAE,CAAC;EACxJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIH,WAAW,CAACI,SAAS,CAACG,aAAa,GAAG,UAAUD,OAAO,EAAE;IACrD,OAAO,IAAIR,UAAU,CAAC,UAAUU,QAAQ,EAAE;MACtC,IAAIC,OAAO,GAAGC,SAAS,CAACC,WAAW,CAACJ,aAAa,CAACC,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACL,QAAQ,CAAC,EAAEA,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACL,QAAQ,CAAC,EAAEF,OAAO,CAAC;MACtH,OAAO,YAAY;QAAE,OAAOI,SAAS,CAACC,WAAW,CAACG,UAAU,CAACL,OAAO,CAAC;MAAE,CAAC;IAC5E,CAAC,CAAC;EACN,CAAC;EACDT,WAAW,CAACe,IAAI;IAAA,IAAAC,wBAAA;IAAA,gBAAAC,oBAAAC,CAAA;MAAA,QAAAF,wBAAA,KAAAA,wBAAA,GAA+EjB,EAAE,CAAAoB,qBAAA,CAAQnB,WAAW,IAAAkB,CAAA,IAAXlB,WAAW;IAAA;EAAA,GAAsD;EAC1KA,WAAW,CAACoB,KAAK,kBAD8ErB,EAAE,CAAAsB,kBAAA;IAAAC,KAAA,EACYtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAe;EAAA,EAAG;EAC3Hf,WAAW,CAACwB,UAAU,GAAG,aAAa;EACtCxB,WAAW,CAACyB,MAAM,GAAG,4BAA4B;EACjDzB,WAAW,CAAC0B,SAAS,GAAG,uBAAuB;EAC/C1B,WAAW,CAAC2B,IAAI,GAAG,sDAAsD;EACzE3B,WAAW,CAAC4B,OAAO,GAAG,gHAAgH;EACtI5B,WAAW,CAAC6B,gBAAgB,GAAG,CAAC,+BAA+B,CAAC;EAChE7B,WAAW,CAAC8B,SAAS,GAAG,CAAC,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;EAClF9B,WAAW,GAAGP,UAAU,CAAC,EAAE,EAAEO,WAAW,CAAC;EACzC,OAAOA,WAAW;AACtB,CAAC,CAACJ,0BAA0B,CAAE;AAC9B,SAASI,WAAW;AACpB;EAAA,QAAA+B,SAAA,oBAAAA,SAAA,KAbmGhC,EAAE,CAAAiC,iBAAA,CAaThC,WAAW,EAAc,CAAC;IAC1GiC,IAAI,EAAEtC;EACV,CAAC,CAAC,QAAkB;IAAEU,kBAAkB,EAAE;EAAG,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}